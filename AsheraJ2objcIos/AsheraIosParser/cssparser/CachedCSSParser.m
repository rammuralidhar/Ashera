//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/cssparser/com/steadystate/css/parser/CachedCSSParser.java
//


#include "CSSOMParser.h"
#include "CSSRule.h"
#include "CSSRuleList.h"
#include "CSSStyleRuleImpl.h"
#include "CSSStyleSheet.h"
#include "CachedCSSParser.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "InputSource.h"
#include "J2ObjC_source.h"
#include "MultiMap.h"
#include "SACParserCSS3.h"
#include "SelectorList.h"
#include "java/io/IOException.h"
#include "java/io/StringReader.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/cssparser/com/steadystate/css/parser/CachedCSSParser.java"

@interface ComSteadystateCssParserCachedCSSParser () {
 @public
  ComSteadystateCssParserCSSOMParser *parser_;
  ComSteadystateCssUtilMultiMap *ruleMap__;
}

- (id<JavaUtilList>)getCssRulesWithNSString:(NSString *)tag;

@end

J2OBJC_FIELD_SETTER(ComSteadystateCssParserCachedCSSParser, parser_, ComSteadystateCssParserCSSOMParser *)
J2OBJC_FIELD_SETTER(ComSteadystateCssParserCachedCSSParser, ruleMap__, ComSteadystateCssUtilMultiMap *)

__attribute__((unused)) static id<JavaUtilList> ComSteadystateCssParserCachedCSSParser_getCssRulesWithNSString_(ComSteadystateCssParserCachedCSSParser *self, NSString *tag);


#line 17
@implementation ComSteadystateCssParserCachedCSSParser


#line 20
- (void)addStyleSheetWithNSString:(NSString *)cssContentStr {
  @try {
    id<RepackagedOrgW3cDomCssCSSStyleSheet> sheet = [((ComSteadystateCssParserCSSOMParser *) nil_chk(parser_)) parseStyleSheetWithRepackagedOrgW3cCssSacInputSource:new_RepackagedOrgW3cCssSacInputSource_initWithJavaIoReader_(new_JavaIoStringReader_initWithNSString_(
#line 23
    cssContentStr)) withOrgW3cDomNode:nil withNSString:nil];
    id<RepackagedOrgW3cDomCssCSSRuleList> rules = [((id<RepackagedOrgW3cDomCssCSSStyleSheet>) nil_chk(sheet)) getCssRules];
    [((ComSteadystateCssUtilMultiMap *) nil_chk(ruleMap__)) putAllWithComSteadystateCssUtilMultiMap:[((id<RepackagedOrgW3cDomCssCSSRuleList>) nil_chk(rules)) getRulesCachedByTagName]];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
}


#line 32
- (id<JavaUtilList>)findRulesByCssPathWithNSString:(NSString *)nodePathExpression
                                      withNSString:(NSString *)tag
                                      withNSString:(NSString *)classNameStr
                                      withNSString:(NSString *)id_ {
  
#line 34
  id<JavaUtilList> rules = ComSteadystateCssParserCachedCSSParser_getCssRulesWithNSString_(self, tag);
  
#line 37
  if (classNameStr != nil && ![classNameStr isEqual:@""]) {
    IOSObjectArray *classNames = [classNameStr split:@"\\s"];
    {
      IOSObjectArray *a__ = classNames;
      NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *className_ = *b__++;
        
#line 41
        [((id<JavaUtilList>) nil_chk(rules)) addAllWithJavaUtilCollection:ComSteadystateCssParserCachedCSSParser_getCssRulesWithNSString_(self, JreStrcat("C$", '.', className_))];
      }
    }
  }
  
#line 47
  if (id_ != nil && ![id_ isEqual:@""]) {
    [((id<JavaUtilList>) nil_chk(rules)) addAllWithJavaUtilCollection:ComSteadystateCssParserCachedCSSParser_getCssRulesWithNSString_(self, JreStrcat("$$", @"*#", id_))];
  }
  id<JavaUtilList> finalrules = new_JavaUtilArrayList_init();
  
#line 52
  if (rules != nil) {
    jint size = [rules size];
    for (jint i = 0; i < size; i++) {
      id<RepackagedOrgW3cDomCssCSSRule> item = [rules getWithInt:i];
      
#line 57
      if ([item isKindOfClass:[ComSteadystateCssDomCSSStyleRuleImpl class]]) {
        id<RepackagedOrgW3cCssSacSelectorList> selectorList = [((ComSteadystateCssDomCSSStyleRuleImpl *) nil_chk(((ComSteadystateCssDomCSSStyleRuleImpl *) check_class_cast(item, [ComSteadystateCssDomCSSStyleRuleImpl class])))) getSelectors];
        NSString *regex = [((id<RepackagedOrgW3cCssSacSelectorList>) nil_chk(selectorList)) getRegEx];
        
#line 61
        if ([((NSString *) nil_chk(nodePathExpression)) matches:regex]) {
          [finalrules addWithId:item];
        }
      }
    }
  }
  return finalrules;
}


#line 70
- (id<JavaUtilList>)getCssRulesWithNSString:(NSString *)tag {
  return ComSteadystateCssParserCachedCSSParser_getCssRulesWithNSString_(self, tag);
}

- (instancetype)init {
  ComSteadystateCssParserCachedCSSParser_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addStyleSheetWithNSString:", "addStyleSheet", "V", 0x1, NULL, NULL },
    { "findRulesByCssPathWithNSString:withNSString:withNSString:withNSString:", "findRulesByCssPath", "Ljava.util.List;", 0x1, NULL, NULL },
    { "getCssRulesWithNSString:", "getCssRules", "Ljava.util.List;", 0x2, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parser_", NULL, 0x2, "Lcom.steadystate.css.parser.CSSOMParser;", NULL, NULL,  },
    { "ruleMap__", NULL, 0x2, "Lcom.steadystate.css.util.MultiMap;", NULL, "Lcom/steadystate/css/util/MultiMap<Ljava/lang/String;Lrepackaged/org/w3c/dom/css/CSSRule;>;",  },
  };
  static const J2ObjcClassInfo _ComSteadystateCssParserCachedCSSParser = { 2, "CachedCSSParser", "com.steadystate.css.parser", NULL, 0x1, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSteadystateCssParserCachedCSSParser;
}

@end


#line 70
id<JavaUtilList> ComSteadystateCssParserCachedCSSParser_getCssRulesWithNSString_(ComSteadystateCssParserCachedCSSParser *self, NSString *tag) {
  id<JavaUtilList> list = [((ComSteadystateCssUtilMultiMap *) nil_chk(self->ruleMap__)) getWithId:tag];
  if (list == nil) {
    list = new_JavaUtilArrayList_init();
  }
  return list;
}

void ComSteadystateCssParserCachedCSSParser_init(ComSteadystateCssParserCachedCSSParser *self) {
  (void) NSObject_init(self);
  self->parser_ = new_ComSteadystateCssParserCSSOMParser_initWithRepackagedOrgW3cCssSacParser_(new_ComSteadystateCssParserSACParserCSS3_init());
  self->ruleMap__ = new_ComSteadystateCssUtilMultiMap_init();
}

ComSteadystateCssParserCachedCSSParser *new_ComSteadystateCssParserCachedCSSParser_init() {
  ComSteadystateCssParserCachedCSSParser *self = [ComSteadystateCssParserCachedCSSParser alloc];
  ComSteadystateCssParserCachedCSSParser_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSteadystateCssParserCachedCSSParser)
