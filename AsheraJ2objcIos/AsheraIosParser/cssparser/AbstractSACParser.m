//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/cssparser/com/steadystate/css/parser/AbstractSACParser.java
//


#include "AbstractSACParser.h"
#include "CSSParseException.h"
#include "CharStream.h"
#include "ConditionFactory.h"
#include "ConditionFactoryImpl.h"
#include "CssCharStream.h"
#include "DocumentHandler.h"
#include "DocumentHandlerExt.h"
#include "ErrorHandler.h"
#include "HandlerBase.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "InputSource.h"
#include "J2ObjC_source.h"
#include "LexicalUnit.h"
#include "LexicalUnitImpl.h"
#include "Locator.h"
#include "LocatorImpl.h"
#include "ParseException.h"
#include "SACMediaList.h"
#include "SACMediaListImpl.h"
#include "Selector.h"
#include "SelectorFactory.h"
#include "SelectorFactoryImpl.h"
#include "SelectorList.h"
#include "Token.h"
#include "TokenMgrError.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/Reader.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "java/net/URL.h"
#include "java/nio/charset/Charset.h"
#include "java/text/MessageFormat.h"
#include "java/util/Locale.h"
#include "java/util/MissingResourceException.h"
#include "java/util/ResourceBundle.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/cssparser/com/steadystate/css/parser/AbstractSACParser.java"

@interface ComSteadystateCssParserAbstractSACParser () {
 @public
  id<RepackagedOrgW3cCssSacDocumentHandler> documentHandler__;
  id<RepackagedOrgW3cCssSacErrorHandler> errorHandler__;
  RepackagedOrgW3cCssSacInputSource *source__;
  JavaUtilLocale *locale__;
  id<RepackagedOrgW3cCssSacSelectorFactory> selectorFactory__;
  id<RepackagedOrgW3cCssSacConditionFactory> conditionFactory__;
  JavaUtilResourceBundle *sacParserMessages__;
}

- (id<ComSteadystateCssParserCharStream>)getCharStreamWithRepackagedOrgW3cCssSacInputSource:(RepackagedOrgW3cCssSacInputSource *)source;

+ (jint)hexvalWithChar:(jchar)c;

@end

J2OBJC_FIELD_SETTER(ComSteadystateCssParserAbstractSACParser, documentHandler__, id<RepackagedOrgW3cCssSacDocumentHandler>)
J2OBJC_FIELD_SETTER(ComSteadystateCssParserAbstractSACParser, errorHandler__, id<RepackagedOrgW3cCssSacErrorHandler>)
J2OBJC_FIELD_SETTER(ComSteadystateCssParserAbstractSACParser, source__, RepackagedOrgW3cCssSacInputSource *)
J2OBJC_FIELD_SETTER(ComSteadystateCssParserAbstractSACParser, locale__, JavaUtilLocale *)
J2OBJC_FIELD_SETTER(ComSteadystateCssParserAbstractSACParser, selectorFactory__, id<RepackagedOrgW3cCssSacSelectorFactory>)
J2OBJC_FIELD_SETTER(ComSteadystateCssParserAbstractSACParser, conditionFactory__, id<RepackagedOrgW3cCssSacConditionFactory>)
J2OBJC_FIELD_SETTER(ComSteadystateCssParserAbstractSACParser, sacParserMessages__, JavaUtilResourceBundle *)

static NSString *ComSteadystateCssParserAbstractSACParser_NUM_CHARS_ = 
#line 69
@"0123456789.";
J2OBJC_STATIC_FIELD_GETTER(ComSteadystateCssParserAbstractSACParser, NUM_CHARS_, NSString *)

__attribute__((unused)) static id<ComSteadystateCssParserCharStream> ComSteadystateCssParserAbstractSACParser_getCharStreamWithRepackagedOrgW3cCssSacInputSource_(ComSteadystateCssParserAbstractSACParser *self, RepackagedOrgW3cCssSacInputSource *source);

__attribute__((unused)) static jint ComSteadystateCssParserAbstractSACParser_hexvalWithChar_(jchar c);


#line 60
@implementation ComSteadystateCssParserAbstractSACParser


#line 71
- (ComSteadystateCssParserToken *)getToken {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 73
- (id<RepackagedOrgW3cCssSacDocumentHandler>)getDocumentHandler {
  if (documentHandler__ == nil) {
    [self setDocumentHandlerWithRepackagedOrgW3cCssSacDocumentHandler:new_ComSteadystateCssParserHandlerBase_init()];
  }
  return documentHandler__;
}

- (void)setDocumentHandlerWithRepackagedOrgW3cCssSacDocumentHandler:(id<RepackagedOrgW3cCssSacDocumentHandler>)handler {
  documentHandler__ = handler;
}

- (id<RepackagedOrgW3cCssSacErrorHandler>)getErrorHandler {
  if (errorHandler__ == nil) {
    [self setErrorHandlerWithRepackagedOrgW3cCssSacErrorHandler:new_ComSteadystateCssParserHandlerBase_init()];
  }
  return errorHandler__;
}

- (void)setErrorHandlerWithRepackagedOrgW3cCssSacErrorHandler:(id<RepackagedOrgW3cCssSacErrorHandler>)eh {
  errorHandler__ = eh;
}

- (RepackagedOrgW3cCssSacInputSource *)getInputSource {
  return source__;
}

- (void)setLocaleWithJavaUtilLocale:(JavaUtilLocale *)locale {
  if (locale__ != locale) {
    sacParserMessages__ = nil;
  }
  locale__ = locale;
}

- (JavaUtilLocale *)getLocale {
  if (locale__ == nil) {
    [self setLocaleWithJavaUtilLocale:JavaUtilLocale_getDefault()];
  }
  return locale__;
}

- (id<RepackagedOrgW3cCssSacSelectorFactory>)getSelectorFactory {
  if (selectorFactory__ == nil) {
    selectorFactory__ = new_ComSteadystateCssParserSelectorsSelectorFactoryImpl_init();
  }
  return selectorFactory__;
}

- (void)setSelectorFactoryWithRepackagedOrgW3cCssSacSelectorFactory:(id<RepackagedOrgW3cCssSacSelectorFactory>)selectorFactory {
  selectorFactory__ = selectorFactory;
}

- (id<RepackagedOrgW3cCssSacConditionFactory>)getConditionFactory {
  if (conditionFactory__ == nil) {
    conditionFactory__ = new_ComSteadystateCssParserSelectorsConditionFactoryImpl_init();
  }
  return conditionFactory__;
}

- (void)setConditionFactoryWithRepackagedOrgW3cCssSacConditionFactory:(id<RepackagedOrgW3cCssSacConditionFactory>)conditionFactory {
  conditionFactory__ = conditionFactory;
}

- (JavaUtilResourceBundle *)getSACParserMessages {
  if (sacParserMessages__ == nil) {
    @try {
      sacParserMessages__ = JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_(
#line 139
      @"com.steadystate.css.parser.SACParserMessages",
#line 140
      [self getLocale]);
    }
    @catch (JavaUtilMissingResourceException *e) {
      [((JavaUtilMissingResourceException *) nil_chk(e)) printStackTrace];
    }
  }
  return sacParserMessages__;
}


#line 149
- (id<RepackagedOrgW3cCssSacLocator>)getLocator {
  return [self createLocatorWithComSteadystateCssParserToken:[self getToken]];
}

- (id<RepackagedOrgW3cCssSacLocator>)createLocatorWithComSteadystateCssParserToken:(ComSteadystateCssParserToken *)t {
  return new_ComSteadystateCssParserLocatorImpl_initWithNSString_withInt_withInt_([((RepackagedOrgW3cCssSacInputSource *) nil_chk([self getInputSource])) getURI],
#line 155
  t == nil ? 0 : t->beginLine_,
#line 156
  t == nil ? 0 : t->beginColumn_);
}


#line 159
- (NSString *)add_escapesWithNSString:(NSString *)str {
  JavaLangStringBuilder *retval = new_JavaLangStringBuilder_init();
  jchar ch;
  for (jint i = 0; i < ((jint) [((NSString *) nil_chk(str)) length]); i++) {
    ch = [str charAtWithInt:i];
    switch (ch) {
      case 0:
      continue;
      case 0x0008:
      (void) [retval appendWithNSString:@"\\b"];
      continue;
      case 0x0009:
      (void) [retval appendWithNSString:@"\\t"];
      continue;
      case 0x000a:
      (void) [retval appendWithNSString:@"\\n"];
      continue;
      case 0x000c:
      (void) [retval appendWithNSString:@"\\f"];
      continue;
      case 0x000d:
      (void) [retval appendWithNSString:@"\\r"];
      continue;
      case '"':
      (void) [retval appendWithNSString:@"\\\""];
      continue;
      case '\'':
      (void) [retval appendWithNSString:@"\\'"];
      continue;
      case '\\':
      (void) [retval appendWithNSString:@"\\\\"];
      continue;
      default:
      if (ch < (jint) 0x20 || ch > (jint) 0x7e) {
        NSString *s = JreStrcat("$$", @"0000", JavaLangInteger_toStringWithInt_withInt_(ch, 16));
        (void) [retval appendWithNSString:JreStrcat("$$", @"\\u", [s substring:((jint) [s length]) - 4 endIndex:((jint) [s length])])];
      }
      else {
        (void) [retval appendWithChar:ch];
      }
      continue;
    }
  }
  return [retval description];
}

- (RepackagedOrgW3cCssSacCSSParseException *)toCSSParseExceptionWithNSString:(NSString *)key
                                   withComSteadystateCssParserParseException:(ComSteadystateCssParserParseException *)e {
  NSString *messagePattern1 = [((JavaUtilResourceBundle *) nil_chk([self getSACParserMessages])) getStringWithNSString:@"invalidExpectingOne"];
  NSString *messagePattern2 = [((JavaUtilResourceBundle *) nil_chk([self getSACParserMessages])) getStringWithNSString:@"invalidExpectingMore"];
  jint maxSize = 0;
  JavaLangStringBuilder *expected = new_JavaLangStringBuilder_init();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(((ComSteadystateCssParserParseException *) nil_chk(e))->expectedTokenSequences_))->size_; i++) {
    if (maxSize < ((IOSIntArray *) nil_chk(IOSObjectArray_Get(e->expectedTokenSequences_, i)))->size_) {
      maxSize = ((IOSIntArray *) nil_chk(IOSObjectArray_Get(e->expectedTokenSequences_, i)))->size_;
    }
    for (jint j = 0; j < ((IOSIntArray *) nil_chk(IOSObjectArray_Get(e->expectedTokenSequences_, i)))->size_; j++) {
      (void) [expected appendWithNSString:IOSObjectArray_Get(nil_chk(e->tokenImage_), IOSIntArray_Get(nil_chk(IOSObjectArray_Get(e->expectedTokenSequences_, i)), j))];
    }
    if (i < e->expectedTokenSequences_->size_ - 1) {
      (void) [expected appendWithNSString:@", "];
    }
  }
  JavaLangStringBuilder *invalid = new_JavaLangStringBuilder_init();
  ComSteadystateCssParserToken *tok = ((ComSteadystateCssParserToken *) nil_chk(e->currentToken_))->next_;
  for (jint i = 0; i < maxSize; i++) {
    if (i != 0) {
      (void) [invalid appendWithNSString:@" "];
    }
    if (((ComSteadystateCssParserToken *) nil_chk(tok))->kind_ == 0) {
      (void) [invalid appendWithNSString:IOSObjectArray_Get(nil_chk(e->tokenImage_), 0)];
      break;
    }
    (void) [invalid appendWithNSString:[self add_escapesWithNSString:tok->image_]];
    tok = tok->next_;
  }
  NSString *s = nil;
  @try {
    s = [((JavaUtilResourceBundle *) nil_chk([self getSACParserMessages])) getStringWithNSString:key];
  }
  @catch (JavaUtilMissingResourceException *ex) {
    s = key;
  }
  JavaLangStringBuilder *message = new_JavaLangStringBuilder_initWithNSString_(s);
  (void) [message appendWithNSString:@" ("];
  if (e->expectedTokenSequences_->size_ == 1) {
    (void) [message appendWithNSString:JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(messagePattern1, [IOSObjectArray newArrayWithObjects:(id[]){ invalid, expected } count:2 type:NSObject_class_()])];
  }
  else {
    (void) [message appendWithNSString:JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(messagePattern2, [IOSObjectArray newArrayWithObjects:(id[]){ invalid, expected } count:2 type:NSObject_class_()])];
  }
  (void) [message appendWithNSString:@")"];
  return new_RepackagedOrgW3cCssSacCSSParseException_initWithNSString_withNSString_withInt_withInt_([message description],
#line 251
  [((RepackagedOrgW3cCssSacInputSource *) nil_chk([self getInputSource])) getURI], ((ComSteadystateCssParserToken *) nil_chk(e->currentToken_->next_))->beginLine_,
#line 252
  e->currentToken_->next_->beginColumn_);
}


#line 255
- (RepackagedOrgW3cCssSacCSSParseException *)toCSSParseExceptionWithComSteadystateCssParserTokenMgrError:(ComSteadystateCssParserTokenMgrError *)e {
  NSString *messagePattern = [((JavaUtilResourceBundle *) nil_chk([self getSACParserMessages])) getStringWithNSString:@"tokenMgrError"];
  return new_RepackagedOrgW3cCssSacCSSParseException_initWithNSString_withNSString_withInt_withInt_(messagePattern, [((RepackagedOrgW3cCssSacInputSource *) nil_chk([self getInputSource])) getURI], 1, 1);
}

- (RepackagedOrgW3cCssSacCSSParseException *)toCSSParseExceptionWithNSString:(NSString *)messageKey
                                                           withNSObjectArray:(IOSObjectArray *)msgParams
                                           withRepackagedOrgW3cCssSacLocator:(id<RepackagedOrgW3cCssSacLocator>)locator {
  
#line 262
  NSString *messagePattern = [((JavaUtilResourceBundle *) nil_chk([self getSACParserMessages])) getStringWithNSString:messageKey];
  return new_RepackagedOrgW3cCssSacCSSParseException_initWithNSString_withRepackagedOrgW3cCssSacLocator_(JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(messagePattern, msgParams), locator);
}


#line 266
- (RepackagedOrgW3cCssSacCSSParseException *)createSkipWarningWithNSString:(NSString *)key
                               withRepackagedOrgW3cCssSacCSSParseException:(RepackagedOrgW3cCssSacCSSParseException *)e {
  NSString *s = nil;
  @try {
    s = [((JavaUtilResourceBundle *) nil_chk([self getSACParserMessages])) getStringWithNSString:key];
  }
  @catch (JavaUtilMissingResourceException *ex) {
    s = key;
  }
  return new_RepackagedOrgW3cCssSacCSSParseException_initWithNSString_withNSString_withInt_withInt_(s, [((RepackagedOrgW3cCssSacCSSParseException *) nil_chk(e)) getURI], [e getLineNumber], [e getColumnNumber]);
}


#line 277
- (void)parseStyleSheetWithRepackagedOrgW3cCssSacInputSource:(RepackagedOrgW3cCssSacInputSource *)source {
  source__ = source;
  [self ReInitWithComSteadystateCssParserCharStream:ComSteadystateCssParserAbstractSACParser_getCharStreamWithRepackagedOrgW3cCssSacInputSource_(self, source)];
  @try {
    [self styleSheet];
  }
  @catch (ComSteadystateCssParserParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithNSString:@"invalidStyleSheet" withComSteadystateCssParserParseException:e]];
  }
  @catch (ComSteadystateCssParserTokenMgrError *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithComSteadystateCssParserTokenMgrError:e]];
  }
  @catch (RepackagedOrgW3cCssSacCSSParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:e];
  }
}

- (void)parseStyleSheetWithNSString:(NSString *)uri {
  [self parseStyleSheetWithRepackagedOrgW3cCssSacInputSource:new_RepackagedOrgW3cCssSacInputSource_initWithNSString_(uri)];
}

- (void)parseStyleDeclarationWithRepackagedOrgW3cCssSacInputSource:(RepackagedOrgW3cCssSacInputSource *)source {
  source__ = source;
  [self ReInitWithComSteadystateCssParserCharStream:ComSteadystateCssParserAbstractSACParser_getCharStreamWithRepackagedOrgW3cCssSacInputSource_(self, source)];
  @try {
    [self styleDeclaration];
  }
  @catch (ComSteadystateCssParserParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithNSString:@"invalidStyleDeclaration" withComSteadystateCssParserParseException:e]];
  }
  @catch (ComSteadystateCssParserTokenMgrError *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithComSteadystateCssParserTokenMgrError:e]];
  }
  @catch (RepackagedOrgW3cCssSacCSSParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:e];
  }
}

- (void)parseRuleWithRepackagedOrgW3cCssSacInputSource:(RepackagedOrgW3cCssSacInputSource *)source {
  source__ = source;
  [self ReInitWithComSteadystateCssParserCharStream:ComSteadystateCssParserAbstractSACParser_getCharStreamWithRepackagedOrgW3cCssSacInputSource_(self, source)];
  @try {
    [self styleSheetRuleSingle];
  }
  @catch (ComSteadystateCssParserParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithNSString:@"invalidRule" withComSteadystateCssParserParseException:e]];
  }
  @catch (ComSteadystateCssParserTokenMgrError *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithComSteadystateCssParserTokenMgrError:e]];
  }
  @catch (RepackagedOrgW3cCssSacCSSParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:e];
  }
}

- (id<RepackagedOrgW3cCssSacSelectorList>)parseSelectorsWithRepackagedOrgW3cCssSacInputSource:(RepackagedOrgW3cCssSacInputSource *)source {
  source__ = source;
  [self ReInitWithComSteadystateCssParserCharStream:ComSteadystateCssParserAbstractSACParser_getCharStreamWithRepackagedOrgW3cCssSacInputSource_(self, source)];
  id<RepackagedOrgW3cCssSacSelectorList> sl = nil;
  @try {
    sl = [self parseSelectorsInternal];
  }
  @catch (ComSteadystateCssParserParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithNSString:@"invalidSelectorList" withComSteadystateCssParserParseException:e]];
  }
  @catch (ComSteadystateCssParserTokenMgrError *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithComSteadystateCssParserTokenMgrError:e]];
  }
  @catch (RepackagedOrgW3cCssSacCSSParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:e];
  }
  return sl;
}

- (id<RepackagedOrgW3cCssSacLexicalUnit>)parsePropertyValueWithRepackagedOrgW3cCssSacInputSource:(RepackagedOrgW3cCssSacInputSource *)source {
  source__ = source;
  [self ReInitWithComSteadystateCssParserCharStream:ComSteadystateCssParserAbstractSACParser_getCharStreamWithRepackagedOrgW3cCssSacInputSource_(self, source)];
  id<RepackagedOrgW3cCssSacLexicalUnit> lu = nil;
  @try {
    lu = [self expr];
  }
  @catch (ComSteadystateCssParserParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithNSString:@"invalidExpr" withComSteadystateCssParserParseException:e]];
  }
  @catch (ComSteadystateCssParserTokenMgrError *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithComSteadystateCssParserTokenMgrError:e]];
  }
  @catch (RepackagedOrgW3cCssSacCSSParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:e];
  }
  return lu;
}

- (jboolean)parsePriorityWithRepackagedOrgW3cCssSacInputSource:(RepackagedOrgW3cCssSacInputSource *)source {
  source__ = source;
  [self ReInitWithComSteadystateCssParserCharStream:ComSteadystateCssParserAbstractSACParser_getCharStreamWithRepackagedOrgW3cCssSacInputSource_(self, source)];
  jboolean b = NO;
  @try {
    b = [self prio];
  }
  @catch (ComSteadystateCssParserParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithNSString:@"invalidPrio" withComSteadystateCssParserParseException:e]];
  }
  @catch (ComSteadystateCssParserTokenMgrError *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithComSteadystateCssParserTokenMgrError:e]];
  }
  @catch (RepackagedOrgW3cCssSacCSSParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:e];
  }
  return b;
}

- (id<RepackagedOrgW3cCssSacSACMediaList>)parseMediaWithRepackagedOrgW3cCssSacInputSource:(RepackagedOrgW3cCssSacInputSource *)source {
  source__ = source;
  [self ReInitWithComSteadystateCssParserCharStream:ComSteadystateCssParserAbstractSACParser_getCharStreamWithRepackagedOrgW3cCssSacInputSource_(self, source)];
  ComSteadystateCssParserSACMediaListImpl *ml = new_ComSteadystateCssParserSACMediaListImpl_init();
  @try {
    [self mediaListWithComSteadystateCssParserSACMediaListImpl:ml];
  }
  @catch (ComSteadystateCssParserParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithNSString:@"invalidMediaList" withComSteadystateCssParserParseException:e]];
  }
  @catch (ComSteadystateCssParserTokenMgrError *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:[self toCSSParseExceptionWithComSteadystateCssParserTokenMgrError:e]];
  }
  @catch (RepackagedOrgW3cCssSacCSSParseException *e) {
    [((id<RepackagedOrgW3cCssSacErrorHandler>) nil_chk([self getErrorHandler])) errorWithRepackagedOrgW3cCssSacCSSParseException:e];
  }
  return ml;
}

- (id<ComSteadystateCssParserCharStream>)getCharStreamWithRepackagedOrgW3cCssSacInputSource:(RepackagedOrgW3cCssSacInputSource *)source {
  return ComSteadystateCssParserAbstractSACParser_getCharStreamWithRepackagedOrgW3cCssSacInputSource_(self, source);
}


#line 430
- (NSString *)getParserVersion {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 431
- (NSString *)getGrammarUri {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 432
- (void)ReInitWithComSteadystateCssParserCharStream:(id<ComSteadystateCssParserCharStream>)charStream {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 433
- (void)styleSheet {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 434
- (void)styleDeclaration {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 435
- (void)styleSheetRuleSingle {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 436
- (id<RepackagedOrgW3cCssSacSelectorList>)parseSelectorsInternal {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 437
- (id<RepackagedOrgW3cCssSacSelectorList>)selectorList {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 438
- (id<RepackagedOrgW3cCssSacLexicalUnit>)expr {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 439
- (jboolean)prio {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 440
- (void)mediaListWithComSteadystateCssParserSACMediaListImpl:(ComSteadystateCssParserSACMediaListImpl *)ml {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 442
- (void)handleStartDocument {
  [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk([self getDocumentHandler])) startDocumentWithRepackagedOrgW3cCssSacInputSource:[self getInputSource]];
}

- (void)handleEndDocument {
  [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk([self getDocumentHandler])) endDocumentWithRepackagedOrgW3cCssSacInputSource:[self getInputSource]];
}

- (void)handleIgnorableAtRuleWithNSString:(NSString *)s
        withRepackagedOrgW3cCssSacLocator:(id<RepackagedOrgW3cCssSacLocator>)locator {
  id<RepackagedOrgW3cCssSacDocumentHandler> documentHandler = [self getDocumentHandler];
  if ([ComSteadystateCssSacDocumentHandlerExt_class_() isInstance:documentHandler]) {
    [((id<ComSteadystateCssSacDocumentHandlerExt>) nil_chk(((id<ComSteadystateCssSacDocumentHandlerExt>) check_protocol_cast(documentHandler, @protocol(ComSteadystateCssSacDocumentHandlerExt))))) ignorableAtRuleWithNSString:s withRepackagedOrgW3cCssSacLocator:locator];
  }
  else {
    [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk(documentHandler)) ignorableAtRuleWithNSString:s];
  }
}


#line 460
- (void)handleCharsetWithNSString:(NSString *)characterEncoding
withRepackagedOrgW3cCssSacLocator:(id<RepackagedOrgW3cCssSacLocator>)locator {
  id<RepackagedOrgW3cCssSacDocumentHandler> documentHandler = [self getDocumentHandler];
  if ([ComSteadystateCssSacDocumentHandlerExt_class_() isInstance:documentHandler]) {
    [((id<ComSteadystateCssSacDocumentHandlerExt>) nil_chk(((id<ComSteadystateCssSacDocumentHandlerExt>) check_protocol_cast(documentHandler, @protocol(ComSteadystateCssSacDocumentHandlerExt))))) charsetWithNSString:characterEncoding withRepackagedOrgW3cCssSacLocator:locator];
  }
}


#line 467
- (void)handleImportStyleWithNSString:(NSString *)uri
withRepackagedOrgW3cCssSacSACMediaList:(id<RepackagedOrgW3cCssSacSACMediaList>)media
                         withNSString:(NSString *)defaultNamespaceURI
    withRepackagedOrgW3cCssSacLocator:(id<RepackagedOrgW3cCssSacLocator>)locator {
  
#line 469
  id<RepackagedOrgW3cCssSacDocumentHandler> documentHandler = [self getDocumentHandler];
  if ([ComSteadystateCssSacDocumentHandlerExt_class_() isInstance:documentHandler]) {
    [((id<ComSteadystateCssSacDocumentHandlerExt>) nil_chk(((id<ComSteadystateCssSacDocumentHandlerExt>) check_protocol_cast(documentHandler, @protocol(ComSteadystateCssSacDocumentHandlerExt))))) importStyleWithNSString:uri withRepackagedOrgW3cCssSacSACMediaList:media withNSString:defaultNamespaceURI withRepackagedOrgW3cCssSacLocator:locator];
  }
  else {
    [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk(documentHandler)) importStyleWithNSString:uri withRepackagedOrgW3cCssSacSACMediaList:media withNSString:defaultNamespaceURI];
  }
}


#line 478
- (void)handleStartMediaWithRepackagedOrgW3cCssSacSACMediaList:(id<RepackagedOrgW3cCssSacSACMediaList>)media
                             withRepackagedOrgW3cCssSacLocator:(id<RepackagedOrgW3cCssSacLocator>)locator {
  id<RepackagedOrgW3cCssSacDocumentHandler> documentHandler = [self getDocumentHandler];
  if ([ComSteadystateCssSacDocumentHandlerExt_class_() isInstance:documentHandler]) {
    [((id<ComSteadystateCssSacDocumentHandlerExt>) nil_chk(((id<ComSteadystateCssSacDocumentHandlerExt>) check_protocol_cast(documentHandler, @protocol(ComSteadystateCssSacDocumentHandlerExt))))) startMediaWithRepackagedOrgW3cCssSacSACMediaList:media withRepackagedOrgW3cCssSacLocator:locator];
  }
  else {
    [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk(documentHandler)) startMediaWithRepackagedOrgW3cCssSacSACMediaList:media];
  }
}


#line 488
- (void)handleMediumWithNSString:(NSString *)medium
withRepackagedOrgW3cCssSacLocator:(id<RepackagedOrgW3cCssSacLocator>)locator {
}

- (void)handleEndMediaWithRepackagedOrgW3cCssSacSACMediaList:(id<RepackagedOrgW3cCssSacSACMediaList>)media {
  [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk([self getDocumentHandler])) endMediaWithRepackagedOrgW3cCssSacSACMediaList:media];
}

- (void)handleStartPageWithNSString:(NSString *)name
                       withNSString:(NSString *)pseudoPage
  withRepackagedOrgW3cCssSacLocator:(id<RepackagedOrgW3cCssSacLocator>)locator {
  id<RepackagedOrgW3cCssSacDocumentHandler> documentHandler = [self getDocumentHandler];
  if ([ComSteadystateCssSacDocumentHandlerExt_class_() isInstance:documentHandler]) {
    [((id<ComSteadystateCssSacDocumentHandlerExt>) nil_chk(((id<ComSteadystateCssSacDocumentHandlerExt>) check_protocol_cast(documentHandler, @protocol(ComSteadystateCssSacDocumentHandlerExt))))) startPageWithNSString:name withNSString:pseudoPage withRepackagedOrgW3cCssSacLocator:locator];
  }
  else {
    [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk(documentHandler)) startPageWithNSString:name withNSString:pseudoPage];
  }
}


#line 506
- (void)handleEndPageWithNSString:(NSString *)name
                     withNSString:(NSString *)pseudoPage {
  [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk([self getDocumentHandler])) endPageWithNSString:name withNSString:pseudoPage];
}


#line 510
- (void)handleStartFontFaceWithRepackagedOrgW3cCssSacLocator:(id<RepackagedOrgW3cCssSacLocator>)locator {
  id<RepackagedOrgW3cCssSacDocumentHandler> documentHandler = [self getDocumentHandler];
  if ([ComSteadystateCssSacDocumentHandlerExt_class_() isInstance:documentHandler]) {
    [((id<ComSteadystateCssSacDocumentHandlerExt>) nil_chk(((id<ComSteadystateCssSacDocumentHandlerExt>) check_protocol_cast(documentHandler, @protocol(ComSteadystateCssSacDocumentHandlerExt))))) startFontFaceWithRepackagedOrgW3cCssSacLocator:locator];
  }
  else {
    [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk(documentHandler)) startFontFace];
  }
}

- (void)handleEndFontFace {
  [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk([self getDocumentHandler])) endFontFace];
}

- (void)handleSelectorWithRepackagedOrgW3cCssSacSelector:(id<RepackagedOrgW3cCssSacSelector>)selector {
}


#line 528
- (void)handleStartSelectorWithRepackagedOrgW3cCssSacSelectorList:(id<RepackagedOrgW3cCssSacSelectorList>)selectors
                                withRepackagedOrgW3cCssSacLocator:(id<RepackagedOrgW3cCssSacLocator>)locator {
  id<RepackagedOrgW3cCssSacDocumentHandler> documentHandler = [self getDocumentHandler];
  if ([ComSteadystateCssSacDocumentHandlerExt_class_() isInstance:documentHandler]) {
    [((id<ComSteadystateCssSacDocumentHandlerExt>) nil_chk(((id<ComSteadystateCssSacDocumentHandlerExt>) check_protocol_cast(documentHandler, @protocol(ComSteadystateCssSacDocumentHandlerExt))))) startSelectorWithRepackagedOrgW3cCssSacSelectorList:selectors withRepackagedOrgW3cCssSacLocator:locator];
  }
  else {
    [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk(documentHandler)) startSelectorWithRepackagedOrgW3cCssSacSelectorList:selectors];
  }
}


#line 538
- (void)handleEndSelectorWithRepackagedOrgW3cCssSacSelectorList:(id<RepackagedOrgW3cCssSacSelectorList>)selectors {
  [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk([self getDocumentHandler])) endSelectorWithRepackagedOrgW3cCssSacSelectorList:selectors];
}

- (void)handlePropertyWithNSString:(NSString *)name
withRepackagedOrgW3cCssSacLexicalUnit:(id<RepackagedOrgW3cCssSacLexicalUnit>)value
                       withBoolean:(jboolean)important
 withRepackagedOrgW3cCssSacLocator:(id<RepackagedOrgW3cCssSacLocator>)locator {
  
#line 544
  id<RepackagedOrgW3cCssSacDocumentHandler> documentHandler = [self getDocumentHandler];
  if ([ComSteadystateCssSacDocumentHandlerExt_class_() isInstance:documentHandler]) {
    [((id<ComSteadystateCssSacDocumentHandlerExt>) nil_chk(((id<ComSteadystateCssSacDocumentHandlerExt>) check_protocol_cast(documentHandler, @protocol(ComSteadystateCssSacDocumentHandlerExt))))) propertyWithNSString:name withRepackagedOrgW3cCssSacLexicalUnit:value withBoolean:important withRepackagedOrgW3cCssSacLocator:locator];
  }
  else {
    [((id<RepackagedOrgW3cCssSacDocumentHandler>) nil_chk(documentHandler)) propertyWithNSString:name withRepackagedOrgW3cCssSacLexicalUnit:value withBoolean:important];
  }
}


#line 553
- (id<RepackagedOrgW3cCssSacLexicalUnit>)functionInternalWithRepackagedOrgW3cCssSacLexicalUnit:(id<RepackagedOrgW3cCssSacLexicalUnit>)prev
                                                                                  withNSString:(NSString *)funct
                                                         withRepackagedOrgW3cCssSacLexicalUnit:(id<RepackagedOrgW3cCssSacLexicalUnit>)params {
  
#line 556
  if ([@"counter(" equalsIgnoreCase:funct]) {
    return ComSteadystateCssParserLexicalUnitImpl_createCounterWithRepackagedOrgW3cCssSacLexicalUnit_withRepackagedOrgW3cCssSacLexicalUnit_(prev, params);
  }
  else if ([@"counters(" equalsIgnoreCase:funct]) {
    return ComSteadystateCssParserLexicalUnitImpl_createCountersWithRepackagedOrgW3cCssSacLexicalUnit_withRepackagedOrgW3cCssSacLexicalUnit_(prev, params);
  }
  else if ([@"attr(" equalsIgnoreCase:funct]) {
    return ComSteadystateCssParserLexicalUnitImpl_createAttrWithRepackagedOrgW3cCssSacLexicalUnit_withNSString_(prev, [((id<RepackagedOrgW3cCssSacLexicalUnit>) nil_chk(params)) getStringValue]);
  }
  else if ([@"rect(" equalsIgnoreCase:funct]) {
    return ComSteadystateCssParserLexicalUnitImpl_createRectWithRepackagedOrgW3cCssSacLexicalUnit_withRepackagedOrgW3cCssSacLexicalUnit_(prev, params);
  }
  else if ([@"rgb(" equalsIgnoreCase:funct]) {
    return ComSteadystateCssParserLexicalUnitImpl_createRgbColorWithRepackagedOrgW3cCssSacLexicalUnit_withRepackagedOrgW3cCssSacLexicalUnit_(prev, params);
  }
  return ComSteadystateCssParserLexicalUnitImpl_createFunctionWithRepackagedOrgW3cCssSacLexicalUnit_withNSString_withRepackagedOrgW3cCssSacLexicalUnit_(
#line 572
  prev,
#line 573
  [funct substring:0 endIndex:((jint) [((NSString *) nil_chk(funct)) length]) - 1],
#line 574
  params);
}


#line 577
- (id<RepackagedOrgW3cCssSacLexicalUnit>)hexcolorInternalWithRepackagedOrgW3cCssSacLexicalUnit:(id<RepackagedOrgW3cCssSacLexicalUnit>)prev
                                                              withComSteadystateCssParserToken:(ComSteadystateCssParserToken *)t {
  
#line 579
  jint i = 1;
  jint r = 0;
  jint g = 0;
  jint b = 0;
  jint len = ((jint) [((NSString *) nil_chk(((ComSteadystateCssParserToken *) nil_chk(t))->image_)) length]) - 1;
  @try {
    if (len == 3) {
      r = JavaLangInteger_parseIntWithNSString_withInt_([t->image_ substring:i + 0 endIndex:i + 1], 16);
      g = JavaLangInteger_parseIntWithNSString_withInt_([t->image_ substring:i + 1 endIndex:i + 2], 16);
      b = JavaLangInteger_parseIntWithNSString_withInt_([t->image_ substring:i + 2 endIndex:i + 3], 16);
      r = (LShift32(r, 4)) | r;
      g = (LShift32(g, 4)) | g;
      b = (LShift32(b, 4)) | b;
    }
    else if (len == 6) {
      r = JavaLangInteger_parseIntWithNSString_withInt_([t->image_ substring:i + 0 endIndex:i + 2], 16);
      g = JavaLangInteger_parseIntWithNSString_withInt_([t->image_ substring:i + 2 endIndex:i + 4], 16);
      b = JavaLangInteger_parseIntWithNSString_withInt_([t->image_ substring:i + 4 endIndex:i + 6], 16);
    }
    else {
      NSString *pattern = [((JavaUtilResourceBundle *) nil_chk([self getSACParserMessages])) getStringWithNSString:@"invalidColor"];
      @throw new_RepackagedOrgW3cCssSacCSSParseException_initWithNSString_withNSString_withInt_withInt_(JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(
#line 601
      pattern, [IOSObjectArray newArrayWithObjects:(id[]){ t } count:1 type:NSObject_class_()]),
#line 602
      [((RepackagedOrgW3cCssSacInputSource *) nil_chk([self getInputSource])) getURI], t->beginLine_,
#line 603
      t->beginColumn_);
    }
    
#line 607
    id<RepackagedOrgW3cCssSacLexicalUnit> lr = ComSteadystateCssParserLexicalUnitImpl_createNumberWithRepackagedOrgW3cCssSacLexicalUnit_withInt_(nil, r);
    id<RepackagedOrgW3cCssSacLexicalUnit> lc1 = ComSteadystateCssParserLexicalUnitImpl_createCommaWithRepackagedOrgW3cCssSacLexicalUnit_(lr);
    id<RepackagedOrgW3cCssSacLexicalUnit> lg = ComSteadystateCssParserLexicalUnitImpl_createNumberWithRepackagedOrgW3cCssSacLexicalUnit_withInt_(lc1, g);
    id<RepackagedOrgW3cCssSacLexicalUnit> lc2 = ComSteadystateCssParserLexicalUnitImpl_createCommaWithRepackagedOrgW3cCssSacLexicalUnit_(lg);
    (void) ComSteadystateCssParserLexicalUnitImpl_createNumberWithRepackagedOrgW3cCssSacLexicalUnit_withInt_(lc2, b);
    
#line 613
    return ComSteadystateCssParserLexicalUnitImpl_createRgbColorWithRepackagedOrgW3cCssSacLexicalUnit_withRepackagedOrgW3cCssSacLexicalUnit_(prev, lr);
  }
  @catch (JavaLangNumberFormatException *ex) {
    NSString *pattern = [((JavaUtilResourceBundle *) nil_chk([self getSACParserMessages])) getStringWithNSString:@"invalidColor"];
    @throw new_RepackagedOrgW3cCssSacCSSParseException_initWithNSString_withNSString_withInt_withInt_withJavaLangException_(JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(
#line 618
    pattern, [IOSObjectArray newArrayWithObjects:(id[]){ t } count:1 type:NSObject_class_()]),
#line 619
    [((RepackagedOrgW3cCssSacInputSource *) nil_chk([self getInputSource])) getURI], t->beginLine_,
#line 620
    t->beginColumn_, ex);
  }
}


#line 624
- (jint)intValueWithChar:(jchar)op
            withNSString:(NSString *)s {
  jint result = JavaLangInteger_parseIntWithNSString_(s);
  if (op == '-') {
    return -1 * result;
  }
  return result;
}


#line 632
- (jfloat)floatValueWithChar:(jchar)op
                withNSString:(NSString *)s {
  jfloat result = JavaLangFloat_parseFloatWithNSString_(s);
  if (op == '-') {
    return -1 * result;
  }
  return result;
}


#line 640
- (jint)getLastNumPosWithNSString:(NSString *)s {
  jint i = 0;
  for (; i < ((jint) [((NSString *) nil_chk(s)) length]); i++) {
    if ([((NSString *) nil_chk(ComSteadystateCssParserAbstractSACParser_NUM_CHARS_)) indexOf:[s charAtWithInt:i]] < 0) {
      break;
    }
  }
  return i - 1;
}


#line 658
- (NSString *)unescapeWithNSString:(NSString *)s
                       withBoolean:(jboolean)unescapeDoubleQuotes {
  if (s == nil) {
    return s;
  }
  
#line 664
  JavaLangStringBuilder *buf = nil;
  jint index = -1;
  jint len = ((jint) [((NSString *) nil_chk(s)) length]);
  len--;
  if (unescapeDoubleQuotes) {
    while (index < len) {
      jchar c = [s charAtWithInt:++index];
      
#line 672
      if (c == '\\' || (c == '"')) {
        buf = new_JavaLangStringBuilder_initWithInt_(len);
        (void) [buf appendWithNSString:[s substring:0 endIndex:index]];
        index--;
        break;
      }
    }
  }
  else {
    while (index < len) {
      if ('\\' == [s charAtWithInt:++index]) {
        buf = new_JavaLangStringBuilder_initWithInt_(len);
        (void) [buf appendWithNSString:[s substring:0 endIndex:index]];
        index--;
        break;
      }
    }
  }
  
#line 691
  if (nil == buf) {
    return s;
  }
  
#line 696
  jint numValue = -1;
  jint hexval;
  jint digitCount = 0;
  
#line 700
  while (index < len) {
    jchar c = [s charAtWithInt:++index];
    
#line 703
    if (numValue > -1) {
      hexval = ComSteadystateCssParserAbstractSACParser_hexvalWithChar_(c);
      if (hexval != -1) {
        numValue = (numValue * 16) + hexval;
        if (++digitCount < 6) {
          continue;
        }
        
#line 711
        if (numValue > (jint) 0xFFFF || numValue == 0) {
          numValue = (jint) 0xFFFD;
        }
        (void) [((JavaLangStringBuilder *) nil_chk(buf)) appendWithChar:(jchar) numValue];
        numValue = -1;
        continue;
      }
      
#line 719
      if (digitCount > 0) {
        if (numValue > (jint) 0xFFFF || numValue == 0) {
          numValue = (jint) 0xFFFD;
        }
        
#line 724
        (void) [((JavaLangStringBuilder *) nil_chk(buf)) appendWithChar:(jchar) numValue];
        
#line 726
        if (c == ' ' || c == 0x0009) {
          numValue = -1;
          continue;
        }
      }
      
#line 732
      numValue = -1;
      if (digitCount == 0 && c == '\\') {
        (void) [((JavaLangStringBuilder *) nil_chk(buf)) appendWithChar:'\\'];
        continue;
      }
      
#line 738
      if (c == 0x000a || c == 0x000c) {
        continue;
      }
      if (c == 0x000d) {
        if (index < len) {
          if ([s charAtWithInt:index + 1] == 0x000a) {
            index++;
          }
        }
        continue;
      }
    }
    
#line 751
    if (c == '\\') {
      numValue = 0;
      digitCount = 0;
      continue;
    }
    
#line 757
    if (c == '"' && !unescapeDoubleQuotes) {
      (void) [((JavaLangStringBuilder *) nil_chk(buf)) appendWithChar:'\\'];
    }
    
#line 761
    (void) [((JavaLangStringBuilder *) nil_chk(buf)) appendWithChar:c];
  }
  
#line 764
  if (numValue > -1) {
    if (digitCount == 0) {
      (void) [((JavaLangStringBuilder *) nil_chk(buf)) appendWithChar:'\\'];
    }
    else {
      if (numValue > (jint) 0xFFFF || numValue == 0) {
        numValue = (jint) 0xFFFD;
      }
      (void) [((JavaLangStringBuilder *) nil_chk(buf)) appendWithChar:(jchar) numValue];
    }
  }
  
#line 776
  return [((JavaLangStringBuilder *) nil_chk(buf)) description];
}


#line 779
+ (jint)hexvalWithChar:(jchar)c {
  return ComSteadystateCssParserAbstractSACParser_hexvalWithChar_(c);
}

- (instancetype)init {
  ComSteadystateCssParserAbstractSACParser_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getToken", NULL, "Lcom.steadystate.css.parser.Token;", 0x404, NULL, NULL },
    { "getDocumentHandler", NULL, "Lrepackaged.org.w3c.css.sac.DocumentHandler;", 0x4, NULL, NULL },
    { "setDocumentHandlerWithRepackagedOrgW3cCssSacDocumentHandler:", "setDocumentHandler", "V", 0x1, NULL, NULL },
    { "getErrorHandler", NULL, "Lrepackaged.org.w3c.css.sac.ErrorHandler;", 0x4, NULL, NULL },
    { "setErrorHandlerWithRepackagedOrgW3cCssSacErrorHandler:", "setErrorHandler", "V", 0x1, NULL, NULL },
    { "getInputSource", NULL, "Lrepackaged.org.w3c.css.sac.InputSource;", 0x4, NULL, NULL },
    { "setLocaleWithJavaUtilLocale:", "setLocale", "V", 0x1, NULL, NULL },
    { "getLocale", NULL, "Ljava.util.Locale;", 0x4, NULL, NULL },
    { "getSelectorFactory", NULL, "Lrepackaged.org.w3c.css.sac.SelectorFactory;", 0x4, NULL, NULL },
    { "setSelectorFactoryWithRepackagedOrgW3cCssSacSelectorFactory:", "setSelectorFactory", "V", 0x1, NULL, NULL },
    { "getConditionFactory", NULL, "Lrepackaged.org.w3c.css.sac.ConditionFactory;", 0x4, NULL, NULL },
    { "setConditionFactoryWithRepackagedOrgW3cCssSacConditionFactory:", "setConditionFactory", "V", 0x1, NULL, NULL },
    { "getSACParserMessages", NULL, "Ljava.util.ResourceBundle;", 0x4, NULL, NULL },
    { "getLocator", NULL, "Lrepackaged.org.w3c.css.sac.Locator;", 0x1, NULL, NULL },
    { "createLocatorWithComSteadystateCssParserToken:", "createLocator", "Lrepackaged.org.w3c.css.sac.Locator;", 0x4, NULL, NULL },
    { "add_escapesWithNSString:", "add_escapes", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "toCSSParseExceptionWithNSString:withComSteadystateCssParserParseException:", "toCSSParseException", "Lrepackaged.org.w3c.css.sac.CSSParseException;", 0x4, NULL, NULL },
    { "toCSSParseExceptionWithComSteadystateCssParserTokenMgrError:", "toCSSParseException", "Lrepackaged.org.w3c.css.sac.CSSParseException;", 0x4, NULL, NULL },
    { "toCSSParseExceptionWithNSString:withNSObjectArray:withRepackagedOrgW3cCssSacLocator:", "toCSSParseException", "Lrepackaged.org.w3c.css.sac.CSSParseException;", 0x4, NULL, NULL },
    { "createSkipWarningWithNSString:withRepackagedOrgW3cCssSacCSSParseException:", "createSkipWarning", "Lrepackaged.org.w3c.css.sac.CSSParseException;", 0x4, NULL, NULL },
    { "parseStyleSheetWithRepackagedOrgW3cCssSacInputSource:", "parseStyleSheet", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "parseStyleSheetWithNSString:", "parseStyleSheet", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "parseStyleDeclarationWithRepackagedOrgW3cCssSacInputSource:", "parseStyleDeclaration", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "parseRuleWithRepackagedOrgW3cCssSacInputSource:", "parseRule", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "parseSelectorsWithRepackagedOrgW3cCssSacInputSource:", "parseSelectors", "Lrepackaged.org.w3c.css.sac.SelectorList;", 0x1, "Ljava.io.IOException;", NULL },
    { "parsePropertyValueWithRepackagedOrgW3cCssSacInputSource:", "parsePropertyValue", "Lrepackaged.org.w3c.css.sac.LexicalUnit;", 0x1, "Ljava.io.IOException;", NULL },
    { "parsePriorityWithRepackagedOrgW3cCssSacInputSource:", "parsePriority", "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "parseMediaWithRepackagedOrgW3cCssSacInputSource:", "parseMedia", "Lrepackaged.org.w3c.css.sac.SACMediaList;", 0x1, "Ljava.io.IOException;", NULL },
    { "getCharStreamWithRepackagedOrgW3cCssSacInputSource:", "getCharStream", "Lcom.steadystate.css.parser.CharStream;", 0x2, "Ljava.io.IOException;", NULL },
    { "getParserVersion", NULL, "Ljava.lang.String;", 0x401, NULL, NULL },
    { "getGrammarUri", NULL, "Ljava.lang.String;", 0x404, NULL, NULL },
    { "ReInitWithComSteadystateCssParserCharStream:", "ReInit", "V", 0x404, NULL, NULL },
    { "styleSheet", NULL, "V", 0x404, "Lrepackaged.org.w3c.css.sac.CSSParseException;Lcom.steadystate.css.parser.ParseException;", NULL },
    { "styleDeclaration", NULL, "V", 0x404, "Lcom.steadystate.css.parser.ParseException;", NULL },
    { "styleSheetRuleSingle", NULL, "V", 0x404, "Lcom.steadystate.css.parser.ParseException;", NULL },
    { "parseSelectorsInternal", NULL, "Lrepackaged.org.w3c.css.sac.SelectorList;", 0x404, "Lcom.steadystate.css.parser.ParseException;", NULL },
    { "selectorList", NULL, "Lrepackaged.org.w3c.css.sac.SelectorList;", 0x404, "Lcom.steadystate.css.parser.ParseException;", NULL },
    { "expr", NULL, "Lrepackaged.org.w3c.css.sac.LexicalUnit;", 0x404, "Lcom.steadystate.css.parser.ParseException;", NULL },
    { "prio", NULL, "Z", 0x404, "Lcom.steadystate.css.parser.ParseException;", NULL },
    { "mediaListWithComSteadystateCssParserSACMediaListImpl:", "mediaList", "V", 0x404, "Lcom.steadystate.css.parser.ParseException;", NULL },
    { "handleStartDocument", NULL, "V", 0x4, NULL, NULL },
    { "handleEndDocument", NULL, "V", 0x4, NULL, NULL },
    { "handleIgnorableAtRuleWithNSString:withRepackagedOrgW3cCssSacLocator:", "handleIgnorableAtRule", "V", 0x4, NULL, NULL },
    { "handleCharsetWithNSString:withRepackagedOrgW3cCssSacLocator:", "handleCharset", "V", 0x4, NULL, NULL },
    { "handleImportStyleWithNSString:withRepackagedOrgW3cCssSacSACMediaList:withNSString:withRepackagedOrgW3cCssSacLocator:", "handleImportStyle", "V", 0x4, NULL, NULL },
    { "handleStartMediaWithRepackagedOrgW3cCssSacSACMediaList:withRepackagedOrgW3cCssSacLocator:", "handleStartMedia", "V", 0x4, NULL, NULL },
    { "handleMediumWithNSString:withRepackagedOrgW3cCssSacLocator:", "handleMedium", "V", 0x4, NULL, NULL },
    { "handleEndMediaWithRepackagedOrgW3cCssSacSACMediaList:", "handleEndMedia", "V", 0x4, NULL, NULL },
    { "handleStartPageWithNSString:withNSString:withRepackagedOrgW3cCssSacLocator:", "handleStartPage", "V", 0x4, NULL, NULL },
    { "handleEndPageWithNSString:withNSString:", "handleEndPage", "V", 0x4, NULL, NULL },
    { "handleStartFontFaceWithRepackagedOrgW3cCssSacLocator:", "handleStartFontFace", "V", 0x4, NULL, NULL },
    { "handleEndFontFace", NULL, "V", 0x4, NULL, NULL },
    { "handleSelectorWithRepackagedOrgW3cCssSacSelector:", "handleSelector", "V", 0x4, NULL, NULL },
    { "handleStartSelectorWithRepackagedOrgW3cCssSacSelectorList:withRepackagedOrgW3cCssSacLocator:", "handleStartSelector", "V", 0x4, NULL, NULL },
    { "handleEndSelectorWithRepackagedOrgW3cCssSacSelectorList:", "handleEndSelector", "V", 0x4, NULL, NULL },
    { "handlePropertyWithNSString:withRepackagedOrgW3cCssSacLexicalUnit:withBoolean:withRepackagedOrgW3cCssSacLocator:", "handleProperty", "V", 0x4, NULL, NULL },
    { "functionInternalWithRepackagedOrgW3cCssSacLexicalUnit:withNSString:withRepackagedOrgW3cCssSacLexicalUnit:", "functionInternal", "Lrepackaged.org.w3c.css.sac.LexicalUnit;", 0x4, NULL, NULL },
    { "hexcolorInternalWithRepackagedOrgW3cCssSacLexicalUnit:withComSteadystateCssParserToken:", "hexcolorInternal", "Lrepackaged.org.w3c.css.sac.LexicalUnit;", 0x4, NULL, NULL },
    { "intValueWithChar:withNSString:", "intValue", "I", 0x0, NULL, NULL },
    { "floatValueWithChar:withNSString:", "floatValue", "F", 0x0, NULL, NULL },
    { "getLastNumPosWithNSString:", "getLastNumPos", "I", 0x0, NULL, NULL },
    { "unescapeWithNSString:withBoolean:", "unescape", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "hexvalWithChar:", "hexval", "I", 0xa, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "documentHandler__", NULL, 0x2, "Lrepackaged.org.w3c.css.sac.DocumentHandler;", NULL, NULL,  },
    { "errorHandler__", NULL, 0x2, "Lrepackaged.org.w3c.css.sac.ErrorHandler;", NULL, NULL,  },
    { "source__", NULL, 0x2, "Lrepackaged.org.w3c.css.sac.InputSource;", NULL, NULL,  },
    { "locale__", NULL, 0x2, "Ljava.util.Locale;", NULL, NULL,  },
    { "selectorFactory__", NULL, 0x2, "Lrepackaged.org.w3c.css.sac.SelectorFactory;", NULL, NULL,  },
    { "conditionFactory__", NULL, 0x2, "Lrepackaged.org.w3c.css.sac.ConditionFactory;", NULL, NULL,  },
    { "sacParserMessages__", NULL, 0x2, "Ljava.util.ResourceBundle;", NULL, NULL,  },
    { "NUM_CHARS_", NULL, 0x1a, "Ljava.lang.String;", &ComSteadystateCssParserAbstractSACParser_NUM_CHARS_, NULL,  },
  };
  static const J2ObjcClassInfo _ComSteadystateCssParserAbstractSACParser = { 2, "AbstractSACParser", "com.steadystate.css.parser", NULL, 0x400, 64, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSteadystateCssParserAbstractSACParser;
}

@end


#line 408
id<ComSteadystateCssParserCharStream> ComSteadystateCssParserAbstractSACParser_getCharStreamWithRepackagedOrgW3cCssSacInputSource_(ComSteadystateCssParserAbstractSACParser *self, RepackagedOrgW3cCssSacInputSource *source) {
  if ([((RepackagedOrgW3cCssSacInputSource *) nil_chk(source)) getCharacterStream] != nil) {
    return new_ComSteadystateCssParserCssCharStream_initWithJavaIoReader_withInt_withInt_([source getCharacterStream], 1, 1);
  }
  if ([source getByteStream] != nil) {
    JavaIoInputStreamReader *reader;
    NSString *encoding = [source getEncoding];
    if (encoding == nil || ((jint) [encoding length]) < 1) {
      reader = new_JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_([source getByteStream], JavaNioCharsetCharset_defaultCharset());
    }
    else {
      reader = new_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_([source getByteStream], encoding);
    }
    return new_ComSteadystateCssParserCssCharStream_initWithJavaIoReader_withInt_withInt_(reader, 1, 1);
  }
  if ([source getURI] != nil) {
    JavaIoInputStreamReader *reader = new_JavaIoInputStreamReader_initWithJavaIoInputStream_([new_JavaNetURL_initWithNSString_([source getURI]) openStream]);
    return new_ComSteadystateCssParserCssCharStream_initWithJavaIoReader_withInt_withInt_(reader, 1, 1);
  }
  return nil;
}


#line 779
jint ComSteadystateCssParserAbstractSACParser_hexvalWithChar_(jchar c) {
  ComSteadystateCssParserAbstractSACParser_initialize();
  
#line 780
  switch (c) {
    case '0':
    return 0;
    case '1':
    return 1;
    case '2':
    return 2;
    case '3':
    return 3;
    case '4':
    return 4;
    case '5':
    return 5;
    case '6':
    return 6;
    case '7':
    return 7;
    case '8':
    return 8;
    case '9':
    return 9;
    
#line 802
    case 'a':
    case 'A':
    return 10;
    case 'b':
    case 'B':
    return 11;
    case 'c':
    case 'C':
    return 12;
    case 'd':
    case 'D':
    return 13;
    case 'e':
    case 'E':
    return 14;
    case 'f':
    case 'F':
    return 15;
    default:
    return -1;
  }
}

void ComSteadystateCssParserAbstractSACParser_init(ComSteadystateCssParserAbstractSACParser *self) {
  (void) NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSteadystateCssParserAbstractSACParser)
