//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/cssparser/com/steadystate/css/parser/ParseException.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ParseException.h"
#include "Token.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/cssparser/com/steadystate/css/parser/ParseException.java"

#define ComSteadystateCssParserParseException_serialVersionUID 1LL

@interface ComSteadystateCssParserParseException ()

/**
 @brief It uses "currentToken" and "expectedTokenSequences" to generate a parse error message and returns it.
 If this object has been created due to a parse error, and you do not catch it (it gets thrown from the parser) the correct error message gets displayed.
 */
+ (NSString *)initialiseWithComSteadystateCssParserToken:(ComSteadystateCssParserToken *)currentToken
                                           withIntArray2:(IOSObjectArray *)expectedTokenSequences
                                       withNSStringArray:(IOSObjectArray *)tokenImage OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_FIELD_GETTER(ComSteadystateCssParserParseException, serialVersionUID, jlong)

__attribute__((unused)) static NSString *ComSteadystateCssParserParseException_initialiseWithComSteadystateCssParserToken_withIntArray2_withNSStringArray_(ComSteadystateCssParserToken *currentToken, IOSObjectArray *expectedTokenSequences, IOSObjectArray *tokenImage);


#line 14
@implementation ComSteadystateCssParserParseException


#line 29
- (instancetype)initWithComSteadystateCssParserToken:(ComSteadystateCssParserToken *)currentTokenVal
                                       withIntArray2:(IOSObjectArray *)expectedTokenSequencesVal
                                   withNSStringArray:(IOSObjectArray *)tokenImageVal {
  ComSteadystateCssParserParseException_initWithComSteadystateCssParserToken_withIntArray2_withNSStringArray_(self, currentTokenVal, expectedTokenSequencesVal, tokenImageVal);
  return self;
}


#line 50
- (instancetype)init {
  ComSteadystateCssParserParseException_init(self);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message {
  ComSteadystateCssParserParseException_initWithNSString_(self, message);
  return self;
}


#line 88
+ (NSString *)initialiseWithComSteadystateCssParserToken:(ComSteadystateCssParserToken *)currentToken
                                           withIntArray2:(IOSObjectArray *)expectedTokenSequences
                                       withNSStringArray:(IOSObjectArray *)tokenImage {
  return ComSteadystateCssParserParseException_initialiseWithComSteadystateCssParserToken_withIntArray2_withNSStringArray_(currentToken, expectedTokenSequences, tokenImage);
}


#line 141
+ (NSString *)add_escapesWithNSString:(NSString *)str {
  return ComSteadystateCssParserParseException_add_escapesWithNSString_(str);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSteadystateCssParserToken:withIntArray2:withNSStringArray:", "ParseException", NULL, 0x1, NULL, NULL },
    { "init", "ParseException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "ParseException", NULL, 0x1, NULL, NULL },
    { "initialiseWithComSteadystateCssParserToken:withIntArray2:withNSStringArray:", "initialise", "Ljava.lang.String;", 0xa, NULL, NULL },
    { "add_escapesWithNSString:", "add_escapes", "Ljava.lang.String;", 0x8, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = ComSteadystateCssParserParseException_serialVersionUID },
    { "currentToken_", NULL, 0x1, "Lcom.steadystate.css.parser.Token;", NULL, NULL,  },
    { "expectedTokenSequences_", NULL, 0x1, "[[I", NULL, NULL,  },
    { "tokenImage_", NULL, 0x1, "[Ljava.lang.String;", NULL, NULL,  },
    { "eol_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComSteadystateCssParserParseException = { 2, "ParseException", "com.steadystate.css.parser", NULL, 0x1, 5, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSteadystateCssParserParseException;
}

@end


#line 29
void ComSteadystateCssParserParseException_initWithComSteadystateCssParserToken_withIntArray2_withNSStringArray_(ComSteadystateCssParserParseException *self, ComSteadystateCssParserToken *currentTokenVal, IOSObjectArray *expectedTokenSequencesVal, IOSObjectArray *tokenImageVal) {
  (void) JavaLangException_initWithNSString_(self, ComSteadystateCssParserParseException_initialiseWithComSteadystateCssParserToken_withIntArray2_withNSStringArray_(
#line 34
  currentTokenVal, expectedTokenSequencesVal, tokenImageVal));
  self->eol_ = JavaLangSystem_getPropertyWithNSString_withNSString_(
#line 134
  @"line.separator", @"\n");
  
#line 35
  self->currentToken_ = currentTokenVal;
  self->expectedTokenSequences_ = expectedTokenSequencesVal;
  self->tokenImage_ = tokenImageVal;
}


#line 29
ComSteadystateCssParserParseException *new_ComSteadystateCssParserParseException_initWithComSteadystateCssParserToken_withIntArray2_withNSStringArray_(ComSteadystateCssParserToken *currentTokenVal, IOSObjectArray *expectedTokenSequencesVal, IOSObjectArray *tokenImageVal) {
  ComSteadystateCssParserParseException *self = [ComSteadystateCssParserParseException alloc];
  ComSteadystateCssParserParseException_initWithComSteadystateCssParserToken_withIntArray2_withNSStringArray_(self, currentTokenVal, expectedTokenSequencesVal, tokenImageVal);
  return self;
}


#line 50
void ComSteadystateCssParserParseException_init(ComSteadystateCssParserParseException *self) {
  (void) JavaLangException_init(self);
  self->eol_ = JavaLangSystem_getPropertyWithNSString_withNSString_(
#line 134
  @"line.separator", @"\n");
}


#line 50
ComSteadystateCssParserParseException *new_ComSteadystateCssParserParseException_init() {
  ComSteadystateCssParserParseException *self = [ComSteadystateCssParserParseException alloc];
  ComSteadystateCssParserParseException_init(self);
  return self;
}


#line 55
void ComSteadystateCssParserParseException_initWithNSString_(ComSteadystateCssParserParseException *self, NSString *message) {
  (void) JavaLangException_initWithNSString_(self, message);
  self->eol_ = JavaLangSystem_getPropertyWithNSString_withNSString_(
#line 134
  @"line.separator", @"\n");
}


#line 55
ComSteadystateCssParserParseException *new_ComSteadystateCssParserParseException_initWithNSString_(NSString *message) {
  ComSteadystateCssParserParseException *self = [ComSteadystateCssParserParseException alloc];
  ComSteadystateCssParserParseException_initWithNSString_(self, message);
  return self;
}


#line 88
NSString *ComSteadystateCssParserParseException_initialiseWithComSteadystateCssParserToken_withIntArray2_withNSStringArray_(ComSteadystateCssParserToken *currentToken, IOSObjectArray *expectedTokenSequences, IOSObjectArray *tokenImage) {
  ComSteadystateCssParserParseException_initialize();
  
#line 91
  NSString *eol = JavaLangSystem_getPropertyWithNSString_withNSString_(@"line.separator", @"\n");
  JavaLangStringBuffer *expected = new_JavaLangStringBuffer_init();
  jint maxSize = 0;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(expectedTokenSequences))->size_; i++) {
    if (maxSize < ((IOSIntArray *) nil_chk(IOSObjectArray_Get(expectedTokenSequences, i)))->size_) {
      maxSize = ((IOSIntArray *) nil_chk(IOSObjectArray_Get(expectedTokenSequences, i)))->size_;
    }
    for (jint j = 0; j < ((IOSIntArray *) nil_chk(IOSObjectArray_Get(expectedTokenSequences, i)))->size_; j++) {
      (void) [((JavaLangStringBuffer *) nil_chk([expected appendWithNSString:IOSObjectArray_Get(nil_chk(tokenImage), IOSIntArray_Get(nil_chk(IOSObjectArray_Get(expectedTokenSequences, i)), j))])) appendWithChar:' '];
    }
    if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(expectedTokenSequences, i)), ((IOSIntArray *) nil_chk(IOSObjectArray_Get(expectedTokenSequences, i)))->size_ - 1) != 0) {
      (void) [expected appendWithNSString:@"..."];
    }
    (void) [((JavaLangStringBuffer *) nil_chk([expected appendWithNSString:eol])) appendWithNSString:@"    "];
  }
  NSString *retval = @"Encountered \"";
  ComSteadystateCssParserToken *tok = ((ComSteadystateCssParserToken *) nil_chk(currentToken))->next_;
  for (jint i = 0; i < maxSize; i++) {
    if (i != 0) retval = JreStrcat("$C", retval, ' ');
    if (((ComSteadystateCssParserToken *) nil_chk(tok))->kind_ == 0) {
      retval = JreStrcat("$$", retval, IOSObjectArray_Get(nil_chk(tokenImage), 0));
      break;
    }
    retval = JreStrcat("$$", retval, JreStrcat("C$", ' ', IOSObjectArray_Get(nil_chk(tokenImage), tok->kind_)));
    retval = JreStrcat("$$", retval, @" \"");
    retval = JreStrcat("$$", retval, ComSteadystateCssParserParseException_add_escapesWithNSString_(tok->image_));
    retval = JreStrcat("$$", retval, @" \"");
    tok = tok->next_;
  }
  retval = JreStrcat("$$", retval, JreStrcat("$I$I", @"\" at line ", ((ComSteadystateCssParserToken *) nil_chk(currentToken->next_))->beginLine_, @", column ", currentToken->next_->beginColumn_));
  retval = JreStrcat("$$", retval, JreStrcat("C$", '.', eol));
  if (expectedTokenSequences->size_ == 1) {
    retval = JreStrcat("$$", retval, JreStrcat("$$$", @"Was expecting:", eol, @"    "));
  }
  else {
    
#line 125
    retval = JreStrcat("$$", retval, JreStrcat("$$$", @"Was expecting one of:", eol, @"    "));
  }
  retval = JreStrcat("$$", retval, [expected description]);
  return retval;
}


#line 141
NSString *ComSteadystateCssParserParseException_add_escapesWithNSString_(NSString *str) {
  ComSteadystateCssParserParseException_initialize();
  
#line 142
  JavaLangStringBuffer *retval = new_JavaLangStringBuffer_init();
  jchar ch;
  for (jint i = 0; i < ((jint) [((NSString *) nil_chk(str)) length]); i++) {
    switch ([str charAtWithInt:i]) {
      
#line 147
      case 0:
      continue;
      case 0x0008:
      (void) [retval appendWithNSString:@"\\b"];
      continue;
      case 0x0009:
      (void) [retval appendWithNSString:@"\\t"];
      continue;
      case 0x000a:
      (void) [retval appendWithNSString:@"\\n"];
      continue;
      case 0x000c:
      (void) [retval appendWithNSString:@"\\f"];
      continue;
      case 0x000d:
      (void) [retval appendWithNSString:@"\\r"];
      continue;
      case '"':
      (void) [retval appendWithNSString:@"\\\""];
      continue;
      case '\'':
      (void) [retval appendWithNSString:@"\\'"];
      continue;
      case '\\':
      (void) [retval appendWithNSString:@"\\\\"];
      continue;
      default:
      if ((ch = [str charAtWithInt:i]) < (jint) 0x20 || ch > (jint) 0x7e) {
        NSString *s = JreStrcat("$$", @"0000", JavaLangInteger_toStringWithInt_withInt_(ch, 16));
        (void) [retval appendWithNSString:JreStrcat("$$", @"\\u", [s substring:((jint) [s length]) - 4 endIndex:((jint) [s length])])];
      }
      else {
        
#line 178
        (void) [retval appendWithChar:ch];
      }
      continue;
    }
  }
  return [retval description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSteadystateCssParserParseException)
