//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/htmlparser/org/ccil/cowan/tagsoup/XMLWriter.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "XMLWriter.h"
#include "java/io/IOException.h"
#include "java/io/OutputStreamWriter.h"
#include "java/io/PrintStream.h"
#include "java/io/Writer.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"
#include "java/util/Properties.h"
#include "org/xml/sax/Attributes.h"
#include "org/xml/sax/SAXException.h"
#include "org/xml/sax/XMLReader.h"
#include "org/xml/sax/helpers/AttributesImpl.h"
#include "org/xml/sax/helpers/NamespaceSupport.h"
#include "org/xml/sax/helpers/XMLFilterImpl.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/htmlparser/org/ccil/cowan/tagsoup/XMLWriter.java"

@interface OrgCcilCowanTagsoupXMLWriter () {
 @public
  IOSObjectArray *booleans_;
  id<OrgXmlSaxAttributes> EMPTY_ATTS_;
  JavaUtilHashtable *prefixTable_;
  JavaUtilHashtable *forcedDeclTable_;
  JavaUtilHashtable *doneDeclTable_;
  jint elementLevel_;
  JavaIoWriter *output_;
  OrgXmlSaxHelpersNamespaceSupport *nsSupport_;
  jint prefixCounter_;
  JavaUtilProperties *outputProperties_;
  jboolean unicodeMode_;
  NSString *outputEncoding_;
  jboolean htmlMode_;
  jboolean forceDTD_;
  jboolean hasOutputDTD_;
  NSString *overridePublic_;
  NSString *overrideSystem_;
  NSString *version__;
  NSString *standalone_;
  jboolean cdataElement_;
}

/**
 @brief Internal initialization method.
 <p>All of the public constructors invoke this method.
 @param writer The output destination, or null to use standard output.
 */
- (void)init__WithJavaIoWriter:(JavaIoWriter *)writer OBJC_METHOD_FAMILY_NONE;

/**
 @brief Force all Namespaces to be declared.
 This method is used on the root element to ensure that the predeclared Namespaces all appear.
 */
- (void)forceNSDecls;

/**
 @brief Determine the prefix for an element or attribute name.
 TODO: this method probably needs some cleanup.
 @param uri The Namespace URI.
 @param qName The qualified name (optional); this will be used to indicate the preferred prefix if none is currently bound.
 @param isElement true if this is an element name, false if it is an attribute name (which cannot use the default Namespace).
 */
- (NSString *)doPrefixWithNSString:(NSString *)uri
                      withNSString:(NSString *)qName
                       withBoolean:(jboolean)isElement;

/**
 @brief Write a raw character.
 @param c The character to write.
 @exception org.xml.sax.SAXException If there is an error writing the character, this method will throw an IOException wrapped in a SAXException.
 */
- (void)writeWithChar:(jchar)c;

/**
 @brief Write a raw string.
 @param s
 @exception org.xml.sax.SAXException If there is an error writing the string, this method will throw an IOException wrapped in a SAXException
 */
- (void)writeWithNSString:(NSString *)s;

/**
 @brief Write out an attribute list, escaping values.
 The names will have prefixes added to them.
 @param atts The attribute list to write.
 @exception org.xml.SAXException If there is an error writing the attribute list, this method will throw an IOException wrapped in a SAXException.
 */
- (void)writeAttributesWithOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)atts;

- (jboolean)booleanAttributeWithNSString:(NSString *)localName
                            withNSString:(NSString *)qName
                            withNSString:(NSString *)value;

/**
 @brief Write an array of data characters with escaping.
 @param ch The array of characters.
 @param start The starting position.
 @param length The number of characters to use.
 @param isAttVal true if this is an attribute value literal.
 @exception org.xml.SAXException If there is an error writing the characters, this method will throw an IOException wrapped in a SAXException.
 */
- (void)writeEscWithCharArray:(IOSCharArray *)ch
                      withInt:(jint)start
                      withInt:(jint)length
                  withBoolean:(jboolean)isAttVal;

/**
 @brief Write out the list of Namespace declarations.
 @exception org.xml.sax.SAXException This method will throw an IOException wrapped in a SAXException if there is an error writing the Namespace declarations.
 */
- (void)writeNSDecls;

/**
 @brief Write an element or attribute name.
 @param uri The Namespace URI.
 @param localName The local name.
 @param qName The prefixed name, if available, or the empty string.
 @param isElement true if this is an element name, false if it is an attribute name.
 @exception org.xml.sax.SAXException This method will throw an IOException wrapped in a SAXException if there is an error writing the name.
 */
- (void)writeNameWithNSString:(NSString *)uri
                 withNSString:(NSString *)localName
                 withNSString:(NSString *)qName
                  withBoolean:(jboolean)isElement;

@end

J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, booleans_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, EMPTY_ATTS_, id<OrgXmlSaxAttributes>)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, prefixTable_, JavaUtilHashtable *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, forcedDeclTable_, JavaUtilHashtable *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, doneDeclTable_, JavaUtilHashtable *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, output_, JavaIoWriter *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, nsSupport_, OrgXmlSaxHelpersNamespaceSupport *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, outputProperties_, JavaUtilProperties *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, outputEncoding_, NSString *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, overridePublic_, NSString *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, overrideSystem_, NSString *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, version__, NSString *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupXMLWriter, standalone_, NSString *)

__attribute__((unused)) static void OrgCcilCowanTagsoupXMLWriter_init__WithJavaIoWriter_(OrgCcilCowanTagsoupXMLWriter *self, JavaIoWriter *writer);

__attribute__((unused)) static void OrgCcilCowanTagsoupXMLWriter_forceNSDecls(OrgCcilCowanTagsoupXMLWriter *self);

__attribute__((unused)) static NSString *OrgCcilCowanTagsoupXMLWriter_doPrefixWithNSString_withNSString_withBoolean_(OrgCcilCowanTagsoupXMLWriter *self, NSString *uri, NSString *qName, jboolean isElement);

__attribute__((unused)) static void OrgCcilCowanTagsoupXMLWriter_writeWithChar_(OrgCcilCowanTagsoupXMLWriter *self, jchar c);

__attribute__((unused)) static void OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(OrgCcilCowanTagsoupXMLWriter *self, NSString *s);

__attribute__((unused)) static void OrgCcilCowanTagsoupXMLWriter_writeAttributesWithOrgXmlSaxAttributes_(OrgCcilCowanTagsoupXMLWriter *self, id<OrgXmlSaxAttributes> atts);

__attribute__((unused)) static jboolean OrgCcilCowanTagsoupXMLWriter_booleanAttributeWithNSString_withNSString_withNSString_(OrgCcilCowanTagsoupXMLWriter *self, NSString *localName, NSString *qName, NSString *value);

__attribute__((unused)) static void OrgCcilCowanTagsoupXMLWriter_writeEscWithCharArray_withInt_withInt_withBoolean_(OrgCcilCowanTagsoupXMLWriter *self, IOSCharArray *ch, jint start, jint length, jboolean isAttVal);

__attribute__((unused)) static void OrgCcilCowanTagsoupXMLWriter_writeNSDecls(OrgCcilCowanTagsoupXMLWriter *self);

__attribute__((unused)) static void OrgCcilCowanTagsoupXMLWriter_writeNameWithNSString_withNSString_withNSString_withBoolean_(OrgCcilCowanTagsoupXMLWriter *self, NSString *uri, NSString *localName, NSString *qName, jboolean isElement);

NSString *OrgCcilCowanTagsoupXMLWriter_CDATA_SECTION_ELEMENTS_ = 
#line 1397
@"cdata-section-elements";
NSString *OrgCcilCowanTagsoupXMLWriter_DOCTYPE_PUBLIC_ = 
#line 1398
@"doctype-public";
NSString *OrgCcilCowanTagsoupXMLWriter_DOCTYPE_SYSTEM_ = 
#line 1399
@"doctype-system";
NSString *OrgCcilCowanTagsoupXMLWriter_ENCODING_ = 
#line 1400
@"encoding";
NSString *OrgCcilCowanTagsoupXMLWriter_INDENT_ = 
#line 1401
@"indent";
NSString *OrgCcilCowanTagsoupXMLWriter_MEDIA_TYPE_ = 
#line 1402
@"media-type";
NSString *OrgCcilCowanTagsoupXMLWriter_METHOD_ = 
#line 1403
@"method";
NSString *OrgCcilCowanTagsoupXMLWriter_OMIT_XML_DECLARATION_ = 
#line 1404
@"omit-xml-declaration";
NSString *OrgCcilCowanTagsoupXMLWriter_STANDALONE_ = 
#line 1405
@"standalone";
NSString *OrgCcilCowanTagsoupXMLWriter_VERSION_ = 
#line 1406
@"version";


#line 252
@implementation OrgCcilCowanTagsoupXMLWriter


#line 266
- (instancetype)init {
  OrgCcilCowanTagsoupXMLWriter_init(self);
  return self;
}


#line 280
- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)writer {
  OrgCcilCowanTagsoupXMLWriter_initWithJavaIoWriter_(self, writer);
  return self;
}


#line 294
- (instancetype)initWithOrgXmlSaxXMLReader:(id<OrgXmlSaxXMLReader>)xmlreader {
  OrgCcilCowanTagsoupXMLWriter_initWithOrgXmlSaxXMLReader_(self, xmlreader);
  return self;
}


#line 312
- (instancetype)initWithOrgXmlSaxXMLReader:(id<OrgXmlSaxXMLReader>)xmlreader
                          withJavaIoWriter:(JavaIoWriter *)writer {
  OrgCcilCowanTagsoupXMLWriter_initWithOrgXmlSaxXMLReader_withJavaIoWriter_(self, xmlreader, writer);
  return self;
}


#line 327
- (void)init__WithJavaIoWriter:(JavaIoWriter *)writer {
  OrgCcilCowanTagsoupXMLWriter_init__WithJavaIoWriter_(self, writer);
}


#line 363
- (void)reset {
  
#line 365
  elementLevel_ = 0;
  prefixCounter_ = 0;
  [((OrgXmlSaxHelpersNamespaceSupport *) nil_chk(nsSupport_)) reset];
}


#line 385
- (void)flush {
  
#line 388
  [((JavaIoWriter *) nil_chk(output_)) flush];
}


#line 400
- (void)setOutputWithJavaIoWriter:(JavaIoWriter *)writer {
  
#line 402
  if (writer == nil) {
    output_ = new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_(JavaLangSystem_get_out_());
  }
  else {
    
#line 405
    output_ = writer;
  }
}


#line 424
- (void)setPrefixWithNSString:(NSString *)uri
                 withNSString:(NSString *)prefix {
  
#line 426
  (void) [((JavaUtilHashtable *) nil_chk(prefixTable_)) putWithId:uri withId:prefix];
}


#line 437
- (NSString *)getPrefixWithNSString:(NSString *)uri {
  
#line 439
  return (NSString *) check_class_cast([((JavaUtilHashtable *) nil_chk(prefixTable_)) getWithId:uri], [NSString class]);
}


#line 459
- (void)forceNSDeclWithNSString:(NSString *)uri {
  
#line 461
  (void) [((JavaUtilHashtable *) nil_chk(forcedDeclTable_)) putWithId:uri withId:JavaLangBoolean_get_TRUE__()];
}


#line 478
- (void)forceNSDeclWithNSString:(NSString *)uri
                   withNSString:(NSString *)prefix {
  
#line 480
  [self setPrefixWithNSString:uri withNSString:prefix];
  [self forceNSDeclWithNSString:uri];
}


#line 501
- (void)startDocument {
  
#line 504
  [self reset];
  if (!([@"yes" isEqual:[((JavaUtilProperties *) nil_chk(outputProperties_)) getPropertyWithNSString:OrgCcilCowanTagsoupXMLWriter_OMIT_XML_DECLARATION_ withNSString:@"no"]])) {
    OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"<?xml");
    if (version__ == nil) {
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @" version=\"1.0\"");
    }
    else {
      
#line 510
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @" version=\"");
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, version__);
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"\"");
    }
    if (outputEncoding_ != nil && ![@"" isEqual:outputEncoding_]) {
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @" encoding=\"");
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, outputEncoding_);
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"\"");
    }
    if (standalone_ == nil) {
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @" standalone=\"yes\"?>\n");
    }
    else {
      
#line 522
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @" standalone=\"");
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, standalone_);
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"\"");
    }
  }
  [super startDocument];
}


#line 541
- (void)endDocument {
  
#line 544
  OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, 0x000a);
  [super endDocument];
  @try {
    [self flush];
  }
  @catch (
#line 548
  JavaIoIOException *e) {
    @throw new_OrgXmlSaxSAXException_initWithJavaLangException_(e);
  }
}


#line 573
- (void)startElementWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)qName
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)atts {
  
#line 577
  elementLevel_++;
  [((OrgXmlSaxHelpersNamespaceSupport *) nil_chk(nsSupport_)) pushContext];
  if (forceDTD_ && !hasOutputDTD_) [self startDTDWithNSString:localName == nil ? qName : localName withNSString:@"" withNSString:@""];
  OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, '<');
  OrgCcilCowanTagsoupXMLWriter_writeNameWithNSString_withNSString_withNSString_withBoolean_(self, uri, localName, qName, YES);
  OrgCcilCowanTagsoupXMLWriter_writeAttributesWithOrgXmlSaxAttributes_(self, atts);
  if (elementLevel_ == 1) {
    OrgCcilCowanTagsoupXMLWriter_forceNSDecls(self);
  }
  OrgCcilCowanTagsoupXMLWriter_writeNSDecls(self);
  OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, '>');
  
#line 589
  if (htmlMode_ && ([((NSString *) nil_chk(qName)) isEqual:@"script"] || [qName isEqual:@"style"])) {
    cdataElement_ = YES;
  }
  
#line 593
  [super startElementWithNSString:uri withNSString:localName withNSString:qName withOrgXmlSaxAttributes:atts];
}


#line 615
- (void)endElementWithNSString:(NSString *)uri
                  withNSString:(NSString *)localName
                  withNSString:(NSString *)qName {
  
#line 618
  if (!(htmlMode_ &&
#line 619
  ([((NSString *) nil_chk(uri)) isEqual:@"http://www.w3.org/1999/xhtml"] ||
#line 620
  [uri isEqual:@""]) &&
#line 621
  ([((NSString *) nil_chk(qName)) isEqual:@"area"] || [qName isEqual:@"base"] ||
#line 622
  [qName isEqual:@"basefont"] || [qName isEqual:@"br"] ||
#line 623
  [qName isEqual:@"col"] || [qName isEqual:@"frame"] ||
#line 624
  [qName isEqual:@"hr"] || [qName isEqual:@"img"] ||
#line 625
  [qName isEqual:@"input"] || [qName isEqual:@"isindex"] ||
#line 626
  [qName isEqual:@"link"] || [qName isEqual:@"meta"] ||
#line 627
  [qName isEqual:@"param"]))) {
    OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"</");
    OrgCcilCowanTagsoupXMLWriter_writeNameWithNSString_withNSString_withNSString_withBoolean_(self, uri, localName, qName, YES);
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, '>');
  }
  if (elementLevel_ == 1) {
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, 0x000a);
  }
  cdataElement_ = NO;
  [super endElementWithNSString:uri withNSString:localName withNSString:qName];
  [((OrgXmlSaxHelpersNamespaceSupport *) nil_chk(nsSupport_)) popContext];
  elementLevel_--;
}


#line 655
- (void)charactersWithCharArray:(IOSCharArray *)ch
                        withInt:(jint)start
                        withInt:(jint)len {
  
#line 658
  if (!cdataElement_) {
    OrgCcilCowanTagsoupXMLWriter_writeEscWithCharArray_withInt_withInt_withBoolean_(self, ch, start, len, NO);
  }
  else {
    for (jint i = start; i < start + len; i++) {
      OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, IOSCharArray_Get(nil_chk(ch), i));
    }
  }
  [super charactersWithCharArray:ch withInt:start withInt:len];
}


#line 683
- (void)ignorableWhitespaceWithCharArray:(IOSCharArray *)ch
                                 withInt:(jint)start
                                 withInt:(jint)length {
  
#line 686
  OrgCcilCowanTagsoupXMLWriter_writeEscWithCharArray_withInt_withInt_withBoolean_(self, ch, start, length, NO);
  [super ignorableWhitespaceWithCharArray:ch withInt:start withInt:length];
}


#line 704
- (void)processingInstructionWithNSString:(NSString *)target
                             withNSString:(NSString *)data {
  
#line 707
  OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"<?");
  OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, target);
  OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, ' ');
  OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, data);
  OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"?>");
  if (elementLevel_ < 1) {
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, 0x000a);
  }
  [super processingInstructionWithNSString:target withNSString:data];
}


#line 748
- (void)emptyElementWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)qName
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)atts {
  
#line 752
  [((OrgXmlSaxHelpersNamespaceSupport *) nil_chk(nsSupport_)) pushContext];
  OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, '<');
  OrgCcilCowanTagsoupXMLWriter_writeNameWithNSString_withNSString_withNSString_withBoolean_(self, uri, localName, qName, YES);
  OrgCcilCowanTagsoupXMLWriter_writeAttributesWithOrgXmlSaxAttributes_(self, atts);
  if (elementLevel_ == 1) {
    OrgCcilCowanTagsoupXMLWriter_forceNSDecls(self);
  }
  OrgCcilCowanTagsoupXMLWriter_writeNSDecls(self);
  OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"/>");
  [super startElementWithNSString:uri withNSString:localName withNSString:qName withOrgXmlSaxAttributes:atts];
  [super endElementWithNSString:uri withNSString:localName withNSString:qName];
}


#line 789
- (void)startElementWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName {
  
#line 792
  [self startElementWithNSString:uri withNSString:localName withNSString:@"" withOrgXmlSaxAttributes:EMPTY_ATTS_];
}


#line 811
- (void)startElementWithNSString:(NSString *)localName {
  
#line 814
  [self startElementWithNSString:@"" withNSString:localName withNSString:@"" withOrgXmlSaxAttributes:EMPTY_ATTS_];
}


#line 832
- (void)endElementWithNSString:(NSString *)uri
                  withNSString:(NSString *)localName {
  
#line 835
  [self endElementWithNSString:uri withNSString:localName withNSString:@""];
}


#line 853
- (void)endElementWithNSString:(NSString *)localName {
  
#line 856
  [self endElementWithNSString:@"" withNSString:localName withNSString:@""];
}


#line 875
- (void)emptyElementWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName {
  
#line 878
  [self emptyElementWithNSString:uri withNSString:localName withNSString:@"" withOrgXmlSaxAttributes:EMPTY_ATTS_];
}


#line 897
- (void)emptyElementWithNSString:(NSString *)localName {
  
#line 900
  [self emptyElementWithNSString:@"" withNSString:localName withNSString:@"" withOrgXmlSaxAttributes:EMPTY_ATTS_];
}


#line 929
- (void)dataElementWithNSString:(NSString *)uri
                   withNSString:(NSString *)localName
                   withNSString:(NSString *)qName
        withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)atts
                   withNSString:(NSString *)content {
  
#line 934
  [self startElementWithNSString:uri withNSString:localName withNSString:qName withOrgXmlSaxAttributes:atts];
  [self charactersWithNSString:content];
  [self endElementWithNSString:uri withNSString:localName withNSString:qName];
}


#line 964
- (void)dataElementWithNSString:(NSString *)uri
                   withNSString:(NSString *)localName
                   withNSString:(NSString *)content {
  
#line 967
  [self dataElementWithNSString:uri withNSString:localName withNSString:@"" withOrgXmlSaxAttributes:EMPTY_ATTS_ withNSString:content];
}


#line 995
- (void)dataElementWithNSString:(NSString *)localName
                   withNSString:(NSString *)content {
  
#line 998
  [self dataElementWithNSString:@"" withNSString:localName withNSString:@"" withOrgXmlSaxAttributes:EMPTY_ATTS_ withNSString:content];
}


#line 1015
- (void)charactersWithNSString:(NSString *)data {
  
#line 1018
  IOSCharArray *ch = [((NSString *) nil_chk(data)) toCharArray];
  [self charactersWithCharArray:ch withInt:0 withInt:((IOSCharArray *) nil_chk(ch))->size_];
}


#line 1035
- (void)forceNSDecls {
  OrgCcilCowanTagsoupXMLWriter_forceNSDecls(self);
}


#line 1058
- (NSString *)doPrefixWithNSString:(NSString *)uri
                      withNSString:(NSString *)qName
                       withBoolean:(jboolean)isElement {
  return OrgCcilCowanTagsoupXMLWriter_doPrefixWithNSString_withNSString_withBoolean_(self, uri, qName, isElement);
}


#line 1117
- (void)writeWithChar:(jchar)c {
  OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, c);
}


#line 1136
- (void)writeWithNSString:(NSString *)s {
  OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, s);
}


#line 1157
- (void)writeAttributesWithOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)atts {
  OrgCcilCowanTagsoupXMLWriter_writeAttributesWithOrgXmlSaxAttributes_(self, atts);
}


#line 1181
- (jboolean)booleanAttributeWithNSString:(NSString *)localName
                            withNSString:(NSString *)qName
                            withNSString:(NSString *)value {
  return OrgCcilCowanTagsoupXMLWriter_booleanAttributeWithNSString_withNSString_withNSString_(self, localName, qName, value);
}


#line 1206
- (void)writeEscWithCharArray:(IOSCharArray *)ch
                      withInt:(jint)start
                      withInt:(jint)length
                  withBoolean:(jboolean)isAttVal {
  OrgCcilCowanTagsoupXMLWriter_writeEscWithCharArray_withInt_withInt_withBoolean_(self, ch, start, length, isAttVal);
}


#line 1249
- (void)writeNSDecls {
  OrgCcilCowanTagsoupXMLWriter_writeNSDecls(self);
}


#line 1286
- (void)writeNameWithNSString:(NSString *)uri
                 withNSString:(NSString *)localName
                 withNSString:(NSString *)qName
                  withBoolean:(jboolean)isElement {
  OrgCcilCowanTagsoupXMLWriter_writeNameWithNSString_withNSString_withNSString_withBoolean_(self, uri, localName, qName, isElement);
}


#line 1309
- (void)commentWithCharArray:(IOSCharArray *)ch
                     withInt:(jint)start
                     withInt:(jint)length {
  
#line 1311
  OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"<!--");
  for (jint i = start; i < start + length; i++) {
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, IOSCharArray_Get(nil_chk(ch), i));
    if (IOSCharArray_Get(ch, i) == '-' && i + 1 <= start + length && IOSCharArray_Get(ch, i + 1) == '-')
#line 1315
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, ' ');
  }
  OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"-->");
}


#line 1320
- (void)endCDATA {
}


#line 1321
- (void)endDTD {
}


#line 1322
- (void)endEntityWithNSString:(NSString *)name {
}


#line 1323
- (void)startCDATA {
}


#line 1324
- (void)startDTDWithNSString:(NSString *)name
                withNSString:(NSString *)publicid
                withNSString:(NSString *)systemid {
  if (name == nil) return;
  if (hasOutputDTD_) return;
  hasOutputDTD_ = YES;
  OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"<!DOCTYPE ");
  OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, name);
  if (systemid == nil) systemid = @"";
  if (overrideSystem_ != nil) systemid = overrideSystem_;
  jchar sysquote = ([((NSString *) nil_chk(systemid)) indexOf:'"'] != -1) ? '\'' : '"';
  if (overridePublic_ != nil) publicid = overridePublic_;
  if (!(publicid == nil || [@"" isEqual:publicid])) {
    jchar pubquote = ([((NSString *) nil_chk(publicid)) indexOf:'"'] != -1) ? '\'' : '"';
    OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @" PUBLIC ");
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, pubquote);
    OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, publicid);
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, pubquote);
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, ' ');
  }
  else {
    OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @" SYSTEM ");
  }
  OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, sysquote);
  OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, systemid);
  OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, sysquote);
  OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @">\n");
}


#line 1351
- (void)startEntityWithNSString:(NSString *)name {
}


#line 1358
- (NSString *)getOutputPropertyWithNSString:(NSString *)key {
  return [((JavaUtilProperties *) nil_chk(outputProperties_)) getPropertyWithNSString:key];
}

- (void)setOutputPropertyWithNSString:(NSString *)key
                         withNSString:(NSString *)value {
  (void) [((JavaUtilProperties *) nil_chk(outputProperties_)) setPropertyWithNSString:key withNSString:value];
  
#line 1365
  if ([((NSString *) nil_chk(key)) isEqual:OrgCcilCowanTagsoupXMLWriter_ENCODING_]) {
    outputEncoding_ = value;
    unicodeMode_ = [((NSString *) nil_chk([((NSString *) nil_chk(value)) substring:0 endIndex:3])) equalsIgnoreCase:@"utf"];
  }
  else
#line 1370
  if ([key isEqual:OrgCcilCowanTagsoupXMLWriter_METHOD_]) {
    htmlMode_ = [((NSString *) nil_chk(value)) isEqual:@"html"];
  }
  else if ([key isEqual:OrgCcilCowanTagsoupXMLWriter_DOCTYPE_PUBLIC_]) {
    overridePublic_ = value;
    forceDTD_ = YES;
  }
  else if ([key isEqual:OrgCcilCowanTagsoupXMLWriter_DOCTYPE_SYSTEM_]) {
    overrideSystem_ = value;
    forceDTD_ = YES;
  }
  else if ([key isEqual:OrgCcilCowanTagsoupXMLWriter_VERSION_]) {
    version__ = value;
  }
  else if ([key isEqual:OrgCcilCowanTagsoupXMLWriter_STANDALONE_]) {
    standalone_ = value;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "XMLWriter", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoWriter:", "XMLWriter", NULL, 0x1, NULL, NULL },
    { "initWithOrgXmlSaxXMLReader:", "XMLWriter", NULL, 0x1, NULL, NULL },
    { "initWithOrgXmlSaxXMLReader:withJavaIoWriter:", "XMLWriter", NULL, 0x1, NULL, NULL },
    { "init__WithJavaIoWriter:", "init", "V", 0x2, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "setOutputWithJavaIoWriter:", "setOutput", "V", 0x1, NULL, NULL },
    { "setPrefixWithNSString:withNSString:", "setPrefix", "V", 0x1, NULL, NULL },
    { "getPrefixWithNSString:", "getPrefix", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "forceNSDeclWithNSString:", "forceNSDecl", "V", 0x1, NULL, NULL },
    { "forceNSDeclWithNSString:withNSString:", "forceNSDecl", "V", 0x1, NULL, NULL },
    { "startDocument", NULL, "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "endDocument", NULL, "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "startElementWithNSString:withNSString:withNSString:withOrgXmlSaxAttributes:", "startElement", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "endElementWithNSString:withNSString:withNSString:", "endElement", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "charactersWithCharArray:withInt:withInt:", "characters", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "ignorableWhitespaceWithCharArray:withInt:withInt:", "ignorableWhitespace", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "processingInstructionWithNSString:withNSString:", "processingInstruction", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "emptyElementWithNSString:withNSString:withNSString:withOrgXmlSaxAttributes:", "emptyElement", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "startElementWithNSString:withNSString:", "startElement", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "startElementWithNSString:", "startElement", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "endElementWithNSString:withNSString:", "endElement", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "endElementWithNSString:", "endElement", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "emptyElementWithNSString:withNSString:", "emptyElement", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "emptyElementWithNSString:", "emptyElement", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "dataElementWithNSString:withNSString:withNSString:withOrgXmlSaxAttributes:withNSString:", "dataElement", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "dataElementWithNSString:withNSString:withNSString:", "dataElement", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "dataElementWithNSString:withNSString:", "dataElement", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "charactersWithNSString:", "characters", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "forceNSDecls", NULL, "V", 0x2, NULL, NULL },
    { "doPrefixWithNSString:withNSString:withBoolean:", "doPrefix", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "writeWithChar:", "write", "V", 0x2, "Lorg.xml.sax.SAXException;", NULL },
    { "writeWithNSString:", "write", "V", 0x2, "Lorg.xml.sax.SAXException;", NULL },
    { "writeAttributesWithOrgXmlSaxAttributes:", "writeAttributes", "V", 0x2, "Lorg.xml.sax.SAXException;", NULL },
    { "booleanAttributeWithNSString:withNSString:withNSString:", "booleanAttribute", "Z", 0x2, NULL, NULL },
    { "writeEscWithCharArray:withInt:withInt:withBoolean:", "writeEsc", "V", 0x2, "Lorg.xml.sax.SAXException;", NULL },
    { "writeNSDecls", NULL, "V", 0x2, "Lorg.xml.sax.SAXException;", NULL },
    { "writeNameWithNSString:withNSString:withNSString:withBoolean:", "writeName", "V", 0x2, "Lorg.xml.sax.SAXException;", NULL },
    { "commentWithCharArray:withInt:withInt:", "comment", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "endCDATA", NULL, "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "endDTD", NULL, "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "endEntityWithNSString:", "endEntity", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "startCDATA", NULL, "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "startDTDWithNSString:withNSString:withNSString:", "startDTD", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "startEntityWithNSString:", "startEntity", "V", 0x1, "Lorg.xml.sax.SAXException;", NULL },
    { "getOutputPropertyWithNSString:", "getOutputProperty", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setOutputPropertyWithNSString:withNSString:", "setOutputProperty", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "booleans_", NULL, 0x2, "[Ljava.lang.String;", NULL, NULL,  },
    { "EMPTY_ATTS_", NULL, 0x12, "Lorg.xml.sax.Attributes;", NULL, NULL,  },
    { "CDATA_SECTION_ELEMENTS_", NULL, 0x19, "Ljava.lang.String;", &OrgCcilCowanTagsoupXMLWriter_CDATA_SECTION_ELEMENTS_, NULL,  },
    { "DOCTYPE_PUBLIC_", NULL, 0x19, "Ljava.lang.String;", &OrgCcilCowanTagsoupXMLWriter_DOCTYPE_PUBLIC_, NULL,  },
    { "DOCTYPE_SYSTEM_", NULL, 0x19, "Ljava.lang.String;", &OrgCcilCowanTagsoupXMLWriter_DOCTYPE_SYSTEM_, NULL,  },
    { "ENCODING_", NULL, 0x19, "Ljava.lang.String;", &OrgCcilCowanTagsoupXMLWriter_ENCODING_, NULL,  },
    { "INDENT_", NULL, 0x19, "Ljava.lang.String;", &OrgCcilCowanTagsoupXMLWriter_INDENT_, NULL,  },
    { "MEDIA_TYPE_", NULL, 0x19, "Ljava.lang.String;", &OrgCcilCowanTagsoupXMLWriter_MEDIA_TYPE_, NULL,  },
    { "METHOD_", NULL, 0x19, "Ljava.lang.String;", &OrgCcilCowanTagsoupXMLWriter_METHOD_, NULL,  },
    { "OMIT_XML_DECLARATION_", NULL, 0x19, "Ljava.lang.String;", &OrgCcilCowanTagsoupXMLWriter_OMIT_XML_DECLARATION_, NULL,  },
    { "STANDALONE_", NULL, 0x19, "Ljava.lang.String;", &OrgCcilCowanTagsoupXMLWriter_STANDALONE_, NULL,  },
    { "VERSION_", NULL, 0x19, "Ljava.lang.String;", &OrgCcilCowanTagsoupXMLWriter_VERSION_, NULL,  },
    { "prefixTable_", NULL, 0x2, "Ljava.util.Hashtable;", NULL, NULL,  },
    { "forcedDeclTable_", NULL, 0x2, "Ljava.util.Hashtable;", NULL, NULL,  },
    { "doneDeclTable_", NULL, 0x2, "Ljava.util.Hashtable;", NULL, NULL,  },
    { "elementLevel_", NULL, 0x2, "I", NULL, NULL,  },
    { "output_", NULL, 0x2, "Ljava.io.Writer;", NULL, NULL,  },
    { "nsSupport_", NULL, 0x2, "Lorg.xml.sax.helpers.NamespaceSupport;", NULL, NULL,  },
    { "prefixCounter_", NULL, 0x2, "I", NULL, NULL,  },
    { "outputProperties_", NULL, 0x2, "Ljava.util.Properties;", NULL, NULL,  },
    { "unicodeMode_", NULL, 0x2, "Z", NULL, NULL,  },
    { "outputEncoding_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "htmlMode_", NULL, 0x2, "Z", NULL, NULL,  },
    { "forceDTD_", NULL, 0x2, "Z", NULL, NULL,  },
    { "hasOutputDTD_", NULL, 0x2, "Z", NULL, NULL,  },
    { "overridePublic_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "overrideSystem_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "version__", "version", 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "standalone_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "cdataElement_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgCcilCowanTagsoupXMLWriter = { 2, "XMLWriter", "org.ccil.cowan.tagsoup", NULL, 0x1, 48, methods, 30, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgCcilCowanTagsoupXMLWriter;
}

@end


#line 266
void OrgCcilCowanTagsoupXMLWriter_init(OrgCcilCowanTagsoupXMLWriter *self) {
  (void) OrgXmlSaxHelpersXMLFilterImpl_init(self);
  self->booleans_ = [IOSObjectArray newArrayWithObjects:(id[]){
#line 1175
    @"checked", @"compact", @"declare", @"defer",
#line 1176
    @"disabled", @"ismap", @"multiple",
#line 1177
    @"nohref", @"noresize", @"noshade",
#line 1178
    @"nowrap", @"readonly", @"selected" } count:13 type:NSString_class_()];
    self->EMPTY_ATTS_ = new_OrgXmlSaxHelpersAttributesImpl_init();
    self->elementLevel_ =
#line 1417
    0;
    self->prefixCounter_ =
#line 1420
    0;
    self->unicodeMode_ =
#line 1422
    NO;
    self->outputEncoding_ = @"";
    self->htmlMode_ = NO;
    self->forceDTD_ = NO;
    self->hasOutputDTD_ = NO;
    self->overridePublic_ = nil;
    self->overrideSystem_ = nil;
    self->version__ = nil;
    self->standalone_ = nil;
    self->cdataElement_ = NO;
    
#line 268
    OrgCcilCowanTagsoupXMLWriter_init__WithJavaIoWriter_(self, nil);
  }


#line 266
OrgCcilCowanTagsoupXMLWriter *new_OrgCcilCowanTagsoupXMLWriter_init() {
  OrgCcilCowanTagsoupXMLWriter *self = [OrgCcilCowanTagsoupXMLWriter alloc];
  OrgCcilCowanTagsoupXMLWriter_init(self);
  return self;
}


#line 280
void OrgCcilCowanTagsoupXMLWriter_initWithJavaIoWriter_(OrgCcilCowanTagsoupXMLWriter *self, JavaIoWriter *writer) {
  (void) OrgXmlSaxHelpersXMLFilterImpl_init(self);
  self->booleans_ = [IOSObjectArray newArrayWithObjects:(id[]){
#line 1175
    @"checked", @"compact", @"declare", @"defer",
#line 1176
    @"disabled", @"ismap", @"multiple",
#line 1177
    @"nohref", @"noresize", @"noshade",
#line 1178
    @"nowrap", @"readonly", @"selected" } count:13 type:NSString_class_()];
    self->EMPTY_ATTS_ = new_OrgXmlSaxHelpersAttributesImpl_init();
    self->elementLevel_ =
#line 1417
    0;
    self->prefixCounter_ =
#line 1420
    0;
    self->unicodeMode_ =
#line 1422
    NO;
    self->outputEncoding_ = @"";
    self->htmlMode_ = NO;
    self->forceDTD_ = NO;
    self->hasOutputDTD_ = NO;
    self->overridePublic_ = nil;
    self->overrideSystem_ = nil;
    self->version__ = nil;
    self->standalone_ = nil;
    self->cdataElement_ = NO;
    
#line 282
    OrgCcilCowanTagsoupXMLWriter_init__WithJavaIoWriter_(self, writer);
  }


#line 280
OrgCcilCowanTagsoupXMLWriter *new_OrgCcilCowanTagsoupXMLWriter_initWithJavaIoWriter_(JavaIoWriter *writer) {
  OrgCcilCowanTagsoupXMLWriter *self = [OrgCcilCowanTagsoupXMLWriter alloc];
  OrgCcilCowanTagsoupXMLWriter_initWithJavaIoWriter_(self, writer);
  return self;
}


#line 294
void OrgCcilCowanTagsoupXMLWriter_initWithOrgXmlSaxXMLReader_(OrgCcilCowanTagsoupXMLWriter *self, id<OrgXmlSaxXMLReader> xmlreader) {
  (void) OrgXmlSaxHelpersXMLFilterImpl_initWithOrgXmlSaxXMLReader_(self,
#line 296
  xmlreader);
  self->booleans_ = [IOSObjectArray newArrayWithObjects:(id[]){
#line 1175
    @"checked", @"compact", @"declare", @"defer",
#line 1176
    @"disabled", @"ismap", @"multiple",
#line 1177
    @"nohref", @"noresize", @"noshade",
#line 1178
    @"nowrap", @"readonly", @"selected" } count:13 type:NSString_class_()];
    self->EMPTY_ATTS_ = new_OrgXmlSaxHelpersAttributesImpl_init();
    self->elementLevel_ =
#line 1417
    0;
    self->prefixCounter_ =
#line 1420
    0;
    self->unicodeMode_ =
#line 1422
    NO;
    self->outputEncoding_ = @"";
    self->htmlMode_ = NO;
    self->forceDTD_ = NO;
    self->hasOutputDTD_ = NO;
    self->overridePublic_ = nil;
    self->overrideSystem_ = nil;
    self->version__ = nil;
    self->standalone_ = nil;
    self->cdataElement_ = NO;
    
#line 297
    OrgCcilCowanTagsoupXMLWriter_init__WithJavaIoWriter_(self, nil);
  }


#line 294
OrgCcilCowanTagsoupXMLWriter *new_OrgCcilCowanTagsoupXMLWriter_initWithOrgXmlSaxXMLReader_(id<OrgXmlSaxXMLReader> xmlreader) {
  OrgCcilCowanTagsoupXMLWriter *self = [OrgCcilCowanTagsoupXMLWriter alloc];
  OrgCcilCowanTagsoupXMLWriter_initWithOrgXmlSaxXMLReader_(self, xmlreader);
  return self;
}


#line 312
void OrgCcilCowanTagsoupXMLWriter_initWithOrgXmlSaxXMLReader_withJavaIoWriter_(OrgCcilCowanTagsoupXMLWriter *self, id<OrgXmlSaxXMLReader> xmlreader, JavaIoWriter *writer) {
  (void) OrgXmlSaxHelpersXMLFilterImpl_initWithOrgXmlSaxXMLReader_(self,
#line 314
  xmlreader);
  self->booleans_ = [IOSObjectArray newArrayWithObjects:(id[]){
#line 1175
    @"checked", @"compact", @"declare", @"defer",
#line 1176
    @"disabled", @"ismap", @"multiple",
#line 1177
    @"nohref", @"noresize", @"noshade",
#line 1178
    @"nowrap", @"readonly", @"selected" } count:13 type:NSString_class_()];
    self->EMPTY_ATTS_ = new_OrgXmlSaxHelpersAttributesImpl_init();
    self->elementLevel_ =
#line 1417
    0;
    self->prefixCounter_ =
#line 1420
    0;
    self->unicodeMode_ =
#line 1422
    NO;
    self->outputEncoding_ = @"";
    self->htmlMode_ = NO;
    self->forceDTD_ = NO;
    self->hasOutputDTD_ = NO;
    self->overridePublic_ = nil;
    self->overrideSystem_ = nil;
    self->version__ = nil;
    self->standalone_ = nil;
    self->cdataElement_ = NO;
    
#line 315
    OrgCcilCowanTagsoupXMLWriter_init__WithJavaIoWriter_(self, writer);
  }


#line 312
OrgCcilCowanTagsoupXMLWriter *new_OrgCcilCowanTagsoupXMLWriter_initWithOrgXmlSaxXMLReader_withJavaIoWriter_(id<OrgXmlSaxXMLReader> xmlreader, JavaIoWriter *writer) {
  OrgCcilCowanTagsoupXMLWriter *self = [OrgCcilCowanTagsoupXMLWriter alloc];
  OrgCcilCowanTagsoupXMLWriter_initWithOrgXmlSaxXMLReader_withJavaIoWriter_(self, xmlreader, writer);
  return self;
}


#line 327
void OrgCcilCowanTagsoupXMLWriter_init__WithJavaIoWriter_(OrgCcilCowanTagsoupXMLWriter *self, JavaIoWriter *writer) {
  
#line 329
  [self setOutputWithJavaIoWriter:writer];
  self->nsSupport_ = new_OrgXmlSaxHelpersNamespaceSupport_init();
  self->prefixTable_ = new_JavaUtilHashtable_init();
  self->forcedDeclTable_ = new_JavaUtilHashtable_init();
  self->doneDeclTable_ = new_JavaUtilHashtable_init();
  self->outputProperties_ = new_JavaUtilProperties_init();
}


#line 1035
void OrgCcilCowanTagsoupXMLWriter_forceNSDecls(OrgCcilCowanTagsoupXMLWriter *self) {
  
#line 1037
  id<JavaUtilEnumeration> prefixes = [((JavaUtilHashtable *) nil_chk(self->forcedDeclTable_)) keys];
  while ([((id<JavaUtilEnumeration>) nil_chk(prefixes)) hasMoreElements]) {
    NSString *prefix = (NSString *) check_class_cast([prefixes nextElement], [NSString class]);
    (void) OrgCcilCowanTagsoupXMLWriter_doPrefixWithNSString_withNSString_withBoolean_(self, prefix, nil, YES);
  }
}


#line 1058
NSString *OrgCcilCowanTagsoupXMLWriter_doPrefixWithNSString_withNSString_withBoolean_(OrgCcilCowanTagsoupXMLWriter *self, NSString *uri, NSString *qName, jboolean isElement) {
  
#line 1060
  NSString *defaultNS = [((OrgXmlSaxHelpersNamespaceSupport *) nil_chk(self->nsSupport_)) getURIWithNSString:@""];
  if ([@"" isEqual:uri]) {
    if (isElement && defaultNS != nil)
#line 1063
    [self->nsSupport_ declarePrefixWithNSString:@"" withNSString:@""];
    return nil;
  }
  NSString *prefix;
  if (isElement && defaultNS != nil && [((NSString *) nil_chk(uri)) isEqual:defaultNS]) {
    prefix = @"";
  }
  else {
    
#line 1070
    prefix = [self->nsSupport_ getPrefixWithNSString:uri];
  }
  if (prefix != nil) {
    return prefix;
  }
  prefix = (NSString *) check_class_cast([((JavaUtilHashtable *) nil_chk(self->doneDeclTable_)) getWithId:uri], [NSString class]);
  if (prefix != nil &&
#line 1077
  (((!isElement || defaultNS != nil) &&
#line 1078
  [@"" isEqual:prefix]) || [self->nsSupport_ getURIWithNSString:prefix] != nil)) {
    prefix = nil;
  }
  if (prefix == nil) {
    prefix = (NSString *) check_class_cast([((JavaUtilHashtable *) nil_chk(self->prefixTable_)) getWithId:uri], [NSString class]);
    if (prefix != nil &&
#line 1084
    (((!isElement || defaultNS != nil) &&
#line 1085
    [@"" isEqual:prefix]) || [self->nsSupport_ getURIWithNSString:prefix] != nil)) {
      prefix = nil;
    }
  }
  if (prefix == nil && qName != nil && ![@"" isEqual:qName]) {
    jint i = [qName indexOf:':'];
    if (i == -1) {
      if (isElement && defaultNS == nil) {
        prefix = @"";
      }
    }
    else {
      
#line 1096
      prefix = [qName substring:0 endIndex:i];
    }
  }
  for (;
#line 1100
  prefix == nil || [self->nsSupport_ getURIWithNSString:prefix] != nil;
#line 1101
  prefix = JreStrcat("$I", @"__NS", ++self->prefixCounter_))
#line 1102
  ;
  [self->nsSupport_ declarePrefixWithNSString:prefix withNSString:uri];
  (void) [self->doneDeclTable_ putWithId:uri withId:prefix];
  return prefix;
}


#line 1117
void OrgCcilCowanTagsoupXMLWriter_writeWithChar_(OrgCcilCowanTagsoupXMLWriter *self, jchar c) {
  
#line 1120
  @try {
    [((JavaIoWriter *) nil_chk(self->output_)) writeWithInt:c];
  }
  @catch (
#line 1122
  JavaIoIOException *e) {
    @throw new_OrgXmlSaxSAXException_initWithJavaLangException_(e);
  }
}


#line 1136
void OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(OrgCcilCowanTagsoupXMLWriter *self, NSString *s) {
  
#line 1139
  @try {
    [((JavaIoWriter *) nil_chk(self->output_)) writeWithNSString:s];
  }
  @catch (
#line 1141
  JavaIoIOException *e) {
    @throw new_OrgXmlSaxSAXException_initWithJavaLangException_(e);
  }
}


#line 1157
void OrgCcilCowanTagsoupXMLWriter_writeAttributesWithOrgXmlSaxAttributes_(OrgCcilCowanTagsoupXMLWriter *self, id<OrgXmlSaxAttributes> atts) {
  
#line 1160
  jint len = [((id<OrgXmlSaxAttributes>) nil_chk(atts)) getLength];
  for (jint i = 0; i < len; i++) {
    IOSCharArray *ch = [((NSString *) nil_chk([atts getValueWithInt:i])) toCharArray];
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, ' ');
    OrgCcilCowanTagsoupXMLWriter_writeNameWithNSString_withNSString_withNSString_withBoolean_(self, [atts getURIWithInt:i], [atts getLocalNameWithInt:i],
#line 1165
    [atts getQNameWithInt:i], NO);
    if (self->htmlMode_ && OrgCcilCowanTagsoupXMLWriter_booleanAttributeWithNSString_withNSString_withNSString_(self,
#line 1167
    [atts getLocalNameWithInt:i], [atts getQNameWithInt:i], [atts getValueWithInt:i])) break;
    OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"=\"");
    OrgCcilCowanTagsoupXMLWriter_writeEscWithCharArray_withInt_withInt_withBoolean_(self, ch, 0, ((IOSCharArray *) nil_chk(ch))->size_, YES);
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, '"');
  }
}


#line 1181
jboolean OrgCcilCowanTagsoupXMLWriter_booleanAttributeWithNSString_withNSString_withNSString_(OrgCcilCowanTagsoupXMLWriter *self, NSString *localName, NSString *qName, NSString *value) {
  
#line 1183
  NSString *name = localName;
  if (name == nil) {
    jint i = [((NSString *) nil_chk(qName)) indexOf:':'];
    if (i != -1) name = [qName substring:i + 1 endIndex:((jint) [qName length])];
  }
  if (![((NSString *) nil_chk(name)) isEqual:value]) return NO;
  for (jint j = 0; j < ((IOSObjectArray *) nil_chk(self->booleans_))->size_; j++) {
    if ([name isEqual:IOSObjectArray_Get(self->booleans_, j)]) return YES;
  }
  return NO;
}


#line 1206
void OrgCcilCowanTagsoupXMLWriter_writeEscWithCharArray_withInt_withInt_withBoolean_(OrgCcilCowanTagsoupXMLWriter *self, IOSCharArray *ch, jint start, jint length, jboolean isAttVal) {
  
#line 1210
  for (jint i = start; i < start + length; i++) {
    switch (IOSCharArray_Get(nil_chk(ch), i)) {
      case '&':
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"&amp;");
      break;
      case '<':
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"&lt;");
      break;
      case '>':
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"&gt;");
      break;
      case '"':
      if (isAttVal) {
        OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"&quot;");
      }
      else {
        
#line 1225
        OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, '"');
      }
      break;
      default:
      if (!self->unicodeMode_ && IOSCharArray_Get(ch, i) > 0x007f) {
        OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"&#");
        OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, JavaLangInteger_toStringWithInt_(IOSCharArray_Get(ch, i)));
        OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, ';');
      }
      else {
        
#line 1234
        OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, IOSCharArray_Get(ch, i));
      }
    }
  }
}


#line 1249
void OrgCcilCowanTagsoupXMLWriter_writeNSDecls(OrgCcilCowanTagsoupXMLWriter *self) {
  
#line 1252
  id<JavaUtilEnumeration> prefixes = [((OrgXmlSaxHelpersNamespaceSupport *) nil_chk(self->nsSupport_)) getDeclaredPrefixes];
  while ([((id<JavaUtilEnumeration>) nil_chk(prefixes)) hasMoreElements]) {
    NSString *prefix = (NSString *) check_class_cast([prefixes nextElement], [NSString class]);
    NSString *uri = [self->nsSupport_ getURIWithNSString:prefix];
    if (uri == nil) {
      uri = @"";
    }
    IOSCharArray *ch = [((NSString *) nil_chk(uri)) toCharArray];
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, ' ');
    if ([@"" isEqual:prefix]) {
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"xmlns=\"");
    }
    else {
      
#line 1264
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"xmlns:");
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, prefix);
      OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, @"=\"");
    }
    OrgCcilCowanTagsoupXMLWriter_writeEscWithCharArray_withInt_withInt_withBoolean_(self, ch, 0, ((IOSCharArray *) nil_chk(ch))->size_, YES);
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, '"');
  }
}


#line 1286
void OrgCcilCowanTagsoupXMLWriter_writeNameWithNSString_withNSString_withNSString_withBoolean_(OrgCcilCowanTagsoupXMLWriter *self, NSString *uri, NSString *localName, NSString *qName, jboolean isElement) {
  
#line 1290
  NSString *prefix = OrgCcilCowanTagsoupXMLWriter_doPrefixWithNSString_withNSString_withBoolean_(self, uri, qName, isElement);
  if (prefix != nil && ![@"" isEqual:prefix]) {
    OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, prefix);
    OrgCcilCowanTagsoupXMLWriter_writeWithChar_(self, ':');
  }
  if (localName != nil && ![@"" isEqual:localName]) {
    OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, localName);
  }
  else {
    
#line 1298
    jint i = [((NSString *) nil_chk(qName)) indexOf:':'];
    OrgCcilCowanTagsoupXMLWriter_writeWithNSString_(self, [qName substring:i + 1 endIndex:((jint) [qName length])]);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCcilCowanTagsoupXMLWriter)
