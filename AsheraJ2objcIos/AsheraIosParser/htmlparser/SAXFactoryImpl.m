//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/htmlparser/org/ccil/cowan/tagsoup/jaxp/SAXFactoryImpl.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "SAXFactoryImpl.h"
#include "SAXParserImpl.h"
#include "java/lang/Boolean.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"
#include "javax/xml/parsers/ParserConfigurationException.h"
#include "javax/xml/parsers/SAXParser.h"
#include "javax/xml/parsers/SAXParserFactory.h"
#include "org/xml/sax/SAXException.h"
#include "org/xml/sax/SAXNotRecognizedException.h"
#include "org/xml/sax/SAXNotSupportedException.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/htmlparser/org/ccil/cowan/tagsoup/jaxp/SAXFactoryImpl.java"

@interface OrgCcilCowanTagsoupJaxpSAXFactoryImpl () {
 @public
  /**
   @brief The easiest way to test validity of features to set is to use a prototype object.
   Currently this is actually not a real prototype, in the sense that the configuration is actually passed separately (as opposed to instantiating new readers from this prototype), but this could be changed in future, if TagSoup parser object allowed cloning.
   */
  OrgCcilCowanTagsoupJaxpSAXParserImpl *prototypeParser_;
  /**
   @brief This Map contains explicitly set features that can be succesfully set for XMLReader instances.
   Temporary storage is needed due to JAXP design: multiple readers can be instantiated from a single factory, and settings can be changed between instantiations. <p> Note that we wouldn't need this map if we could create instances directly using the prototype instance.
   */
  JavaUtilHashMap *features_;
}

- (OrgCcilCowanTagsoupJaxpSAXParserImpl *)getPrototype;

@end

J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupJaxpSAXFactoryImpl, prototypeParser_, OrgCcilCowanTagsoupJaxpSAXParserImpl *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupJaxpSAXFactoryImpl, features_, JavaUtilHashMap *)

__attribute__((unused)) static OrgCcilCowanTagsoupJaxpSAXParserImpl *OrgCcilCowanTagsoupJaxpSAXFactoryImpl_getPrototype(OrgCcilCowanTagsoupJaxpSAXFactoryImpl *self);


#line 28
@implementation OrgCcilCowanTagsoupJaxpSAXFactoryImpl


#line 52
- (instancetype)init {
  OrgCcilCowanTagsoupJaxpSAXFactoryImpl_init(self);
  return self;
}


#line 63
- (JavaxXmlParsersSAXParser *)newSAXParser {
  
#line 66
  @try {
    return OrgCcilCowanTagsoupJaxpSAXParserImpl_newInstanceWithJavaUtilMap_(features_);
  }
  @catch (
#line 68
  OrgXmlSaxSAXException *se) {
    
#line 70
    @throw new_JavaxXmlParsersParserConfigurationException_initWithNSString_([((OrgXmlSaxSAXException *) nil_chk(se)) getMessage]);
  }
}


#line 79
- (void)setFeatureWithNSString:(NSString *)name
                   withBoolean:(jboolean)value {
  
#line 84
  [((OrgCcilCowanTagsoupJaxpSAXParserImpl *) nil_chk(OrgCcilCowanTagsoupJaxpSAXFactoryImpl_getPrototype(self))) setFeatureWithNSString:name withBoolean:value];
  
#line 87
  if (features_ == nil) {
    
#line 89
    features_ = new_JavaUtilLinkedHashMap_init();
  }
  (void) [((JavaUtilHashMap *) nil_chk(features_)) putWithId:name withId:value ? JavaLangBoolean_get_TRUE__() : JavaLangBoolean_get_FALSE__()];
}


#line 98
- (jboolean)getFeatureWithNSString:(NSString *)name {
  
#line 102
  return [((OrgCcilCowanTagsoupJaxpSAXParserImpl *) nil_chk(OrgCcilCowanTagsoupJaxpSAXFactoryImpl_getPrototype(self))) getFeatureWithNSString:name];
}


#line 107
- (OrgCcilCowanTagsoupJaxpSAXParserImpl *)getPrototype {
  return OrgCcilCowanTagsoupJaxpSAXFactoryImpl_getPrototype(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SAXFactoryImpl", NULL, 0x1, NULL, NULL },
    { "newSAXParser", NULL, "Ljavax.xml.parsers.SAXParser;", 0x1, "Ljavax.xml.parsers.ParserConfigurationException;", NULL },
    { "setFeatureWithNSString:withBoolean:", "setFeature", "V", 0x1, "Ljavax.xml.parsers.ParserConfigurationException;Lorg.xml.sax.SAXNotRecognizedException;Lorg.xml.sax.SAXNotSupportedException;", NULL },
    { "getFeatureWithNSString:", "getFeature", "Z", 0x1, "Ljavax.xml.parsers.ParserConfigurationException;Lorg.xml.sax.SAXNotRecognizedException;Lorg.xml.sax.SAXNotSupportedException;", NULL },
    { "getPrototype", NULL, "Lorg.ccil.cowan.tagsoup.jaxp.SAXParserImpl;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "prototypeParser_", NULL, 0x2, "Lorg.ccil.cowan.tagsoup.jaxp.SAXParserImpl;", NULL, NULL,  },
    { "features_", NULL, 0x2, "Ljava.util.HashMap;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgCcilCowanTagsoupJaxpSAXFactoryImpl = { 2, "SAXFactoryImpl", "org.ccil.cowan.tagsoup.jaxp", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgCcilCowanTagsoupJaxpSAXFactoryImpl;
}

@end


#line 52
void OrgCcilCowanTagsoupJaxpSAXFactoryImpl_init(OrgCcilCowanTagsoupJaxpSAXFactoryImpl *self) {
  (void) JavaxXmlParsersSAXParserFactory_init(self);
  self->prototypeParser_ =
#line 39
  nil;
  self->features_ =
#line 50
  nil;
}


#line 52
OrgCcilCowanTagsoupJaxpSAXFactoryImpl *new_OrgCcilCowanTagsoupJaxpSAXFactoryImpl_init() {
  OrgCcilCowanTagsoupJaxpSAXFactoryImpl *self = [OrgCcilCowanTagsoupJaxpSAXFactoryImpl alloc];
  OrgCcilCowanTagsoupJaxpSAXFactoryImpl_init(self);
  return self;
}


#line 107
OrgCcilCowanTagsoupJaxpSAXParserImpl *OrgCcilCowanTagsoupJaxpSAXFactoryImpl_getPrototype(OrgCcilCowanTagsoupJaxpSAXFactoryImpl *self) {
  
#line 109
  if (self->prototypeParser_ == nil) {
    self->prototypeParser_ = new_OrgCcilCowanTagsoupJaxpSAXParserImpl_init();
  }
  return self->prototypeParser_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCcilCowanTagsoupJaxpSAXFactoryImpl)
