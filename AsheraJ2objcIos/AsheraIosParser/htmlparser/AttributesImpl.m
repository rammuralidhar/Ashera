//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/htmlparser/org/ccil/cowan/tagsoup/AttributesImpl.java
//


#include "AttributesImpl.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/System.h"
#include "org/xml/sax/Attributes.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/htmlparser/org/ccil/cowan/tagsoup/AttributesImpl.java"

@interface OrgCcilCowanTagsoupAttributesImpl ()

/**
 @brief Ensure the internal array's capacity.
 @param n The minimum number of attributes that the array must be able to hold.
 */
- (void)ensureCapacityWithInt:(jint)n;

/**
 @brief Report a bad array index in a manipulator.
 @param index The index to report.
 @exception java.lang.ArrayIndexOutOfBoundsException Always.
 */
- (void)badIndexWithInt:(jint)index;

@end

__attribute__((unused)) static void OrgCcilCowanTagsoupAttributesImpl_ensureCapacityWithInt_(OrgCcilCowanTagsoupAttributesImpl *self, jint n);

__attribute__((unused)) static void OrgCcilCowanTagsoupAttributesImpl_badIndexWithInt_(OrgCcilCowanTagsoupAttributesImpl *self, jint index);


#line 54
@implementation OrgCcilCowanTagsoupAttributesImpl


#line 66
- (instancetype)init {
  OrgCcilCowanTagsoupAttributesImpl_init(self);
  return self;
}


#line 81
- (instancetype)initWithOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)atts {
  OrgCcilCowanTagsoupAttributesImpl_initWithOrgXmlSaxAttributes_(self, atts);
  return self;
}


#line 99
- (jint)getLength {
  
#line 101
  return length_;
}


#line 113
- (NSString *)getURIWithInt:(jint)index {
  
#line 115
  if (index >= 0 && index < length_) {
    return IOSObjectArray_Get(nil_chk(data_), index * 5);
  }
  else {
    
#line 118
    return nil;
  }
}


#line 131
- (NSString *)getLocalNameWithInt:(jint)index {
  
#line 133
  if (index >= 0 && index < length_) {
    return IOSObjectArray_Get(nil_chk(data_), index * 5 + 1);
  }
  else {
    
#line 136
    return nil;
  }
}


#line 149
- (NSString *)getQNameWithInt:(jint)index {
  
#line 151
  if (index >= 0 && index < length_) {
    return IOSObjectArray_Get(nil_chk(data_), index * 5 + 2);
  }
  else {
    
#line 154
    return nil;
  }
}


#line 167
- (NSString *)getTypeWithInt:(jint)index {
  
#line 169
  if (index >= 0 && index < length_) {
    return IOSObjectArray_Get(nil_chk(data_), index * 5 + 3);
  }
  else {
    
#line 172
    return nil;
  }
}


#line 184
- (NSString *)getValueWithInt:(jint)index {
  
#line 186
  if (index >= 0 && index < length_) {
    return IOSObjectArray_Get(nil_chk(data_), index * 5 + 4);
  }
  else {
    
#line 189
    return nil;
  }
}


#line 207
- (jint)getIndexWithNSString:(NSString *)uri
                withNSString:(NSString *)localName {
  
#line 209
  jint max = length_ * 5;
  for (jint i = 0; i < max; i += 5) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(nil_chk(data_), i))) isEqual:uri] && [((NSString *) nil_chk(IOSObjectArray_Get(data_, i + 1))) isEqual:localName]) {
      return i / 5;
    }
  }
  return -1;
}


#line 226
- (jint)getIndexWithNSString:(NSString *)qName {
  
#line 228
  jint max = length_ * 5;
  for (jint i = 0; i < max; i += 5) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(nil_chk(data_), i + 2))) isEqual:qName]) {
      return i / 5;
    }
  }
  return -1;
}


#line 248
- (NSString *)getTypeWithNSString:(NSString *)uri
                     withNSString:(NSString *)localName {
  
#line 250
  jint max = length_ * 5;
  for (jint i = 0; i < max; i += 5) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(nil_chk(data_), i))) isEqual:uri] && [((NSString *) nil_chk(IOSObjectArray_Get(data_, i + 1))) isEqual:localName]) {
      return IOSObjectArray_Get(data_, i + 3);
    }
  }
  return nil;
}


#line 268
- (NSString *)getTypeWithNSString:(NSString *)qName {
  
#line 270
  jint max = length_ * 5;
  for (jint i = 0; i < max; i += 5) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(nil_chk(data_), i + 2))) isEqual:qName]) {
      return IOSObjectArray_Get(data_, i + 3);
    }
  }
  return nil;
}


#line 290
- (NSString *)getValueWithNSString:(NSString *)uri
                      withNSString:(NSString *)localName {
  
#line 292
  jint max = length_ * 5;
  for (jint i = 0; i < max; i += 5) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(nil_chk(data_), i))) isEqual:uri] && [((NSString *) nil_chk(IOSObjectArray_Get(data_, i + 1))) isEqual:localName]) {
      return IOSObjectArray_Get(data_, i + 4);
    }
  }
  return nil;
}


#line 310
- (NSString *)getValueWithNSString:(NSString *)qName {
  
#line 312
  jint max = length_ * 5;
  for (jint i = 0; i < max; i += 5) {
    if ([((NSString *) nil_chk(IOSObjectArray_Get(nil_chk(data_), i + 2))) isEqual:qName]) {
      return IOSObjectArray_Get(data_, i + 4);
    }
  }
  return nil;
}


#line 335
- (void)clear {
  
#line 337
  if (data_ != nil) {
    for (jint i = 0; i < (length_ * 5); i++)
#line 339
    (void) IOSObjectArray_Set(data_, i, nil);
  }
  length_ = 0;
}


#line 353
- (void)setAttributesWithOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)atts {
  
#line 355
  [self clear];
  length_ = [((id<OrgXmlSaxAttributes>) nil_chk(atts)) getLength];
  if (length_ > 0) {
    data_ = [IOSObjectArray newArrayWithLength:length_ * 5 type:NSString_class_()];
    for (jint i = 0; i < length_; i++) {
      (void) IOSObjectArray_Set(data_, i * 5, [atts getURIWithInt:i]);
      (void) IOSObjectArray_Set(data_, i * 5 + 1, [atts getLocalNameWithInt:i]);
      (void) IOSObjectArray_Set(data_, i * 5 + 2, [atts getQNameWithInt:i]);
      (void) IOSObjectArray_Set(data_, i * 5 + 3, [atts getTypeWithInt:i]);
      (void) IOSObjectArray_Set(data_, i * 5 + 4, [atts getValueWithInt:i]);
    }
  }
}


#line 387
- (void)addAttributeWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)qName
                    withNSString:(NSString *)type
                    withNSString:(NSString *)value {
  
#line 390
  OrgCcilCowanTagsoupAttributesImpl_ensureCapacityWithInt_(self, length_ + 1);
  (void) IOSObjectArray_Set(nil_chk(data_), length_ * 5, uri);
  (void) IOSObjectArray_Set(data_, length_ * 5 + 1, localName);
  (void) IOSObjectArray_Set(data_, length_ * 5 + 2, qName);
  (void) IOSObjectArray_Set(data_, length_ * 5 + 3, type);
  (void) IOSObjectArray_Set(data_, length_ * 5 + 4, value);
  length_++;
}


#line 421
- (void)setAttributeWithInt:(jint)index
               withNSString:(NSString *)uri
               withNSString:(NSString *)localName
               withNSString:(NSString *)qName
               withNSString:(NSString *)type
               withNSString:(NSString *)value {
  
#line 424
  if (index >= 0 && index < length_) {
    (void) IOSObjectArray_Set(nil_chk(data_), index * 5, uri);
    (void) IOSObjectArray_Set(data_, index * 5 + 1, localName);
    (void) IOSObjectArray_Set(data_, index * 5 + 2, qName);
    (void) IOSObjectArray_Set(data_, index * 5 + 3, type);
    (void) IOSObjectArray_Set(data_, index * 5 + 4, value);
  }
  else {
    
#line 431
    OrgCcilCowanTagsoupAttributesImpl_badIndexWithInt_(self, index);
  }
}


#line 444
- (void)removeAttributeWithInt:(jint)index {
  
#line 446
  if (index >= 0 && index < length_) {
    if (index < length_ - 1) {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data_, (index + 1) * 5, data_, index * 5,
#line 449
      (length_ - index - 1) * 5);
    }
    index = (length_ - 1) * 5;
    (void) IOSObjectArray_Set(nil_chk(data_), index++, nil);
    (void) IOSObjectArray_Set(data_, index++, nil);
    (void) IOSObjectArray_Set(data_, index++, nil);
    (void) IOSObjectArray_Set(data_, index++, nil);
    (void) IOSObjectArray_Set(data_, index, nil);
    length_--;
  }
  else {
    
#line 459
    OrgCcilCowanTagsoupAttributesImpl_badIndexWithInt_(self, index);
  }
}


#line 474
- (void)setURIWithInt:(jint)index
         withNSString:(NSString *)uri {
  
#line 476
  if (index >= 0 && index < length_) {
    (void) IOSObjectArray_Set(nil_chk(data_), index * 5, uri);
  }
  else {
    
#line 479
    OrgCcilCowanTagsoupAttributesImpl_badIndexWithInt_(self, index);
  }
}


#line 494
- (void)setLocalNameWithInt:(jint)index
               withNSString:(NSString *)localName {
  
#line 496
  if (index >= 0 && index < length_) {
    (void) IOSObjectArray_Set(nil_chk(data_), index * 5 + 1, localName);
  }
  else {
    
#line 499
    OrgCcilCowanTagsoupAttributesImpl_badIndexWithInt_(self, index);
  }
}


#line 514
- (void)setQNameWithInt:(jint)index
           withNSString:(NSString *)qName {
  
#line 516
  if (index >= 0 && index < length_) {
    (void) IOSObjectArray_Set(nil_chk(data_), index * 5 + 2, qName);
  }
  else {
    
#line 519
    OrgCcilCowanTagsoupAttributesImpl_badIndexWithInt_(self, index);
  }
}


#line 533
- (void)setTypeWithInt:(jint)index
          withNSString:(NSString *)type {
  
#line 535
  if (index >= 0 && index < length_) {
    (void) IOSObjectArray_Set(nil_chk(data_), index * 5 + 3, type);
  }
  else {
    
#line 538
    OrgCcilCowanTagsoupAttributesImpl_badIndexWithInt_(self, index);
  }
}


#line 552
- (void)setValueWithInt:(jint)index
           withNSString:(NSString *)value {
  
#line 554
  if (index >= 0 && index < length_) {
    (void) IOSObjectArray_Set(nil_chk(data_), index * 5 + 4, value);
  }
  else {
    
#line 557
    OrgCcilCowanTagsoupAttributesImpl_badIndexWithInt_(self, index);
  }
}


#line 574
- (void)ensureCapacityWithInt:(jint)n {
  OrgCcilCowanTagsoupAttributesImpl_ensureCapacityWithInt_(self, n);
}


#line 606
- (void)badIndexWithInt:(jint)index {
  OrgCcilCowanTagsoupAttributesImpl_badIndexWithInt_(self, index);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AttributesImpl", NULL, 0x1, NULL, NULL },
    { "initWithOrgXmlSaxAttributes:", "AttributesImpl", NULL, 0x1, NULL, NULL },
    { "getLength", NULL, "I", 0x1, NULL, NULL },
    { "getURIWithInt:", "getURI", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getLocalNameWithInt:", "getLocalName", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getQNameWithInt:", "getQName", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getTypeWithInt:", "getType", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValueWithInt:", "getValue", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getIndexWithNSString:withNSString:", "getIndex", "I", 0x1, NULL, NULL },
    { "getIndexWithNSString:", "getIndex", "I", 0x1, NULL, NULL },
    { "getTypeWithNSString:withNSString:", "getType", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getTypeWithNSString:", "getType", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValueWithNSString:withNSString:", "getValue", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValueWithNSString:", "getValue", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "setAttributesWithOrgXmlSaxAttributes:", "setAttributes", "V", 0x1, NULL, NULL },
    { "addAttributeWithNSString:withNSString:withNSString:withNSString:withNSString:", "addAttribute", "V", 0x1, NULL, NULL },
    { "setAttributeWithInt:withNSString:withNSString:withNSString:withNSString:withNSString:", "setAttribute", "V", 0x1, NULL, NULL },
    { "removeAttributeWithInt:", "removeAttribute", "V", 0x1, NULL, NULL },
    { "setURIWithInt:withNSString:", "setURI", "V", 0x1, NULL, NULL },
    { "setLocalNameWithInt:withNSString:", "setLocalName", "V", 0x1, NULL, NULL },
    { "setQNameWithInt:withNSString:", "setQName", "V", 0x1, NULL, NULL },
    { "setTypeWithInt:withNSString:", "setType", "V", 0x1, NULL, NULL },
    { "setValueWithInt:withNSString:", "setValue", "V", 0x1, NULL, NULL },
    { "ensureCapacityWithInt:", "ensureCapacity", "V", 0x2, NULL, NULL },
    { "badIndexWithInt:", "badIndex", "V", 0x2, "Ljava.lang.ArrayIndexOutOfBoundsException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "length_", NULL, 0x0, "I", NULL, NULL,  },
    { "data_", NULL, 0x0, "[Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgCcilCowanTagsoupAttributesImpl = { 2, "AttributesImpl", "org.ccil.cowan.tagsoup", NULL, 0x1, 26, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgCcilCowanTagsoupAttributesImpl;
}

@end


#line 66
void OrgCcilCowanTagsoupAttributesImpl_init(OrgCcilCowanTagsoupAttributesImpl *self) {
  (void) NSObject_init(self);
  self->length_ = 0;
  self->data_ = nil;
}


#line 66
OrgCcilCowanTagsoupAttributesImpl *new_OrgCcilCowanTagsoupAttributesImpl_init() {
  OrgCcilCowanTagsoupAttributesImpl *self = [OrgCcilCowanTagsoupAttributesImpl alloc];
  OrgCcilCowanTagsoupAttributesImpl_init(self);
  return self;
}


#line 81
void OrgCcilCowanTagsoupAttributesImpl_initWithOrgXmlSaxAttributes_(OrgCcilCowanTagsoupAttributesImpl *self, id<OrgXmlSaxAttributes> atts) {
  (void) NSObject_init(self);
  [self setAttributesWithOrgXmlSaxAttributes:atts];
}


#line 81
OrgCcilCowanTagsoupAttributesImpl *new_OrgCcilCowanTagsoupAttributesImpl_initWithOrgXmlSaxAttributes_(id<OrgXmlSaxAttributes> atts) {
  OrgCcilCowanTagsoupAttributesImpl *self = [OrgCcilCowanTagsoupAttributesImpl alloc];
  OrgCcilCowanTagsoupAttributesImpl_initWithOrgXmlSaxAttributes_(self, atts);
  return self;
}


#line 574
void OrgCcilCowanTagsoupAttributesImpl_ensureCapacityWithInt_(OrgCcilCowanTagsoupAttributesImpl *self, jint n) {
  if (n <= 0) {
    return;
  }
  jint max;
  if (self->data_ == nil || self->data_->size_ == 0) {
    max = 25;
  }
  else if (self->data_->size_ >= n * 5) {
    return;
  }
  else {
    max = self->data_->size_;
  }
  while (max < n * 5) {
    max *= 2;
  }
  
#line 592
  IOSObjectArray *newData = [IOSObjectArray newArrayWithLength:max type:NSString_class_()];
  if (self->length_ > 0) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->data_, 0, newData, 0, self->length_ * 5);
  }
  self->data_ = newData;
}


#line 606
void OrgCcilCowanTagsoupAttributesImpl_badIndexWithInt_(OrgCcilCowanTagsoupAttributesImpl *self, jint index) {
  
#line 609
  NSString *msg = JreStrcat("$I", @"Attempt to modify attribute at illegal index: ",
#line 610
  index);
  @throw new_JavaLangArrayIndexOutOfBoundsException_initWithNSString_(msg);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCcilCowanTagsoupAttributesImpl)
