//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/htmlparser/org/ccil/cowan/tagsoup/ElementType.java
//

#ifndef _OrgCcilCowanTagsoupElementType_H_
#define _OrgCcilCowanTagsoupElementType_H_

#include "J2ObjC_header.h"

@class OrgCcilCowanTagsoupAttributesImpl;
@class OrgCcilCowanTagsoupSchema;

/**
 @brief This class represents an element type in the schema.
 An element type has a name, a content model vector, a member-of vector, a flags vector, default attributes, and a schema to which it belongs.
 */
@interface OrgCcilCowanTagsoupElementType : NSObject

#pragma mark Public

/**
 @brief Construct an ElementType: but it's better to use Schema.element() instead.
 The content model, member-of, and flags vectors are specified as ints.
 @param name The element type name
 @param model ORed-together bits representing the content models allowed in the content of this element type
 @param memberOf ORed-together bits representing the content models to which this element type belongs
 @param flags ORed-together bits representing the flags associated with this element type
 @param schema The schema with which this element type will be associated
 */
- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)model
                         withInt:(jint)memberOf
                         withInt:(jint)flags
   withOrgCcilCowanTagsoupSchema:(OrgCcilCowanTagsoupSchema *)schema;

/**
 @brief Returns the default attributes associated with this element type.
 Attributes of type CDATA that don't have default values are typically not included.  Other attributes without default values have an internal value of <tt>null</tt>. The return value is an AttributesImpl to allow the caller to mutate the attributes.
 */
- (OrgCcilCowanTagsoupAttributesImpl *)atts;

/**
 @brief Returns true if this element type can contain another element type.
 That is, if any of the models in this element's model vector match any of the models in the other element type's member-of vector.
 @param other The other element type
 */
- (jboolean)canContainWithOrgCcilCowanTagsoupElementType:(OrgCcilCowanTagsoupElementType *)other;

/**
 @brief Returns the flags associated with this element type.
 @return The flags associated with this element type as a vector of bits
 */
- (jint)flags;

/**
 @brief Returns the local name of this element type.
 @return The local name of the element type
 */
- (NSString *)localName;

/**
 @brief Return a local name from a Qname.
 @param name The Qname
 @return The local name
 */
- (NSString *)localNameWithNSString:(NSString *)name;

/**
 @brief Returns the content models to which this element type belongs.
 @return The content models to which this element type belongs as a vector of bits
 */
- (jint)memberOf;

/**
 @brief Returns the content models of this element type.
 @return The content models of this element type as a vector of bits
 */
- (jint)model;

/**
 @brief Returns the name of this element type.
 @return The name of the element type
 */
- (NSString *)name;

/**
 @brief Returns the namespace name of this element type.
 @return The namespace name of the element type
 */
- (NSString *)namespace__;

/**
 @brief Return a namespace name from a Qname.
 The attribute flag tells us whether to return an empty namespace name if there is no prefix, or use the schema default instead.
 @param name The Qname
 @param attribute True if name is an attribute name
 @return The namespace name
 */
- (NSString *)namespace__WithNSString:(NSString *)name
                          withBoolean:(jboolean)attribute;

/**
 @brief Normalize an attribute value (ID-style).
 CDATA-style attribute normalization is already done.
 @param value The value to normalize
 @return The normalized value
 */
+ (NSString *)normalizeWithNSString:(NSString *)value;

/**
 @brief Returns the parent element type of this element type.
 @return The parent element type
 */
- (OrgCcilCowanTagsoupElementType *)parent;

/**
 @brief Returns the schema which this element type is associated with.
 @return The schema
 */
- (OrgCcilCowanTagsoupSchema *)schema;

/**
 @brief Sets an attribute and its value into an AttributesImpl object.
 Attempts to set a namespace declaration are ignored.
 @param atts The AttributesImpl object
 @param name The name (Qname) of the attribute
 @param type The type of the attribute
 @param value The value of the attribute
 */
- (void)setAttributeWithOrgCcilCowanTagsoupAttributesImpl:(OrgCcilCowanTagsoupAttributesImpl *)atts
                                             withNSString:(NSString *)name
                                             withNSString:(NSString *)type
                                             withNSString:(NSString *)value;

/**
 @brief Sets an attribute and its value into this element type.
 @param name The name of the attribute
 @param type The type of the attribute
 @param value The value of the attribute
 */
- (void)setAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)type
                    withNSString:(NSString *)value;

/**
 @brief Sets the flags of this element type.
 @param flags associated with this element type The flags as a vector of bits
 */
- (void)setFlagsWithInt:(jint)flags;

/**
 @brief Sets the content models to which this element type belongs.
 @param memberOf The content models to which this element type belongs as a vector of bits
 */
- (void)setMemberOfWithInt:(jint)memberOf;

/**
 @brief Sets the models of this element type.
 @param model The content models of this element type as a vector of bits
 */
- (void)setModelWithInt:(jint)model;

/**
 @brief Sets the parent element type of this element type.
 @param parent The parent element type
 */
- (void)setParentWithOrgCcilCowanTagsoupElementType:(OrgCcilCowanTagsoupElementType *)parent;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgCcilCowanTagsoupElementType)

FOUNDATION_EXPORT void OrgCcilCowanTagsoupElementType_initWithNSString_withInt_withInt_withInt_withOrgCcilCowanTagsoupSchema_(OrgCcilCowanTagsoupElementType *self, NSString *name, jint model, jint memberOf, jint flags, OrgCcilCowanTagsoupSchema *schema);

FOUNDATION_EXPORT OrgCcilCowanTagsoupElementType *new_OrgCcilCowanTagsoupElementType_initWithNSString_withInt_withInt_withInt_withOrgCcilCowanTagsoupSchema_(NSString *name, jint model, jint memberOf, jint flags, OrgCcilCowanTagsoupSchema *schema) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NSString *OrgCcilCowanTagsoupElementType_normalizeWithNSString_(NSString *value);

J2OBJC_TYPE_LITERAL_HEADER(OrgCcilCowanTagsoupElementType)

#endif // _OrgCcilCowanTagsoupElementType_H_
