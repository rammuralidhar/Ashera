//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/htmlparser/org/ccil/cowan/tagsoup/HTMLScanner.java
//

#ifndef _OrgCcilCowanTagsoupHTMLScanner_H_
#define _OrgCcilCowanTagsoupHTMLScanner_H_

#include "J2ObjC_header.h"
#include "Scanner.h"
#include "org/xml/sax/Locator.h"

@class IOSCharArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaIoReader;
@protocol OrgCcilCowanTagsoupScanHandler;

/**
 @brief This class implements a table-driven scanner for HTML, allowing for lots of defects.
 It implements the Scanner interface, which accepts a Reader object to fetch characters from and a ScanHandler object to report lexical events to.
 */
@interface OrgCcilCowanTagsoupHTMLScanner : NSObject < OrgCcilCowanTagsoupScanner, OrgXmlSaxLocator > {
 @public
  jint theState_;
  jint theNextState_;
  IOSCharArray *theOutputBuffer_;
  jint theSize_;
  IOSIntArray *theWinMap_;
}

#pragma mark Public

- (instancetype)init;

- (jint)getColumnNumber;

- (jint)getLineNumber;

- (NSString *)getPublicId;

- (NSString *)getSystemId;

/**
 @brief Test procedure.
 Reads HTML from the standard input and writes PYX to the standard output.
 */
+ (void)mainWithNSStringArray:(IOSObjectArray *)argv;

/**
 @brief Reset document locator, supplying systemid and publicid.
 @param systemid System id
 @param publicid Public id
 */
- (void)resetDocumentLocatorWithNSString:(NSString *)publicid
                            withNSString:(NSString *)systemid;

/**
 @brief Scan HTML source, reporting lexical events.
 @param r0 Reader that provides characters
 @param h ScanHandler that accepts lexical events.
 */
- (void)scanWithJavaIoReader:(JavaIoReader *)r0
withOrgCcilCowanTagsoupScanHandler:(id<OrgCcilCowanTagsoupScanHandler>)h;

/**
 @brief A callback for the ScanHandler that allows it to force the lexer state to CDATA content (no markup is recognized except the end of element.
 */
- (void)startCDATA;

@end

J2OBJC_STATIC_INIT(OrgCcilCowanTagsoupHTMLScanner)

J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupHTMLScanner, theOutputBuffer_, IOSCharArray *)
J2OBJC_FIELD_SETTER(OrgCcilCowanTagsoupHTMLScanner, theWinMap_, IOSIntArray *)

FOUNDATION_EXPORT IOSObjectArray *OrgCcilCowanTagsoupHTMLScanner_statetableIndex_;
J2OBJC_STATIC_FIELD_GETTER(OrgCcilCowanTagsoupHTMLScanner, statetableIndex_, IOSObjectArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgCcilCowanTagsoupHTMLScanner, statetableIndex_, IOSObjectArray *)

FOUNDATION_EXPORT jint OrgCcilCowanTagsoupHTMLScanner_statetableIndexMaxChar_;
J2OBJC_STATIC_FIELD_GETTER(OrgCcilCowanTagsoupHTMLScanner, statetableIndexMaxChar_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgCcilCowanTagsoupHTMLScanner, statetableIndexMaxChar_, jint)

FOUNDATION_EXPORT void OrgCcilCowanTagsoupHTMLScanner_mainWithNSStringArray_(IOSObjectArray *argv);

FOUNDATION_EXPORT void OrgCcilCowanTagsoupHTMLScanner_init(OrgCcilCowanTagsoupHTMLScanner *self);

FOUNDATION_EXPORT OrgCcilCowanTagsoupHTMLScanner *new_OrgCcilCowanTagsoupHTMLScanner_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgCcilCowanTagsoupHTMLScanner)

#endif // _OrgCcilCowanTagsoupHTMLScanner_H_
