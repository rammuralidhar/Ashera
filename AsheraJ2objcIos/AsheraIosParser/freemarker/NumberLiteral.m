//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/NumberLiteral.java
//


#include "Environment.h"
#include "Expression.h"
#include "J2ObjC_source.h"
#include "NumberLiteral.h"
#include "ParameterRole.h"
#include "SimpleNumber.h"
#include "TemplateModel.h"
#include "java/lang/IndexOutOfBoundsException.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/NumberLiteral.java"

@interface FreemarkerCoreNumberLiteral () {
 @public
  NSNumber *value_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerCoreNumberLiteral, value_, NSNumber *)


#line 27
@implementation FreemarkerCoreNumberLiteral


#line 31
- (instancetype)initWithNSNumber:(NSNumber *)value {
  FreemarkerCoreNumberLiteral_initWithNSNumber_(self, value);
  return self;
}


#line 35
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  return new_FreemarkerTemplateSimpleNumber_initWithNSNumber_(value_);
}

- (NSString *)evalAndCoerceToStringWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  return [((FreemarkerCoreEnvironment *) nil_chk(env)) formatNumberWithNSNumber:value_];
}

- (NSNumber *)getAsNumber {
  return value_;
}

- (NSString *)getName {
  return JreStrcat("$@C", @"the number: '", value_, '\'');
}

- (NSString *)getCanonicalForm {
  return [((NSNumber *) nil_chk(value_)) description];
}

- (NSString *)getNodeTypeSymbol {
  return [self getCanonicalForm];
}

- (jboolean)isLiteral {
  return YES;
}

- (FreemarkerCoreExpression *)deepCloneWithIdentifierReplaced_innerWithNSString:(NSString *)replacedIdentifier
                                                   withFreemarkerCoreExpression:(FreemarkerCoreExpression *)replacement
                                 withFreemarkerCoreExpression_ReplacemenetState:(FreemarkerCoreExpression_ReplacemenetState *)replacementState {
  
#line 65
  return new_FreemarkerCoreNumberLiteral_initWithNSNumber_(value_);
}


#line 68
- (jint)getParameterCount {
  return 0;
}

- (id)getParameterValueWithInt:(jint)idx {
  @throw new_JavaLangIndexOutOfBoundsException_init();
}

- (FreemarkerCoreParameterRole *)getParameterRoleWithInt:(jint)idx {
  @throw new_JavaLangIndexOutOfBoundsException_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSNumber:", "NumberLiteral", NULL, 0x1, NULL, NULL },
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, NULL, NULL },
    { "evalAndCoerceToStringWithFreemarkerCoreEnvironment:", "evalAndCoerceToString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAsNumber", NULL, "Ljava.lang.Number;", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x0, NULL, NULL },
    { "getCanonicalForm", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getNodeTypeSymbol", NULL, "Ljava.lang.String;", 0x0, NULL, NULL },
    { "isLiteral", NULL, "Z", 0x0, NULL, NULL },
    { "deepCloneWithIdentifierReplaced_innerWithNSString:withFreemarkerCoreExpression:withFreemarkerCoreExpression_ReplacemenetState:", "deepCloneWithIdentifierReplaced_inner", "Lfreemarker.core.Expression;", 0x4, NULL, NULL },
    { "getParameterCount", NULL, "I", 0x0, NULL, NULL },
    { "getParameterValueWithInt:", "getParameterValue", "Ljava.lang.Object;", 0x0, NULL, NULL },
    { "getParameterRoleWithInt:", "getParameterRole", "Lfreemarker.core.ParameterRole;", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x12, "Ljava.lang.Number;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreNumberLiteral = { 2, "NumberLiteral", "freemarker.core", NULL, 0x10, 12, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreNumberLiteral;
}

@end


#line 31
void FreemarkerCoreNumberLiteral_initWithNSNumber_(FreemarkerCoreNumberLiteral *self, NSNumber *value) {
  (void) FreemarkerCoreExpression_init(self);
  
#line 32
  self->value_ = value;
}


#line 31
FreemarkerCoreNumberLiteral *new_FreemarkerCoreNumberLiteral_initWithNSNumber_(NSNumber *value) {
  FreemarkerCoreNumberLiteral *self = [FreemarkerCoreNumberLiteral alloc];
  FreemarkerCoreNumberLiteral_initWithNSNumber_(self, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreNumberLiteral)
