//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/TemplateObject.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "MessageUtil.h"
#include "ParameterRole.h"
#include "ParseException.h"
#include "Template.h"
#include "TemplateObject.h"
#include "Token.h"
#include "java/lang/Exception.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/TemplateObject.java"

@interface FreemarkerCoreTemplateObject () {
 @public
  FreemarkerTemplateTemplate *template__;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerCoreTemplateObject, template__, FreemarkerTemplateTemplate *)

__attribute__((unused)) static NSString *FreemarkerCoreTemplateObject_getSource(FreemarkerCoreTemplateObject *self);


#line 31
@implementation FreemarkerCoreTemplateObject


#line 41
- (void)setLocationWithFreemarkerTemplateTemplate:(FreemarkerTemplateTemplate *)template_
                          withFreemarkerCoreToken:(FreemarkerCoreToken *)begin
                          withFreemarkerCoreToken:(FreemarkerCoreToken *)end {
  
#line 45
  [self setLocationWithFreemarkerTemplateTemplate:template_ withInt:((FreemarkerCoreToken *) nil_chk(begin))->beginColumn_ withInt:begin->beginLine_ withInt:((FreemarkerCoreToken *) nil_chk(end))->endColumn_ withInt:end->endLine_];
}


#line 48
- (void)setLocationWithFreemarkerTemplateTemplate:(FreemarkerTemplateTemplate *)template_
                          withFreemarkerCoreToken:(FreemarkerCoreToken *)begin
                 withFreemarkerCoreTemplateObject:(FreemarkerCoreTemplateObject *)end {
  
#line 52
  [self setLocationWithFreemarkerTemplateTemplate:template_ withInt:((FreemarkerCoreToken *) nil_chk(begin))->beginColumn_ withInt:begin->beginLine_ withInt:((FreemarkerCoreTemplateObject *) nil_chk(end))->endColumn_ withInt:end->endLine_];
}


#line 55
- (void)setLocationWithFreemarkerTemplateTemplate:(FreemarkerTemplateTemplate *)template_
                 withFreemarkerCoreTemplateObject:(FreemarkerCoreTemplateObject *)begin
                          withFreemarkerCoreToken:(FreemarkerCoreToken *)end {
  
#line 59
  [self setLocationWithFreemarkerTemplateTemplate:template_ withInt:((FreemarkerCoreTemplateObject *) nil_chk(begin))->beginColumn_ withInt:begin->beginLine_ withInt:((FreemarkerCoreToken *) nil_chk(end))->endColumn_ withInt:end->endLine_];
}


#line 62
- (void)setLocationWithFreemarkerTemplateTemplate:(FreemarkerTemplateTemplate *)template_
                 withFreemarkerCoreTemplateObject:(FreemarkerCoreTemplateObject *)begin
                 withFreemarkerCoreTemplateObject:(FreemarkerCoreTemplateObject *)end {
  
#line 66
  [self setLocationWithFreemarkerTemplateTemplate:template_ withInt:((FreemarkerCoreTemplateObject *) nil_chk(begin))->beginColumn_ withInt:begin->beginLine_ withInt:((FreemarkerCoreTemplateObject *) nil_chk(end))->endColumn_ withInt:end->endLine_];
}


#line 69
- (void)setLocationWithFreemarkerTemplateTemplate:(FreemarkerTemplateTemplate *)template_
                                          withInt:(jint)beginColumn
                                          withInt:(jint)beginLine
                                          withInt:(jint)endColumn
                                          withInt:(jint)endLine {
  
#line 73
  self->template__ = template_;
  self->beginColumn_ = beginColumn;
  self->beginLine_ = beginLine;
  self->endColumn_ = endColumn;
  self->endLine_ = endLine;
}


#line 80
- (jint)getBeginColumn {
  return beginColumn_;
}

- (jint)getBeginLine {
  return beginLine_;
}

- (jint)getEndColumn {
  return endColumn_;
}

- (jint)getEndLine {
  return endLine_;
}


#line 100
- (NSString *)getStartLocation {
  return FreemarkerCoreMessageUtil_formatLocationForEvaluationErrorWithFreemarkerTemplateTemplate_withInt_withInt_(template__, beginLine_, beginColumn_);
}


#line 108
- (NSString *)getStartLocationQuoted {
  return [self getStartLocation];
}

- (NSString *)getEndLocation {
  return FreemarkerCoreMessageUtil_formatLocationForEvaluationErrorWithFreemarkerTemplateTemplate_withInt_withInt_(template__, endLine_, endColumn_);
}


#line 120
- (NSString *)getEndLocationQuoted {
  return [self getEndLocation];
}

- (NSString *)getSource {
  return FreemarkerCoreTemplateObject_getSource(self);
}


#line 136
- (NSString *)description {
  NSString *s;
  @try {
    s = FreemarkerCoreTemplateObject_getSource(self);
  }
  @catch (
#line 140
  JavaLangException *e) {
    s = nil;
  }
  return s != nil ? s : [self getCanonicalForm];
}


#line 150
- (jboolean)containsWithInt:(jint)column
                    withInt:(jint)line {
  if (line < beginLine_ || line > endLine_) {
    return NO;
  }
  if (line == beginLine_) {
    if (column < beginColumn_) {
      return NO;
    }
  }
  if (line == endLine_) {
    if (column > endColumn_) {
      return NO;
    }
  }
  return YES;
}


#line 170
- (FreemarkerTemplateTemplate *)getTemplate {
  return template__;
}

- (FreemarkerCoreTemplateObject *)copyLocationFromWithFreemarkerCoreTemplateObject:(FreemarkerCoreTemplateObject *)from {
  
#line 176
  template__ = ((FreemarkerCoreTemplateObject *) nil_chk(from))->template__;
  beginColumn_ = from->beginColumn_;
  beginLine_ = from->beginLine_;
  endColumn_ = from->endColumn_;
  endLine_ = from->endLine_;
  return self;
}


#line 191
- (NSString *)getCanonicalForm {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 206
- (NSString *)getNodeTypeSymbol {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 215
- (jint)getParameterCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 234
- (id)getParameterValueWithInt:(jint)idx {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 244
- (FreemarkerCoreParameterRole *)getParameterRoleWithInt:(jint)idx {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (instancetype)init {
  FreemarkerCoreTemplateObject_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setLocationWithFreemarkerTemplateTemplate:withFreemarkerCoreToken:withFreemarkerCoreToken:", "setLocation", "V", 0x10, "Lfreemarker.core.ParseException;", NULL },
    { "setLocationWithFreemarkerTemplateTemplate:withFreemarkerCoreToken:withFreemarkerCoreTemplateObject:", "setLocation", "V", 0x10, "Lfreemarker.core.ParseException;", NULL },
    { "setLocationWithFreemarkerTemplateTemplate:withFreemarkerCoreTemplateObject:withFreemarkerCoreToken:", "setLocation", "V", 0x10, "Lfreemarker.core.ParseException;", NULL },
    { "setLocationWithFreemarkerTemplateTemplate:withFreemarkerCoreTemplateObject:withFreemarkerCoreTemplateObject:", "setLocation", "V", 0x10, "Lfreemarker.core.ParseException;", NULL },
    { "setLocationWithFreemarkerTemplateTemplate:withInt:withInt:withInt:withInt:", "setLocation", "V", 0x0, "Lfreemarker.core.ParseException;", NULL },
    { "getBeginColumn", NULL, "I", 0x11, NULL, NULL },
    { "getBeginLine", NULL, "I", 0x11, NULL, NULL },
    { "getEndColumn", NULL, "I", 0x11, NULL, NULL },
    { "getEndLine", NULL, "I", 0x11, NULL, NULL },
    { "getStartLocation", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getStartLocationQuoted", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getEndLocation", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getEndLocationQuoted", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getSource", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "containsWithInt:withInt:", "contains", "Z", 0x1, NULL, NULL },
    { "getTemplate", NULL, "Lfreemarker.template.Template;", 0x1, NULL, NULL },
    { "copyLocationFromWithFreemarkerCoreTemplateObject:", "copyLocationFrom", "Lfreemarker.core.TemplateObject;", 0x0, NULL, NULL },
    { "getCanonicalForm", NULL, "Ljava.lang.String;", 0x401, NULL, NULL },
    { "getNodeTypeSymbol", NULL, "Ljava.lang.String;", 0x400, NULL, NULL },
    { "getParameterCount", NULL, "I", 0x400, NULL, NULL },
    { "getParameterValueWithInt:", "getParameterValue", "Ljava.lang.Object;", 0x400, NULL, NULL },
    { "getParameterRoleWithInt:", "getParameterRole", "Lfreemarker.core.ParameterRole;", 0x400, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "template__", "template", 0x2, "Lfreemarker.template.Template;", NULL, NULL,  },
    { "beginColumn_", NULL, 0x0, "I", NULL, NULL,  },
    { "beginLine_", NULL, 0x0, "I", NULL, NULL,  },
    { "endColumn_", NULL, 0x0, "I", NULL, NULL,  },
    { "endLine_", NULL, 0x0, "I", NULL, NULL,  },
    { "RUNTIME_EVAL_LINE_DISPLACEMENT_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = FreemarkerCoreTemplateObject_RUNTIME_EVAL_LINE_DISPLACEMENT },
  };
  static const J2ObjcClassInfo _FreemarkerCoreTemplateObject = { 2, "TemplateObject", "freemarker.core", NULL, 0x401, 24, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreTemplateObject;
}

@end


#line 124
NSString *FreemarkerCoreTemplateObject_getSource(FreemarkerCoreTemplateObject *self) {
  NSString *s;
  if (self->template__ != nil) {
    s = [self->template__ getSourceWithInt:self->beginColumn_ withInt:self->beginLine_ withInt:self->endColumn_ withInt:self->endLine_];
  }
  else {
    
#line 129
    s = nil;
  }
  
#line 133
  return s != nil ? s : [self getCanonicalForm];
}

void FreemarkerCoreTemplateObject_init(FreemarkerCoreTemplateObject *self) {
  (void) NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreTemplateObject)
