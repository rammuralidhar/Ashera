//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/TemplateExceptionHandler.java
//

#ifndef _FreemarkerTemplateTemplateExceptionHandler_H_
#define _FreemarkerTemplateTemplateExceptionHandler_H_

#include "J2ObjC_header.h"

@class FreemarkerCoreEnvironment;
@class FreemarkerTemplateTemplateException;
@class JavaIoWriter;

/**
 @brief Used for the <code>template_exception_handler</code> configuration setting; see Configurable#setTemplateExceptionHandler(TemplateExceptionHandler) for more.
 */
@protocol FreemarkerTemplateTemplateExceptionHandler < NSObject, JavaObject >

/**
 @brief Method called after a TemplateException was raised inside a template.
 The error is logged before this is called, so there's no need to log it here. The exception should be re-thrown unless you want to suppress the exception. <p>Note that you can check with Environment#isInAttemptBlock() if you are inside a <code>#attempt</code> block, which then will handle handle this exception and roll back the output generated inside it. <p>Note that StopException -s (raised by <code>#stop</code> ) won't be captured.
 @param te The exception that occurred; don't forget to re-throw it unless you want to suppress it
 @param env The runtime environment of the template
 @param out This is where the output of the template is written
 */
- (void)handleTemplateExceptionWithFreemarkerTemplateTemplateException:(FreemarkerTemplateTemplateException *)te
                                         withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env
                                                      withJavaIoWriter:(JavaIoWriter *)outArg;

@end

@interface FreemarkerTemplateTemplateExceptionHandler : NSObject
@end

J2OBJC_STATIC_INIT(FreemarkerTemplateTemplateExceptionHandler)

FOUNDATION_EXPORT id<FreemarkerTemplateTemplateExceptionHandler> FreemarkerTemplateTemplateExceptionHandler_IGNORE_HANDLER_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerTemplateTemplateExceptionHandler, IGNORE_HANDLER_, id<FreemarkerTemplateTemplateExceptionHandler>)

FOUNDATION_EXPORT id<FreemarkerTemplateTemplateExceptionHandler> FreemarkerTemplateTemplateExceptionHandler_RETHROW_HANDLER_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerTemplateTemplateExceptionHandler, RETHROW_HANDLER_, id<FreemarkerTemplateTemplateExceptionHandler>)

FOUNDATION_EXPORT id<FreemarkerTemplateTemplateExceptionHandler> FreemarkerTemplateTemplateExceptionHandler_DEBUG_HANDLER_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerTemplateTemplateExceptionHandler, DEBUG_HANDLER_, id<FreemarkerTemplateTemplateExceptionHandler>)

FOUNDATION_EXPORT id<FreemarkerTemplateTemplateExceptionHandler> FreemarkerTemplateTemplateExceptionHandler_HTML_DEBUG_HANDLER_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerTemplateTemplateExceptionHandler, HTML_DEBUG_HANDLER_, id<FreemarkerTemplateTemplateExceptionHandler>)

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateTemplateExceptionHandler)

#endif // _FreemarkerTemplateTemplateExceptionHandler_H_
