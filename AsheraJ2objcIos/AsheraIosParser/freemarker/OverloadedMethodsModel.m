//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/OverloadedMethodsModel.java
//


#include "BeansWrapper.h"
#include "CallableMemberDescriptor.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "MemberAndArguments.h"
#include "OverloadedMethods.h"
#include "OverloadedMethodsModel.h"
#include "SimpleNumber.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "_MethodUtil.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/util/Collections.h"
#include "java/util/List.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/OverloadedMethodsModel.java"

@interface FreemarkerExtBeansOverloadedMethodsModel () {
 @public
  id object_;
  FreemarkerExtBeansOverloadedMethods *overloadedMethods_;
  FreemarkerExtBeansBeansWrapper *wrapper_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerExtBeansOverloadedMethodsModel, object_, id)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansOverloadedMethodsModel, overloadedMethods_, FreemarkerExtBeansOverloadedMethods *)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansOverloadedMethodsModel, wrapper_, FreemarkerExtBeansBeansWrapper *)


#line 33
@implementation FreemarkerExtBeansOverloadedMethodsModel


#line 42
- (instancetype)initWithId:(id)object
withFreemarkerExtBeansOverloadedMethods:(FreemarkerExtBeansOverloadedMethods *)overloadedMethods
withFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)wrapper {
  FreemarkerExtBeansOverloadedMethodsModel_initWithId_withFreemarkerExtBeansOverloadedMethods_withFreemarkerExtBeansBeansWrapper_(self, object, overloadedMethods, wrapper);
  return self;
}


#line 56
- (id)execWithJavaUtilList:(id<JavaUtilList>)arguments {
  
#line 60
  FreemarkerExtBeansMemberAndArguments *maa = [((FreemarkerExtBeansOverloadedMethods *) nil_chk(overloadedMethods_)) getMemberAndArgumentsWithJavaUtilList:arguments withFreemarkerExtBeansBeansWrapper:wrapper_];
  @try {
    return [((FreemarkerExtBeansMemberAndArguments *) nil_chk(maa)) invokeMethodWithFreemarkerExtBeansBeansWrapper:wrapper_ withId:object_];
  }
  @catch (JavaLangException *e) {
    
#line 66
    if ([e isKindOfClass:[FreemarkerTemplateTemplateModelException class]]) @throw (FreemarkerTemplateTemplateModelException *) check_class_cast(e, [FreemarkerTemplateTemplateModelException class]);
    
#line 68
    @throw FreemarkerExtBeans_MethodUtil_newInvocationTemplateModelExceptionWithId_withFreemarkerExtBeansCallableMemberDescriptor_withJavaLangThrowable_(
#line 69
    object_,
#line 70
    [((FreemarkerExtBeansMemberAndArguments *) nil_chk(maa)) getCallableMemberDescriptor],
#line 71
    e);
  }
}


#line 75
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 77
  return (id<FreemarkerTemplateTemplateModel>) check_protocol_cast([self execWithJavaUtilList:JavaUtilCollections_singletonListWithId_(new_FreemarkerTemplateSimpleNumber_initWithNSNumber_(new_JavaLangInteger_initWithInt_(
#line 78
  index)))], @protocol(FreemarkerTemplateTemplateModel));
}


#line 81
- (jint)size {
  
#line 83
  @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_(JreStrcat("$$", @"?size is unsupported for ", [[self getClass] getName]));
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withFreemarkerExtBeansOverloadedMethods:withFreemarkerExtBeansBeansWrapper:", "OverloadedMethodsModel", NULL, 0x0, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "object_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL,  },
    { "overloadedMethods_", NULL, 0x12, "Lfreemarker.ext.beans.OverloadedMethods;", NULL, NULL,  },
    { "wrapper_", NULL, 0x12, "Lfreemarker.ext.beans.BeansWrapper;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansOverloadedMethodsModel = { 2, "OverloadedMethodsModel", "freemarker.ext.beans", NULL, 0x1, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansOverloadedMethodsModel;
}

@end


#line 42
void FreemarkerExtBeansOverloadedMethodsModel_initWithId_withFreemarkerExtBeansOverloadedMethods_withFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansOverloadedMethodsModel *self, id object, FreemarkerExtBeansOverloadedMethods *overloadedMethods, FreemarkerExtBeansBeansWrapper *wrapper) {
  (void) NSObject_init(self);
  self->object_ = object;
  self->overloadedMethods_ = overloadedMethods;
  self->wrapper_ = wrapper;
}


#line 42
FreemarkerExtBeansOverloadedMethodsModel *new_FreemarkerExtBeansOverloadedMethodsModel_initWithId_withFreemarkerExtBeansOverloadedMethods_withFreemarkerExtBeansBeansWrapper_(id object, FreemarkerExtBeansOverloadedMethods *overloadedMethods, FreemarkerExtBeansBeansWrapper *wrapper) {
  FreemarkerExtBeansOverloadedMethodsModel *self = [FreemarkerExtBeansOverloadedMethodsModel alloc];
  FreemarkerExtBeansOverloadedMethodsModel_initWithId_withFreemarkerExtBeansOverloadedMethods_withFreemarkerExtBeansBeansWrapper_(self, object, overloadedMethods, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansOverloadedMethodsModel)
