//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/ResourceBundleModel.java
//


#include "BeanModel.h"
#include "BeansWrapper.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "ModelFactory.h"
#include "ObjectWrapper.h"
#include "ResourceBundleModel.h"
#include "StringModel.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "_DelayedJQuote.h"
#include "_TemplateModelException.h"
#include "java/lang/Exception.h"
#include "java/text/MessageFormat.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/MissingResourceException.h"
#include "java/util/ResourceBundle.h"
#include "java/util/Set.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/ResourceBundleModel.java"

@interface FreemarkerExtBeansResourceBundleModel () {
 @public
  JavaUtilHashtable *formats_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerExtBeansResourceBundleModel, formats_, JavaUtilHashtable *)

@interface FreemarkerExtBeansResourceBundleModel_$1 : NSObject < FreemarkerExtUtilModelFactory >

- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerExtBeansResourceBundleModel_$1)

__attribute__((unused)) static void FreemarkerExtBeansResourceBundleModel_$1_init(FreemarkerExtBeansResourceBundleModel_$1 *self);

__attribute__((unused)) static FreemarkerExtBeansResourceBundleModel_$1 *new_FreemarkerExtBeansResourceBundleModel_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansResourceBundleModel_$1)

J2OBJC_INITIALIZED_DEFN(FreemarkerExtBeansResourceBundleModel)

id<FreemarkerExtUtilModelFactory> FreemarkerExtBeansResourceBundleModel_FACTORY_;


#line 52
@implementation FreemarkerExtBeansResourceBundleModel


#line 69
- (instancetype)initWithJavaUtilResourceBundle:(JavaUtilResourceBundle *)bundle
            withFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)wrapper {
  FreemarkerExtBeansResourceBundleModel_initWithJavaUtilResourceBundle_withFreemarkerExtBeansBeansWrapper_(self, bundle, wrapper);
  return self;
}


#line 77
- (id<FreemarkerTemplateTemplateModel>)invokeGenericGetWithJavaUtilMap:(id<JavaUtilMap>)keyMap
                                                          withIOSClass:(IOSClass *)clazz
                                                          withNSString:(NSString *)key {
  
#line 81
  @try {
    
#line 83
    return [self wrapWithId:[((JavaUtilResourceBundle *) nil_chk(((JavaUtilResourceBundle *) check_class_cast(object_, [JavaUtilResourceBundle class])))) getObjectWithNSString:key]];
  }
  @catch (JavaUtilMissingResourceException *e) {
    
#line 87
    @throw new_FreemarkerCore_TemplateModelException_initWithJavaLangThrowable_withNSObjectArray_(e, [IOSObjectArray newArrayWithObjects:(id[]){
#line 88
      @"No ", new_FreemarkerCore_DelayedJQuote_initWithId_(key), @" key in the ResourceBundle. Note that conforming to the ResourceBundle Java API, this is an error and not just a missing sub-variable (a null)." } count:3 type:NSObject_class_()]);
    }
  }


#line 97
- (jboolean)isEmpty {
  
#line 99
  return ![((id<JavaUtilEnumeration>) nil_chk([((JavaUtilResourceBundle *) nil_chk(((JavaUtilResourceBundle *) check_class_cast(object_, [JavaUtilResourceBundle class])))) getKeys])) hasMoreElements] &&
#line 100
  [super isEmpty];
}


#line 103
- (jint)size {
  
#line 105
  return [((id<JavaUtilSet>) nil_chk([self keySet])) size];
}


#line 108
- (id<JavaUtilSet>)keySet {
  
#line 110
  id<JavaUtilSet> set = [super keySet];
  id<JavaUtilEnumeration> e = [((JavaUtilResourceBundle *) nil_chk(((JavaUtilResourceBundle *) check_class_cast(object_, [JavaUtilResourceBundle class])))) getKeys];
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    [((id<JavaUtilSet>) nil_chk(set)) addWithId:[e nextElement]];
  }
  return set;
}


#line 123
- (id)execWithJavaUtilList:(id<JavaUtilList>)arguments {
  
#line 128
  if ([((id<JavaUtilList>) nil_chk(arguments)) size] < 1)
#line 129
  @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_(@"No message key was specified");
  
#line 131
  id<JavaUtilIterator> it = [arguments iterator];
  NSString *key = [nil_chk([self unwrapWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>) check_protocol_cast([((id<JavaUtilIterator>) nil_chk(it)) next], @protocol(FreemarkerTemplateTemplateModel))]) description];
  @try {
    
#line 135
    if (![it hasNext]) {
      
#line 137
      return [self wrapWithId:[((JavaUtilResourceBundle *) nil_chk(((JavaUtilResourceBundle *) check_class_cast(object_, [JavaUtilResourceBundle class])))) getObjectWithNSString:key]];
    }
    
#line 141
    jint args = [arguments size] - 1;
    IOSObjectArray *params = [IOSObjectArray newArrayWithLength:args type:NSObject_class_()];
    for (jint i = 0; i < args; ++i)
#line 144
    (void) IOSObjectArray_Set(params, i, [self unwrapWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>) check_protocol_cast([it next], @protocol(FreemarkerTemplateTemplateModel))]);
    
#line 147
    return new_FreemarkerExtBeansStringModel_initWithId_withFreemarkerExtBeansBeansWrapper_([self formatWithNSString:key withNSObjectArray:params], wrapper_);
  }
  @catch (JavaUtilMissingResourceException *e) {
    
#line 151
    @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_(JreStrcat("$$", @"No such key: ", key));
  }
  @catch (JavaLangException *e) {
    
#line 155
    @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_([((JavaLangException *) nil_chk(e)) getMessage]);
  }
}


#line 162
- (NSString *)formatWithNSString:(NSString *)key
               withNSObjectArray:(IOSObjectArray *)params {
  {
    
#line 173
    if (formats_ == nil)
#line 174
    formats_ = new_JavaUtilHashtable_init();
  }
  
#line 177
  JavaTextMessageFormat *format = nil;
  {
    
#line 185
    format = (JavaTextMessageFormat *) check_class_cast([((JavaUtilHashtable *) nil_chk(formats_)) getWithId:key], [JavaTextMessageFormat class]);
    if (format == nil) {
      
#line 188
      format = new_JavaTextMessageFormat_initWithNSString_([((JavaUtilResourceBundle *) nil_chk(((JavaUtilResourceBundle *) check_class_cast(object_, [JavaUtilResourceBundle class])))) getStringWithNSString:key]);
      [format setLocaleWithJavaUtilLocale:[((JavaUtilResourceBundle *) nil_chk([self getBundle])) getLocale]];
      (void) [formats_ putWithId:key withId:format];
    }
  }
  
#line 196
  @synchronized(format) {
    
#line 198
    return [((JavaTextMessageFormat *) nil_chk(format)) formatWithId:params];
  }
}


#line 202
- (JavaUtilResourceBundle *)getBundle {
  
#line 204
  return (JavaUtilResourceBundle *) check_class_cast(object_, [JavaUtilResourceBundle class]);
}

+ (void)initialize {
  if (self == [FreemarkerExtBeansResourceBundleModel class]) {
    FreemarkerExtBeansResourceBundleModel_FACTORY_ = new_FreemarkerExtBeansResourceBundleModel_$1_init();
    J2OBJC_SET_INITIALIZED(FreemarkerExtBeansResourceBundleModel)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilResourceBundle:withFreemarkerExtBeansBeansWrapper:", "ResourceBundleModel", NULL, 0x1, NULL, NULL },
    { "invokeGenericGetWithJavaUtilMap:withIOSClass:withNSString:", "invokeGenericGet", "Lfreemarker.template.TemplateModel;", 0x4, "Lfreemarker.template.TemplateModelException;", NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "keySet", NULL, "Ljava.util.Set;", 0x4, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "formatWithNSString:withNSObjectArray:", "format", "Ljava.lang.String;", 0x1, "Ljava.util.MissingResourceException;", NULL },
    { "getBundle", NULL, "Ljava.util.ResourceBundle;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FACTORY_", NULL, 0x18, "Lfreemarker.ext.util.ModelFactory;", &FreemarkerExtBeansResourceBundleModel_FACTORY_, NULL,  },
    { "formats_", NULL, 0x2, "Ljava.util.Hashtable;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansResourceBundleModel = { 2, "ResourceBundleModel", "freemarker.ext.beans", NULL, 0x1, 8, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansResourceBundleModel;
}

@end


#line 69
void FreemarkerExtBeansResourceBundleModel_initWithJavaUtilResourceBundle_withFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansResourceBundleModel *self, JavaUtilResourceBundle *bundle, FreemarkerExtBeansBeansWrapper *wrapper) {
  (void) FreemarkerExtBeansBeanModel_initWithId_withFreemarkerExtBeansBeansWrapper_(self,
#line 71
  bundle, wrapper);
  self->formats_ =
#line 67
  nil;
}


#line 69
FreemarkerExtBeansResourceBundleModel *new_FreemarkerExtBeansResourceBundleModel_initWithJavaUtilResourceBundle_withFreemarkerExtBeansBeansWrapper_(JavaUtilResourceBundle *bundle, FreemarkerExtBeansBeansWrapper *wrapper) {
  FreemarkerExtBeansResourceBundleModel *self = [FreemarkerExtBeansResourceBundleModel alloc];
  FreemarkerExtBeansResourceBundleModel_initWithJavaUtilResourceBundle_withFreemarkerExtBeansBeansWrapper_(self, bundle, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansResourceBundleModel)

@implementation FreemarkerExtBeansResourceBundleModel_$1


#line 61
- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  
#line 63
  return new_FreemarkerExtBeansResourceBundleModel_initWithJavaUtilResourceBundle_withFreemarkerExtBeansBeansWrapper_((JavaUtilResourceBundle *) check_class_cast(object, [JavaUtilResourceBundle class]), (FreemarkerExtBeansBeansWrapper *) check_class_cast(wrapper, [FreemarkerExtBeansBeansWrapper class]));
}

- (instancetype)init {
  FreemarkerExtBeansResourceBundleModel_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createWithId:withFreemarkerTemplateObjectWrapper:", "create", "Lfreemarker.template.TemplateModel;", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansResourceBundleModel_$1 = { 2, "", "freemarker.ext.beans", "ResourceBundleModel", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansResourceBundleModel_$1;
}

@end

void FreemarkerExtBeansResourceBundleModel_$1_init(FreemarkerExtBeansResourceBundleModel_$1 *self) {
  (void) NSObject_init(self);
}

FreemarkerExtBeansResourceBundleModel_$1 *new_FreemarkerExtBeansResourceBundleModel_$1_init() {
  FreemarkerExtBeansResourceBundleModel_$1 *self = [FreemarkerExtBeansResourceBundleModel_$1 alloc];
  FreemarkerExtBeansResourceBundleModel_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansResourceBundleModel_$1)
