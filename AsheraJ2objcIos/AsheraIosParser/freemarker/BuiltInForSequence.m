//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/BuiltInForSequence.java
//


#include "BuiltIn.h"
#include "BuiltInForSequence.h"
#include "Environment.h"
#include "Expression.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "NonSequenceException.h"
#include "TemplateException.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "TemplateSequenceModel.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/BuiltInForSequence.java"


#line 24
@implementation FreemarkerCoreBuiltInForSequence


#line 25
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  
#line 28
  id<FreemarkerTemplateTemplateModel> model = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  if (!([FreemarkerTemplateTemplateSequenceModel_class_() isInstance:model])) {
    @throw new_FreemarkerCoreNonSequenceException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(target_, model, env);
  }
  return [self calculateResultWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateSequenceModel))];
}


#line 34
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)tsm {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (instancetype)init {
  FreemarkerCoreBuiltInForSequence_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "calculateResultWithFreemarkerTemplateTemplateSequenceModel:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x400, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInForSequence = { 2, "BuiltInForSequence", "freemarker.core", NULL, 0x400, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInForSequence;
}

@end

void FreemarkerCoreBuiltInForSequence_init(FreemarkerCoreBuiltInForSequence *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInForSequence)
