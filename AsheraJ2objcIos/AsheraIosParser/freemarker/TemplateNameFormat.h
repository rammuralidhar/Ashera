//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/TemplateNameFormat.java
//

#ifndef _FreemarkerCacheTemplateNameFormat_H_
#define _FreemarkerCacheTemplateNameFormat_H_

#include "J2ObjC_header.h"

/**
 @brief Symbolized template name format.
 The API of this class isn't exposed as it's too immature, so custom template name formats aren't possible yet.
 @since 2.3.22
 */
@interface FreemarkerCacheTemplateNameFormat : NSObject

#pragma mark Package-Private

/**
 @return For backward compatibility only, <code>null</code> is allowed and will be treated as if the template doesn't exist (despite that a normalizer doesn't access the storage, so it's not its duty to decide that).
 */
- (NSString *)normalizeAbsoluteNameWithNSString:(NSString *)name;

/**
 @param baseName Maybe <code>null</code> , maybe a "file" name instead of a "directory" name.
 @param targetName No <code>null</code> . Maybe relative, maybe absolute.
 */
- (NSString *)toAbsoluteNameWithNSString:(NSString *)baseName
                            withNSString:(NSString *)targetName;

@end

J2OBJC_STATIC_INIT(FreemarkerCacheTemplateNameFormat)

FOUNDATION_EXPORT FreemarkerCacheTemplateNameFormat *FreemarkerCacheTemplateNameFormat_DEFAULT_2_3_0_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCacheTemplateNameFormat, DEFAULT_2_3_0_, FreemarkerCacheTemplateNameFormat *)

FOUNDATION_EXPORT FreemarkerCacheTemplateNameFormat *FreemarkerCacheTemplateNameFormat_DEFAULT_2_4_0_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCacheTemplateNameFormat, DEFAULT_2_4_0_, FreemarkerCacheTemplateNameFormat *)

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCacheTemplateNameFormat)

#endif // _FreemarkerCacheTemplateNameFormat_H_
