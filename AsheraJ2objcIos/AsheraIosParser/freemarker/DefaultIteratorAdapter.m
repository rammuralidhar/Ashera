//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/DefaultIteratorAdapter.java
//


#include "DefaultIteratorAdapter.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "ObjectWrapper.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "TemplateModelIterator.h"
#include "WrappingTemplateModel.h"
#include "java/util/Iterator.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/DefaultIteratorAdapter.java"

@interface FreemarkerTemplateDefaultIteratorAdapter () {
 @public
  id<JavaUtilIterator> iterator_;
  jboolean iteratorOwned_;
}

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)iterator
     withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

@end

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultIteratorAdapter, iterator_, id<JavaUtilIterator>)

__attribute__((unused)) static void FreemarkerTemplateDefaultIteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultIteratorAdapter *self, id<JavaUtilIterator> iterator, id<FreemarkerTemplateObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultIteratorAdapter *new_FreemarkerTemplateDefaultIteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(id<JavaUtilIterator> iterator, id<FreemarkerTemplateObjectWrapper> wrapper) NS_RETURNS_RETAINED;

/**
 @brief Not thread-safe.
 */
@interface FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator : NSObject < FreemarkerTemplateTemplateModelIterator > {
 @public
  FreemarkerTemplateDefaultIteratorAdapter *this$0_;
  jboolean iteratorOwnedByMe_;
}

- (id<FreemarkerTemplateTemplateModel>)next;

- (jboolean)hasNext;

- (void)takeIteratorOwnership;

- (instancetype)initWithFreemarkerTemplateDefaultIteratorAdapter:(FreemarkerTemplateDefaultIteratorAdapter *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator)

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator, this$0_, FreemarkerTemplateDefaultIteratorAdapter *)

__attribute__((unused)) static void FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator_takeIteratorOwnership(FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator *self);

__attribute__((unused)) static void FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator_initWithFreemarkerTemplateDefaultIteratorAdapter_(FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator *self, FreemarkerTemplateDefaultIteratorAdapter *outer$);

__attribute__((unused)) static FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator *new_FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator_initWithFreemarkerTemplateDefaultIteratorAdapter_(FreemarkerTemplateDefaultIteratorAdapter *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator)


#line 39
@implementation FreemarkerTemplateDefaultIteratorAdapter


#line 51
+ (FreemarkerTemplateDefaultIteratorAdapter *)adaptWithJavaUtilIterator:(id<JavaUtilIterator>)iterator
                                    withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  return FreemarkerTemplateDefaultIteratorAdapter_adaptWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(iterator, wrapper);
}


#line 55
- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)iterator
     withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultIteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(self, iterator, wrapper);
  return self;
}


#line 60
- (id)getWrappedObject {
  return iterator_;
}

- (id)getAdaptedObjectWithIOSClass:(IOSClass *)hint {
  return [self getWrappedObject];
}

- (id<FreemarkerTemplateTemplateModelIterator>)iterator {
  return new_FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator_initWithFreemarkerTemplateDefaultIteratorAdapter_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "adaptWithJavaUtilIterator:withFreemarkerTemplateObjectWrapper:", "adapt", "Lfreemarker.template.DefaultIteratorAdapter;", 0x9, NULL, NULL },
    { "initWithJavaUtilIterator:withFreemarkerTemplateObjectWrapper:", "DefaultIteratorAdapter", NULL, 0x2, NULL, NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getAdaptedObjectWithIOSClass:", "getAdaptedObject", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "iterator", NULL, "Lfreemarker.template.TemplateModelIterator;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "iterator_", NULL, 0x12, "Ljava.util.Iterator;", NULL, NULL,  },
    { "iteratorOwned_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lfreemarker.template.DefaultIteratorAdapter$SimpleTemplateModelIterator;"};
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultIteratorAdapter = { 2, "DefaultIteratorAdapter", "freemarker.template", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_FreemarkerTemplateDefaultIteratorAdapter;
}

@end


#line 51
FreemarkerTemplateDefaultIteratorAdapter *FreemarkerTemplateDefaultIteratorAdapter_adaptWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(id<JavaUtilIterator> iterator, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultIteratorAdapter_initialize();
  
#line 52
  return new_FreemarkerTemplateDefaultIteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(iterator, wrapper);
}


#line 55
void FreemarkerTemplateDefaultIteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultIteratorAdapter *self, id<JavaUtilIterator> iterator, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) FreemarkerTemplateWrappingTemplateModel_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  self->iterator_ = iterator;
}


#line 55
FreemarkerTemplateDefaultIteratorAdapter *new_FreemarkerTemplateDefaultIteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(id<JavaUtilIterator> iterator, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultIteratorAdapter *self = [FreemarkerTemplateDefaultIteratorAdapter alloc];
  FreemarkerTemplateDefaultIteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(self, iterator, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultIteratorAdapter)


#line 75
@implementation FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator


#line 79
- (id<FreemarkerTemplateTemplateModel>)next {
  if (!iteratorOwnedByMe_) {
    FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator_takeIteratorOwnership(self);
  }
  
#line 84
  if (![((id<JavaUtilIterator>) nil_chk(this$0_->iterator_)) hasNext]) {
    @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_(@"The collection has no more items.");
  }
  
#line 88
  id value = [this$0_->iterator_ next];
  return [FreemarkerTemplateTemplateModel_class_() isInstance:value] ? (id<FreemarkerTemplateTemplateModel>) check_protocol_cast(value, @protocol(FreemarkerTemplateTemplateModel)) : [this$0_ wrapWithId:value];
}


#line 92
- (jboolean)hasNext {
  
#line 94
  if (!iteratorOwnedByMe_) {
    FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator_takeIteratorOwnership(self);
  }
  
#line 98
  return [((id<JavaUtilIterator>) nil_chk(this$0_->iterator_)) hasNext];
}


#line 101
- (void)takeIteratorOwnership {
  FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator_takeIteratorOwnership(self);
}

- (instancetype)initWithFreemarkerTemplateDefaultIteratorAdapter:(FreemarkerTemplateDefaultIteratorAdapter *)outer$ {
  FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator_initWithFreemarkerTemplateDefaultIteratorAdapter_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "next", NULL, "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "hasNext", NULL, "Z", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "takeIteratorOwnership", NULL, "V", 0x2, "Lfreemarker.template.TemplateModelException;", NULL },
    { "initWithFreemarkerTemplateDefaultIteratorAdapter:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.template.DefaultIteratorAdapter;", NULL, NULL,  },
    { "iteratorOwnedByMe_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator = { 2, "SimpleTemplateModelIterator", "freemarker.template", "DefaultIteratorAdapter", 0x2, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator;
}

@end


#line 101
void FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator_takeIteratorOwnership(FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator *self) {
  if (self->this$0_->iteratorOwned_) {
    @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_(
#line 104
    @"This collection value wraps a java.util.Iterator, thus it can be listed only once.");
  }
  else {
    
#line 106
    self->this$0_->iteratorOwned_ = YES;
    self->iteratorOwnedByMe_ = YES;
  }
}

void FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator_initWithFreemarkerTemplateDefaultIteratorAdapter_(FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator *self, FreemarkerTemplateDefaultIteratorAdapter *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator *new_FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator_initWithFreemarkerTemplateDefaultIteratorAdapter_(FreemarkerTemplateDefaultIteratorAdapter *outer$) {
  FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator *self = [FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator alloc];
  FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator_initWithFreemarkerTemplateDefaultIteratorAdapter_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultIteratorAdapter_SimpleTemplateModelIterator)
