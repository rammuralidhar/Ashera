//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/_ObjectBuilderSettingEvaluator.java
//


#include "BeansWrapper.h"
#include "ClassUtil.h"
#include "DefaultObjectWrapper.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "ParseException.h"
#include "SimpleObjectWrapper.h"
#include "StringUtil.h"
#include "TemplateHashModel.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "Version.h"
#include "WriteProtectable.h"
#include "_ObjectBuilderSettingEvaluationException.h"
#include "_ObjectBuilderSettingEvaluator.h"
#include "_SettingEvaluationEnvironment.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Modifier.h"
#include "java/math/BigDecimal.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@class FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression;
@class FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters;

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/_ObjectBuilderSettingEvaluator.java"

@interface FreemarkerCore_ObjectBuilderSettingEvaluator () {
 @public
  NSString *src_;
  IOSClass *expectedClass_;
  FreemarkerCore_SettingEvaluationEnvironment *env_;
  jint pos_;
  jboolean v2321Mode_;
}

- (instancetype)initWithNSString:(NSString *)src
                         withInt:(jint)pos
                    withIOSClass:(IOSClass *)expectedClass
withFreemarkerCore_SettingEvaluationEnvironment:(FreemarkerCore_SettingEvaluationEnvironment *)env;

- (id)eval;

- (jint)configureBeanWithId:(id)bean;

- (FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *)parse;

- (id)executeWithFreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression:(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *)exp;

- (id)evalWithId:(id)value;

- (FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *)fetchBuilderCallWithBoolean:(jboolean)topLevel
                                                                                    withBoolean:(jboolean)optional;

- (void)fetchParameterListIntoWithFreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters:(FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters *)exp;

- (id)fetchValueOrNameWithBoolean:(jboolean)optional;

- (NSString *)fetchSimpleNameWithBoolean:(jboolean)optional;

- (NSString *)fetchClassNameWithBoolean:(jboolean)optional;

- (id)fetchNumberLikeWithBoolean:(jboolean)optional;

- (id)fetchStringLiteralWithBoolean:(jboolean)optional;

- (void)skipWS;

- (jchar)fetchOptionalCharWithNSString:(NSString *)expectedChars;

- (jchar)fetchRequiredCharWithNSString:(NSString *)expectedChars;

- (jchar)fetchCharWithNSString:(NSString *)expectedChars
                   withBoolean:(jboolean)optional;

- (jboolean)isASCIIDigitWithChar:(jchar)c;

- (jboolean)isIdentifierStartWithChar:(jchar)c;

- (jboolean)isIdentifierMiddleWithChar:(jchar)c;

+ (NSString *)shorthandToFullQualifiedWithNSString:(NSString *)className_;

- (void)setJavaBeanPropertiesWithId:(id)bean
                   withJavaUtilList:(id<JavaUtilList>)namedParamNames
                   withJavaUtilList:(id<JavaUtilList>)namedParamValues;

@end

J2OBJC_FIELD_SETTER(FreemarkerCore_ObjectBuilderSettingEvaluator, src_, NSString *)
J2OBJC_FIELD_SETTER(FreemarkerCore_ObjectBuilderSettingEvaluator, expectedClass_, IOSClass *)
J2OBJC_FIELD_SETTER(FreemarkerCore_ObjectBuilderSettingEvaluator, env_, FreemarkerCore_SettingEvaluationEnvironment *)

static NSString *FreemarkerCore_ObjectBuilderSettingEvaluator_INSTANCE_FIELD_NAME_ = 
#line 54
@"INSTANCE";
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCore_ObjectBuilderSettingEvaluator, INSTANCE_FIELD_NAME_, NSString *)

static NSString *FreemarkerCore_ObjectBuilderSettingEvaluator_BUILD_METHOD_NAME_ = 
#line 56
@"build";
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCore_ObjectBuilderSettingEvaluator, BUILD_METHOD_NAME_, NSString *)

static NSString *FreemarkerCore_ObjectBuilderSettingEvaluator_BUILDER_CLASS_POSTFIX_ = 
#line 58
@"Builder";
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCore_ObjectBuilderSettingEvaluator, BUILDER_CLASS_POSTFIX_, NSString *)

static id<JavaUtilMap> FreemarkerCore_ObjectBuilderSettingEvaluator_SHORTHANDS_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCore_ObjectBuilderSettingEvaluator, SHORTHANDS_, id<JavaUtilMap>)
J2OBJC_STATIC_FIELD_SETTER(FreemarkerCore_ObjectBuilderSettingEvaluator, SHORTHANDS_, id<JavaUtilMap>)

__attribute__((unused)) static void FreemarkerCore_ObjectBuilderSettingEvaluator_initWithNSString_withInt_withIOSClass_withFreemarkerCore_SettingEvaluationEnvironment_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, NSString *src, jint pos, IOSClass *expectedClass, FreemarkerCore_SettingEvaluationEnvironment *env);

__attribute__((unused)) static FreemarkerCore_ObjectBuilderSettingEvaluator *new_FreemarkerCore_ObjectBuilderSettingEvaluator_initWithNSString_withInt_withIOSClass_withFreemarkerCore_SettingEvaluationEnvironment_(NSString *src, jint pos, IOSClass *expectedClass, FreemarkerCore_SettingEvaluationEnvironment *env) NS_RETURNS_RETAINED;

__attribute__((unused)) static id FreemarkerCore_ObjectBuilderSettingEvaluator_eval(FreemarkerCore_ObjectBuilderSettingEvaluator *self);

__attribute__((unused)) static jint FreemarkerCore_ObjectBuilderSettingEvaluator_configureBeanWithId_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, id bean);

__attribute__((unused)) static FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *FreemarkerCore_ObjectBuilderSettingEvaluator_parse(FreemarkerCore_ObjectBuilderSettingEvaluator *self);

__attribute__((unused)) static id FreemarkerCore_ObjectBuilderSettingEvaluator_executeWithFreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *exp);

__attribute__((unused)) static id FreemarkerCore_ObjectBuilderSettingEvaluator_evalWithId_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, id value);

__attribute__((unused)) static FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *FreemarkerCore_ObjectBuilderSettingEvaluator_fetchBuilderCallWithBoolean_withBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jboolean topLevel, jboolean optional);

__attribute__((unused)) static void FreemarkerCore_ObjectBuilderSettingEvaluator_fetchParameterListIntoWithFreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters *exp);

__attribute__((unused)) static id FreemarkerCore_ObjectBuilderSettingEvaluator_fetchValueOrNameWithBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jboolean optional);

__attribute__((unused)) static NSString *FreemarkerCore_ObjectBuilderSettingEvaluator_fetchSimpleNameWithBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jboolean optional);

__attribute__((unused)) static NSString *FreemarkerCore_ObjectBuilderSettingEvaluator_fetchClassNameWithBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jboolean optional);

__attribute__((unused)) static id FreemarkerCore_ObjectBuilderSettingEvaluator_fetchNumberLikeWithBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jboolean optional);

__attribute__((unused)) static id FreemarkerCore_ObjectBuilderSettingEvaluator_fetchStringLiteralWithBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jboolean optional);

__attribute__((unused)) static void FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(FreemarkerCore_ObjectBuilderSettingEvaluator *self);

__attribute__((unused)) static jchar FreemarkerCore_ObjectBuilderSettingEvaluator_fetchOptionalCharWithNSString_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, NSString *expectedChars);

__attribute__((unused)) static jchar FreemarkerCore_ObjectBuilderSettingEvaluator_fetchRequiredCharWithNSString_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, NSString *expectedChars);

__attribute__((unused)) static jchar FreemarkerCore_ObjectBuilderSettingEvaluator_fetchCharWithNSString_withBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, NSString *expectedChars, jboolean optional);

__attribute__((unused)) static jboolean FreemarkerCore_ObjectBuilderSettingEvaluator_isASCIIDigitWithChar_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jchar c);

__attribute__((unused)) static jboolean FreemarkerCore_ObjectBuilderSettingEvaluator_isIdentifierStartWithChar_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jchar c);

__attribute__((unused)) static jboolean FreemarkerCore_ObjectBuilderSettingEvaluator_isIdentifierMiddleWithChar_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jchar c);

__attribute__((unused)) static NSString *FreemarkerCore_ObjectBuilderSettingEvaluator_shorthandToFullQualifiedWithNSString_(NSString *className_);

__attribute__((unused)) static void FreemarkerCore_ObjectBuilderSettingEvaluator_setJavaBeanPropertiesWithId_withJavaUtilList_withJavaUtilList_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, id bean, id<JavaUtilList> namedParamNames, id<JavaUtilList> namedParamValues);

@interface FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName : NSObject {
 @public
  NSString *name_;
}

- (instancetype)initWithNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName)

J2OBJC_FIELD_SETTER(FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName, name_, NSString *)

__attribute__((unused)) static void FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName_initWithNSString_(FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName *self, NSString *name);

__attribute__((unused)) static FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName *new_FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName_initWithNSString_(NSString *name) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName)

@interface FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression : NSObject

- (id)eval;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression)

__attribute__((unused)) static void FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression_init(FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression *self);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression)

@interface FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters : FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression {
 @public
  id<JavaUtilList> positionalParamValues_;
  id<JavaUtilList> namedParamNames_;
  id<JavaUtilList> namedParamValues_;
}

- (jboolean)getAllowPositionalParameters;

- (instancetype)initWithFreemarkerCore_ObjectBuilderSettingEvaluator:(FreemarkerCore_ObjectBuilderSettingEvaluator *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters)

J2OBJC_FIELD_SETTER(FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters, positionalParamValues_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters, namedParamNames_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters, namedParamValues_, id<JavaUtilList>)

__attribute__((unused)) static void FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_(FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters *self, FreemarkerCore_ObjectBuilderSettingEvaluator *outer$);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters)

@interface FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression : FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters {
 @public
  FreemarkerCore_ObjectBuilderSettingEvaluator *this$1_;
  NSString *className__;
}

- (id)eval;

- (id)callConstructorWithIOSClass:(IOSClass *)cl;

- (id)callBuildWithId:(id)constructorResult;

- (jboolean)hasNoParameters;

- (jboolean)getAllowPositionalParameters;

- (instancetype)initWithFreemarkerCore_ObjectBuilderSettingEvaluator:(FreemarkerCore_ObjectBuilderSettingEvaluator *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression)

J2OBJC_FIELD_SETTER(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression, this$1_, FreemarkerCore_ObjectBuilderSettingEvaluator *)
J2OBJC_FIELD_SETTER(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression, className__, NSString *)

__attribute__((unused)) static id FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_callConstructorWithIOSClass_(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *self, IOSClass *cl);

__attribute__((unused)) static id FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_callBuildWithId_(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *self, id constructorResult);

__attribute__((unused)) static jboolean FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_hasNoParameters(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *self);

__attribute__((unused)) static void FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *self, FreemarkerCore_ObjectBuilderSettingEvaluator *outer$);

__attribute__((unused)) static FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *new_FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_(FreemarkerCore_ObjectBuilderSettingEvaluator *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression)

@interface FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression : FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters {
 @public
  FreemarkerCore_ObjectBuilderSettingEvaluator *this$1_;
  id bean_;
}

- (instancetype)initWithFreemarkerCore_ObjectBuilderSettingEvaluator:(FreemarkerCore_ObjectBuilderSettingEvaluator *)outer$
                                                              withId:(id)bean;

- (id)eval;

- (jboolean)getAllowPositionalParameters;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression)

J2OBJC_FIELD_SETTER(FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression, this$1_, FreemarkerCore_ObjectBuilderSettingEvaluator *)
J2OBJC_FIELD_SETTER(FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression, bean_, id)

__attribute__((unused)) static void FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_withId_(FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression *self, FreemarkerCore_ObjectBuilderSettingEvaluator *outer$, id bean);

__attribute__((unused)) static FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression *new_FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_withId_(FreemarkerCore_ObjectBuilderSettingEvaluator *outer$, id bean) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression)

@interface FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression : FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression

- (id)eval;

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression)

static FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression *FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression_INSTANCE_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression, INSTANCE_, FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression *)

__attribute__((unused)) static void FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression_init(FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression *self);

__attribute__((unused)) static FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression *new_FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression)


#line 52
@implementation FreemarkerCore_ObjectBuilderSettingEvaluator


#line 72
- (instancetype)initWithNSString:(NSString *)src
                         withInt:(jint)pos
                    withIOSClass:(IOSClass *)expectedClass
withFreemarkerCore_SettingEvaluationEnvironment:(FreemarkerCore_SettingEvaluationEnvironment *)env {
  FreemarkerCore_ObjectBuilderSettingEvaluator_initWithNSString_withInt_withIOSClass_withFreemarkerCore_SettingEvaluationEnvironment_(self, src, pos, expectedClass, env);
  return self;
}


#line 79
+ (id)evalWithNSString:(NSString *)src
          withIOSClass:(IOSClass *)expectedClass
withFreemarkerCore_SettingEvaluationEnvironment:(FreemarkerCore_SettingEvaluationEnvironment *)env {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_evalWithNSString_withIOSClass_withFreemarkerCore_SettingEvaluationEnvironment_(src, expectedClass, env);
}


#line 90
+ (jint)configureBeanWithNSString:(NSString *)argumentListSrc
                          withInt:(jint)posAfterOpenParen
                           withId:(id)bean
withFreemarkerCore_SettingEvaluationEnvironment:(FreemarkerCore_SettingEvaluationEnvironment *)env {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_configureBeanWithNSString_withInt_withId_withFreemarkerCore_SettingEvaluationEnvironment_(argumentListSrc, posAfterOpenParen, bean, env);
}


#line 96
- (id)eval {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_eval(self);
}


#line 101
- (jint)configureBeanWithId:(id)bean {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_configureBeanWithId_(self, bean);
}


#line 110
- (FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *)parse {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_parse(self);
}


#line 120
- (id)executeWithFreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression:(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *)exp {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_executeWithFreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_(self, exp);
}


#line 130
- (id)evalWithId:(id)value {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_evalWithId_(self, value);
}

- (FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *)fetchBuilderCallWithBoolean:(jboolean)topLevel
                                                                                    withBoolean:(jboolean)optional {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_fetchBuilderCallWithBoolean_withBoolean_(self, topLevel, optional);
}


#line 171
- (void)fetchParameterListIntoWithFreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters:(FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters *)exp {
  FreemarkerCore_ObjectBuilderSettingEvaluator_fetchParameterListIntoWithFreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters_(self, exp);
}


#line 214
- (id)fetchValueOrNameWithBoolean:(jboolean)optional {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_fetchValueOrNameWithBoolean_(self, optional);
}


#line 247
- (NSString *)fetchSimpleNameWithBoolean:(jboolean)optional {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_fetchSimpleNameWithBoolean_(self, optional);
}


#line 273
- (NSString *)fetchClassNameWithBoolean:(jboolean)optional {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_fetchClassNameWithBoolean_(self, optional);
}


#line 302
- (id)fetchNumberLikeWithBoolean:(jboolean)optional {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_fetchNumberLikeWithBoolean_(self, optional);
}


#line 354
- (id)fetchStringLiteralWithBoolean:(jboolean)optional {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_fetchStringLiteralWithBoolean_(self, optional);
}


#line 421
- (void)skipWS {
  FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
}


#line 434
- (jchar)fetchOptionalCharWithNSString:(NSString *)expectedChars {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_fetchOptionalCharWithNSString_(self, expectedChars);
}

- (jchar)fetchRequiredCharWithNSString:(NSString *)expectedChars {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_fetchRequiredCharWithNSString_(self, expectedChars);
}

- (jchar)fetchCharWithNSString:(NSString *)expectedChars
                   withBoolean:(jboolean)optional {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_fetchCharWithNSString_withBoolean_(self, expectedChars, optional);
}


#line 466
- (jboolean)isASCIIDigitWithChar:(jchar)c {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_isASCIIDigitWithChar_(self, c);
}

- (jboolean)isIdentifierStartWithChar:(jchar)c {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_isIdentifierStartWithChar_(self, c);
}

- (jboolean)isIdentifierMiddleWithChar:(jchar)c {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_isIdentifierMiddleWithChar_(self, c);
}

+ (NSString *)shorthandToFullQualifiedWithNSString:(NSString *)className_ {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_shorthandToFullQualifiedWithNSString_(className_);
}


#line 489
- (void)setJavaBeanPropertiesWithId:(id)bean
                   withJavaUtilList:(id<JavaUtilList>)namedParamNames
                   withJavaUtilList:(id<JavaUtilList>)namedParamValues {
  FreemarkerCore_ObjectBuilderSettingEvaluator_setJavaBeanPropertiesWithId_withJavaUtilList_withJavaUtilList_(self, bean, namedParamNames, namedParamValues);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:withIOSClass:withFreemarkerCore_SettingEvaluationEnvironment:", "_ObjectBuilderSettingEvaluator", NULL, 0x2, NULL, NULL },
    { "evalWithNSString:withIOSClass:withFreemarkerCore_SettingEvaluationEnvironment:", "eval", "Ljava.lang.Object;", 0x9, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;Ljava.lang.ClassNotFoundException;Ljava.lang.InstantiationException;Ljava.lang.IllegalAccessException;", NULL },
    { "configureBeanWithNSString:withInt:withId:withFreemarkerCore_SettingEvaluationEnvironment:", "configureBean", "I", 0x9, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;Ljava.lang.ClassNotFoundException;Ljava.lang.InstantiationException;Ljava.lang.IllegalAccessException;", NULL },
    { "eval", NULL, "Ljava.lang.Object;", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;Ljava.lang.ClassNotFoundException;Ljava.lang.InstantiationException;Ljava.lang.IllegalAccessException;", NULL },
    { "configureBeanWithId:", "configureBean", "I", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;Ljava.lang.ClassNotFoundException;Ljava.lang.InstantiationException;Ljava.lang.IllegalAccessException;", NULL },
    { "parse", NULL, "Lfreemarker.core._ObjectBuilderSettingEvaluator$BuilderExpression;", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "executeWithFreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression:", "execute", "Ljava.lang.Object;", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;Ljava.lang.ClassNotFoundException;Ljava.lang.InstantiationException;Ljava.lang.IllegalAccessException;", NULL },
    { "evalWithId:", "eval", "Ljava.lang.Object;", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "fetchBuilderCallWithBoolean:withBoolean:", "fetchBuilderCall", "Lfreemarker.core._ObjectBuilderSettingEvaluator$BuilderExpression;", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "fetchParameterListIntoWithFreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters:", "fetchParameterListInto", "V", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "fetchValueOrNameWithBoolean:", "fetchValueOrName", "Ljava.lang.Object;", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "fetchSimpleNameWithBoolean:", "fetchSimpleName", "Ljava.lang.String;", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "fetchClassNameWithBoolean:", "fetchClassName", "Ljava.lang.String;", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "fetchNumberLikeWithBoolean:", "fetchNumberLike", "Ljava.lang.Object;", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "fetchStringLiteralWithBoolean:", "fetchStringLiteral", "Ljava.lang.Object;", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "skipWS", NULL, "V", 0x2, NULL, NULL },
    { "fetchOptionalCharWithNSString:", "fetchOptionalChar", "C", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "fetchRequiredCharWithNSString:", "fetchRequiredChar", "C", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "fetchCharWithNSString:withBoolean:", "fetchChar", "C", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "isASCIIDigitWithChar:", "isASCIIDigit", "Z", 0x2, NULL, NULL },
    { "isIdentifierStartWithChar:", "isIdentifierStart", "Z", 0x2, NULL, NULL },
    { "isIdentifierMiddleWithChar:", "isIdentifierMiddle", "Z", 0x2, NULL, NULL },
    { "shorthandToFullQualifiedWithNSString:", "shorthandToFullQualified", "Ljava.lang.String;", 0x2a, NULL, NULL },
    { "setJavaBeanPropertiesWithId:withJavaUtilList:withJavaUtilList:", "setJavaBeanProperties", "V", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE_FIELD_NAME_", NULL, 0x1a, "Ljava.lang.String;", &FreemarkerCore_ObjectBuilderSettingEvaluator_INSTANCE_FIELD_NAME_, NULL,  },
    { "BUILD_METHOD_NAME_", NULL, 0x1a, "Ljava.lang.String;", &FreemarkerCore_ObjectBuilderSettingEvaluator_BUILD_METHOD_NAME_, NULL,  },
    { "BUILDER_CLASS_POSTFIX_", NULL, 0x1a, "Ljava.lang.String;", &FreemarkerCore_ObjectBuilderSettingEvaluator_BUILDER_CLASS_POSTFIX_, NULL,  },
    { "SHORTHANDS_", NULL, 0xa, "Ljava.util.Map;", &FreemarkerCore_ObjectBuilderSettingEvaluator_SHORTHANDS_, NULL,  },
    { "src_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL,  },
    { "expectedClass_", NULL, 0x12, "Ljava.lang.Class;", NULL, NULL,  },
    { "env_", NULL, 0x12, "Lfreemarker.core._SettingEvaluationEnvironment;", NULL, NULL,  },
    { "pos_", NULL, 0x2, "I", NULL, NULL,  },
    { "v2321Mode_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lfreemarker.core._ObjectBuilderSettingEvaluator$ParameterName;", "Lfreemarker.core._ObjectBuilderSettingEvaluator$SettingExpression;", "Lfreemarker.core._ObjectBuilderSettingEvaluator$ExpressionWithParameters;", "Lfreemarker.core._ObjectBuilderSettingEvaluator$BuilderExpression;", "Lfreemarker.core._ObjectBuilderSettingEvaluator$PropertyAssignmentsExpression;", "Lfreemarker.core._ObjectBuilderSettingEvaluator$NullExpression;"};
  static const J2ObjcClassInfo _FreemarkerCore_ObjectBuilderSettingEvaluator = { 2, "_ObjectBuilderSettingEvaluator", "freemarker.core", NULL, 0x1, 24, methods, 9, fields, 0, NULL, 6, inner_classes, NULL, NULL };
  return &_FreemarkerCore_ObjectBuilderSettingEvaluator;
}

@end


#line 72
void FreemarkerCore_ObjectBuilderSettingEvaluator_initWithNSString_withInt_withIOSClass_withFreemarkerCore_SettingEvaluationEnvironment_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, NSString *src, jint pos, IOSClass *expectedClass, FreemarkerCore_SettingEvaluationEnvironment *env) {
  (void) NSObject_init(self);
  self->v2321Mode_ =
#line 70
  NO;
  
#line 73
  self->src_ = src;
  self->pos_ = pos;
  self->expectedClass_ = expectedClass;
  self->env_ = env;
}


#line 72
FreemarkerCore_ObjectBuilderSettingEvaluator *new_FreemarkerCore_ObjectBuilderSettingEvaluator_initWithNSString_withInt_withIOSClass_withFreemarkerCore_SettingEvaluationEnvironment_(NSString *src, jint pos, IOSClass *expectedClass, FreemarkerCore_SettingEvaluationEnvironment *env) {
  FreemarkerCore_ObjectBuilderSettingEvaluator *self = [FreemarkerCore_ObjectBuilderSettingEvaluator alloc];
  FreemarkerCore_ObjectBuilderSettingEvaluator_initWithNSString_withInt_withIOSClass_withFreemarkerCore_SettingEvaluationEnvironment_(self, src, pos, expectedClass, env);
  return self;
}


#line 79
id FreemarkerCore_ObjectBuilderSettingEvaluator_evalWithNSString_withIOSClass_withFreemarkerCore_SettingEvaluationEnvironment_(NSString *src, IOSClass *expectedClass, FreemarkerCore_SettingEvaluationEnvironment *env) {
  FreemarkerCore_ObjectBuilderSettingEvaluator_initialize();
  return FreemarkerCore_ObjectBuilderSettingEvaluator_eval(new_FreemarkerCore_ObjectBuilderSettingEvaluator_initWithNSString_withInt_withIOSClass_withFreemarkerCore_SettingEvaluationEnvironment_(src, 0, expectedClass, env));
}


#line 90
jint FreemarkerCore_ObjectBuilderSettingEvaluator_configureBeanWithNSString_withInt_withId_withFreemarkerCore_SettingEvaluationEnvironment_(NSString *argumentListSrc, jint posAfterOpenParen, id bean, FreemarkerCore_SettingEvaluationEnvironment *env) {
  FreemarkerCore_ObjectBuilderSettingEvaluator_initialize();
  
#line 93
  return FreemarkerCore_ObjectBuilderSettingEvaluator_configureBeanWithId_(new_FreemarkerCore_ObjectBuilderSettingEvaluator_initWithNSString_withInt_withIOSClass_withFreemarkerCore_SettingEvaluationEnvironment_(argumentListSrc, posAfterOpenParen, [nil_chk(bean) getClass], env), bean);
}


#line 96
id FreemarkerCore_ObjectBuilderSettingEvaluator_eval(FreemarkerCore_ObjectBuilderSettingEvaluator *self) {
  
#line 98
  return FreemarkerCore_ObjectBuilderSettingEvaluator_executeWithFreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_(self, FreemarkerCore_ObjectBuilderSettingEvaluator_parse(self));
}


#line 101
jint FreemarkerCore_ObjectBuilderSettingEvaluator_configureBeanWithId_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, id bean) {
  
#line 103
  FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression *propAssignments = new_FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_withId_(self, bean);
  FreemarkerCore_ObjectBuilderSettingEvaluator_fetchParameterListIntoWithFreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters_(self, propAssignments);
  FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
  (void) [propAssignments eval];
  return self->pos_;
}


#line 110
FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *FreemarkerCore_ObjectBuilderSettingEvaluator_parse(FreemarkerCore_ObjectBuilderSettingEvaluator *self) {
  FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
  FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *exp = FreemarkerCore_ObjectBuilderSettingEvaluator_fetchBuilderCallWithBoolean_withBoolean_(self, YES, NO);
  FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
  if (self->pos_ != ((jint) [((NSString *) nil_chk(self->src_)) length])) {
    @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withNSString_withInt_(@"end-of-expression", self->src_, self->pos_);
  }
  return exp;
}

id FreemarkerCore_ObjectBuilderSettingEvaluator_executeWithFreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *exp) {
  
#line 123
  if (!self->v2321Mode_) {
    return [((IOSClass *) nil_chk(FreemarkerTemplateUtilityClassUtil_forNameWithNSString_(((FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *) nil_chk(exp))->className__))) newInstance];
  }
  else {
    
#line 126
    return [((FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *) nil_chk(exp)) eval];
  }
}


#line 130
id FreemarkerCore_ObjectBuilderSettingEvaluator_evalWithId_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, id value) {
  return [value isKindOfClass:[FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression class]] ? [((FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression *) nil_chk(((FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression *) check_class_cast(value, [FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression class])))) eval] : value;
}

FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *FreemarkerCore_ObjectBuilderSettingEvaluator_fetchBuilderCallWithBoolean_withBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jboolean topLevel, jboolean optional) {
  
#line 136
  jint startPos = self->pos_;
  
#line 138
  FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *exp = new_FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_(self);
  {
    
#line 141
    NSString *fetchedClassName = FreemarkerCore_ObjectBuilderSettingEvaluator_fetchClassNameWithBoolean_(self, optional);
    if (fetchedClassName == nil) {
      return nil;
    }
    exp->className__ = FreemarkerCore_ObjectBuilderSettingEvaluator_shorthandToFullQualifiedWithNSString_(fetchedClassName);
    if (![((NSString *) nil_chk(fetchedClassName)) isEqual:exp->className__]) {
      
#line 148
      self->v2321Mode_ = YES;
    }
  }
  
#line 152
  FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
  
#line 154
  jchar openParen = FreemarkerCore_ObjectBuilderSettingEvaluator_fetchOptionalCharWithNSString_(self, @"(");
  
#line 156
  if (openParen == 0 && !topLevel) {
    if (!optional) {
      @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withNSString_withInt_(@"(", self->src_, self->pos_);
    }
    self->pos_ = startPos;
    return nil;
  }
  
#line 164
  if (openParen != 0) {
    FreemarkerCore_ObjectBuilderSettingEvaluator_fetchParameterListIntoWithFreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters_(self, exp);
  }
  
#line 168
  return exp;
}


#line 171
void FreemarkerCore_ObjectBuilderSettingEvaluator_fetchParameterListIntoWithFreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters *exp) {
  
#line 173
  self->v2321Mode_ = YES;
  
#line 175
  FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
  if (FreemarkerCore_ObjectBuilderSettingEvaluator_fetchOptionalCharWithNSString_(self, @")") != ')') {
    do {
      FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
      
#line 180
      id paramNameOrValue = FreemarkerCore_ObjectBuilderSettingEvaluator_fetchValueOrNameWithBoolean_(self, NO);
      if (paramNameOrValue != nil) {
        FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
        if ([paramNameOrValue isKindOfClass:[FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName class]]) {
          [((id<JavaUtilList>) nil_chk(((FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters *) nil_chk(exp))->namedParamNames_)) addWithId:((FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName *) check_class_cast(paramNameOrValue, [FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName class]))->name_];
          
#line 186
          FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
          FreemarkerCore_ObjectBuilderSettingEvaluator_fetchRequiredCharWithNSString_(self, @"=");
          FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
          
#line 190
          jint paramValPos = self->pos_;
          id paramValue = FreemarkerCore_ObjectBuilderSettingEvaluator_fetchValueOrNameWithBoolean_(self, NO);
          if ([paramValue isKindOfClass:[FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName class]]) {
            @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withNSString_withInt_(@"concrete value", self->src_, paramValPos);
          }
          [((id<JavaUtilList>) nil_chk(exp->namedParamValues_)) addWithId:FreemarkerCore_ObjectBuilderSettingEvaluator_evalWithId_(self, paramValue)];
        }
        else {
          
#line 197
          if (![((id<JavaUtilList>) nil_chk(((FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters *) nil_chk(exp))->namedParamNames_)) isEmpty]) {
            @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_(
#line 199
            @"Positional parameters must precede named parameters");
          }
          if (![exp getAllowPositionalParameters]) {
            @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_(
#line 203
            @"Positional parameters not supported here");
          }
          [((id<JavaUtilList>) nil_chk(exp->positionalParamValues_)) addWithId:FreemarkerCore_ObjectBuilderSettingEvaluator_evalWithId_(self, paramNameOrValue)];
        }
        
#line 208
        FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
      }
    }
    while (
#line 210
    FreemarkerCore_ObjectBuilderSettingEvaluator_fetchRequiredCharWithNSString_(self, @",)") == ',');
  }
}


#line 214
id FreemarkerCore_ObjectBuilderSettingEvaluator_fetchValueOrNameWithBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jboolean optional) {
  if (self->pos_ < ((jint) [((NSString *) nil_chk(self->src_)) length])) {
    id val = FreemarkerCore_ObjectBuilderSettingEvaluator_fetchNumberLikeWithBoolean_(self, YES);
    if (val != nil) {
      return val;
    }
    
#line 221
    val = FreemarkerCore_ObjectBuilderSettingEvaluator_fetchStringLiteralWithBoolean_(self, YES);
    if (val != nil) {
      return val;
    }
    
#line 226
    val = FreemarkerCore_ObjectBuilderSettingEvaluator_fetchBuilderCallWithBoolean_withBoolean_(self, NO, YES);
    if (val != nil) {
      return val;
    }
    
#line 231
    NSString *name = FreemarkerCore_ObjectBuilderSettingEvaluator_fetchSimpleNameWithBoolean_(self, YES);
    if (name != nil) {
      if ([name isEqual:@"true"]) return JavaLangBoolean_get_TRUE__();
      if ([name isEqual:@"false"]) return JavaLangBoolean_get_FALSE__();
      if ([name isEqual:@"null"]) return FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression_get_INSTANCE_();
      return new_FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName_initWithNSString_(name);
    }
  }
  
#line 240
  if (optional) {
    return nil;
  }
  else {
    
#line 243
    @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withNSString_withInt_(@"value or name", self->src_, self->pos_);
  }
}


#line 247
NSString *FreemarkerCore_ObjectBuilderSettingEvaluator_fetchSimpleNameWithBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jboolean optional) {
  jchar c = self->pos_ < ((jint) [((NSString *) nil_chk(self->src_)) length]) ? [self->src_ charAtWithInt:self->pos_] : 0;
  if (!FreemarkerCore_ObjectBuilderSettingEvaluator_isIdentifierStartWithChar_(self, c)) {
    if (optional) {
      return nil;
    }
    else {
      
#line 253
      @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withNSString_withInt_(@"class name", self->src_, self->pos_);
    }
  }
  jint startPos = self->pos_;
  self->pos_++;
  
#line 259
  while (YES) {
    if (self->pos_ == ((jint) [self->src_ length])) {
      goto break_seekClassNameEnd;
    }
    c = [self->src_ charAtWithInt:self->pos_];
    if (!FreemarkerCore_ObjectBuilderSettingEvaluator_isIdentifierMiddleWithChar_(self, c)) {
      goto break_seekClassNameEnd;
    }
    self->pos_++;
  }
  break_seekClassNameEnd: ;
  return [self->src_ substring:startPos endIndex:self->pos_];
}


#line 273
NSString *FreemarkerCore_ObjectBuilderSettingEvaluator_fetchClassNameWithBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jboolean optional) {
  jint startPos = self->pos_;
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  do {
    NSString *name = FreemarkerCore_ObjectBuilderSettingEvaluator_fetchSimpleNameWithBoolean_(self, YES);
    if (name == nil) {
      if (!optional) {
        @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withNSString_withInt_(@"name", self->src_, self->pos_);
      }
      else {
        
#line 282
        self->pos_ = startPos;
        return nil;
      }
    }
    (void) [sb appendWithNSString:name];
    
#line 288
    FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
    
#line 290
    if (self->pos_ >= ((jint) [((NSString *) nil_chk(self->src_)) length]) || [self->src_ charAtWithInt:self->pos_] != '.') {
      break;
    }
    (void) [sb appendWithChar:'.'];
    self->pos_++;
    
#line 296
    FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(self);
  }
  while (
#line 297
  YES);
  
#line 299
  return [sb description];
}


#line 302
id FreemarkerCore_ObjectBuilderSettingEvaluator_fetchNumberLikeWithBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jboolean optional) {
  jint startPos = self->pos_;
  jboolean isVersion = NO;
  jboolean hasDot = NO;
  while (YES) {
    if (self->pos_ == ((jint) [((NSString *) nil_chk(self->src_)) length])) {
      goto break_seekTokenEnd;
    }
    jchar c = [self->src_ charAtWithInt:self->pos_];
    if (c == '.') {
      if (hasDot) {
        
#line 314
        isVersion = YES;
      }
      else {
        
#line 316
        hasDot = YES;
      }
    }
    else
#line 318
    if (!(FreemarkerCore_ObjectBuilderSettingEvaluator_isASCIIDigitWithChar_(self, c) || c == '-')) {
      goto break_seekTokenEnd;
    }
    self->pos_++;
  }
  break_seekTokenEnd: ;
  if (startPos == self->pos_) {
    if (optional) {
      return nil;
    }
    else {
      
#line 328
      @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withNSString_withInt_(@"number-like", self->src_, self->pos_);
    }
  }
  
#line 332
  NSString *tk = [((NSString *) nil_chk(self->src_)) substring:startPos endIndex:self->pos_];
  if (isVersion) {
    @try {
      return new_FreemarkerTemplateVersion_initWithNSString_(tk);
    }
    @catch (
#line 336
    JavaLangIllegalArgumentException *e) {
      @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Malformed version number: ", tk), e);
    }
  }
  else {
    
#line 340
    @try {
      if ([((NSString *) nil_chk(tk)) hasSuffix:@"."]) {
        @throw new_JavaLangNumberFormatException_initWithNSString_(@"A number can't end with a dot");
      }
      if ([tk hasPrefix:@"."] || [tk hasPrefix:@"-."] || [tk hasPrefix:@"+."]) {
        @throw new_JavaLangNumberFormatException_initWithNSString_(@"A number can't start with a dot");
      }
      return new_JavaMathBigDecimal_initWithNSString_(tk);
    }
    @catch (
#line 348
    JavaLangNumberFormatException *e) {
      @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Malformed number: ", tk), e);
    }
  }
}


#line 354
id FreemarkerCore_ObjectBuilderSettingEvaluator_fetchStringLiteralWithBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jboolean optional) {
  jint startPos = self->pos_;
  jchar q = 0;
  jboolean afterEscape = NO;
  jboolean raw = NO;
  while (YES) {
    if (self->pos_ == ((jint) [((NSString *) nil_chk(self->src_)) length])) {
      if (q != 0) {
        
#line 363
        @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withNSString_withInt_(NSString_valueOfChar_(q), self->src_, self->pos_);
      }
      goto break_seekTokenEnd;
    }
    jchar c = [self->src_ charAtWithInt:self->pos_];
    if (q == 0) {
      if (c == 'r' && (self->pos_ + 1 < ((jint) [self->src_ length]))) {
        
#line 371
        raw = YES;
        c = [self->src_ charAtWithInt:self->pos_ + 1];
      }
      if (c == '\'') {
        q = '\'';
      }
      else
#line 376
      if (c == '"') {
        q = '"';
      }
      else {
        
#line 379
        goto break_seekTokenEnd;
      }
      if (raw) {
        
#line 383
        self->pos_++;
      }
    }
    else {
      
#line 386
      if (!afterEscape) {
        if (c == '\\' && !raw) {
          afterEscape = YES;
        }
        else
#line 389
        if (c == q) {
          goto break_seekTokenEnd;
        }
        else
#line 391
        if (c == '{') {
          jchar prevC = [self->src_ charAtWithInt:self->pos_ - 1];
          if (prevC == '$' || prevC == '#') {
            @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_(
#line 395
            @"${...} and #{...} aren't allowed here.");
          }
        }
      }
      else {
        
#line 399
        afterEscape = NO;
      }
    }
    self->pos_++;
  }
  break_seekTokenEnd: ;
  
#line 404
  if (startPos == self->pos_) {
    if (optional) {
      return nil;
    }
    else {
      
#line 408
      @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withNSString_withInt_(@"string literal", self->src_, self->pos_);
    }
  }
  
#line 412
  NSString *sInside = [((NSString *) nil_chk(self->src_)) substring:startPos + (raw ? 2 : 1) endIndex:self->pos_];
  @try {
    self->pos_++;
    return raw ? sInside : FreemarkerTemplateUtilityStringUtil_FTLStringLiteralDecWithNSString_(sInside);
  }
  @catch (
#line 416
  FreemarkerCoreParseException *e) {
    @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Malformed string literal: ", sInside), e);
  }
}


#line 421
void FreemarkerCore_ObjectBuilderSettingEvaluator_skipWS(FreemarkerCore_ObjectBuilderSettingEvaluator *self) {
  while (YES) {
    if (self->pos_ == ((jint) [((NSString *) nil_chk(self->src_)) length])) {
      return;
    }
    jchar c = [self->src_ charAtWithInt:self->pos_];
    if (!JavaLangCharacter_isWhitespaceWithChar_(c)) {
      return;
    }
    self->pos_++;
  }
}

jchar FreemarkerCore_ObjectBuilderSettingEvaluator_fetchOptionalCharWithNSString_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, NSString *expectedChars) {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_fetchCharWithNSString_withBoolean_(self, expectedChars, YES);
}

jchar FreemarkerCore_ObjectBuilderSettingEvaluator_fetchRequiredCharWithNSString_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, NSString *expectedChars) {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_fetchCharWithNSString_withBoolean_(self, expectedChars, NO);
}

jchar FreemarkerCore_ObjectBuilderSettingEvaluator_fetchCharWithNSString_withBoolean_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, NSString *expectedChars, jboolean optional) {
  jchar c = self->pos_ < ((jint) [((NSString *) nil_chk(self->src_)) length]) ? [self->src_ charAtWithInt:self->pos_] : 0;
  if ([((NSString *) nil_chk(expectedChars)) indexOf:c] != -1) {
    self->pos_++;
    return c;
  }
  else
#line 447
  if (optional) {
    return 0;
  }
  else {
    
#line 450
    JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
    for (jint i = 0; i < ((jint) [expectedChars length]); i++) {
      if (i != 0) {
        (void) [sb appendWithNSString:@" or "];
      }
      (void) [sb appendWithNSString:FreemarkerTemplateUtilityStringUtil_jQuoteWithNSString_([expectedChars substring:i endIndex:i + 1])];
    }
    if (optional) {
      (void) [sb appendWithNSString:@" or end-of-string"];
    }
    @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withNSString_withInt_(
#line 461
    [sb description], self->src_, self->pos_);
  }
}


#line 466
jboolean FreemarkerCore_ObjectBuilderSettingEvaluator_isASCIIDigitWithChar_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jchar c) {
  return c >= '0' && c <= '9';
}

jboolean FreemarkerCore_ObjectBuilderSettingEvaluator_isIdentifierStartWithChar_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jchar c) {
  return JavaLangCharacter_isLetterWithChar_(c) || c == '_' || c == '$';
}

jboolean FreemarkerCore_ObjectBuilderSettingEvaluator_isIdentifierMiddleWithChar_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, jchar c) {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_isIdentifierStartWithChar_(self, c) || FreemarkerCore_ObjectBuilderSettingEvaluator_isASCIIDigitWithChar_(self, c);
}

NSString *FreemarkerCore_ObjectBuilderSettingEvaluator_shorthandToFullQualifiedWithNSString_(NSString *className_) {
  FreemarkerCore_ObjectBuilderSettingEvaluator_initialize();
  @synchronized(FreemarkerCore_ObjectBuilderSettingEvaluator_class_()) {
    
#line 479
    if (FreemarkerCore_ObjectBuilderSettingEvaluator_SHORTHANDS_ == nil) {
      FreemarkerCore_ObjectBuilderSettingEvaluator_SHORTHANDS_ = new_JavaUtilHashMap_init();
      (void) [FreemarkerCore_ObjectBuilderSettingEvaluator_SHORTHANDS_ putWithId:@"DefaultObjectWrapper" withId:[FreemarkerTemplateDefaultObjectWrapper_class_() getName]];
      (void) [FreemarkerCore_ObjectBuilderSettingEvaluator_SHORTHANDS_ putWithId:@"BeansWrapper" withId:[FreemarkerExtBeansBeansWrapper_class_() getName]];
      (void) [FreemarkerCore_ObjectBuilderSettingEvaluator_SHORTHANDS_ putWithId:@"SimpleObjectWrapper" withId:[FreemarkerTemplateSimpleObjectWrapper_class_() getName]];
    }
    NSString *fullClassName = (NSString *) check_class_cast([((id<JavaUtilMap>) nil_chk(FreemarkerCore_ObjectBuilderSettingEvaluator_SHORTHANDS_)) getWithId:className_], [NSString class]);
    return fullClassName == nil ? className_ : fullClassName;
  }
}


#line 489
void FreemarkerCore_ObjectBuilderSettingEvaluator_setJavaBeanPropertiesWithId_withJavaUtilList_withJavaUtilList_(FreemarkerCore_ObjectBuilderSettingEvaluator *self, id bean, id<JavaUtilList> namedParamNames, id<JavaUtilList> namedParamValues) {
  
#line 492
  if ([((id<JavaUtilList>) nil_chk(namedParamNames)) isEmpty]) {
    return;
  }
  
#line 496
  IOSClass *cl = [nil_chk(bean) getClass];
  id<JavaUtilMap> beanPropSetters;
  
#line 512
  id<FreemarkerTemplateTemplateHashModel> beanTM = nil;
  for (jint i = 0; i < [namedParamNames size]; i++) {
    NSString *name = (NSString *) check_class_cast([namedParamNames getWithInt:i], [NSString class]);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCore_ObjectBuilderSettingEvaluator)


#line 556
@implementation FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName

- (instancetype)initWithNSString:(NSString *)name {
  FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName_initWithNSString_(self, name);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "ParameterName", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName = { 2, "ParameterName", "freemarker.core", "_ObjectBuilderSettingEvaluator", 0xa, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName;
}

@end


#line 558
void FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName_initWithNSString_(FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName *self, NSString *name) {
  (void) NSObject_init(self);
  
#line 559
  self->name_ = name;
}


#line 558
FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName *new_FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName_initWithNSString_(NSString *name) {
  FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName *self = [FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName alloc];
  FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName_initWithNSString_(self, name);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCore_ObjectBuilderSettingEvaluator_ParameterName)


#line 565
@implementation FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression


#line 566
- (id)eval {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (instancetype)init {
  FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "eval", NULL, "Ljava.lang.Object;", 0x400, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression = { 2, "SettingExpression", "freemarker.core", "_ObjectBuilderSettingEvaluator", 0x40a, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression;
}

@end

void FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression_init(FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression *self) {
  (void) NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression)


#line 569
@implementation FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters


#line 574
- (jboolean)getAllowPositionalParameters {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (instancetype)initWithFreemarkerCore_ObjectBuilderSettingEvaluator:(FreemarkerCore_ObjectBuilderSettingEvaluator *)outer$ {
  FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getAllowPositionalParameters", NULL, "Z", 0x404, NULL, NULL },
    { "initWithFreemarkerCore_ObjectBuilderSettingEvaluator:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "positionalParamValues_", NULL, 0x4, "Ljava.util.List;", NULL, NULL,  },
    { "namedParamNames_", NULL, 0x4, "Ljava.util.List;", NULL, NULL,  },
    { "namedParamValues_", NULL, 0x4, "Ljava.util.List;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters = { 2, "ExpressionWithParameters", "freemarker.core", "_ObjectBuilderSettingEvaluator", 0x402, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters;
}

@end

void FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_(FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters *self, FreemarkerCore_ObjectBuilderSettingEvaluator *outer$) {
  (void) FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression_init(self);
  self->positionalParamValues_ = new_JavaUtilArrayList_init();
  self->namedParamNames_ = new_JavaUtilArrayList_init();
  self->namedParamValues_ = new_JavaUtilArrayList_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters)


#line 577
@implementation FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression


#line 580
- (id)eval {
  IOSClass *cl;
  @try {
    cl = FreemarkerTemplateUtilityClassUtil_forNameWithNSString_(className__);
  }
  @catch (
#line 584
  JavaLangException *e) {
    @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$C", @"Failed to get class ", FreemarkerTemplateUtilityStringUtil_jQuoteWithNSString_(
#line 586
    className__), '.'), e);
  }
  
#line 589
  jboolean clIsBuilderClass;
  @try {
    cl = FreemarkerTemplateUtilityClassUtil_forNameWithNSString_(JreStrcat("$$", [((IOSClass *) nil_chk(cl)) getName], FreemarkerCore_ObjectBuilderSettingEvaluator_get_BUILDER_CLASS_POSTFIX_()));
    clIsBuilderClass = YES;
  }
  @catch (
#line 593
  JavaLangClassNotFoundException *e) {
    clIsBuilderClass = NO;
  }
  
#line 597
  if (!clIsBuilderClass && FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_hasNoParameters(self)) {
    @try {
      JavaLangReflectField *f = [((IOSClass *) nil_chk(cl)) getField:FreemarkerCore_ObjectBuilderSettingEvaluator_get_INSTANCE_FIELD_NAME_()];
      if (([((JavaLangReflectField *) nil_chk(f)) getModifiers] & (JavaLangReflectModifier_PUBLIC | JavaLangReflectModifier_STATIC)) == (JavaLangReflectModifier_PUBLIC | JavaLangReflectModifier_STATIC)) {
        return [f getWithId:nil];
      }
    }
    @catch (
#line 603
    JavaLangNoSuchFieldException *e) {
    }
    @catch (JavaLangException *e) {
      @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$C$", @"Error when trying to access ", FreemarkerTemplateUtilityStringUtil_jQuoteWithNSString_(
#line 607
      className__), '.', FreemarkerCore_ObjectBuilderSettingEvaluator_get_INSTANCE_FIELD_NAME_()), e);
    }
  }
  
#line 612
  id constructorResult = FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_callConstructorWithIOSClass_(self, cl);
  
#line 615
  FreemarkerCore_ObjectBuilderSettingEvaluator_setJavaBeanPropertiesWithId_withJavaUtilList_withJavaUtilList_(this$1_, constructorResult, namedParamNames_, namedParamValues_);
  
#line 617
  id result;
  if (clIsBuilderClass) {
    result = FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_callBuildWithId_(self, constructorResult);
  }
  else {
    
#line 621
    if ([FreemarkerTemplateUtilityWriteProtectable_class_() isInstance:constructorResult]) {
      [((id<FreemarkerTemplateUtilityWriteProtectable>) nil_chk(((id<FreemarkerTemplateUtilityWriteProtectable>) check_protocol_cast(constructorResult, @protocol(FreemarkerTemplateUtilityWriteProtectable))))) writeProtect];
    }
    result = constructorResult;
  }
  
#line 627
  if (![((IOSClass *) nil_chk(this$1_->expectedClass_)) isInstance:result]) {
    @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_(JreStrcat("$@$$C", @"The resulting object (of class ",
#line 629
    [nil_chk(result) getClass], @") is not a(n) ", [this$1_->expectedClass_ getName], '.'));
  }
  
#line 632
  return result;
}


#line 635
- (id)callConstructorWithIOSClass:(IOSClass *)cl {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_callConstructorWithIOSClass_(self, cl);
}


#line 665
- (id)callBuildWithId:(id)constructorResult {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_callBuildWithId_(self, constructorResult);
}


#line 693
- (jboolean)hasNoParameters {
  return FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_hasNoParameters(self);
}

- (jboolean)getAllowPositionalParameters {
  return YES;
}

- (instancetype)initWithFreemarkerCore_ObjectBuilderSettingEvaluator:(FreemarkerCore_ObjectBuilderSettingEvaluator *)outer$ {
  FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "eval", NULL, "Ljava.lang.Object;", 0x0, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "callConstructorWithIOSClass:", "callConstructor", "Ljava.lang.Object;", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "callBuildWithId:", "callBuild", "Ljava.lang.Object;", 0x2, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "hasNoParameters", NULL, "Z", 0x2, NULL, NULL },
    { "getAllowPositionalParameters", NULL, "Z", 0x4, NULL, NULL },
    { "initWithFreemarkerCore_ObjectBuilderSettingEvaluator:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", NULL, 0x1012, "Lfreemarker.core._ObjectBuilderSettingEvaluator;", NULL, NULL,  },
    { "className__", "className", 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression = { 2, "BuilderExpression", "freemarker.core", "_ObjectBuilderSettingEvaluator", 0x2, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression;
}

@end


#line 635
id FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_callConstructorWithIOSClass_(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *self, IOSClass *cl) {
  
#line 637
  if (FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_hasNoParameters(self)) {
    
#line 639
    @try {
      return [((IOSClass *) nil_chk(cl)) newInstance];
    }
    @catch (
#line 641
    JavaLangException *e) {
      @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$$", @"Failed to call ",
#line 643
      [((IOSClass *) nil_chk(cl)) getName], @" 0-argument constructor"), e);
    }
  }
  else {
    
#line 646
    FreemarkerExtBeansBeansWrapper *ow = [((FreemarkerCore_SettingEvaluationEnvironment *) nil_chk(self->this$1_->env_)) getObjectWrapper];
    id<JavaUtilList> tmArgs = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(self->positionalParamValues_)) size]);
    for (jint i = 0; i < [self->positionalParamValues_ size]; i++) {
      @try {
        [tmArgs addWithId:[((FreemarkerExtBeansBeansWrapper *) nil_chk(ow)) wrapWithId:[self->positionalParamValues_ getWithInt:i]]];
      }
      @catch (
#line 651
      FreemarkerTemplateTemplateModelException *e) {
        @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$I", @"Failed to wrap arg #", (i + 1)), e);
      }
    }
    @try {
      return [((FreemarkerExtBeansBeansWrapper *) nil_chk(ow)) newInstanceWithIOSClass:cl withJavaUtilList:tmArgs];
    }
    @catch (
#line 657
    JavaLangException *e) {
      @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$$", @"Failed to call ",
#line 659
      [((IOSClass *) nil_chk(cl)) getName], @" constructor"), e);
    }
  }
}


#line 665
id FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_callBuildWithId_(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *self, id constructorResult) {
  
#line 667
  IOSClass *cl = [nil_chk(constructorResult) getClass];
  JavaLangReflectMethod *buildMethod;
  @try {
    buildMethod = [[constructorResult getClass] getMethod:FreemarkerCore_ObjectBuilderSettingEvaluator_get_BUILD_METHOD_NAME_() parameterTypes:nil];
  }
  @catch (
#line 671
  JavaLangNoSuchMethodException *e) {
    @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$$$$", @"The ", [cl getName], @" builder class must have a public ", FreemarkerCore_ObjectBuilderSettingEvaluator_get_BUILD_METHOD_NAME_(), @"() method"),
#line 673
    e);
  }
  @catch (
#line 674
  JavaLangException *e) {
    @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$$$$", @"Failed to get the ", FreemarkerCore_ObjectBuilderSettingEvaluator_get_BUILD_METHOD_NAME_(), @"() method of the ",
#line 676
    [cl getName], @" builder class"), e);
  }
  
#line 679
  @try {
    return [((JavaLangReflectMethod *) nil_chk(buildMethod)) invokeWithId:constructorResult withNSObjectArray:nil];
  }
  @catch (
#line 681
  JavaLangException *e) {
    JavaLangThrowable *cause;
    if ([e isKindOfClass:[JavaLangReflectInvocationTargetException class]]) {
      cause = [((JavaLangReflectInvocationTargetException *) nil_chk(((JavaLangReflectInvocationTargetException *) check_class_cast(e, [JavaLangReflectInvocationTargetException class])))) getTargetException];
    }
    else {
      
#line 686
      cause = e;
    }
    @throw new_FreemarkerCore_ObjectBuilderSettingEvaluationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$$$$", @"Failed to call ", FreemarkerCore_ObjectBuilderSettingEvaluator_get_BUILD_METHOD_NAME_(), @"() method on ",
#line 689
    [cl getName], @" instance"), cause);
  }
}


#line 693
jboolean FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_hasNoParameters(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *self) {
  return [((id<JavaUtilList>) nil_chk(self->positionalParamValues_)) isEmpty] && [((id<JavaUtilList>) nil_chk(self->namedParamValues_)) isEmpty];
}

void FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *self, FreemarkerCore_ObjectBuilderSettingEvaluator *outer$) {
  self->this$1_ = outer$;
  (void) FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_(self, outer$);
}

FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *new_FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_(FreemarkerCore_ObjectBuilderSettingEvaluator *outer$) {
  FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression *self = [FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression alloc];
  FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCore_ObjectBuilderSettingEvaluator_BuilderExpression)


#line 703
@implementation FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression


#line 707
- (instancetype)initWithFreemarkerCore_ObjectBuilderSettingEvaluator:(FreemarkerCore_ObjectBuilderSettingEvaluator *)outer$
                                                              withId:(id)bean {
  FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_withId_(self, outer$, bean);
  return self;
}


#line 711
- (id)eval {
  FreemarkerCore_ObjectBuilderSettingEvaluator_setJavaBeanPropertiesWithId_withJavaUtilList_withJavaUtilList_(this$1_, bean_, namedParamNames_, namedParamValues_);
  return bean_;
}

- (jboolean)getAllowPositionalParameters {
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCore_ObjectBuilderSettingEvaluator:withId:", "PropertyAssignmentsExpression", NULL, 0x1, NULL, NULL },
    { "eval", NULL, "Ljava.lang.Object;", 0x0, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "getAllowPositionalParameters", NULL, "Z", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", NULL, 0x1012, "Lfreemarker.core._ObjectBuilderSettingEvaluator;", NULL, NULL,  },
    { "bean_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression = { 2, "PropertyAssignmentsExpression", "freemarker.core", "_ObjectBuilderSettingEvaluator", 0x2, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression;
}

@end


#line 707
void FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_withId_(FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression *self, FreemarkerCore_ObjectBuilderSettingEvaluator *outer$, id bean) {
  self->this$1_ = outer$;
  (void) FreemarkerCore_ObjectBuilderSettingEvaluator_ExpressionWithParameters_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_(self, outer$);
  
#line 708
  self->bean_ = bean;
}


#line 707
FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression *new_FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_withId_(FreemarkerCore_ObjectBuilderSettingEvaluator *outer$, id bean) {
  FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression *self = [FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression alloc];
  FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression_initWithFreemarkerCore_ObjectBuilderSettingEvaluator_withId_(self, outer$, bean);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCore_ObjectBuilderSettingEvaluator_PropertyAssignmentsExpression)

J2OBJC_INITIALIZED_DEFN(FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression)


#line 722
@implementation FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression


#line 726
- (id)eval {
  return nil;
}

- (instancetype)init {
  FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression_init(self);
  return self;
}

+ (void)initialize {
  if (self == [FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression class]) {
    FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression_INSTANCE_ = new_FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression_init();
    J2OBJC_SET_INITIALIZED(FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "eval", NULL, "Ljava.lang.Object;", 0x0, "Lfreemarker.core._ObjectBuilderSettingEvaluationException;", NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE_", NULL, 0x18, "Lfreemarker.core._ObjectBuilderSettingEvaluator$NullExpression;", &FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression_INSTANCE_, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression = { 2, "NullExpression", "freemarker.core", "_ObjectBuilderSettingEvaluator", 0xa, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression;
}

@end

void FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression_init(FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression *self) {
  (void) FreemarkerCore_ObjectBuilderSettingEvaluator_SettingExpression_init(self);
}

FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression *new_FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression_init() {
  FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression *self = [FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression alloc];
  FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCore_ObjectBuilderSettingEvaluator_NullExpression)
