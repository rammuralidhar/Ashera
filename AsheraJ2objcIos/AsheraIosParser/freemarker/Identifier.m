//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/Identifier.java
//


#include "Environment.h"
#include "Expression.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "Identifier.h"
#include "J2ObjC_source.h"
#include "ParameterRole.h"
#include "TemplateException.h"
#include "TemplateModel.h"
#include "TemplateObject.h"
#include "_CoreStringUtils.h"
#include "_MiscTemplateException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/NullPointerException.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/Identifier.java"

@interface FreemarkerCoreIdentifier () {
 @public
  NSString *name_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerCoreIdentifier, name_, NSString *)


#line 25
@implementation FreemarkerCoreIdentifier


#line 29
- (instancetype)initWithNSString:(NSString *)name {
  FreemarkerCoreIdentifier_initWithNSString_(self, name);
  return self;
}


#line 33
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  @try {
    return [((FreemarkerCoreEnvironment *) nil_chk(env)) getVariableWithNSString:name_];
  }
  @catch (
#line 36
  JavaLangNullPointerException *e) {
    if (env == nil) {
      @throw new_FreemarkerCore_MiscTemplateException_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ @"Variables are not available (certainly you are in a parse-time executed directive). The name of the variable you tried to read: ",
#line 40
      name_ } count:2 type:NSObject_class_()]);
    }
    else {
      
#line 42
      @throw e;
    }
  }
}


#line 47
- (NSString *)getCanonicalForm {
  return FreemarkerCore_CoreStringUtils_toFTLTopLevelIdentifierReferenceWithNSString_(name_);
}


#line 54
- (NSString *)getName {
  return name_;
}

- (NSString *)getNodeTypeSymbol {
  return [self getCanonicalForm];
}

- (jboolean)isLiteral {
  return NO;
}

- (jint)getParameterCount {
  return 0;
}

- (id)getParameterValueWithInt:(jint)idx {
  @throw new_JavaLangIndexOutOfBoundsException_init();
}

- (FreemarkerCoreParameterRole *)getParameterRoleWithInt:(jint)idx {
  @throw new_JavaLangIndexOutOfBoundsException_init();
}

- (FreemarkerCoreExpression *)deepCloneWithIdentifierReplaced_innerWithNSString:(NSString *)replacedIdentifier
                                                   withFreemarkerCoreExpression:(FreemarkerCoreExpression *)replacement
                                 withFreemarkerCoreExpression_ReplacemenetState:(FreemarkerCoreExpression_ReplacemenetState *)replacementState {
  
#line 80
  if ([((NSString *) nil_chk(self->name_)) isEqual:replacedIdentifier]) {
    if (((FreemarkerCoreExpression_ReplacemenetState *) nil_chk(replacementState))->replacementAlreadyInUse_) {
      FreemarkerCoreExpression *clone = [((FreemarkerCoreExpression *) nil_chk(replacement)) deepCloneWithIdentifierReplacedWithNSString:nil withFreemarkerCoreExpression:nil withFreemarkerCoreExpression_ReplacemenetState:replacementState];
      (void) [((FreemarkerCoreExpression *) nil_chk(clone)) copyLocationFromWithFreemarkerCoreTemplateObject:replacement];
      return clone;
    }
    else {
      
#line 86
      replacementState->replacementAlreadyInUse_ = YES;
      return replacement;
    }
  }
  else {
    
#line 90
    return new_FreemarkerCoreIdentifier_initWithNSString_(self->name_);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "Identifier", NULL, 0x0, NULL, NULL },
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "getCanonicalForm", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x0, NULL, NULL },
    { "getNodeTypeSymbol", NULL, "Ljava.lang.String;", 0x0, NULL, NULL },
    { "isLiteral", NULL, "Z", 0x0, NULL, NULL },
    { "getParameterCount", NULL, "I", 0x0, NULL, NULL },
    { "getParameterValueWithInt:", "getParameterValue", "Ljava.lang.Object;", 0x0, NULL, NULL },
    { "getParameterRoleWithInt:", "getParameterRole", "Lfreemarker.core.ParameterRole;", 0x0, NULL, NULL },
    { "deepCloneWithIdentifierReplaced_innerWithNSString:withFreemarkerCoreExpression:withFreemarkerCoreExpression_ReplacemenetState:", "deepCloneWithIdentifierReplaced_inner", "Lfreemarker.core.Expression;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreIdentifier = { 2, "Identifier", "freemarker.core", NULL, 0x10, 10, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreIdentifier;
}

@end


#line 29
void FreemarkerCoreIdentifier_initWithNSString_(FreemarkerCoreIdentifier *self, NSString *name) {
  (void) FreemarkerCoreExpression_init(self);
  
#line 30
  self->name_ = name;
}


#line 29
FreemarkerCoreIdentifier *new_FreemarkerCoreIdentifier_initWithNSString_(NSString *name) {
  FreemarkerCoreIdentifier *self = [FreemarkerCoreIdentifier alloc];
  FreemarkerCoreIdentifier_initWithNSString_(self, name);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreIdentifier)
