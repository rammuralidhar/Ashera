//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/DateModel.java
//


#include "BeanModel.h"
#include "BeansWrapper.h"
#include "DateModel.h"
#include "J2ObjC_source.h"
#include "ModelFactory.h"
#include "ObjectWrapper.h"
#include "TemplateDateModel.h"
#include "TemplateModel.h"
#include "java/sql/Date.h"
#include "java/sql/Time.h"
#include "java/sql/Timestamp.h"
#include "java/util/Date.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/DateModel.java"

@interface FreemarkerExtBeansDateModel () {
 @public
  jint type_;
}

@end

@interface FreemarkerExtBeansDateModel_$1 : NSObject < FreemarkerExtUtilModelFactory >

- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerExtBeansDateModel_$1)

__attribute__((unused)) static void FreemarkerExtBeansDateModel_$1_init(FreemarkerExtBeansDateModel_$1 *self);

__attribute__((unused)) static FreemarkerExtBeansDateModel_$1 *new_FreemarkerExtBeansDateModel_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansDateModel_$1)

J2OBJC_INITIALIZED_DEFN(FreemarkerExtBeansDateModel)

id<FreemarkerExtUtilModelFactory> FreemarkerExtBeansDateModel_FACTORY_;


#line 31
@implementation FreemarkerExtBeansDateModel


#line 56
- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)date
  withFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)wrapper {
  FreemarkerExtBeansDateModel_initWithJavaUtilDate_withFreemarkerExtBeansBeansWrapper_(self, date, wrapper);
  return self;
}


#line 73
- (JavaUtilDate *)getAsDate {
  return (JavaUtilDate *) check_class_cast(object_, [JavaUtilDate class]);
}

- (jint)getDateType {
  return type_;
}

+ (void)initialize {
  if (self == [FreemarkerExtBeansDateModel class]) {
    FreemarkerExtBeansDateModel_FACTORY_ = new_FreemarkerExtBeansDateModel_$1_init();
    J2OBJC_SET_INITIALIZED(FreemarkerExtBeansDateModel)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilDate:withFreemarkerExtBeansBeansWrapper:", "DateModel", NULL, 0x1, NULL, NULL },
    { "getAsDate", NULL, "Ljava.util.Date;", 0x1, NULL, NULL },
    { "getDateType", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FACTORY_", NULL, 0x18, "Lfreemarker.ext.util.ModelFactory;", &FreemarkerExtBeansDateModel_FACTORY_, NULL,  },
    { "type_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansDateModel = { 2, "DateModel", "freemarker.ext.beans", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansDateModel;
}

@end


#line 56
void FreemarkerExtBeansDateModel_initWithJavaUtilDate_withFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansDateModel *self, JavaUtilDate *date, FreemarkerExtBeansBeansWrapper *wrapper) {
  (void) FreemarkerExtBeansBeanModel_initWithId_withFreemarkerExtBeansBeansWrapper_(self,
#line 58
  date, wrapper);
  if ([date isKindOfClass:[JavaSqlDate class]]) {
    self->type_ = FreemarkerTemplateTemplateDateModel_DATE;
  }
  else if ([date isKindOfClass:[JavaSqlTime class]]) {
    self->type_ = FreemarkerTemplateTemplateDateModel_TIME;
  }
  else if ([date isKindOfClass:[JavaSqlTimestamp class]]) {
    self->type_ = FreemarkerTemplateTemplateDateModel_DATETIME;
  }
  else {
    self->type_ = [((FreemarkerExtBeansBeansWrapper *) nil_chk(wrapper)) getDefaultDateType];
  }
}


#line 56
FreemarkerExtBeansDateModel *new_FreemarkerExtBeansDateModel_initWithJavaUtilDate_withFreemarkerExtBeansBeansWrapper_(JavaUtilDate *date, FreemarkerExtBeansBeansWrapper *wrapper) {
  FreemarkerExtBeansDateModel *self = [FreemarkerExtBeansDateModel alloc];
  FreemarkerExtBeansDateModel_initWithJavaUtilDate_withFreemarkerExtBeansBeansWrapper_(self, date, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansDateModel)

@implementation FreemarkerExtBeansDateModel_$1


#line 40
- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  
#line 42
  return new_FreemarkerExtBeansDateModel_initWithJavaUtilDate_withFreemarkerExtBeansBeansWrapper_((JavaUtilDate *) check_class_cast(object, [JavaUtilDate class]), (FreemarkerExtBeansBeansWrapper *) check_class_cast(wrapper, [FreemarkerExtBeansBeansWrapper class]));
}

- (instancetype)init {
  FreemarkerExtBeansDateModel_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createWithId:withFreemarkerTemplateObjectWrapper:", "create", "Lfreemarker.template.TemplateModel;", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansDateModel_$1 = { 2, "", "freemarker.ext.beans", "DateModel", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansDateModel_$1;
}

@end

void FreemarkerExtBeansDateModel_$1_init(FreemarkerExtBeansDateModel_$1 *self) {
  (void) NSObject_init(self);
}

FreemarkerExtBeansDateModel_$1 *new_FreemarkerExtBeansDateModel_$1_init() {
  FreemarkerExtBeansDateModel_$1 *self = [FreemarkerExtBeansDateModel_$1 alloc];
  FreemarkerExtBeansDateModel_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansDateModel_$1)
