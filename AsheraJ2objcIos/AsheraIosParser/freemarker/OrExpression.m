//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/OrExpression.java
//


#include "BooleanExpression.h"
#include "Environment.h"
#include "Expression.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "OrExpression.h"
#include "ParameterRole.h"
#include "TemplateException.h"
#include "java/lang/IndexOutOfBoundsException.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/OrExpression.java"

@interface FreemarkerCoreOrExpression () {
 @public
  FreemarkerCoreExpression *lho_;
  FreemarkerCoreExpression *rho_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerCoreOrExpression, lho_, FreemarkerCoreExpression *)
J2OBJC_FIELD_SETTER(FreemarkerCoreOrExpression, rho_, FreemarkerCoreExpression *)


#line 21
@implementation FreemarkerCoreOrExpression


#line 26
- (instancetype)initWithFreemarkerCoreExpression:(FreemarkerCoreExpression *)lho
                    withFreemarkerCoreExpression:(FreemarkerCoreExpression *)rho {
  FreemarkerCoreOrExpression_initWithFreemarkerCoreExpression_withFreemarkerCoreExpression_(self, lho, rho);
  return self;
}


#line 31
- (jboolean)evalToBooleanWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  return [((FreemarkerCoreExpression *) nil_chk(lho_)) evalToBooleanWithFreemarkerCoreEnvironment:env] || [((FreemarkerCoreExpression *) nil_chk(rho_)) evalToBooleanWithFreemarkerCoreEnvironment:env];
}

- (NSString *)getCanonicalForm {
  return JreStrcat("$$$", [((FreemarkerCoreExpression *) nil_chk(lho_)) getCanonicalForm], @" || ", [((FreemarkerCoreExpression *) nil_chk(rho_)) getCanonicalForm]);
}

- (NSString *)getNodeTypeSymbol {
  return @"||";
}

- (jboolean)isLiteral {
  return constantValue_ != nil || ([((FreemarkerCoreExpression *) nil_chk(lho_)) isLiteral] && [((FreemarkerCoreExpression *) nil_chk(rho_)) isLiteral]);
}

- (FreemarkerCoreExpression *)deepCloneWithIdentifierReplaced_innerWithNSString:(NSString *)replacedIdentifier
                                                   withFreemarkerCoreExpression:(FreemarkerCoreExpression *)replacement
                                 withFreemarkerCoreExpression_ReplacemenetState:(FreemarkerCoreExpression_ReplacemenetState *)replacementState {
  
#line 49
  return new_FreemarkerCoreOrExpression_initWithFreemarkerCoreExpression_withFreemarkerCoreExpression_(
#line 50
  [((FreemarkerCoreExpression *) nil_chk(lho_)) deepCloneWithIdentifierReplacedWithNSString:replacedIdentifier withFreemarkerCoreExpression:replacement withFreemarkerCoreExpression_ReplacemenetState:replacementState],
#line 51
  [((FreemarkerCoreExpression *) nil_chk(rho_)) deepCloneWithIdentifierReplacedWithNSString:replacedIdentifier withFreemarkerCoreExpression:replacement withFreemarkerCoreExpression_ReplacemenetState:replacementState]);
}


#line 54
- (jint)getParameterCount {
  return 2;
}

- (id)getParameterValueWithInt:(jint)idx {
  switch (idx) {
    case 0:
    
#line 60
    return lho_;
    case 1:
    
#line 61
    return rho_;
    default:
    
#line 62
    @throw new_JavaLangIndexOutOfBoundsException_init();
  }
}


#line 66
- (FreemarkerCoreParameterRole *)getParameterRoleWithInt:(jint)idx {
  return FreemarkerCoreParameterRole_forBinaryOperatorOperandWithInt_(idx);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreExpression:withFreemarkerCoreExpression:", "OrExpression", NULL, 0x0, NULL, NULL },
    { "evalToBooleanWithFreemarkerCoreEnvironment:", "evalToBoolean", "Z", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "getCanonicalForm", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getNodeTypeSymbol", NULL, "Ljava.lang.String;", 0x0, NULL, NULL },
    { "isLiteral", NULL, "Z", 0x0, NULL, NULL },
    { "deepCloneWithIdentifierReplaced_innerWithNSString:withFreemarkerCoreExpression:withFreemarkerCoreExpression_ReplacemenetState:", "deepCloneWithIdentifierReplaced_inner", "Lfreemarker.core.Expression;", 0x4, NULL, NULL },
    { "getParameterCount", NULL, "I", 0x0, NULL, NULL },
    { "getParameterValueWithInt:", "getParameterValue", "Ljava.lang.Object;", 0x0, NULL, NULL },
    { "getParameterRoleWithInt:", "getParameterRole", "Lfreemarker.core.ParameterRole;", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "lho_", NULL, 0x12, "Lfreemarker.core.Expression;", NULL, NULL,  },
    { "rho_", NULL, 0x12, "Lfreemarker.core.Expression;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreOrExpression = { 2, "OrExpression", "freemarker.core", NULL, 0x10, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreOrExpression;
}

@end


#line 26
void FreemarkerCoreOrExpression_initWithFreemarkerCoreExpression_withFreemarkerCoreExpression_(FreemarkerCoreOrExpression *self, FreemarkerCoreExpression *lho, FreemarkerCoreExpression *rho) {
  (void) FreemarkerCoreBooleanExpression_init(self);
  
#line 27
  self->lho_ = lho;
  self->rho_ = rho;
}


#line 26
FreemarkerCoreOrExpression *new_FreemarkerCoreOrExpression_initWithFreemarkerCoreExpression_withFreemarkerCoreExpression_(FreemarkerCoreExpression *lho, FreemarkerCoreExpression *rho) {
  FreemarkerCoreOrExpression *self = [FreemarkerCoreOrExpression alloc];
  FreemarkerCoreOrExpression_initWithFreemarkerCoreExpression_withFreemarkerCoreExpression_(self, lho, rho);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreOrExpression)
