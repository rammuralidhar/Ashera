//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/DefaultArrayAdapter.java
//


#include "DefaultArrayAdapter.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ObjectWrapper.h"
#include "ObjectWrapperAndUnwrapper.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "WrapperTemplateModel.h"
#include "WrappingTemplateModel.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/reflect/Array.h"

#pragma clang diagnostic ignored "-Wprotocol"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/DefaultArrayAdapter.java"

@interface FreemarkerTemplateDefaultArrayAdapter ()

- (instancetype)initWithFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

@end

__attribute__((unused)) static void FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter *self, id<FreemarkerTemplateObjectWrapper> wrapper);

@interface FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter : FreemarkerTemplateDefaultArrayAdapter {
 @public
  IOSObjectArray *array_;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)array
  withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index;

- (jint)size;

- (id)getWrappedObject;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter)

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter, array_, IOSObjectArray *)

__attribute__((unused)) static void FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter_initWithNSObjectArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter *self, IOSObjectArray *array, id<FreemarkerTemplateObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter_initWithNSObjectArray_withFreemarkerTemplateObjectWrapper_(IOSObjectArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter)

@interface FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter : FreemarkerTemplateDefaultArrayAdapter {
 @public
  IOSByteArray *array_;
}

- (instancetype)initWithByteArray:(IOSByteArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index;

- (jint)size;

- (id)getWrappedObject;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter)

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter, array_, IOSByteArray *)

__attribute__((unused)) static void FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter_initWithByteArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter *self, IOSByteArray *array, id<FreemarkerTemplateObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter_initWithByteArray_withFreemarkerTemplateObjectWrapper_(IOSByteArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter)

@interface FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter : FreemarkerTemplateDefaultArrayAdapter {
 @public
  IOSShortArray *array_;
}

- (instancetype)initWithShortArray:(IOSShortArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index;

- (jint)size;

- (id)getWrappedObject;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter)

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter, array_, IOSShortArray *)

__attribute__((unused)) static void FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter_initWithShortArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter *self, IOSShortArray *array, id<FreemarkerTemplateObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter_initWithShortArray_withFreemarkerTemplateObjectWrapper_(IOSShortArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter)

@interface FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter : FreemarkerTemplateDefaultArrayAdapter {
 @public
  IOSIntArray *array_;
}

- (instancetype)initWithIntArray:(IOSIntArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index;

- (jint)size;

- (id)getWrappedObject;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter)

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter, array_, IOSIntArray *)

__attribute__((unused)) static void FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter_initWithIntArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter *self, IOSIntArray *array, id<FreemarkerTemplateObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter_initWithIntArray_withFreemarkerTemplateObjectWrapper_(IOSIntArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter)

@interface FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter : FreemarkerTemplateDefaultArrayAdapter {
 @public
  IOSLongArray *array_;
}

- (instancetype)initWithLongArray:(IOSLongArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index;

- (jint)size;

- (id)getWrappedObject;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter)

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter, array_, IOSLongArray *)

__attribute__((unused)) static void FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter_initWithLongArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter *self, IOSLongArray *array, id<FreemarkerTemplateObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter_initWithLongArray_withFreemarkerTemplateObjectWrapper_(IOSLongArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter)

@interface FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter : FreemarkerTemplateDefaultArrayAdapter {
 @public
  IOSFloatArray *array_;
}

- (instancetype)initWithFloatArray:(IOSFloatArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index;

- (jint)size;

- (id)getWrappedObject;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter)

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter, array_, IOSFloatArray *)

__attribute__((unused)) static void FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter_initWithFloatArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter *self, IOSFloatArray *array, id<FreemarkerTemplateObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter_initWithFloatArray_withFreemarkerTemplateObjectWrapper_(IOSFloatArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter)

@interface FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter : FreemarkerTemplateDefaultArrayAdapter {
 @public
  IOSDoubleArray *array_;
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index;

- (jint)size;

- (id)getWrappedObject;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter)

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter, array_, IOSDoubleArray *)

__attribute__((unused)) static void FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter_initWithDoubleArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter *self, IOSDoubleArray *array, id<FreemarkerTemplateObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter_initWithDoubleArray_withFreemarkerTemplateObjectWrapper_(IOSDoubleArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter)

@interface FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter : FreemarkerTemplateDefaultArrayAdapter {
 @public
  IOSCharArray *array_;
}

- (instancetype)initWithCharArray:(IOSCharArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index;

- (jint)size;

- (id)getWrappedObject;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter)

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter, array_, IOSCharArray *)

__attribute__((unused)) static void FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter_initWithCharArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter *self, IOSCharArray *array, id<FreemarkerTemplateObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter_initWithCharArray_withFreemarkerTemplateObjectWrapper_(IOSCharArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter)

@interface FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter : FreemarkerTemplateDefaultArrayAdapter {
 @public
  IOSBooleanArray *array_;
}

- (instancetype)initWithBooleanArray:(IOSBooleanArray *)array
 withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index;

- (jint)size;

- (id)getWrappedObject;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter)

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter, array_, IOSBooleanArray *)

__attribute__((unused)) static void FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter_initWithBooleanArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter *self, IOSBooleanArray *array, id<FreemarkerTemplateObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter_initWithBooleanArray_withFreemarkerTemplateObjectWrapper_(IOSBooleanArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter)

/**
 @brief Much slower than the specialized versions; used only as the last resort.
 */
@interface FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter : FreemarkerTemplateDefaultArrayAdapter {
 @public
  id array_;
  jint length_;
}

- (instancetype)initWithId:(id)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index;

- (jint)size;

- (id)getWrappedObject;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter)

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter, array_, id)

__attribute__((unused)) static void FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter_initWithId_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter *self, id array, id<FreemarkerTemplateObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter_initWithId_withFreemarkerTemplateObjectWrapper_(id array, id<FreemarkerTemplateObjectWrapper> wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter)


#line 44
@implementation FreemarkerTemplateDefaultArrayAdapter


#line 56
+ (FreemarkerTemplateDefaultArrayAdapter *)adaptWithId:(id)array
       withFreemarkerTemplateObjectWrapperAndUnwrapper:(id<FreemarkerTemplateObjectWrapperAndUnwrapper>)wrapper {
  return FreemarkerTemplateDefaultArrayAdapter_adaptWithId_withFreemarkerTemplateObjectWrapperAndUnwrapper_(array, wrapper);
}


#line 93
- (instancetype)initWithFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  return self;
}


#line 97
- (id)getAdaptedObjectWithIOSClass:(IOSClass *)hint {
  return [self getWrappedObject];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "adaptWithId:withFreemarkerTemplateObjectWrapperAndUnwrapper:", "adapt", "Lfreemarker.template.DefaultArrayAdapter;", 0x9, NULL, NULL },
    { "initWithFreemarkerTemplateObjectWrapper:", "DefaultArrayAdapter", NULL, 0x2, NULL, NULL },
    { "getAdaptedObjectWithIOSClass:", "getAdaptedObject", "Ljava.lang.Object;", 0x11, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lfreemarker.template.DefaultArrayAdapter$ObjectArrayAdapter;", "Lfreemarker.template.DefaultArrayAdapter$ByteArrayAdapter;", "Lfreemarker.template.DefaultArrayAdapter$ShortArrayAdapter;", "Lfreemarker.template.DefaultArrayAdapter$IntArrayAdapter;", "Lfreemarker.template.DefaultArrayAdapter$LongArrayAdapter;", "Lfreemarker.template.DefaultArrayAdapter$FloatArrayAdapter;", "Lfreemarker.template.DefaultArrayAdapter$DoubleArrayAdapter;", "Lfreemarker.template.DefaultArrayAdapter$CharArrayAdapter;", "Lfreemarker.template.DefaultArrayAdapter$BooleanArrayAdapter;", "Lfreemarker.template.DefaultArrayAdapter$GenericPrimitiveArrayAdapter;"};
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultArrayAdapter = { 2, "DefaultArrayAdapter", "freemarker.template", NULL, 0x401, 3, methods, 0, NULL, 0, NULL, 10, inner_classes, NULL, NULL };
  return &_FreemarkerTemplateDefaultArrayAdapter;
}

@end


#line 56
FreemarkerTemplateDefaultArrayAdapter *FreemarkerTemplateDefaultArrayAdapter_adaptWithId_withFreemarkerTemplateObjectWrapperAndUnwrapper_(id array, id<FreemarkerTemplateObjectWrapperAndUnwrapper> wrapper) {
  FreemarkerTemplateDefaultArrayAdapter_initialize();
  
#line 57
  IOSClass *componentType = [[nil_chk(array) getClass] getComponentType];
  if (componentType == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Not an array");
  }
  
#line 62
  if ([((IOSClass *) nil_chk(componentType)) isPrimitive]) {
    if (componentType == [IOSClass intClass]) {
      return new_FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter_initWithIntArray_withFreemarkerTemplateObjectWrapper_((IOSIntArray *) check_class_cast(array, [IOSIntArray class]), wrapper);
    }
    if (componentType == [IOSClass doubleClass]) {
      return new_FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter_initWithDoubleArray_withFreemarkerTemplateObjectWrapper_((IOSDoubleArray *) check_class_cast(array, [IOSDoubleArray class]), wrapper);
    }
    if (componentType == [IOSClass longClass]) {
      return new_FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter_initWithLongArray_withFreemarkerTemplateObjectWrapper_((IOSLongArray *) check_class_cast(array, [IOSLongArray class]), wrapper);
    }
    if (componentType == [IOSClass booleanClass]) {
      return new_FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter_initWithBooleanArray_withFreemarkerTemplateObjectWrapper_((IOSBooleanArray *) check_class_cast(array, [IOSBooleanArray class]), wrapper);
    }
    if (componentType == [IOSClass floatClass]) {
      return new_FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter_initWithFloatArray_withFreemarkerTemplateObjectWrapper_((IOSFloatArray *) check_class_cast(array, [IOSFloatArray class]), wrapper);
    }
    if (componentType == [IOSClass charClass]) {
      return new_FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter_initWithCharArray_withFreemarkerTemplateObjectWrapper_((IOSCharArray *) check_class_cast(array, [IOSCharArray class]), wrapper);
    }
    if (componentType == [IOSClass shortClass]) {
      return new_FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter_initWithShortArray_withFreemarkerTemplateObjectWrapper_((IOSShortArray *) check_class_cast(array, [IOSShortArray class]), wrapper);
    }
    if (componentType == [IOSClass byteClass]) {
      return new_FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter_initWithByteArray_withFreemarkerTemplateObjectWrapper_((IOSByteArray *) check_class_cast(array, [IOSByteArray class]), wrapper);
    }
    return new_FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter_initWithId_withFreemarkerTemplateObjectWrapper_(array, wrapper);
  }
  else {
    
#line 89
    return new_FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter_initWithNSObjectArray_withFreemarkerTemplateObjectWrapper_((IOSObjectArray *) check_class_cast(array, [IOSObjectArray class]), wrapper);
  }
}


#line 93
void FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter *self, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) FreemarkerTemplateWrappingTemplateModel_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultArrayAdapter)


#line 101
@implementation FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter


#line 105
- (instancetype)initWithNSObjectArray:(IOSObjectArray *)array
  withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter_initWithNSObjectArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}


#line 110
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  return index >= 0 && index < ((IOSObjectArray *) nil_chk(array_))->size_ ? [self wrapWithId:IOSObjectArray_Get(array_, index)] : nil;
}

- (jint)size {
  return ((IOSObjectArray *) nil_chk(array_))->size_;
}

- (id)getWrappedObject {
  return array_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSObjectArray:withFreemarkerTemplateObjectWrapper:", "ObjectArrayAdapter", NULL, 0x2, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x12, "[Ljava.lang.Object;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter = { 2, "ObjectArrayAdapter", "freemarker.template", "DefaultArrayAdapter", 0xa, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter;
}

@end


#line 105
void FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter_initWithNSObjectArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter *self, IOSObjectArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  self->array_ = array;
}


#line 105
FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter_initWithNSObjectArray_withFreemarkerTemplateObjectWrapper_(IOSObjectArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter *self = [FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter alloc];
  FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter_initWithNSObjectArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultArrayAdapter_ObjectArrayAdapter)


#line 124
@implementation FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter


#line 128
- (instancetype)initWithByteArray:(IOSByteArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter_initWithByteArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}


#line 133
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 135
  return index >= 0 && index < ((IOSByteArray *) nil_chk(array_))->size_ ? [self wrapWithId:new_JavaLangByte_initWithByte_(IOSByteArray_Get(array_, index))] : nil;
}


#line 138
- (jint)size {
  return ((IOSByteArray *) nil_chk(array_))->size_;
}

- (id)getWrappedObject {
  return array_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithByteArray:withFreemarkerTemplateObjectWrapper:", "ByteArrayAdapter", NULL, 0x2, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x12, "[B", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter = { 2, "ByteArrayAdapter", "freemarker.template", "DefaultArrayAdapter", 0xa, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter;
}

@end


#line 128
void FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter_initWithByteArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter *self, IOSByteArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  self->array_ = array;
}


#line 128
FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter_initWithByteArray_withFreemarkerTemplateObjectWrapper_(IOSByteArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter *self = [FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter alloc];
  FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter_initWithByteArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultArrayAdapter_ByteArrayAdapter)


#line 148
@implementation FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter


#line 152
- (instancetype)initWithShortArray:(IOSShortArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter_initWithShortArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}


#line 157
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 159
  return index >= 0 && index < ((IOSShortArray *) nil_chk(array_))->size_ ? [self wrapWithId:new_JavaLangShort_initWithShort_(IOSShortArray_Get(array_, index))] : nil;
}


#line 162
- (jint)size {
  return ((IOSShortArray *) nil_chk(array_))->size_;
}

- (id)getWrappedObject {
  return array_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithShortArray:withFreemarkerTemplateObjectWrapper:", "ShortArrayAdapter", NULL, 0x2, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x12, "[S", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter = { 2, "ShortArrayAdapter", "freemarker.template", "DefaultArrayAdapter", 0xa, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter;
}

@end


#line 152
void FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter_initWithShortArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter *self, IOSShortArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  self->array_ = array;
}


#line 152
FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter_initWithShortArray_withFreemarkerTemplateObjectWrapper_(IOSShortArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter *self = [FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter alloc];
  FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter_initWithShortArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultArrayAdapter_ShortArrayAdapter)


#line 172
@implementation FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter


#line 176
- (instancetype)initWithIntArray:(IOSIntArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter_initWithIntArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}


#line 181
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 183
  return index >= 0 && index < ((IOSIntArray *) nil_chk(array_))->size_ ? [self wrapWithId:new_JavaLangInteger_initWithInt_(IOSIntArray_Get(array_, index))] : nil;
}


#line 186
- (jint)size {
  return ((IOSIntArray *) nil_chk(array_))->size_;
}

- (id)getWrappedObject {
  return array_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIntArray:withFreemarkerTemplateObjectWrapper:", "IntArrayAdapter", NULL, 0x2, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x12, "[I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter = { 2, "IntArrayAdapter", "freemarker.template", "DefaultArrayAdapter", 0xa, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter;
}

@end


#line 176
void FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter_initWithIntArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter *self, IOSIntArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  self->array_ = array;
}


#line 176
FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter_initWithIntArray_withFreemarkerTemplateObjectWrapper_(IOSIntArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter *self = [FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter alloc];
  FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter_initWithIntArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultArrayAdapter_IntArrayAdapter)


#line 196
@implementation FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter


#line 200
- (instancetype)initWithLongArray:(IOSLongArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter_initWithLongArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}


#line 205
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 207
  return index >= 0 && index < ((IOSLongArray *) nil_chk(array_))->size_ ? [self wrapWithId:new_JavaLangLong_initWithLong_(IOSLongArray_Get(array_, index))] : nil;
}


#line 210
- (jint)size {
  return ((IOSLongArray *) nil_chk(array_))->size_;
}

- (id)getWrappedObject {
  return array_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLongArray:withFreemarkerTemplateObjectWrapper:", "LongArrayAdapter", NULL, 0x2, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x12, "[J", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter = { 2, "LongArrayAdapter", "freemarker.template", "DefaultArrayAdapter", 0xa, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter;
}

@end


#line 200
void FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter_initWithLongArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter *self, IOSLongArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  self->array_ = array;
}


#line 200
FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter_initWithLongArray_withFreemarkerTemplateObjectWrapper_(IOSLongArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter *self = [FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter alloc];
  FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter_initWithLongArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultArrayAdapter_LongArrayAdapter)


#line 220
@implementation FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter


#line 224
- (instancetype)initWithFloatArray:(IOSFloatArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter_initWithFloatArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}


#line 229
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 231
  return index >= 0 && index < ((IOSFloatArray *) nil_chk(array_))->size_ ? [self wrapWithId:new_JavaLangFloat_initWithFloat_(IOSFloatArray_Get(array_, index))] : nil;
}


#line 234
- (jint)size {
  return ((IOSFloatArray *) nil_chk(array_))->size_;
}

- (id)getWrappedObject {
  return array_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFloatArray:withFreemarkerTemplateObjectWrapper:", "FloatArrayAdapter", NULL, 0x2, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x12, "[F", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter = { 2, "FloatArrayAdapter", "freemarker.template", "DefaultArrayAdapter", 0xa, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter;
}

@end


#line 224
void FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter_initWithFloatArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter *self, IOSFloatArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  self->array_ = array;
}


#line 224
FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter_initWithFloatArray_withFreemarkerTemplateObjectWrapper_(IOSFloatArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter *self = [FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter alloc];
  FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter_initWithFloatArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultArrayAdapter_FloatArrayAdapter)


#line 244
@implementation FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter


#line 248
- (instancetype)initWithDoubleArray:(IOSDoubleArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter_initWithDoubleArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}


#line 253
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 255
  return index >= 0 && index < ((IOSDoubleArray *) nil_chk(array_))->size_ ? [self wrapWithId:new_JavaLangDouble_initWithDouble_(IOSDoubleArray_Get(array_, index))] : nil;
}


#line 258
- (jint)size {
  return ((IOSDoubleArray *) nil_chk(array_))->size_;
}

- (id)getWrappedObject {
  return array_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDoubleArray:withFreemarkerTemplateObjectWrapper:", "DoubleArrayAdapter", NULL, 0x2, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x12, "[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter = { 2, "DoubleArrayAdapter", "freemarker.template", "DefaultArrayAdapter", 0xa, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter;
}

@end


#line 248
void FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter_initWithDoubleArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter *self, IOSDoubleArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  self->array_ = array;
}


#line 248
FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter_initWithDoubleArray_withFreemarkerTemplateObjectWrapper_(IOSDoubleArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter *self = [FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter alloc];
  FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter_initWithDoubleArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultArrayAdapter_DoubleArrayAdapter)


#line 268
@implementation FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter


#line 272
- (instancetype)initWithCharArray:(IOSCharArray *)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter_initWithCharArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}


#line 277
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 279
  return index >= 0 && index < ((IOSCharArray *) nil_chk(array_))->size_ ? [self wrapWithId:new_JavaLangCharacter_initWithChar_(IOSCharArray_Get(array_, index))] : nil;
}


#line 282
- (jint)size {
  return ((IOSCharArray *) nil_chk(array_))->size_;
}

- (id)getWrappedObject {
  return array_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithCharArray:withFreemarkerTemplateObjectWrapper:", "CharArrayAdapter", NULL, 0x2, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x12, "[C", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter = { 2, "CharArrayAdapter", "freemarker.template", "DefaultArrayAdapter", 0xa, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter;
}

@end


#line 272
void FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter_initWithCharArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter *self, IOSCharArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  self->array_ = array;
}


#line 272
FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter_initWithCharArray_withFreemarkerTemplateObjectWrapper_(IOSCharArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter *self = [FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter alloc];
  FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter_initWithCharArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultArrayAdapter_CharArrayAdapter)


#line 292
@implementation FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter


#line 296
- (instancetype)initWithBooleanArray:(IOSBooleanArray *)array
 withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter_initWithBooleanArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}


#line 301
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 303
  return index >= 0 && index < ((IOSBooleanArray *) nil_chk(array_))->size_ ? [self wrapWithId:new_JavaLangBoolean_initWithBoolean_(IOSBooleanArray_Get(array_, index))] : nil;
}


#line 306
- (jint)size {
  return ((IOSBooleanArray *) nil_chk(array_))->size_;
}

- (id)getWrappedObject {
  return array_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithBooleanArray:withFreemarkerTemplateObjectWrapper:", "BooleanArrayAdapter", NULL, 0x2, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x12, "[Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter = { 2, "BooleanArrayAdapter", "freemarker.template", "DefaultArrayAdapter", 0xa, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter;
}

@end


#line 296
void FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter_initWithBooleanArray_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter *self, IOSBooleanArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  self->array_ = array;
}


#line 296
FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter_initWithBooleanArray_withFreemarkerTemplateObjectWrapper_(IOSBooleanArray *array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter *self = [FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter alloc];
  FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter_initWithBooleanArray_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultArrayAdapter_BooleanArrayAdapter)


#line 319
@implementation FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter


#line 324
- (instancetype)initWithId:(id)array
withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter_initWithId_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 332
  return index >= 0 && index < length_ ? [self wrapWithId:JavaLangReflectArray_getWithId_withInt_(array_, index)] : nil;
}


#line 335
- (jint)size {
  return length_;
}

- (id)getWrappedObject {
  return array_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withFreemarkerTemplateObjectWrapper:", "GenericPrimitiveArrayAdapter", NULL, 0x2, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL,  },
    { "length_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter = { 2, "GenericPrimitiveArrayAdapter", "freemarker.template", "DefaultArrayAdapter", 0xa, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter;
}

@end


#line 324
void FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter_initWithId_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter *self, id array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) FreemarkerTemplateDefaultArrayAdapter_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  self->array_ = array;
  self->length_ = JavaLangReflectArray_getLengthWithId_(array);
}


#line 324
FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter *new_FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter_initWithId_withFreemarkerTemplateObjectWrapper_(id array, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter *self = [FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter alloc];
  FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter_initWithId_withFreemarkerTemplateObjectWrapper_(self, array, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultArrayAdapter_GenericPrimitiveArrayAdapter)
