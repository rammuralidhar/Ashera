//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/ClassIntrospectorBuilder.java
//


#include "BeansWrapper.h"
#include "ClassIntrospector.h"
#include "ClassIntrospectorBuilder.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "MethodAppearanceFineTuner.h"
#include "MethodSorter.h"
#include "SingletonCustomizer.h"
#include "Version.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/ref/Reference.h"
#include "java/lang/ref/ReferenceQueue.h"
#include "java/lang/ref/WeakReference.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/ClassIntrospectorBuilder.java"

@interface FreemarkerExtBeansClassIntrospectorBuilder () {
 @public
  jboolean bugfixed_;
  jint exposureLevel_;
  jboolean exposeFields_;
  id<FreemarkerExtBeansMethodAppearanceFineTuner> methodAppearanceFineTuner_;
  id<FreemarkerExtBeansMethodSorter> methodSorter_;
}

+ (void)removeClearedReferencesFromInstanceCache;

@end

J2OBJC_FIELD_SETTER(FreemarkerExtBeansClassIntrospectorBuilder, methodAppearanceFineTuner_, id<FreemarkerExtBeansMethodAppearanceFineTuner>)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansClassIntrospectorBuilder, methodSorter_, id<FreemarkerExtBeansMethodSorter>)

static id<JavaUtilMap> FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerExtBeansClassIntrospectorBuilder, INSTANCE_CACHE_, id<JavaUtilMap>)

static JavaLangRefReferenceQueue *FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_REF_QUEUE_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerExtBeansClassIntrospectorBuilder, INSTANCE_CACHE_REF_QUEUE_, JavaLangRefReferenceQueue *)

__attribute__((unused)) static void FreemarkerExtBeansClassIntrospectorBuilder_removeClearedReferencesFromInstanceCache();

J2OBJC_INITIALIZED_DEFN(FreemarkerExtBeansClassIntrospectorBuilder)


#line 28
@implementation FreemarkerExtBeansClassIntrospectorBuilder


#line 46
- (instancetype)initWithFreemarkerExtBeansClassIntrospector:(FreemarkerExtBeansClassIntrospector *)ci {
  FreemarkerExtBeansClassIntrospectorBuilder_initWithFreemarkerExtBeansClassIntrospector_(self, ci);
  return self;
}


#line 54
- (instancetype)initWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)incompatibleImprovements {
  FreemarkerExtBeansClassIntrospectorBuilder_initWithFreemarkerTemplateVersion_(self, incompatibleImprovements);
  return self;
}


#line 61
- (id)clone {
  @try {
    return [super clone];
  }
  @catch (
#line 64
  JavaLangCloneNotSupportedException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(@"Failed to clone ClassIntrospectorBuilder", e);
  }
}


#line 69
- (NSUInteger)hash {
  jint prime = 31;
  jint result = 1;
  result = prime * result + (bugfixed_ ? 1231 : 1237);
  result = prime * result + (exposeFields_ ? 1231 : 1237);
  result = prime * result + exposureLevel_;
  result = prime * result + JavaLangSystem_identityHashCodeWithId_(methodAppearanceFineTuner_);
  result = prime * result + JavaLangSystem_identityHashCodeWithId_(methodSorter_);
  return result;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) return YES;
  if (obj == nil) return NO;
  if ([self getClass] != [nil_chk(obj) getClass]) return NO;
  FreemarkerExtBeansClassIntrospectorBuilder *other = (FreemarkerExtBeansClassIntrospectorBuilder *) check_class_cast(obj, [FreemarkerExtBeansClassIntrospectorBuilder class]);
  
#line 86
  if (bugfixed_ != other->bugfixed_) return NO;
  if (exposeFields_ != other->exposeFields_) return NO;
  if (exposureLevel_ != other->exposureLevel_) return NO;
  if (methodAppearanceFineTuner_ != other->methodAppearanceFineTuner_) return NO;
  if (methodSorter_ != other->methodSorter_) return NO;
  
#line 92
  return YES;
}


#line 95
- (jint)getExposureLevel {
  return exposureLevel_;
}


#line 100
- (void)setExposureLevelWithInt:(jint)exposureLevel {
  if (exposureLevel < FreemarkerExtBeansBeansWrapper_EXPOSE_ALL || exposureLevel > FreemarkerExtBeansBeansWrapper_EXPOSE_NOTHING) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Illegal exposure level: ", exposureLevel));
  }
  
#line 105
  self->exposureLevel_ = exposureLevel;
}


#line 108
- (jboolean)getExposeFields {
  return exposeFields_;
}


#line 113
- (void)setExposeFieldsWithBoolean:(jboolean)exposeFields {
  self->exposeFields_ = exposeFields;
}

- (id<FreemarkerExtBeansMethodAppearanceFineTuner>)getMethodAppearanceFineTuner {
  return methodAppearanceFineTuner_;
}

- (void)setMethodAppearanceFineTunerWithFreemarkerExtBeansMethodAppearanceFineTuner:(id<FreemarkerExtBeansMethodAppearanceFineTuner>)methodAppearanceFineTuner {
  self->methodAppearanceFineTuner_ = methodAppearanceFineTuner;
}

- (id<FreemarkerExtBeansMethodSorter>)getMethodSorter {
  return methodSorter_;
}

- (void)setMethodSorterWithFreemarkerExtBeansMethodSorter:(id<FreemarkerExtBeansMethodSorter>)methodSorter {
  self->methodSorter_ = methodSorter;
}

+ (void)removeClearedReferencesFromInstanceCache {
  FreemarkerExtBeansClassIntrospectorBuilder_removeClearedReferencesFromInstanceCache();
}


#line 148
+ (void)clearInstanceCache {
  FreemarkerExtBeansClassIntrospectorBuilder_clearInstanceCache();
}


#line 155
+ (id<JavaUtilMap>)getInstanceCache {
  return FreemarkerExtBeansClassIntrospectorBuilder_getInstanceCache();
}


#line 163
- (FreemarkerExtBeansClassIntrospector *)build {
  if ((methodAppearanceFineTuner_ == nil || [FreemarkerExtBeansSingletonCustomizer_class_() isInstance:methodAppearanceFineTuner_]) &&
#line 165
  (methodSorter_ == nil || [FreemarkerExtBeansSingletonCustomizer_class_() isInstance:methodSorter_])) {
    
#line 167
    FreemarkerExtBeansClassIntrospector *instance;
    @synchronized(FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_) {
      JavaLangRefReference *instanceRef = (JavaLangRefReference *) check_class_cast([((id<JavaUtilMap>) nil_chk(FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_)) getWithId:self], [JavaLangRefReference class]);
      instance = instanceRef != nil ? (FreemarkerExtBeansClassIntrospector *) check_class_cast([instanceRef get], [FreemarkerExtBeansClassIntrospector class]) : nil;
      if (instance == nil) {
        FreemarkerExtBeansClassIntrospectorBuilder *thisClone = (FreemarkerExtBeansClassIntrospectorBuilder *) check_class_cast([self clone], [FreemarkerExtBeansClassIntrospectorBuilder class]);
        instance = new_FreemarkerExtBeansClassIntrospector_initWithFreemarkerExtBeansClassIntrospectorBuilder_withId_withBoolean_withBoolean_(thisClone, new_NSObject_init(), YES, YES);
        (void) [FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_ putWithId:thisClone withId:new_JavaLangRefWeakReference_initWithId_withJavaLangRefReferenceQueue_(instance, FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_REF_QUEUE_)];
      }
    }
    
#line 178
    FreemarkerExtBeansClassIntrospectorBuilder_removeClearedReferencesFromInstanceCache();
    
#line 180
    return instance;
  }
  else {
    
#line 185
    return new_FreemarkerExtBeansClassIntrospector_initWithFreemarkerExtBeansClassIntrospectorBuilder_withId_withBoolean_withBoolean_(self, new_NSObject_init(), YES, NO);
  }
}


#line 189
- (jboolean)isBugfixed {
  return bugfixed_;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (void)initialize {
  if (self == [FreemarkerExtBeansClassIntrospectorBuilder class]) {
    FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_ = new_JavaUtilHashMap_init();
    FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_REF_QUEUE_ = new_JavaLangRefReferenceQueue_init();
    J2OBJC_SET_INITIALIZED(FreemarkerExtBeansClassIntrospectorBuilder)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerExtBeansClassIntrospector:", "ClassIntrospectorBuilder", NULL, 0x0, NULL, NULL },
    { "initWithFreemarkerTemplateVersion:", "ClassIntrospectorBuilder", NULL, 0x0, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "getExposureLevel", NULL, "I", 0x1, NULL, NULL },
    { "setExposureLevelWithInt:", "setExposureLevel", "V", 0x1, NULL, NULL },
    { "getExposeFields", NULL, "Z", 0x1, NULL, NULL },
    { "setExposeFieldsWithBoolean:", "setExposeFields", "V", 0x1, NULL, NULL },
    { "getMethodAppearanceFineTuner", NULL, "Lfreemarker.ext.beans.MethodAppearanceFineTuner;", 0x1, NULL, NULL },
    { "setMethodAppearanceFineTunerWithFreemarkerExtBeansMethodAppearanceFineTuner:", "setMethodAppearanceFineTuner", "V", 0x1, NULL, NULL },
    { "getMethodSorter", NULL, "Lfreemarker.ext.beans.MethodSorter;", 0x1, NULL, NULL },
    { "setMethodSorterWithFreemarkerExtBeansMethodSorter:", "setMethodSorter", "V", 0x1, NULL, NULL },
    { "removeClearedReferencesFromInstanceCache", NULL, "V", 0xa, NULL, NULL },
    { "clearInstanceCache", NULL, "V", 0x8, NULL, NULL },
    { "getInstanceCache", NULL, "Ljava.util.Map;", 0x8, NULL, NULL },
    { "build", NULL, "Lfreemarker.ext.beans.ClassIntrospector;", 0x0, NULL, NULL },
    { "isBugfixed", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bugfixed_", NULL, 0x12, "Z", NULL, NULL,  },
    { "INSTANCE_CACHE_", NULL, 0x1a, "Ljava.util.Map;", &FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_, NULL,  },
    { "INSTANCE_CACHE_REF_QUEUE_", NULL, 0x1a, "Ljava.lang.ref.ReferenceQueue;", &FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_REF_QUEUE_, NULL,  },
    { "exposureLevel_", NULL, 0x2, "I", NULL, NULL,  },
    { "exposeFields_", NULL, 0x2, "Z", NULL, NULL,  },
    { "methodAppearanceFineTuner_", NULL, 0x2, "Lfreemarker.ext.beans.MethodAppearanceFineTuner;", NULL, NULL,  },
    { "methodSorter_", NULL, 0x2, "Lfreemarker.ext.beans.MethodSorter;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansClassIntrospectorBuilder = { 2, "ClassIntrospectorBuilder", "freemarker.ext.beans", NULL, 0x10, 18, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansClassIntrospectorBuilder;
}

@end


#line 46
void FreemarkerExtBeansClassIntrospectorBuilder_initWithFreemarkerExtBeansClassIntrospector_(FreemarkerExtBeansClassIntrospectorBuilder *self, FreemarkerExtBeansClassIntrospector *ci) {
  (void) NSObject_init(self);
  self->exposureLevel_ =
#line 36
  FreemarkerExtBeansBeansWrapper_EXPOSE_SAFE;
  
#line 47
  self->bugfixed_ = ((FreemarkerExtBeansClassIntrospector *) nil_chk(ci))->bugfixed_;
  self->exposureLevel_ = ci->exposureLevel_;
  self->exposeFields_ = ci->exposeFields_;
  self->methodAppearanceFineTuner_ = ci->methodAppearanceFineTuner_;
  self->methodSorter_ = ci->methodSorter_;
}


#line 46
FreemarkerExtBeansClassIntrospectorBuilder *new_FreemarkerExtBeansClassIntrospectorBuilder_initWithFreemarkerExtBeansClassIntrospector_(FreemarkerExtBeansClassIntrospector *ci) {
  FreemarkerExtBeansClassIntrospectorBuilder *self = [FreemarkerExtBeansClassIntrospectorBuilder alloc];
  FreemarkerExtBeansClassIntrospectorBuilder_initWithFreemarkerExtBeansClassIntrospector_(self, ci);
  return self;
}


#line 54
void FreemarkerExtBeansClassIntrospectorBuilder_initWithFreemarkerTemplateVersion_(FreemarkerExtBeansClassIntrospectorBuilder *self, FreemarkerTemplateVersion *incompatibleImprovements) {
  (void) NSObject_init(self);
  self->exposureLevel_ =
#line 36
  FreemarkerExtBeansBeansWrapper_EXPOSE_SAFE;
  
#line 58
  self->bugfixed_ = FreemarkerExtBeansBeansWrapper_is2321BugfixedWithFreemarkerTemplateVersion_(incompatibleImprovements);
}


#line 54
FreemarkerExtBeansClassIntrospectorBuilder *new_FreemarkerExtBeansClassIntrospectorBuilder_initWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *incompatibleImprovements) {
  FreemarkerExtBeansClassIntrospectorBuilder *self = [FreemarkerExtBeansClassIntrospectorBuilder alloc];
  FreemarkerExtBeansClassIntrospectorBuilder_initWithFreemarkerTemplateVersion_(self, incompatibleImprovements);
  return self;
}


#line 133
void FreemarkerExtBeansClassIntrospectorBuilder_removeClearedReferencesFromInstanceCache() {
  FreemarkerExtBeansClassIntrospectorBuilder_initialize();
  
#line 134
  JavaLangRefReference *clearedRef;
  while ((clearedRef = [((JavaLangRefReferenceQueue *) nil_chk(FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_REF_QUEUE_)) poll]) != nil) {
    @synchronized(FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_) {
      for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([((id<JavaUtilMap>) nil_chk(FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_)) values])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
        if ([it next] == clearedRef) {
          [it remove];
          goto break_findClearedRef;
        }
      }
      break_findClearedRef: ;
    }
  }
}


#line 148
void FreemarkerExtBeansClassIntrospectorBuilder_clearInstanceCache() {
  FreemarkerExtBeansClassIntrospectorBuilder_initialize();
  
#line 149
  @synchronized(FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_) {
    [((id<JavaUtilMap>) nil_chk(FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_)) clear];
  }
}


#line 155
id<JavaUtilMap> FreemarkerExtBeansClassIntrospectorBuilder_getInstanceCache() {
  FreemarkerExtBeansClassIntrospectorBuilder_initialize();
  
#line 156
  return FreemarkerExtBeansClassIntrospectorBuilder_INSTANCE_CACHE_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansClassIntrospectorBuilder)
