//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/TemplateHashModelEx.java
//

#ifndef _FreemarkerTemplateTemplateHashModelEx_H_
#define _FreemarkerTemplateTemplateHashModelEx_H_

#include "J2ObjC_header.h"
#include "TemplateHashModel.h"

@protocol FreemarkerTemplateTemplateCollectionModel;

/**
 @brief "extended hash" template language data type; extends TemplateHashModel by allowing iterating through its keys and values.
 <p>In templates they are used like hashes, but these will also work (among others): <code>myExtHash?size</code> , <code>myExtHash?keys</code> , <code>myExtHash?values</code> .
 */
@protocol FreemarkerTemplateTemplateHashModelEx < FreemarkerTemplateTemplateHashModel, NSObject, JavaObject >

/**
 @return the number of key/value mappings in the hash.
 */
- (jint)size;

/**
 @return a collection containing the keys in the hash. Every element of the returned collection must implement the TemplateScalarModel (as the keys of hashes are always strings).
 */
- (id<FreemarkerTemplateTemplateCollectionModel>)keys;

/**
 @return a collection containing the values in the hash. The elements of the returned collection can be any kind of TemplateModel -s.
 */
- (id<FreemarkerTemplateTemplateCollectionModel>)values;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateTemplateHashModelEx)

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateTemplateHashModelEx)

#endif // _FreemarkerTemplateTemplateHashModelEx_H_
