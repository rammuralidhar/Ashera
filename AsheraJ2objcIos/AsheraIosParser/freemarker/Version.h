//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/Version.java
//

#ifndef _FreemarkerTemplateVersion_H_
#define _FreemarkerTemplateVersion_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"

@class JavaLangBoolean;
@class JavaUtilDate;

/**
 @brief Represents a version number plus the further qualifiers and build info.
 This is mostly used for representing a FreeMarker version number, but should also be able to parse the version strings of 3rd party libraries.
 @since 2.3.20
 */
@interface FreemarkerTemplateVersion : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithInt:(jint)major
                    withInt:(jint)minor
                    withInt:(jint)micro;

- (instancetype)initWithInt:(jint)major
                    withInt:(jint)minor
                    withInt:(jint)micro
               withNSString:(NSString *)extraInfo
        withJavaLangBoolean:(JavaLangBoolean *)gaeCompatible
           withJavaUtilDate:(JavaUtilDate *)buildDate;

/**
 @throws IllegalArgumentException if the version string is malformed
 */
- (instancetype)initWithNSString:(NSString *)stringValue;

/**
 @throws IllegalArgumentException if the version string is malformed
 */
- (instancetype)initWithNSString:(NSString *)stringValue
             withJavaLangBoolean:(JavaLangBoolean *)gaeCompliant
                withJavaUtilDate:(JavaUtilDate *)buildDate;

- (jboolean)isEqual:(id)obj;

/**
 @return The build date if known, or <code>null</code> .
 */
- (JavaUtilDate *)getBuildDate;

/**
 @brief The arbitrary string after the micro version number without leading dot, dash or underscore, like "RC03" in "2.4.0-RC03".
 This is usually a qualifier (RC, SNAPHOST, nightly, beta, etc) and sometimes build info (like date).
 */
- (NSString *)getExtraInfo;

/**
 @brief The 1st version number, like 1 in "1.2.3".
 */
- (jint)getMajor;

/**
 @brief The 3rd version number, like 3 in "1.2.3".
 */
- (jint)getMicro;

/**
 @brief The 2nd version number, like 2 in "1.2.3".
 */
- (jint)getMinor;

- (NSUInteger)hash;

/**
 @return major * 1000000 + minor * 1000 + micro.
 */
- (jint)intValue;

+ (jint)intValueForWithInt:(jint)major
                   withInt:(jint)minor
                   withInt:(jint)micro;

/**
 @return The Google App Engine compliance, or <code>null</code> .
 */
- (JavaLangBoolean *)isGAECompliant;

/**
 @brief Contains the major.minor.micor numbers and the extraInfo part, not the other information.
 */
- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateVersion)

FOUNDATION_EXPORT void FreemarkerTemplateVersion_initWithNSString_(FreemarkerTemplateVersion *self, NSString *stringValue);

FOUNDATION_EXPORT FreemarkerTemplateVersion *new_FreemarkerTemplateVersion_initWithNSString_(NSString *stringValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerTemplateVersion_initWithNSString_withJavaLangBoolean_withJavaUtilDate_(FreemarkerTemplateVersion *self, NSString *stringValue, JavaLangBoolean *gaeCompliant, JavaUtilDate *buildDate);

FOUNDATION_EXPORT FreemarkerTemplateVersion *new_FreemarkerTemplateVersion_initWithNSString_withJavaLangBoolean_withJavaUtilDate_(NSString *stringValue, JavaLangBoolean *gaeCompliant, JavaUtilDate *buildDate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerTemplateVersion_initWithInt_withInt_withInt_(FreemarkerTemplateVersion *self, jint major, jint minor, jint micro);

FOUNDATION_EXPORT FreemarkerTemplateVersion *new_FreemarkerTemplateVersion_initWithInt_withInt_withInt_(jint major, jint minor, jint micro) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerTemplateVersion_initWithInt_withInt_withInt_withNSString_withJavaLangBoolean_withJavaUtilDate_(FreemarkerTemplateVersion *self, jint major, jint minor, jint micro, NSString *extraInfo, JavaLangBoolean *gaeCompatible, JavaUtilDate *buildDate);

FOUNDATION_EXPORT FreemarkerTemplateVersion *new_FreemarkerTemplateVersion_initWithInt_withInt_withInt_withNSString_withJavaLangBoolean_withJavaUtilDate_(jint major, jint minor, jint micro, NSString *extraInfo, JavaLangBoolean *gaeCompatible, JavaUtilDate *buildDate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT jint FreemarkerTemplateVersion_intValueForWithInt_withInt_withInt_(jint major, jint minor, jint micro);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateVersion)

#endif // _FreemarkerTemplateVersion_H_
