//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/ObjectConstructor.java
//

#ifndef _FreemarkerTemplateUtilityObjectConstructor_H_
#define _FreemarkerTemplateUtilityObjectConstructor_H_

#include "J2ObjC_header.h"
#include "TemplateMethodModelEx.h"

@protocol JavaUtilList;

/**
 @brief An object that you can make available in a template to instantiate arbitrary beans-wrapped objects in a template.
 Beware of this class's security implications. It allows the instantiation of arbitrary objects and invoking methods on them. Usage is something like: <br> <br>myDataModel.put("objectConstructor", new ObjectConstructor()); <br> <br>And then from your FTL code: <br> <br>&lt;#assign aList = objectConstructor("java.util.ArrayList", 100)&gt;
 */
@interface FreemarkerTemplateUtilityObjectConstructor : NSObject < FreemarkerTemplateTemplateMethodModelEx >

#pragma mark Public

- (instancetype)init;

- (id)execWithJavaUtilList:(id<JavaUtilList>)args;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateUtilityObjectConstructor)

FOUNDATION_EXPORT void FreemarkerTemplateUtilityObjectConstructor_init(FreemarkerTemplateUtilityObjectConstructor *self);

FOUNDATION_EXPORT FreemarkerTemplateUtilityObjectConstructor *new_FreemarkerTemplateUtilityObjectConstructor_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateUtilityObjectConstructor)

#endif // _FreemarkerTemplateUtilityObjectConstructor_H_
