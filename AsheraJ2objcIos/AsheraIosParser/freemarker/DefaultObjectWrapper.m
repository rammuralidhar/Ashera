//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/DefaultObjectWrapper.java
//


#include "BeansWrapper.h"
#include "BeansWrapperConfiguration.h"
#include "Configuration.h"
#include "DefaultArrayAdapter.h"
#include "DefaultIteratorAdapter.h"
#include "DefaultListAdapter.h"
#include "DefaultMapAdapter.h"
#include "DefaultNonListCollectionAdapter.h"
#include "DefaultObjectWrapper.h"
#include "DefaultObjectWrapperConfiguration.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "Logger.h"
#include "ObjectWrapper.h"
#include "SimpleCollection.h"
#include "SimpleDate.h"
#include "SimpleHash.h"
#include "SimpleNumber.h"
#include "SimpleScalar.h"
#include "SimpleSequence.h"
#include "TemplateBooleanModel.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "Version.h"
#include "_TemplateAPI.h"
#include "java/lang/Boolean.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Array.h"
#include "java/lang/reflect/Field.h"
#include "java/sql/Date.h"
#include "java/sql/Time.h"
#include "java/sql/Timestamp.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Date.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/DefaultObjectWrapper.java"

@interface FreemarkerTemplateDefaultObjectWrapper () {
 @public
  jboolean useAdaptersForContainers_;
  jboolean forceLegacyNonListCollections_;
}

@end

static IOSClass *FreemarkerTemplateDefaultObjectWrapper_JYTHON_OBJ_CLASS_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerTemplateDefaultObjectWrapper, JYTHON_OBJ_CLASS_, IOSClass *)

static id<FreemarkerTemplateObjectWrapper> FreemarkerTemplateDefaultObjectWrapper_JYTHON_WRAPPER_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerTemplateDefaultObjectWrapper, JYTHON_WRAPPER_, id<FreemarkerTemplateObjectWrapper>)

@interface FreemarkerTemplateDefaultObjectWrapper_$1 : FreemarkerTemplateDefaultObjectWrapperConfiguration

- (instancetype)initWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultObjectWrapper_$1)

__attribute__((unused)) static void FreemarkerTemplateDefaultObjectWrapper_$1_initWithFreemarkerTemplateVersion_(FreemarkerTemplateDefaultObjectWrapper_$1 *self, FreemarkerTemplateVersion *arg$0);

__attribute__((unused)) static FreemarkerTemplateDefaultObjectWrapper_$1 *new_FreemarkerTemplateDefaultObjectWrapper_$1_initWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultObjectWrapper_$1)

@interface FreemarkerTemplateDefaultObjectWrapper_$2 : FreemarkerTemplateDefaultObjectWrapperConfiguration

- (instancetype)initWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultObjectWrapper_$2)

__attribute__((unused)) static void FreemarkerTemplateDefaultObjectWrapper_$2_initWithFreemarkerTemplateVersion_(FreemarkerTemplateDefaultObjectWrapper_$2 *self, FreemarkerTemplateVersion *arg$0);

__attribute__((unused)) static FreemarkerTemplateDefaultObjectWrapper_$2 *new_FreemarkerTemplateDefaultObjectWrapper_$2_initWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultObjectWrapper_$2)

J2OBJC_INITIALIZED_DEFN(FreemarkerTemplateDefaultObjectWrapper)

FreemarkerTemplateDefaultObjectWrapper *FreemarkerTemplateDefaultObjectWrapper_instance_;


#line 52
@implementation FreemarkerTemplateDefaultObjectWrapper


#line 71
- (instancetype)init {
  FreemarkerTemplateDefaultObjectWrapper_init(self);
  return self;
}


#line 90
- (instancetype)initWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)incompatibleImprovements {
  FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerTemplateVersion_(self, incompatibleImprovements);
  return self;
}


#line 100
- (instancetype)initWithFreemarkerExtBeansBeansWrapperConfiguration:(FreemarkerExtBeansBeansWrapperConfiguration *)bwCfg
                                                        withBoolean:(jboolean)writeProtected {
  FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_(self, bwCfg, writeProtected);
  return self;
}


#line 116
- (instancetype)initWithFreemarkerTemplateDefaultObjectWrapperConfiguration:(FreemarkerTemplateDefaultObjectWrapperConfiguration *)dowCfg
                                                                withBoolean:(jboolean)writeProtected {
  FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerTemplateDefaultObjectWrapperConfiguration_withBoolean_(self, dowCfg, writeProtected);
  return self;
}


#line 153
- (id<FreemarkerTemplateTemplateModel>)wrapWithId:(id)obj {
  if (obj == nil) {
    return [super wrapWithId:nil];
  }
  if ([FreemarkerTemplateTemplateModel_class_() isInstance:obj]) {
    return (id<FreemarkerTemplateTemplateModel>) check_protocol_cast(obj, @protocol(FreemarkerTemplateTemplateModel));
  }
  if ([obj isKindOfClass:[NSString class]]) {
    return new_FreemarkerTemplateSimpleScalar_initWithNSString_((NSString *) check_class_cast(obj, [NSString class]));
  }
  if ([obj isKindOfClass:[NSNumber class]]) {
    return new_FreemarkerTemplateSimpleNumber_initWithNSNumber_((NSNumber *) check_class_cast(obj, [NSNumber class]));
  }
  if ([obj isKindOfClass:[JavaUtilDate class]]) {
    if ([obj isKindOfClass:[JavaSqlDate class]]) {
      return new_FreemarkerTemplateSimpleDate_initWithJavaSqlDate_((JavaSqlDate *) check_class_cast(obj, [JavaSqlDate class]));
    }
    if ([obj isKindOfClass:[JavaSqlTime class]]) {
      return new_FreemarkerTemplateSimpleDate_initWithJavaSqlTime_((JavaSqlTime *) check_class_cast(obj, [JavaSqlTime class]));
    }
    if ([obj isKindOfClass:[JavaSqlTimestamp class]]) {
      return new_FreemarkerTemplateSimpleDate_initWithJavaSqlTimestamp_((JavaSqlTimestamp *) check_class_cast(obj, [JavaSqlTimestamp class]));
    }
    return new_FreemarkerTemplateSimpleDate_initWithJavaUtilDate_withInt_((JavaUtilDate *) check_class_cast(obj, [JavaUtilDate class]), [self getDefaultDateType]);
  }
  IOSClass *objClass = [nil_chk(obj) getClass];
  if ([objClass isArray]) {
    if (useAdaptersForContainers_) {
      return FreemarkerTemplateDefaultArrayAdapter_adaptWithId_withFreemarkerTemplateObjectWrapperAndUnwrapper_(obj, self);
    }
    else {
      
#line 183
      obj = [self convertArrayWithId:obj];
    }
  }
  
#line 187
  if ([JavaUtilCollection_class_() isInstance:obj]) {
    if (useAdaptersForContainers_) {
      if ([JavaUtilList_class_() isInstance:obj]) {
        return FreemarkerTemplateDefaultListAdapter_adaptWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_((id<JavaUtilList>) check_protocol_cast(obj, @protocol(JavaUtilList)), self);
      }
      else {
        
#line 192
        return forceLegacyNonListCollections_ ? new_FreemarkerTemplateSimpleSequence_initWithJavaUtilCollection_withFreemarkerTemplateObjectWrapper_(
#line 193
        (id<JavaUtilCollection>) check_protocol_cast(obj, @protocol(JavaUtilCollection)), self) : FreemarkerTemplateDefaultNonListCollectionAdapter_adaptWithJavaUtilCollection_withFreemarkerTemplateUtilityObjectWrapperWithAPISupport_(
#line 194
        (id<JavaUtilCollection>) check_protocol_cast(obj, @protocol(JavaUtilCollection)), self);
      }
    }
    else {
      
#line 197
      return new_FreemarkerTemplateSimpleSequence_initWithJavaUtilCollection_withFreemarkerTemplateObjectWrapper_((id<JavaUtilCollection>) check_protocol_cast(obj, @protocol(JavaUtilCollection)), self);
    }
  }
  if ([JavaUtilMap_class_() isInstance:obj]) {
    return useAdaptersForContainers_ ? FreemarkerTemplateDefaultMapAdapter_adaptWithJavaUtilMap_withFreemarkerTemplateUtilityObjectWrapperWithAPISupport_(
#line 202
    (id<JavaUtilMap>) check_protocol_cast(obj, @protocol(JavaUtilMap)), self) : new_FreemarkerTemplateSimpleHash_initWithJavaUtilMap_withFreemarkerTemplateObjectWrapper_(
#line 203
    (id<JavaUtilMap>) check_protocol_cast(obj, @protocol(JavaUtilMap)), self);
  }
  if ([obj isKindOfClass:[JavaLangBoolean class]]) {
    return [nil_chk(obj) isEqual:JavaLangBoolean_get_TRUE__()] ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
  }
  if ([JavaUtilIterator_class_() isInstance:obj]) {
    return useAdaptersForContainers_ ? FreemarkerTemplateDefaultIteratorAdapter_adaptWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(
#line 210
    (id<JavaUtilIterator>) check_protocol_cast(obj, @protocol(JavaUtilIterator)), self) : new_FreemarkerTemplateSimpleCollection_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(
#line 211
    (id<JavaUtilIterator>) check_protocol_cast(obj, @protocol(JavaUtilIterator)), self);
  }
  return [self handleUnknownTypeWithId:obj];
}


#line 227
- (id<FreemarkerTemplateTemplateModel>)handleUnknownTypeWithId:(id)obj {
  
#line 231
  if (FreemarkerTemplateDefaultObjectWrapper_JYTHON_WRAPPER_ != nil && [((IOSClass *) nil_chk(FreemarkerTemplateDefaultObjectWrapper_JYTHON_OBJ_CLASS_)) isInstance:obj]) {
    return [FreemarkerTemplateDefaultObjectWrapper_JYTHON_WRAPPER_ wrapWithId:obj];
  }
  return [super wrapWithId:obj];
}


#line 244
- (id)convertArrayWithId:(id)arr {
  jint size = JavaLangReflectArray_getLengthWithId_(arr);
  JavaUtilArrayList *list = new_JavaUtilArrayList_initWithInt_(size);
  for (jint i = 0; i < size; i++) {
    [list addWithId:JavaLangReflectArray_getWithId_withInt_(arr, i)];
  }
  return list;
}


#line 258
- (jboolean)getUseAdaptersForContainers {
  return useAdaptersForContainers_;
}


#line 288
- (void)setUseAdaptersForContainersWithBoolean:(jboolean)useAdaptersForContainers {
  [self checkModifiable];
  self->useAdaptersForContainers_ = useAdaptersForContainers;
}


#line 298
- (jboolean)getForceLegacyNonListCollections {
  return forceLegacyNonListCollections_;
}


#line 316
- (void)setForceLegacyNonListCollectionsWithBoolean:(jboolean)forceLegacyNonListCollections {
  [self checkModifiable];
  self->forceLegacyNonListCollections_ = forceLegacyNonListCollections;
}


#line 326
+ (FreemarkerTemplateVersion *)normalizeIncompatibleImprovementsVersionWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)incompatibleImprovements {
  return FreemarkerTemplateDefaultObjectWrapper_normalizeIncompatibleImprovementsVersionWithFreemarkerTemplateVersion_(incompatibleImprovements);
}


#line 337
- (NSString *)toPropertiesString {
  NSString *bwProps = [super toPropertiesString];
  
#line 341
  if ([((NSString *) nil_chk(bwProps)) hasPrefix:@"simpleMapWrapper"]) {
    jint smwEnd = [bwProps indexOf:','];
    if (smwEnd != -1) {
      bwProps = [((NSString *) nil_chk([bwProps substring:smwEnd + 1])) trim];
    }
  }
  
#line 348
  return JreStrcat("$Z$Z$$", @"useAdaptersForContainers=", useAdaptersForContainers_, @", forceLegacyNonListCollections=",
#line 349
  forceLegacyNonListCollections_, @", ", bwProps);
}

+ (void)initialize {
  if (self == [FreemarkerTemplateDefaultObjectWrapper class]) {
    FreemarkerTemplateDefaultObjectWrapper_instance_ = new_FreemarkerTemplateDefaultObjectWrapper_init();
    {
      
#line 121
      IOSClass *cl;
      id<FreemarkerTemplateObjectWrapper> ow;
      @try {
        cl = IOSClass_forName_(@"org.python.core.PyObject");
        ow = (id<FreemarkerTemplateObjectWrapper>) check_protocol_cast([((JavaLangReflectField *) nil_chk([((IOSClass *) nil_chk(IOSClass_forName_(
#line 126
        @"freemarker.ext.jython.JythonWrapper"))) getField:
#line 127
        @"INSTANCE"])) getWithId:nil], @protocol(FreemarkerTemplateObjectWrapper));
      }
      @catch (
#line 128
      JavaLangThrowable *e) {
        cl = nil;
        ow = nil;
        if (!([e isKindOfClass:[JavaLangClassNotFoundException class]])) {
          @try {
            [((FreemarkerLogLogger *) nil_chk(FreemarkerLogLogger_getLoggerWithNSString_(@"freemarker.template.DefaultObjectWrapper"))) errorWithNSString:
#line 134
            @"Failed to init Jython support, so it was disabled." withJavaLangThrowable:e];
          }
          @catch (
#line 135
          JavaLangThrowable *e2) {
          }
        }
      }
      
#line 140
      FreemarkerTemplateDefaultObjectWrapper_JYTHON_OBJ_CLASS_ = cl;
      FreemarkerTemplateDefaultObjectWrapper_JYTHON_WRAPPER_ = ow;
    }
    J2OBJC_SET_INITIALIZED(FreemarkerTemplateDefaultObjectWrapper)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "DefaultObjectWrapper", NULL, 0x1, NULL, NULL },
    { "initWithFreemarkerTemplateVersion:", "DefaultObjectWrapper", NULL, 0x1, NULL, NULL },
    { "initWithFreemarkerExtBeansBeansWrapperConfiguration:withBoolean:", "DefaultObjectWrapper", NULL, 0x4, NULL, NULL },
    { "initWithFreemarkerTemplateDefaultObjectWrapperConfiguration:withBoolean:", "DefaultObjectWrapper", NULL, 0x4, NULL, NULL },
    { "wrapWithId:", "wrap", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "handleUnknownTypeWithId:", "handleUnknownType", "Lfreemarker.template.TemplateModel;", 0x4, "Lfreemarker.template.TemplateModelException;", NULL },
    { "convertArrayWithId:", "convertArray", "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "getUseAdaptersForContainers", NULL, "Z", 0x1, NULL, NULL },
    { "setUseAdaptersForContainersWithBoolean:", "setUseAdaptersForContainers", "V", 0x1, NULL, NULL },
    { "getForceLegacyNonListCollections", NULL, "Z", 0x1, NULL, NULL },
    { "setForceLegacyNonListCollectionsWithBoolean:", "setForceLegacyNonListCollections", "V", 0x1, NULL, NULL },
    { "normalizeIncompatibleImprovementsVersionWithFreemarkerTemplateVersion:", "normalizeIncompatibleImprovementsVersion", "Lfreemarker.template.Version;", 0xc, NULL, NULL },
    { "toPropertiesString", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "instance_", NULL, 0x18, "Lfreemarker.template.DefaultObjectWrapper;", &FreemarkerTemplateDefaultObjectWrapper_instance_, NULL,  },
    { "JYTHON_OBJ_CLASS_", NULL, 0x1a, "Ljava.lang.Class;", &FreemarkerTemplateDefaultObjectWrapper_JYTHON_OBJ_CLASS_, NULL,  },
    { "JYTHON_WRAPPER_", NULL, 0x1a, "Lfreemarker.template.ObjectWrapper;", &FreemarkerTemplateDefaultObjectWrapper_JYTHON_WRAPPER_, NULL,  },
    { "useAdaptersForContainers_", NULL, 0x2, "Z", NULL, NULL,  },
    { "forceLegacyNonListCollections_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultObjectWrapper = { 2, "DefaultObjectWrapper", "freemarker.template", NULL, 0x1, 13, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultObjectWrapper;
}

@end


#line 71
void FreemarkerTemplateDefaultObjectWrapper_init(FreemarkerTemplateDefaultObjectWrapper *self) {
  (void) FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerTemplateVersion_(self, FreemarkerTemplateConfiguration_get_DEFAULT_INCOMPATIBLE_IMPROVEMENTS_());
}


#line 71
FreemarkerTemplateDefaultObjectWrapper *new_FreemarkerTemplateDefaultObjectWrapper_init() {
  FreemarkerTemplateDefaultObjectWrapper *self = [FreemarkerTemplateDefaultObjectWrapper alloc];
  FreemarkerTemplateDefaultObjectWrapper_init(self);
  return self;
}


#line 90
void FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerTemplateVersion_(FreemarkerTemplateDefaultObjectWrapper *self, FreemarkerTemplateVersion *incompatibleImprovements) {
  (void) FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerTemplateDefaultObjectWrapperConfiguration_withBoolean_(self, new_FreemarkerTemplateDefaultObjectWrapper_$1_initWithFreemarkerTemplateVersion_(incompatibleImprovements), NO);
}


#line 90
FreemarkerTemplateDefaultObjectWrapper *new_FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *incompatibleImprovements) {
  FreemarkerTemplateDefaultObjectWrapper *self = [FreemarkerTemplateDefaultObjectWrapper alloc];
  FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerTemplateVersion_(self, incompatibleImprovements);
  return self;
}


#line 100
void FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_(FreemarkerTemplateDefaultObjectWrapper *self, FreemarkerExtBeansBeansWrapperConfiguration *bwCfg, jboolean writeProtected) {
  (void) FreemarkerExtBeansBeansWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_withBoolean_(self, bwCfg, writeProtected, NO);
  FreemarkerTemplateDefaultObjectWrapperConfiguration *dowDowCfg = [bwCfg isKindOfClass:[FreemarkerTemplateDefaultObjectWrapperConfiguration class]] ?
#line 103
  (FreemarkerTemplateDefaultObjectWrapperConfiguration *) check_class_cast(bwCfg, [FreemarkerTemplateDefaultObjectWrapperConfiguration class]) : new_FreemarkerTemplateDefaultObjectWrapper_$2_initWithFreemarkerTemplateVersion_(
#line 104
  [((FreemarkerExtBeansBeansWrapperConfiguration *) nil_chk(bwCfg)) getIncompatibleImprovements]);
  self->useAdaptersForContainers_ = [dowDowCfg getUseAdaptersForContainers];
  self->forceLegacyNonListCollections_ = [dowDowCfg getForceLegacyNonListCollections];
  [self finalizeConstructionWithBoolean:writeProtected];
}


#line 100
FreemarkerTemplateDefaultObjectWrapper *new_FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_(FreemarkerExtBeansBeansWrapperConfiguration *bwCfg, jboolean writeProtected) {
  FreemarkerTemplateDefaultObjectWrapper *self = [FreemarkerTemplateDefaultObjectWrapper alloc];
  FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_(self, bwCfg, writeProtected);
  return self;
}


#line 116
void FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerTemplateDefaultObjectWrapperConfiguration_withBoolean_(FreemarkerTemplateDefaultObjectWrapper *self, FreemarkerTemplateDefaultObjectWrapperConfiguration *dowCfg, jboolean writeProtected) {
  (void) FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_(self, dowCfg, writeProtected);
}


#line 116
FreemarkerTemplateDefaultObjectWrapper *new_FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerTemplateDefaultObjectWrapperConfiguration_withBoolean_(FreemarkerTemplateDefaultObjectWrapperConfiguration *dowCfg, jboolean writeProtected) {
  FreemarkerTemplateDefaultObjectWrapper *self = [FreemarkerTemplateDefaultObjectWrapper alloc];
  FreemarkerTemplateDefaultObjectWrapper_initWithFreemarkerTemplateDefaultObjectWrapperConfiguration_withBoolean_(self, dowCfg, writeProtected);
  return self;
}


#line 326
FreemarkerTemplateVersion *FreemarkerTemplateDefaultObjectWrapper_normalizeIncompatibleImprovementsVersionWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *incompatibleImprovements) {
  FreemarkerTemplateDefaultObjectWrapper_initialize();
  
#line 327
  FreemarkerTemplate_TemplateAPI_checkVersionNotNullAndSupportedWithFreemarkerTemplateVersion_(incompatibleImprovements);
  FreemarkerTemplateVersion *bwIcI = FreemarkerExtBeansBeansWrapper_normalizeIncompatibleImprovementsVersionWithFreemarkerTemplateVersion_(incompatibleImprovements);
  return [((FreemarkerTemplateVersion *) nil_chk(incompatibleImprovements)) intValue] < FreemarkerTemplate_TemplateAPI_get_VERSION_INT_2_3_22_() ||
#line 330
  [((FreemarkerTemplateVersion *) nil_chk(bwIcI)) intValue] >= FreemarkerTemplate_TemplateAPI_get_VERSION_INT_2_3_22_() ?
#line 331
  bwIcI : FreemarkerTemplateConfiguration_get_VERSION_2_3_22_();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultObjectWrapper)

@implementation FreemarkerTemplateDefaultObjectWrapper_$1

- (instancetype)initWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)arg$0 {
  FreemarkerTemplateDefaultObjectWrapper_$1_initWithFreemarkerTemplateVersion_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerTemplateVersion:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "FreemarkerTemplateDefaultObjectWrapper", "initWithFreemarkerTemplateVersion:" };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultObjectWrapper_$1 = { 2, "", "freemarker.template", "DefaultObjectWrapper", 0x8008, 1, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_FreemarkerTemplateDefaultObjectWrapper_$1;
}

@end

void FreemarkerTemplateDefaultObjectWrapper_$1_initWithFreemarkerTemplateVersion_(FreemarkerTemplateDefaultObjectWrapper_$1 *self, FreemarkerTemplateVersion *arg$0) {
  (void) FreemarkerTemplateDefaultObjectWrapperConfiguration_initWithFreemarkerTemplateVersion_(self, arg$0);
}

FreemarkerTemplateDefaultObjectWrapper_$1 *new_FreemarkerTemplateDefaultObjectWrapper_$1_initWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *arg$0) {
  FreemarkerTemplateDefaultObjectWrapper_$1 *self = [FreemarkerTemplateDefaultObjectWrapper_$1 alloc];
  FreemarkerTemplateDefaultObjectWrapper_$1_initWithFreemarkerTemplateVersion_(self, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultObjectWrapper_$1)

@implementation FreemarkerTemplateDefaultObjectWrapper_$2

- (instancetype)initWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)arg$0 {
  FreemarkerTemplateDefaultObjectWrapper_$2_initWithFreemarkerTemplateVersion_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerTemplateVersion:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "FreemarkerTemplateDefaultObjectWrapper", "initWithFreemarkerExtBeansBeansWrapperConfiguration:withBoolean:" };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultObjectWrapper_$2 = { 2, "", "freemarker.template", "DefaultObjectWrapper", 0x8008, 1, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_FreemarkerTemplateDefaultObjectWrapper_$2;
}

@end

void FreemarkerTemplateDefaultObjectWrapper_$2_initWithFreemarkerTemplateVersion_(FreemarkerTemplateDefaultObjectWrapper_$2 *self, FreemarkerTemplateVersion *arg$0) {
  (void) FreemarkerTemplateDefaultObjectWrapperConfiguration_initWithFreemarkerTemplateVersion_(self, arg$0);
}

FreemarkerTemplateDefaultObjectWrapper_$2 *new_FreemarkerTemplateDefaultObjectWrapper_$2_initWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *arg$0) {
  FreemarkerTemplateDefaultObjectWrapper_$2 *self = [FreemarkerTemplateDefaultObjectWrapper_$2 alloc];
  FreemarkerTemplateDefaultObjectWrapper_$2_initWithFreemarkerTemplateVersion_(self, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultObjectWrapper_$2)
