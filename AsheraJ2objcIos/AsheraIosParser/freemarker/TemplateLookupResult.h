//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/TemplateLookupResult.java
//

#ifndef _FreemarkerCacheTemplateLookupResult_H_
#define _FreemarkerCacheTemplateLookupResult_H_

#include "J2ObjC_header.h"

/**
 @brief The return value of TemplateLookupStrategy#lookup(TemplateLookupContext) and similar lookup methods.
 You usually get one from TemplateLookupContext#lookupWithAcquisitionStrategy(String) or TemplateLookupContext#createNegativeLookupResult() ; you can't create instances of this directly.
 @since 2.3.22
 */
@interface FreemarkerCacheTemplateLookupResult : NSObject

#pragma mark Public

/**
 @brief The source name of the template found (see Template#getSourceName() ), or <code>null</code> if #isPositive() is <code>false</code> .
 */
- (NSString *)getTemplateSourceName;

/**
 @brief Tells if the lookup has found a matching template.
 */
- (jboolean)isPositive;

#pragma mark Package-Private

/**
 @brief Used internally to get a not-found result (currently just a static singleton).
 */
+ (FreemarkerCacheTemplateLookupResult *)createNegativeResult;

/**
 @brief Used internally to create the appropriate kind of result from the parameters.
 */
+ (FreemarkerCacheTemplateLookupResult *)fromWithNSString:(NSString *)templateSourceName
                                                   withId:(id)templateSource;

/**
 @brief Used internally to extract the TemplateLoader source; <code>null</code> if #isPositive() is <code>false</code> .
 */
- (id)getTemplateSource;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCacheTemplateLookupResult)

FOUNDATION_EXPORT FreemarkerCacheTemplateLookupResult *FreemarkerCacheTemplateLookupResult_createNegativeResult();

FOUNDATION_EXPORT FreemarkerCacheTemplateLookupResult *FreemarkerCacheTemplateLookupResult_fromWithNSString_withId_(NSString *templateSourceName, id templateSource);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCacheTemplateLookupResult)

#endif // _FreemarkerCacheTemplateLookupResult_H_
