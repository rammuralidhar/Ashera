//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/ConditionalBlock.java
//

#ifndef _FreemarkerCoreConditionalBlock_H_
#define _FreemarkerCoreConditionalBlock_H_

#include "J2ObjC_header.h"
#include "TemplateElement.h"

@class FreemarkerCoreEnvironment;
@class FreemarkerCoreExpression;
@class FreemarkerCoreParameterRole;

#define FreemarkerCoreConditionalBlock_TYPE_IF 0
#define FreemarkerCoreConditionalBlock_TYPE_ELSE 1
#define FreemarkerCoreConditionalBlock_TYPE_ELSE_IF 2

/**
 @brief An element that represents a conditionally executed block: #if, #elseif or #elseif.
 Note that when an #if has related #elseif-s or #else, an IfBlock parent must be used. For a lonely #if, no such parent is needed.
 */
@interface FreemarkerCoreConditionalBlock : FreemarkerCoreTemplateElement {
 @public
  FreemarkerCoreExpression *condition_;
  jboolean isLonelyIf_;
}

#pragma mark Protected

- (NSString *)dumpWithBoolean:(jboolean)canonical;

#pragma mark Package-Private

- (instancetype)initWithFreemarkerCoreExpression:(FreemarkerCoreExpression *)condition
               withFreemarkerCoreTemplateElement:(FreemarkerCoreTemplateElement *)nestedBlock
                                         withInt:(jint)type;

- (void)acceptWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

- (NSString *)getNodeTypeSymbol;

- (jint)getParameterCount;

- (FreemarkerCoreParameterRole *)getParameterRoleWithInt:(jint)idx;

- (id)getParameterValueWithInt:(jint)idx;

- (jboolean)isNestedBlockRepeater;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreConditionalBlock)

J2OBJC_FIELD_SETTER(FreemarkerCoreConditionalBlock, condition_, FreemarkerCoreExpression *)

J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreConditionalBlock, TYPE_IF, jint)

J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreConditionalBlock, TYPE_ELSE, jint)

J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreConditionalBlock, TYPE_ELSE_IF, jint)

FOUNDATION_EXPORT void FreemarkerCoreConditionalBlock_initWithFreemarkerCoreExpression_withFreemarkerCoreTemplateElement_withInt_(FreemarkerCoreConditionalBlock *self, FreemarkerCoreExpression *condition, FreemarkerCoreTemplateElement *nestedBlock, jint type);

FOUNDATION_EXPORT FreemarkerCoreConditionalBlock *new_FreemarkerCoreConditionalBlock_initWithFreemarkerCoreExpression_withFreemarkerCoreTemplateElement_withInt_(FreemarkerCoreExpression *condition, FreemarkerCoreTemplateElement *nestedBlock, jint type) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreConditionalBlock)

#endif // _FreemarkerCoreConditionalBlock_H_
