//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/TemplateNotFoundException.java
//


#include "J2ObjC_source.h"
#include "TemplateNotFoundException.h"
#include "java/io/FileNotFoundException.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/TemplateNotFoundException.java"

@interface FreemarkerTemplateTemplateNotFoundException () {
 @public
  NSString *templateName_;
  id customLookupCondition_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerTemplateTemplateNotFoundException, templateName_, NSString *)
J2OBJC_FIELD_SETTER(FreemarkerTemplateTemplateNotFoundException, customLookupCondition_, id)


#line 31
@implementation FreemarkerTemplateTemplateNotFoundException


#line 36
- (instancetype)initWithNSString:(NSString *)templateName
                          withId:(id)customLookupCondition
                    withNSString:(NSString *)message {
  FreemarkerTemplateTemplateNotFoundException_initWithNSString_withId_withNSString_(self, templateName, customLookupCondition, message);
  return self;
}


#line 45
- (NSString *)getTemplateName {
  return templateName_;
}


#line 54
- (id)getCustomLookupCondition {
  return customLookupCondition_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withId:withNSString:", "TemplateNotFoundException", NULL, 0x1, NULL, NULL },
    { "getTemplateName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getCustomLookupCondition", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "templateName_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL,  },
    { "customLookupCondition_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateTemplateNotFoundException = { 2, "TemplateNotFoundException", "freemarker.template", NULL, 0x11, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateTemplateNotFoundException;
}

@end


#line 36
void FreemarkerTemplateTemplateNotFoundException_initWithNSString_withId_withNSString_(FreemarkerTemplateTemplateNotFoundException *self, NSString *templateName, id customLookupCondition, NSString *message) {
  (void) JavaIoFileNotFoundException_initWithNSString_(self, message);
  self->templateName_ = templateName;
  self->customLookupCondition_ = customLookupCondition;
}


#line 36
FreemarkerTemplateTemplateNotFoundException *new_FreemarkerTemplateTemplateNotFoundException_initWithNSString_withId_withNSString_(NSString *templateName, id customLookupCondition, NSString *message) {
  FreemarkerTemplateTemplateNotFoundException *self = [FreemarkerTemplateTemplateNotFoundException alloc];
  FreemarkerTemplateTemplateNotFoundException_initWithNSString_withId_withNSString_(self, templateName, customLookupCondition, message);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateTemplateNotFoundException)
