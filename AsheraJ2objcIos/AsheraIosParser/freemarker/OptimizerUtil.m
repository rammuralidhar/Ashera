//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/OptimizerUtil.java
//


#include "J2ObjC_source.h"
#include "OptimizerUtil.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/OptimizerUtil.java"

@interface FreemarkerTemplateUtilityOptimizerUtil ()

- (instancetype)init;

@end

static JavaMathBigInteger *FreemarkerTemplateUtilityOptimizerUtil_INTEGER_MIN_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerTemplateUtilityOptimizerUtil, INTEGER_MIN_, JavaMathBigInteger *)

static JavaMathBigInteger *FreemarkerTemplateUtilityOptimizerUtil_INTEGER_MAX_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerTemplateUtilityOptimizerUtil, INTEGER_MAX_, JavaMathBigInteger *)

static JavaMathBigInteger *FreemarkerTemplateUtilityOptimizerUtil_LONG_MIN__;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerTemplateUtilityOptimizerUtil, LONG_MIN__, JavaMathBigInteger *)

static JavaMathBigInteger *FreemarkerTemplateUtilityOptimizerUtil_LONG_MAX__;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerTemplateUtilityOptimizerUtil, LONG_MAX__, JavaMathBigInteger *)

__attribute__((unused)) static void FreemarkerTemplateUtilityOptimizerUtil_init(FreemarkerTemplateUtilityOptimizerUtil *self);

__attribute__((unused)) static FreemarkerTemplateUtilityOptimizerUtil *new_FreemarkerTemplateUtilityOptimizerUtil_init() NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(FreemarkerTemplateUtilityOptimizerUtil)


#line 27
@implementation FreemarkerTemplateUtilityOptimizerUtil


#line 34
- (instancetype)init {
  FreemarkerTemplateUtilityOptimizerUtil_init(self);
  return self;
}


#line 38
+ (id<JavaUtilList>)optimizeListStorageWithJavaUtilList:(id<JavaUtilList>)list {
  return FreemarkerTemplateUtilityOptimizerUtil_optimizeListStorageWithJavaUtilList_(list);
}


#line 71
+ (NSNumber *)optimizeNumberRepresentationWithNSNumber:(NSNumber *)number {
  return FreemarkerTemplateUtilityOptimizerUtil_optimizeNumberRepresentationWithNSNumber_(number);
}

+ (void)initialize {
  if (self == [FreemarkerTemplateUtilityOptimizerUtil class]) {
    FreemarkerTemplateUtilityOptimizerUtil_INTEGER_MIN_ = new_JavaMathBigInteger_initWithNSString_(JavaLangInteger_toStringWithInt_(
#line 29
    JavaLangInteger_MIN_VALUE));
    FreemarkerTemplateUtilityOptimizerUtil_INTEGER_MAX_ = new_JavaMathBigInteger_initWithNSString_(JavaLangInteger_toStringWithInt_(
#line 30
    JavaLangInteger_MAX_VALUE));
    FreemarkerTemplateUtilityOptimizerUtil_LONG_MIN__ = new_JavaMathBigInteger_initWithNSString_(JavaLangLong_toStringWithLong_(
#line 31
    JavaLangLong_MIN_VALUE));
    FreemarkerTemplateUtilityOptimizerUtil_LONG_MAX__ = new_JavaMathBigInteger_initWithNSString_(JavaLangLong_toStringWithLong_(
#line 32
    JavaLangLong_MAX_VALUE));
    J2OBJC_SET_INITIALIZED(FreemarkerTemplateUtilityOptimizerUtil)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "OptimizerUtil", NULL, 0x2, NULL, NULL },
    { "optimizeListStorageWithJavaUtilList:", "optimizeListStorage", "Ljava.util.List;", 0x9, NULL, NULL },
    { "optimizeNumberRepresentationWithNSNumber:", "optimizeNumberRepresentation", "Ljava.lang.Number;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INTEGER_MIN_", NULL, 0x1a, "Ljava.math.BigInteger;", &FreemarkerTemplateUtilityOptimizerUtil_INTEGER_MIN_, NULL,  },
    { "INTEGER_MAX_", NULL, 0x1a, "Ljava.math.BigInteger;", &FreemarkerTemplateUtilityOptimizerUtil_INTEGER_MAX_, NULL,  },
    { "LONG_MIN__", "LONG_MIN", 0x1a, "Ljava.math.BigInteger;", &FreemarkerTemplateUtilityOptimizerUtil_LONG_MIN__, NULL,  },
    { "LONG_MAX__", "LONG_MAX", 0x1a, "Ljava.math.BigInteger;", &FreemarkerTemplateUtilityOptimizerUtil_LONG_MAX__, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateUtilityOptimizerUtil = { 2, "OptimizerUtil", "freemarker.template.utility", NULL, 0x1, 3, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateUtilityOptimizerUtil;
}

@end


#line 34
void FreemarkerTemplateUtilityOptimizerUtil_init(FreemarkerTemplateUtilityOptimizerUtil *self) {
  (void) NSObject_init(self);
}


#line 34
FreemarkerTemplateUtilityOptimizerUtil *new_FreemarkerTemplateUtilityOptimizerUtil_init() {
  FreemarkerTemplateUtilityOptimizerUtil *self = [FreemarkerTemplateUtilityOptimizerUtil alloc];
  FreemarkerTemplateUtilityOptimizerUtil_init(self);
  return self;
}


#line 38
id<JavaUtilList> FreemarkerTemplateUtilityOptimizerUtil_optimizeListStorageWithJavaUtilList_(id<JavaUtilList> list) {
  FreemarkerTemplateUtilityOptimizerUtil_initialize();
  switch ([((id<JavaUtilList>) nil_chk(list)) size]) {
    
#line 42
    case 0:
    {
      return JavaUtilCollections_get_EMPTY_LIST_();
    }
    case 1:
    {
      return JavaUtilCollections_singletonListWithId_([list getWithInt:0]);
    }
    default:
    {
      if ([list isKindOfClass:[JavaUtilArrayList class]]) {
        
#line 54
        [((JavaUtilArrayList *) check_class_cast(list, [JavaUtilArrayList class])) trimToSize];
      }
      return list;
    }
  }
}


#line 71
NSNumber *FreemarkerTemplateUtilityOptimizerUtil_optimizeNumberRepresentationWithNSNumber_(NSNumber *number) {
  FreemarkerTemplateUtilityOptimizerUtil_initialize();
  if ([number isKindOfClass:[JavaMathBigDecimal class]]) {
    
#line 75
    JavaMathBigDecimal *bd = (JavaMathBigDecimal *) check_class_cast(number, [JavaMathBigDecimal class]);
    if ([((JavaMathBigDecimal *) nil_chk(bd)) scale__] == 0) {
      
#line 79
      number = [bd unscaledValue];
    }
    else {
      
#line 83
      jdouble d = [bd doubleValue];
      if (d != JavaLangDouble_POSITIVE_INFINITY && d != JavaLangDouble_NEGATIVE_INFINITY) {
        
#line 87
        return new_JavaLangDouble_initWithDouble_(d);
      }
    }
  }
  if ([number isKindOfClass:[JavaMathBigInteger class]]) {
    
#line 93
    JavaMathBigInteger *bi = (JavaMathBigInteger *) check_class_cast(number, [JavaMathBigInteger class]);
    if ([((JavaMathBigInteger *) nil_chk(bi)) compareToWithId:FreemarkerTemplateUtilityOptimizerUtil_INTEGER_MAX_] <= 0 && [bi compareToWithId:FreemarkerTemplateUtilityOptimizerUtil_INTEGER_MIN_] >= 0) {
      
#line 97
      return new_JavaLangInteger_initWithInt_([bi intValue]);
    }
    if ([bi compareToWithId:FreemarkerTemplateUtilityOptimizerUtil_LONG_MAX__] <= 0 && [bi compareToWithId:FreemarkerTemplateUtilityOptimizerUtil_LONG_MIN__] >= 0) {
      
#line 102
      return new_JavaLangLong_initWithLong_([bi longLongValue]);
    }
  }
  return number;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateUtilityOptimizerUtil)
