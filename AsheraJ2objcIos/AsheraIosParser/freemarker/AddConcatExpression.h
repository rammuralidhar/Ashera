//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/AddConcatExpression.java
//

#ifndef _FreemarkerCoreAddConcatExpression_H_
#define _FreemarkerCoreAddConcatExpression_H_

#include "Expression.h"
#include "J2ObjC_header.h"

@class FreemarkerCoreEnvironment;
@class FreemarkerCoreParameterRole;
@class FreemarkerCoreTemplateObject;
@protocol FreemarkerTemplateTemplateModel;

/**
 @brief An operator for the + operator.
 Note that this is treated separately from the other 4 arithmetic operators, since + is overloaded to mean string concatenation.
 */
@interface FreemarkerCoreAddConcatExpression : FreemarkerCoreExpression

#pragma mark Public

- (NSString *)getCanonicalForm;

#pragma mark Protected

- (FreemarkerCoreExpression *)deepCloneWithIdentifierReplaced_innerWithNSString:(NSString *)replacedIdentifier
                                                   withFreemarkerCoreExpression:(FreemarkerCoreExpression *)replacement
                                 withFreemarkerCoreExpression_ReplacemenetState:(FreemarkerCoreExpression_ReplacemenetState *)replacementState;

#pragma mark Package-Private

- (instancetype)initWithFreemarkerCoreExpression:(FreemarkerCoreExpression *)left
                    withFreemarkerCoreExpression:(FreemarkerCoreExpression *)right;

- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

/**
 @param leftExp Used for error messages only; can be <code>null</code>
 @param rightExp Used for error messages only; can be <code>null</code>
 */
+ (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env
                                         withFreemarkerCoreTemplateObject:(FreemarkerCoreTemplateObject *)parent
                                             withFreemarkerCoreExpression:(FreemarkerCoreExpression *)leftExp
                                      withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)leftModel
                                             withFreemarkerCoreExpression:(FreemarkerCoreExpression *)rightExp
                                      withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)rightModel;

+ (id<FreemarkerTemplateTemplateModel>)_evalOnNumbersWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env
                                                  withFreemarkerCoreTemplateObject:(FreemarkerCoreTemplateObject *)parent
                                                                      withNSNumber:(NSNumber *)first
                                                                      withNSNumber:(NSNumber *)second;

- (NSString *)getNodeTypeSymbol;

- (jint)getParameterCount;

- (FreemarkerCoreParameterRole *)getParameterRoleWithInt:(jint)idx;

- (id)getParameterValueWithInt:(jint)idx;

- (jboolean)isLiteral;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreAddConcatExpression)

FOUNDATION_EXPORT void FreemarkerCoreAddConcatExpression_initWithFreemarkerCoreExpression_withFreemarkerCoreExpression_(FreemarkerCoreAddConcatExpression *self, FreemarkerCoreExpression *left, FreemarkerCoreExpression *right);

FOUNDATION_EXPORT FreemarkerCoreAddConcatExpression *new_FreemarkerCoreAddConcatExpression_initWithFreemarkerCoreExpression_withFreemarkerCoreExpression_(FreemarkerCoreExpression *left, FreemarkerCoreExpression *right) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT id<FreemarkerTemplateTemplateModel> FreemarkerCoreAddConcatExpression__evalWithFreemarkerCoreEnvironment_withFreemarkerCoreTemplateObject_withFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_(FreemarkerCoreEnvironment *env, FreemarkerCoreTemplateObject *parent, FreemarkerCoreExpression *leftExp, id<FreemarkerTemplateTemplateModel> leftModel, FreemarkerCoreExpression *rightExp, id<FreemarkerTemplateTemplateModel> rightModel);

FOUNDATION_EXPORT id<FreemarkerTemplateTemplateModel> FreemarkerCoreAddConcatExpression__evalOnNumbersWithFreemarkerCoreEnvironment_withFreemarkerCoreTemplateObject_withNSNumber_withNSNumber_(FreemarkerCoreEnvironment *env, FreemarkerCoreTemplateObject *parent, NSNumber *first, NSNumber *second);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreAddConcatExpression)

#endif // _FreemarkerCoreAddConcatExpression_H_
