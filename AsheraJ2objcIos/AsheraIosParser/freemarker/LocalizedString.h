//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/LocalizedString.java
//

#ifndef _FreemarkerTemplateLocalizedString_H_
#define _FreemarkerTemplateLocalizedString_H_

#include "J2ObjC_header.h"
#include "TemplateScalarModel.h"

@class JavaUtilLocale;

/**
 @brief An abstract base class for scalars that vary by locale.
 Here is a silly usage example. <code> TemplateScalarModel localizedYes = new LocalizedString() { public String getLocalizedString(java.util.Locale locale) { String lang = locale.getLanguage(); if "fr".equals(lang) return "oui"; else if "de".equals(lang) return "s√≠"; else return "yes"; } }; </code>
 */
@interface FreemarkerTemplateLocalizedString : NSObject < FreemarkerTemplateTemplateScalarModel >

#pragma mark Public

- (instancetype)init;

- (NSString *)getAsString;

- (NSString *)getLocalizedStringWithJavaUtilLocale:(JavaUtilLocale *)locale;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateLocalizedString)

FOUNDATION_EXPORT void FreemarkerTemplateLocalizedString_init(FreemarkerTemplateLocalizedString *self);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateLocalizedString)

#endif // _FreemarkerTemplateLocalizedString_H_
