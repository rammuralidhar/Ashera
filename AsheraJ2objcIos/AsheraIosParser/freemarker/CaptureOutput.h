//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/CaptureOutput.java
//

#ifndef _FreemarkerTemplateUtilityCaptureOutput_H_
#define _FreemarkerTemplateUtilityCaptureOutput_H_

#include "J2ObjC_header.h"
#include "TemplateTransformModel.h"

@class JavaIoWriter;
@protocol JavaUtilMap;

/**
 @brief A transform that captures the output of a block of FTL code and stores that in a variable.
 <p>As this transform is initially present in the shared variable set, you can always access it from the templates:</p> <pre> &lt;@@capture_output var="captured"&gt; ... &lt;/@@capture_output&gt; </pre> <p>And later in the template you can use the captured output:</p> ${captured} <p>This transform requires one of three parameters: <code>var</code>, <code>local</code>, or <code>global</code>. Each of them specifies the name of the variable that stores the captured output, but the first creates a variable in a name-space (as &lt;#assign&gt;), the second creates a macro-local variable (as &lt;#local&gt;), and the last creates a global variable (as &lt;#global&gt;). </p> <p>In the case of an assignment within a namespace, there is an optional parameter <code>namespace</code> that indicates in which namespace to do the assignment. if this is omitted, the current namespace is used, and this will be, by far, the most common usage pattern.</p>
 */
@interface FreemarkerTemplateUtilityCaptureOutput : NSObject < FreemarkerTemplateTemplateTransformModel >

#pragma mark Public

- (instancetype)init;

- (JavaIoWriter *)getWriterWithJavaIoWriter:(JavaIoWriter *)outArg
                            withJavaUtilMap:(id<JavaUtilMap>)args;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateUtilityCaptureOutput)

FOUNDATION_EXPORT void FreemarkerTemplateUtilityCaptureOutput_init(FreemarkerTemplateUtilityCaptureOutput *self);

FOUNDATION_EXPORT FreemarkerTemplateUtilityCaptureOutput *new_FreemarkerTemplateUtilityCaptureOutput_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateUtilityCaptureOutput)

#endif // _FreemarkerTemplateUtilityCaptureOutput_H_
