//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/SimpleCharStream.java
//

#ifndef _FreemarkerCoreSimpleCharStream_H_
#define _FreemarkerCoreSimpleCharStream_H_

#include "J2ObjC_header.h"

@class IOSCharArray;
@class IOSIntArray;
@class JavaIoInputStream;
@class JavaIoReader;

#define FreemarkerCoreSimpleCharStream_staticFlag NO

/**
 @brief An implementation of interface CharStream, where the stream is assumed to contain only ASCII characters (without unicode processing).
 */
@interface FreemarkerCoreSimpleCharStream : NSObject {
 @public
  jint bufsize_;
  jint available_;
  jint tokenBegin_;
  /**
   @brief Position in buffer.
   */
  jint bufpos_;
  IOSIntArray *bufline_;
  IOSIntArray *bufcolumn_;
  jint column_;
  jint line_;
  jboolean prevCharIsCR_;
  jboolean prevCharIsLF_;
  JavaIoReader *inputStream_;
  IOSCharArray *buffer_;
  jint maxNextCharInd_;
  jint inBuf_;
  jint tabSize_;
  jboolean trackLineColumn_;
}

#pragma mark Public

/**
 @brief Constructor.
 */
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)dstream;

/**
 @brief Constructor.
 */
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)dstream
                                  withInt:(jint)startline
                                  withInt:(jint)startcolumn;

/**
 @brief Constructor.
 */
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)dstream
                                  withInt:(jint)startline
                                  withInt:(jint)startcolumn
                                  withInt:(jint)buffersize;

/**
 @brief Constructor.
 */
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)dstream
                             withNSString:(NSString *)encoding;

/**
 @brief Constructor.
 */
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)dstream
                             withNSString:(NSString *)encoding
                                  withInt:(jint)startline
                                  withInt:(jint)startcolumn;

/**
 @brief Constructor.
 */
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)dstream
                             withNSString:(NSString *)encoding
                                  withInt:(jint)startline
                                  withInt:(jint)startcolumn
                                  withInt:(jint)buffersize;

/**
 @brief Constructor.
 */
- (instancetype)initWithJavaIoReader:(JavaIoReader *)dstream;

/**
 @brief Constructor.
 */
- (instancetype)initWithJavaIoReader:(JavaIoReader *)dstream
                             withInt:(jint)startline
                             withInt:(jint)startcolumn;

/**
 @brief Constructor.
 */
- (instancetype)initWithJavaIoReader:(JavaIoReader *)dstream
                             withInt:(jint)startline
                             withInt:(jint)startcolumn
                             withInt:(jint)buffersize;

/**
 @brief Method to adjust line and column numbers for the start of a token.
 */
- (void)adjustBeginLineColumnWithInt:(jint)newLine
                             withInt:(jint)newCol;

/**
 @brief Backup a number of characters.
 */
- (void)backupWithInt:(jint)amount;

/**
 @brief Start.
 */
- (jchar)BeginToken;

/**
 @brief Reset buffer when finished.
 */
- (void)Done;

/**
 @brief Get token beginning column number.
 */
- (jint)getBeginColumn;

/**
 @brief Get token beginning line number.
 */
- (jint)getBeginLine;

- (jint)getColumn;

/**
 @brief Get token end column number.
 */
- (jint)getEndColumn;

/**
 @brief Get token end line number.
 */
- (jint)getEndLine;

/**
 @brief Get token literal value.
 */
- (NSString *)GetImage;

- (jint)getLine;

/**
 @brief Get the suffix.
 */
- (IOSCharArray *)GetSuffixWithInt:(jint)len;

- (jint)getTabSize;

/**
 @brief Read a character.
 */
- (jchar)readChar;

/**
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)dstream;

/**
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)dstream
                            withInt:(jint)startline
                            withInt:(jint)startcolumn;

/**
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)dstream
                            withInt:(jint)startline
                            withInt:(jint)startcolumn
                            withInt:(jint)buffersize;

/**
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)dstream
                       withNSString:(NSString *)encoding;

/**
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)dstream
                       withNSString:(NSString *)encoding
                            withInt:(jint)startline
                            withInt:(jint)startcolumn;

/**
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)dstream
                       withNSString:(NSString *)encoding
                            withInt:(jint)startline
                            withInt:(jint)startcolumn
                            withInt:(jint)buffersize;

/**
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoReader:(JavaIoReader *)dstream;

/**
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoReader:(JavaIoReader *)dstream
                       withInt:(jint)startline
                       withInt:(jint)startcolumn;

/**
 @brief Reinitialise.
 */
- (void)ReInitWithJavaIoReader:(JavaIoReader *)dstream
                       withInt:(jint)startline
                       withInt:(jint)startcolumn
                       withInt:(jint)buffersize;

- (void)setTabSizeWithInt:(jint)i;

#pragma mark Protected

- (void)ExpandBuffWithBoolean:(jboolean)wrapAround;

- (void)FillBuff;

- (void)UpdateLineColumnWithChar:(jchar)c;

#pragma mark Package-Private

- (jboolean)getTrackLineColumn;

- (void)setTrackLineColumnWithBoolean:(jboolean)tlc;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreSimpleCharStream)

J2OBJC_FIELD_SETTER(FreemarkerCoreSimpleCharStream, bufline_, IOSIntArray *)
J2OBJC_FIELD_SETTER(FreemarkerCoreSimpleCharStream, bufcolumn_, IOSIntArray *)
J2OBJC_FIELD_SETTER(FreemarkerCoreSimpleCharStream, inputStream_, JavaIoReader *)
J2OBJC_FIELD_SETTER(FreemarkerCoreSimpleCharStream, buffer_, IOSCharArray *)

J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreSimpleCharStream, staticFlag, jboolean)

FOUNDATION_EXPORT void FreemarkerCoreSimpleCharStream_initWithJavaIoReader_withInt_withInt_withInt_(FreemarkerCoreSimpleCharStream *self, JavaIoReader *dstream, jint startline, jint startcolumn, jint buffersize);

FOUNDATION_EXPORT FreemarkerCoreSimpleCharStream *new_FreemarkerCoreSimpleCharStream_initWithJavaIoReader_withInt_withInt_withInt_(JavaIoReader *dstream, jint startline, jint startcolumn, jint buffersize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerCoreSimpleCharStream_initWithJavaIoReader_withInt_withInt_(FreemarkerCoreSimpleCharStream *self, JavaIoReader *dstream, jint startline, jint startcolumn);

FOUNDATION_EXPORT FreemarkerCoreSimpleCharStream *new_FreemarkerCoreSimpleCharStream_initWithJavaIoReader_withInt_withInt_(JavaIoReader *dstream, jint startline, jint startcolumn) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerCoreSimpleCharStream_initWithJavaIoReader_(FreemarkerCoreSimpleCharStream *self, JavaIoReader *dstream);

FOUNDATION_EXPORT FreemarkerCoreSimpleCharStream *new_FreemarkerCoreSimpleCharStream_initWithJavaIoReader_(JavaIoReader *dstream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerCoreSimpleCharStream_initWithJavaIoInputStream_withNSString_withInt_withInt_withInt_(FreemarkerCoreSimpleCharStream *self, JavaIoInputStream *dstream, NSString *encoding, jint startline, jint startcolumn, jint buffersize);

FOUNDATION_EXPORT FreemarkerCoreSimpleCharStream *new_FreemarkerCoreSimpleCharStream_initWithJavaIoInputStream_withNSString_withInt_withInt_withInt_(JavaIoInputStream *dstream, NSString *encoding, jint startline, jint startcolumn, jint buffersize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerCoreSimpleCharStream_initWithJavaIoInputStream_withInt_withInt_withInt_(FreemarkerCoreSimpleCharStream *self, JavaIoInputStream *dstream, jint startline, jint startcolumn, jint buffersize);

FOUNDATION_EXPORT FreemarkerCoreSimpleCharStream *new_FreemarkerCoreSimpleCharStream_initWithJavaIoInputStream_withInt_withInt_withInt_(JavaIoInputStream *dstream, jint startline, jint startcolumn, jint buffersize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerCoreSimpleCharStream_initWithJavaIoInputStream_withNSString_withInt_withInt_(FreemarkerCoreSimpleCharStream *self, JavaIoInputStream *dstream, NSString *encoding, jint startline, jint startcolumn);

FOUNDATION_EXPORT FreemarkerCoreSimpleCharStream *new_FreemarkerCoreSimpleCharStream_initWithJavaIoInputStream_withNSString_withInt_withInt_(JavaIoInputStream *dstream, NSString *encoding, jint startline, jint startcolumn) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerCoreSimpleCharStream_initWithJavaIoInputStream_withInt_withInt_(FreemarkerCoreSimpleCharStream *self, JavaIoInputStream *dstream, jint startline, jint startcolumn);

FOUNDATION_EXPORT FreemarkerCoreSimpleCharStream *new_FreemarkerCoreSimpleCharStream_initWithJavaIoInputStream_withInt_withInt_(JavaIoInputStream *dstream, jint startline, jint startcolumn) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerCoreSimpleCharStream_initWithJavaIoInputStream_withNSString_(FreemarkerCoreSimpleCharStream *self, JavaIoInputStream *dstream, NSString *encoding);

FOUNDATION_EXPORT FreemarkerCoreSimpleCharStream *new_FreemarkerCoreSimpleCharStream_initWithJavaIoInputStream_withNSString_(JavaIoInputStream *dstream, NSString *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerCoreSimpleCharStream_initWithJavaIoInputStream_(FreemarkerCoreSimpleCharStream *self, JavaIoInputStream *dstream);

FOUNDATION_EXPORT FreemarkerCoreSimpleCharStream *new_FreemarkerCoreSimpleCharStream_initWithJavaIoInputStream_(JavaIoInputStream *dstream) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreSimpleCharStream)

#endif // _FreemarkerCoreSimpleCharStream_H_
