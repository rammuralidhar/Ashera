//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/SimpleMapModel.java
//


#include "BeansWrapper.h"
#include "CollectionAndSequence.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "ModelFactory.h"
#include "ObjectWrapper.h"
#include "RichObjectWrapper.h"
#include "SimpleMapModel.h"
#include "SimpleSequence.h"
#include "TemplateCollectionModel.h"
#include "TemplateHashModel.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "WrappingTemplateModel.h"
#include "java/lang/Character.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/SimpleMapModel.java"

@interface FreemarkerExtBeansSimpleMapModel () {
 @public
  id<JavaUtilMap> map_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerExtBeansSimpleMapModel, map_, id<JavaUtilMap>)

@interface FreemarkerExtBeansSimpleMapModel_$1 : NSObject < FreemarkerExtUtilModelFactory >

- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerExtBeansSimpleMapModel_$1)

__attribute__((unused)) static void FreemarkerExtBeansSimpleMapModel_$1_init(FreemarkerExtBeansSimpleMapModel_$1 *self);

__attribute__((unused)) static FreemarkerExtBeansSimpleMapModel_$1 *new_FreemarkerExtBeansSimpleMapModel_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansSimpleMapModel_$1)

J2OBJC_INITIALIZED_DEFN(FreemarkerExtBeansSimpleMapModel)

id<FreemarkerExtUtilModelFactory> FreemarkerExtBeansSimpleMapModel_FACTORY_;


#line 43
@implementation FreemarkerExtBeansSimpleMapModel


#line 58
- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map
 withFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)wrapper {
  FreemarkerExtBeansSimpleMapModel_initWithJavaUtilMap_withFreemarkerExtBeansBeansWrapper_(self, map, wrapper);
  return self;
}

- (id<FreemarkerTemplateTemplateModel>)getWithNSString:(NSString *)key {
  id val = [((id<JavaUtilMap>) nil_chk(map_)) getWithId:key];
  if (val == nil) {
    if (((jint) [((NSString *) nil_chk(key)) length]) == 1) {
      
#line 69
      JavaLangCharacter *charKey = new_JavaLangCharacter_initWithChar_([key charAtWithInt:0]);
      val = [map_ getWithId:charKey];
      if (val == nil && !([map_ containsKeyWithId:key] || [map_ containsKeyWithId:charKey])) {
        return nil;
      }
    }
    else if (![map_ containsKeyWithId:key]) {
      return nil;
    }
  }
  return [self wrapWithId:val];
}


#line 82
- (id)execWithJavaUtilList:(id<JavaUtilList>)args {
  id key = [((FreemarkerExtBeansBeansWrapper *) nil_chk(((FreemarkerExtBeansBeansWrapper *) check_class_cast([self getObjectWrapper], [FreemarkerExtBeansBeansWrapper class])))) unwrapWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>) check_protocol_cast([((id<JavaUtilList>) nil_chk(args)) getWithInt:0], @protocol(FreemarkerTemplateTemplateModel))];
  id value = [((id<JavaUtilMap>) nil_chk(map_)) getWithId:key];
  if (value == nil && ![map_ containsKeyWithId:key]) {
    return nil;
  }
  return [self wrapWithId:value];
}

- (jboolean)isEmpty {
  return [((id<JavaUtilMap>) nil_chk(map_)) isEmpty];
}

- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(map_)) size];
}

- (id<FreemarkerTemplateTemplateCollectionModel>)keys {
  return new_FreemarkerCoreCollectionAndSequence_initWithFreemarkerTemplateTemplateSequenceModel_(new_FreemarkerTemplateSimpleSequence_initWithJavaUtilCollection_withFreemarkerTemplateObjectWrapper_([((id<JavaUtilMap>) nil_chk(map_)) keySet], [self getObjectWrapper]));
}

- (id<FreemarkerTemplateTemplateCollectionModel>)values {
  return new_FreemarkerCoreCollectionAndSequence_initWithFreemarkerTemplateTemplateSequenceModel_(new_FreemarkerTemplateSimpleSequence_initWithJavaUtilCollection_withFreemarkerTemplateObjectWrapper_([((id<JavaUtilMap>) nil_chk(map_)) values], [self getObjectWrapper]));
}

- (id)getAdaptedObjectWithIOSClass:(IOSClass *)hint {
  return map_;
}

- (id)getWrappedObject {
  return map_;
}

- (id<FreemarkerTemplateTemplateModel>)getAPI {
  return [((id<FreemarkerTemplateUtilityRichObjectWrapper>) nil_chk(((id<FreemarkerTemplateUtilityRichObjectWrapper>) check_protocol_cast([self getObjectWrapper], @protocol(FreemarkerTemplateUtilityRichObjectWrapper))))) wrapAsAPIWithId:map_];
}

+ (void)initialize {
  if (self == [FreemarkerExtBeansSimpleMapModel class]) {
    FreemarkerExtBeansSimpleMapModel_FACTORY_ = new_FreemarkerExtBeansSimpleMapModel_$1_init();
    J2OBJC_SET_INITIALIZED(FreemarkerExtBeansSimpleMapModel)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilMap:withFreemarkerExtBeansBeansWrapper:", "SimpleMapModel", NULL, 0x1, NULL, NULL },
    { "getWithNSString:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "keys", NULL, "Lfreemarker.template.TemplateCollectionModel;", 0x1, NULL, NULL },
    { "values", NULL, "Lfreemarker.template.TemplateCollectionModel;", 0x1, NULL, NULL },
    { "getAdaptedObjectWithIOSClass:", "getAdaptedObject", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getAPI", NULL, "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FACTORY_", NULL, 0x18, "Lfreemarker.ext.util.ModelFactory;", &FreemarkerExtBeansSimpleMapModel_FACTORY_, NULL,  },
    { "map_", NULL, 0x12, "Ljava.util.Map;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansSimpleMapModel = { 2, "SimpleMapModel", "freemarker.ext.beans", NULL, 0x1, 10, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansSimpleMapModel;
}

@end


#line 58
void FreemarkerExtBeansSimpleMapModel_initWithJavaUtilMap_withFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansSimpleMapModel *self, id<JavaUtilMap> map, FreemarkerExtBeansBeansWrapper *wrapper) {
  (void) FreemarkerTemplateWrappingTemplateModel_initWithFreemarkerTemplateObjectWrapper_(self,
#line 60
  wrapper);
  self->map_ = map;
}


#line 58
FreemarkerExtBeansSimpleMapModel *new_FreemarkerExtBeansSimpleMapModel_initWithJavaUtilMap_withFreemarkerExtBeansBeansWrapper_(id<JavaUtilMap> map, FreemarkerExtBeansBeansWrapper *wrapper) {
  FreemarkerExtBeansSimpleMapModel *self = [FreemarkerExtBeansSimpleMapModel alloc];
  FreemarkerExtBeansSimpleMapModel_initWithJavaUtilMap_withFreemarkerExtBeansBeansWrapper_(self, map, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansSimpleMapModel)

@implementation FreemarkerExtBeansSimpleMapModel_$1


#line 50
- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  
#line 52
  return new_FreemarkerExtBeansSimpleMapModel_initWithJavaUtilMap_withFreemarkerExtBeansBeansWrapper_((id<JavaUtilMap>) check_protocol_cast(object, @protocol(JavaUtilMap)), (FreemarkerExtBeansBeansWrapper *) check_class_cast(wrapper, [FreemarkerExtBeansBeansWrapper class]));
}

- (instancetype)init {
  FreemarkerExtBeansSimpleMapModel_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createWithId:withFreemarkerTemplateObjectWrapper:", "create", "Lfreemarker.template.TemplateModel;", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansSimpleMapModel_$1 = { 2, "", "freemarker.ext.beans", "SimpleMapModel", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansSimpleMapModel_$1;
}

@end

void FreemarkerExtBeansSimpleMapModel_$1_init(FreemarkerExtBeansSimpleMapModel_$1 *self) {
  (void) NSObject_init(self);
}

FreemarkerExtBeansSimpleMapModel_$1 *new_FreemarkerExtBeansSimpleMapModel_$1_init() {
  FreemarkerExtBeansSimpleMapModel_$1 *self = [FreemarkerExtBeansSimpleMapModel_$1 alloc];
  FreemarkerExtBeansSimpleMapModel_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansSimpleMapModel_$1)
