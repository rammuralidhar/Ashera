//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/ResourceBundleLocalizedString.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "LocalizedString.h"
#include "ResourceBundleLocalizedString.h"
#include "TemplateModelException.h"
#include "java/util/Locale.h"
#include "java/util/MissingResourceException.h"
#include "java/util/ResourceBundle.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/ResourceBundleLocalizedString.java"

@interface FreemarkerTemplateResourceBundleLocalizedString () {
 @public
  NSString *resourceKey_, *resourceBundleLookupKey_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerTemplateResourceBundleLocalizedString, resourceKey_, NSString *)
J2OBJC_FIELD_SETTER(FreemarkerTemplateResourceBundleLocalizedString, resourceBundleLookupKey_, NSString *)


#line 28
@implementation FreemarkerTemplateResourceBundleLocalizedString


#line 37
- (instancetype)initWithNSString:(NSString *)resourceBundleLookupKey
                    withNSString:(NSString *)resourceKey {
  FreemarkerTemplateResourceBundleLocalizedString_initWithNSString_withNSString_(self, resourceBundleLookupKey, resourceKey);
  return self;
}


#line 42
- (NSString *)getLocalizedStringWithJavaUtilLocale:(JavaUtilLocale *)locale {
  @try {
    JavaUtilResourceBundle *rb = JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_(resourceBundleLookupKey_, locale);
    return [((JavaUtilResourceBundle *) nil_chk(rb)) getStringWithNSString:resourceKey_];
  }
  @catch (JavaUtilMissingResourceException *mre) {
    @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_withJavaLangException_(@"missing resource", mre);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "ResourceBundleLocalizedString", NULL, 0x1, NULL, NULL },
    { "getLocalizedStringWithJavaUtilLocale:", "getLocalizedString", "Ljava.lang.String;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "resourceKey_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "resourceBundleLookupKey_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateResourceBundleLocalizedString = { 2, "ResourceBundleLocalizedString", "freemarker.template", NULL, 0x1, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateResourceBundleLocalizedString;
}

@end


#line 37
void FreemarkerTemplateResourceBundleLocalizedString_initWithNSString_withNSString_(FreemarkerTemplateResourceBundleLocalizedString *self, NSString *resourceBundleLookupKey, NSString *resourceKey) {
  (void) FreemarkerTemplateLocalizedString_init(self);
  
#line 38
  self->resourceBundleLookupKey_ = resourceBundleLookupKey;
  self->resourceKey_ = resourceKey;
}


#line 37
FreemarkerTemplateResourceBundleLocalizedString *new_FreemarkerTemplateResourceBundleLocalizedString_initWithNSString_withNSString_(NSString *resourceBundleLookupKey, NSString *resourceKey) {
  FreemarkerTemplateResourceBundleLocalizedString *self = [FreemarkerTemplateResourceBundleLocalizedString alloc];
  FreemarkerTemplateResourceBundleLocalizedString_initWithNSString_withNSString_(self, resourceBundleLookupKey, resourceKey);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateResourceBundleLocalizedString)
