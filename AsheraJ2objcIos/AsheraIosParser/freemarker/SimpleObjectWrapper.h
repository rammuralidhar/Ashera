//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/SimpleObjectWrapper.java
//

#ifndef _FreemarkerTemplateSimpleObjectWrapper_H_
#define _FreemarkerTemplateSimpleObjectWrapper_H_

#include "DefaultObjectWrapper.h"
#include "J2ObjC_header.h"

@class FreemarkerTemplateVersion;
@protocol FreemarkerTemplateTemplateHashModel;
@protocol FreemarkerTemplateTemplateModel;

/**
 @brief A restricted object wrapper that will not expose arbitrary object, just those that directly correspond to the TemplateModel sub-interfaces ( <code>String</code> , <code>Map</code> and such).
 If it had to wrap other kind of objects, it will throw exception. It will also block <code>?api</code> calls on the values it wraps.
 */
@interface FreemarkerTemplateSimpleObjectWrapper : FreemarkerTemplateDefaultObjectWrapper

#pragma mark Public

/**
 */
- (instancetype)init;

/**
 @param incompatibleImprovements see in BeansWrapper#BeansWrapper(Version) .
 @since 2.3.21
 */
- (instancetype)initWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)incompatibleImprovements;

- (id<FreemarkerTemplateTemplateHashModel>)wrapAsAPIWithId:(id)obj;

#pragma mark Protected

/**
 @brief Called if a type other than the simple ones we know about is passed in.
 In this implementation, this just throws an exception.
 */
- (id<FreemarkerTemplateTemplateModel>)handleUnknownTypeWithId:(id)obj;

@end

J2OBJC_STATIC_INIT(FreemarkerTemplateSimpleObjectWrapper)

FOUNDATION_EXPORT FreemarkerTemplateSimpleObjectWrapper *FreemarkerTemplateSimpleObjectWrapper_instance_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerTemplateSimpleObjectWrapper, instance_, FreemarkerTemplateSimpleObjectWrapper *)

FOUNDATION_EXPORT void FreemarkerTemplateSimpleObjectWrapper_init(FreemarkerTemplateSimpleObjectWrapper *self);

FOUNDATION_EXPORT FreemarkerTemplateSimpleObjectWrapper *new_FreemarkerTemplateSimpleObjectWrapper_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerTemplateSimpleObjectWrapper_initWithFreemarkerTemplateVersion_(FreemarkerTemplateSimpleObjectWrapper *self, FreemarkerTemplateVersion *incompatibleImprovements);

FOUNDATION_EXPORT FreemarkerTemplateSimpleObjectWrapper *new_FreemarkerTemplateSimpleObjectWrapper_initWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *incompatibleImprovements) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateSimpleObjectWrapper)

#endif // _FreemarkerTemplateSimpleObjectWrapper_H_
