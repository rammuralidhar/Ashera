//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/MultiTemplateLoader.java
//

#ifndef _FreemarkerCacheMultiTemplateLoader_H_
#define _FreemarkerCacheMultiTemplateLoader_H_

#include "J2ObjC_header.h"
#include "StatefulTemplateLoader.h"

@class IOSObjectArray;
@class JavaIoReader;
@protocol FreemarkerCacheTemplateLoader;

/**
 @brief A TemplateLoader that uses a set of other loaders to load the templates.
 On every request, loaders are queried in the order of their appearance in the array of loaders provided to the constructor. However, if a request for some template name was already satisfied in the past by one of the loaders, that Loader is queried first (a soft affinity). <p> This class is <em>not</em> thread-safe. If it's accessed from multiple threads concurrently, proper synchronization must be provided by the callers. Note that TemplateCache , the natural user of this class, provides the necessary synchronizations when it uses this class, so then you don't have to worry this.
 */
@interface FreemarkerCacheMultiTemplateLoader : NSObject < FreemarkerCacheStatefulTemplateLoader >

#pragma mark Public

/**
 @brief Creates a new multi template Loader that will use the specified loaders.
 @param loaders the loaders that are used to load templates.
 */
- (instancetype)initWithFreemarkerCacheTemplateLoaderArray:(IOSObjectArray *)loaders;

- (void)closeTemplateSourceWithId:(id)templateSource;

- (id)findTemplateSourceWithNSString:(NSString *)name;

- (jlong)getLastModifiedWithId:(id)templateSource;

- (JavaIoReader *)getReaderWithId:(id)templateSource
                     withNSString:(NSString *)encoding;

/**
 @brief Returns the TemplateLoader at the given index.
 @param index Must be below #getTemplateLoaderCount() .
 */
- (id<FreemarkerCacheTemplateLoader>)getTemplateLoaderWithInt:(jint)index;

/**
 @brief Returns the number of TemplateLoader -s directly inside this TemplateLoader .
 @since 2.3.23
 */
- (jint)getTemplateLoaderCount;

- (void)resetState;

/**
 @brief Show class name and some details that are useful in template-not-found errors.
 @since 2.3.21
 */
- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCacheMultiTemplateLoader)

FOUNDATION_EXPORT void FreemarkerCacheMultiTemplateLoader_initWithFreemarkerCacheTemplateLoaderArray_(FreemarkerCacheMultiTemplateLoader *self, IOSObjectArray *loaders);

FOUNDATION_EXPORT FreemarkerCacheMultiTemplateLoader *new_FreemarkerCacheMultiTemplateLoader_initWithFreemarkerCacheTemplateLoaderArray_(IOSObjectArray *loaders) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCacheMultiTemplateLoader)

/**
 @brief Represents a template source bound to a specific template loader.
 It serves as the complete template source descriptor used by the MultiTemplateLoader class.
 */
@interface FreemarkerCacheMultiTemplateLoader_MultiSource : NSObject

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithId:(id)source
withFreemarkerCacheTemplateLoader:(id<FreemarkerCacheTemplateLoader>)loader;

- (void)close;

- (jlong)getLastModified;

- (JavaIoReader *)getReaderWithNSString:(NSString *)encoding;

- (id)getWrappedSource;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCacheMultiTemplateLoader_MultiSource)

FOUNDATION_EXPORT void FreemarkerCacheMultiTemplateLoader_MultiSource_initWithId_withFreemarkerCacheTemplateLoader_(FreemarkerCacheMultiTemplateLoader_MultiSource *self, id source, id<FreemarkerCacheTemplateLoader> loader);

FOUNDATION_EXPORT FreemarkerCacheMultiTemplateLoader_MultiSource *new_FreemarkerCacheMultiTemplateLoader_MultiSource_initWithId_withFreemarkerCacheTemplateLoader_(id source, id<FreemarkerCacheTemplateLoader> loader) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCacheMultiTemplateLoader_MultiSource)

#endif // _FreemarkerCacheMultiTemplateLoader_H_
