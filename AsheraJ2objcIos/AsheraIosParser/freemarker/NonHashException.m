//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/NonHashException.java
//


#include "Environment.h"
#include "Expression.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "InvalidReferenceException.h"
#include "J2ObjC_source.h"
#include "NonHashException.h"
#include "TemplateHashModel.h"
#include "TemplateModel.h"
#include "UnexpectedTypeException.h"
#include "_ErrorDescriptionBuilder.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/NonHashException.java"

static IOSObjectArray *FreemarkerCoreNonHashException_EXPECTED_TYPES_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreNonHashException, EXPECTED_TYPES_, IOSObjectArray *)

J2OBJC_INITIALIZED_DEFN(FreemarkerCoreNonHashException)


#line 27
@implementation FreemarkerCoreNonHashException


#line 31
- (instancetype)initWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreNonHashException_initWithFreemarkerCoreEnvironment_(self, env);
  return self;
}


#line 35
- (instancetype)initWithNSString:(NSString *)description_
   withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreNonHashException_initWithNSString_withFreemarkerCoreEnvironment_(self, description_, env);
  return self;
}


#line 39
- (instancetype)initWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env
       withFreemarkerCore_ErrorDescriptionBuilder:(FreemarkerCore_ErrorDescriptionBuilder *)description_ {
  FreemarkerCoreNonHashException_initWithFreemarkerCoreEnvironment_withFreemarkerCore_ErrorDescriptionBuilder_(self, env, description_);
  return self;
}


#line 43
- (instancetype)initWithFreemarkerCoreExpression:(FreemarkerCoreExpression *)blamed
             withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model
                   withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreNonHashException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(self, blamed, model, env);
  return self;
}


#line 49
- (instancetype)initWithFreemarkerCoreExpression:(FreemarkerCoreExpression *)blamed
             withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model
                                    withNSString:(NSString *)tip
                   withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreNonHashException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withFreemarkerCoreEnvironment_(self, blamed, model, tip, env);
  return self;
}


#line 56
- (instancetype)initWithFreemarkerCoreExpression:(FreemarkerCoreExpression *)blamed
             withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model
                               withNSStringArray:(IOSObjectArray *)tips
                   withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreNonHashException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSStringArray_withFreemarkerCoreEnvironment_(self, blamed, model, tips, env);
  return self;
}

+ (void)initialize {
  if (self == [FreemarkerCoreNonHashException class]) {
    FreemarkerCoreNonHashException_EXPECTED_TYPES_ = [IOSObjectArray newArrayWithObjects:(id[]){
#line 29
      FreemarkerTemplateTemplateHashModel_class_() } count:1 type:IOSClass_class_()];
      J2OBJC_SET_INITIALIZED(FreemarkerCoreNonHashException)
    }
  }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreEnvironment:", "NonHashException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withFreemarkerCoreEnvironment:", "NonHashException", NULL, 0x1, NULL, NULL },
    { "initWithFreemarkerCoreEnvironment:withFreemarkerCore_ErrorDescriptionBuilder:", "NonHashException", NULL, 0x0, NULL, NULL },
    { "initWithFreemarkerCoreExpression:withFreemarkerTemplateTemplateModel:withFreemarkerCoreEnvironment:", "NonHashException", NULL, 0x0, "Lfreemarker.core.InvalidReferenceException;", NULL },
    { "initWithFreemarkerCoreExpression:withFreemarkerTemplateTemplateModel:withNSString:withFreemarkerCoreEnvironment:", "NonHashException", NULL, 0x0, "Lfreemarker.core.InvalidReferenceException;", NULL },
    { "initWithFreemarkerCoreExpression:withFreemarkerTemplateTemplateModel:withNSStringArray:withFreemarkerCoreEnvironment:", "NonHashException", NULL, 0x0, "Lfreemarker.core.InvalidReferenceException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "EXPECTED_TYPES_", NULL, 0x1a, "[Ljava.lang.Class;", &FreemarkerCoreNonHashException_EXPECTED_TYPES_, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreNonHashException = { 2, "NonHashException", "freemarker.core", NULL, 0x1, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreNonHashException;
}

@end


#line 31
void FreemarkerCoreNonHashException_initWithFreemarkerCoreEnvironment_(FreemarkerCoreNonHashException *self, FreemarkerCoreEnvironment *env) {
  (void) FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreEnvironment_withNSString_(self, env, @"Expecting hash value here");
}


#line 31
FreemarkerCoreNonHashException *new_FreemarkerCoreNonHashException_initWithFreemarkerCoreEnvironment_(FreemarkerCoreEnvironment *env) {
  FreemarkerCoreNonHashException *self = [FreemarkerCoreNonHashException alloc];
  FreemarkerCoreNonHashException_initWithFreemarkerCoreEnvironment_(self, env);
  return self;
}


#line 35
void FreemarkerCoreNonHashException_initWithNSString_withFreemarkerCoreEnvironment_(FreemarkerCoreNonHashException *self, NSString *description_, FreemarkerCoreEnvironment *env) {
  (void) FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreEnvironment_withNSString_(self, env, description_);
}


#line 35
FreemarkerCoreNonHashException *new_FreemarkerCoreNonHashException_initWithNSString_withFreemarkerCoreEnvironment_(NSString *description_, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreNonHashException *self = [FreemarkerCoreNonHashException alloc];
  FreemarkerCoreNonHashException_initWithNSString_withFreemarkerCoreEnvironment_(self, description_, env);
  return self;
}


#line 39
void FreemarkerCoreNonHashException_initWithFreemarkerCoreEnvironment_withFreemarkerCore_ErrorDescriptionBuilder_(FreemarkerCoreNonHashException *self, FreemarkerCoreEnvironment *env, FreemarkerCore_ErrorDescriptionBuilder *description_) {
  (void) FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreEnvironment_withFreemarkerCore_ErrorDescriptionBuilder_(self, env, description_);
}


#line 39
FreemarkerCoreNonHashException *new_FreemarkerCoreNonHashException_initWithFreemarkerCoreEnvironment_withFreemarkerCore_ErrorDescriptionBuilder_(FreemarkerCoreEnvironment *env, FreemarkerCore_ErrorDescriptionBuilder *description_) {
  FreemarkerCoreNonHashException *self = [FreemarkerCoreNonHashException alloc];
  FreemarkerCoreNonHashException_initWithFreemarkerCoreEnvironment_withFreemarkerCore_ErrorDescriptionBuilder_(self, env, description_);
  return self;
}


#line 43
void FreemarkerCoreNonHashException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(FreemarkerCoreNonHashException *self, FreemarkerCoreExpression *blamed, id<FreemarkerTemplateTemplateModel> model, FreemarkerCoreEnvironment *env) {
  (void) FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withIOSClassArray_withFreemarkerCoreEnvironment_(self,
#line 46
  blamed, model, @"hash", FreemarkerCoreNonHashException_EXPECTED_TYPES_, env);
}


#line 43
FreemarkerCoreNonHashException *new_FreemarkerCoreNonHashException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(FreemarkerCoreExpression *blamed, id<FreemarkerTemplateTemplateModel> model, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreNonHashException *self = [FreemarkerCoreNonHashException alloc];
  FreemarkerCoreNonHashException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(self, blamed, model, env);
  return self;
}

void FreemarkerCoreNonHashException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withFreemarkerCoreEnvironment_(FreemarkerCoreNonHashException *self, FreemarkerCoreExpression *blamed, id<FreemarkerTemplateTemplateModel> model, NSString *tip, FreemarkerCoreEnvironment *env) {
  (void) FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withIOSClassArray_withNSString_withFreemarkerCoreEnvironment_(self,
#line 53
  blamed, model, @"hash", FreemarkerCoreNonHashException_EXPECTED_TYPES_, tip, env);
}


#line 49
FreemarkerCoreNonHashException *new_FreemarkerCoreNonHashException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withFreemarkerCoreEnvironment_(FreemarkerCoreExpression *blamed, id<FreemarkerTemplateTemplateModel> model, NSString *tip, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreNonHashException *self = [FreemarkerCoreNonHashException alloc];
  FreemarkerCoreNonHashException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withFreemarkerCoreEnvironment_(self, blamed, model, tip, env);
  return self;
}


#line 56
void FreemarkerCoreNonHashException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSStringArray_withFreemarkerCoreEnvironment_(FreemarkerCoreNonHashException *self, FreemarkerCoreExpression *blamed, id<FreemarkerTemplateTemplateModel> model, IOSObjectArray *tips, FreemarkerCoreEnvironment *env) {
  (void) FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withIOSClassArray_withNSStringArray_withFreemarkerCoreEnvironment_(self,
#line 58
  blamed, model, @"hash", FreemarkerCoreNonHashException_EXPECTED_TYPES_, tips, env);
}


#line 56
FreemarkerCoreNonHashException *new_FreemarkerCoreNonHashException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSStringArray_withFreemarkerCoreEnvironment_(FreemarkerCoreExpression *blamed, id<FreemarkerTemplateTemplateModel> model, IOSObjectArray *tips, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreNonHashException *self = [FreemarkerCoreNonHashException alloc];
  FreemarkerCoreNonHashException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSStringArray_withFreemarkerCoreEnvironment_(self, blamed, model, tips, env);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreNonHashException)
