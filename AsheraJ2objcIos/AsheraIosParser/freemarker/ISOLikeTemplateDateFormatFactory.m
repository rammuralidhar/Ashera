//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/ISOLikeTemplateDateFormatFactory.java
//


#include "DateUtil.h"
#include "ISOLikeTemplateDateFormatFactory.h"
#include "J2ObjC_source.h"
#include "TemplateDateFormatFactory.h"
#include "java/util/TimeZone.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/ISOLikeTemplateDateFormatFactory.java"

@interface FreemarkerCoreISOLikeTemplateDateFormatFactory () {
 @public
  id<FreemarkerTemplateUtilityDateUtil_DateToISO8601CalendarFactory> dateToCalenderFieldsCalculator_;
  id<FreemarkerTemplateUtilityDateUtil_CalendarFieldsToDateConverter> calendarFieldsToDateConverter_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerCoreISOLikeTemplateDateFormatFactory, dateToCalenderFieldsCalculator_, id<FreemarkerTemplateUtilityDateUtil_DateToISO8601CalendarFactory>)
J2OBJC_FIELD_SETTER(FreemarkerCoreISOLikeTemplateDateFormatFactory, calendarFieldsToDateConverter_, id<FreemarkerTemplateUtilityDateUtil_CalendarFieldsToDateConverter>)


#line 26
@implementation FreemarkerCoreISOLikeTemplateDateFormatFactory


#line 31
- (instancetype)initWithJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone {
  FreemarkerCoreISOLikeTemplateDateFormatFactory_initWithJavaUtilTimeZone_(self, timeZone);
  return self;
}


#line 35
- (jboolean)isLocaleBound {
  return NO;
}

- (id<FreemarkerTemplateUtilityDateUtil_DateToISO8601CalendarFactory>)getISOBuiltInCalendar {
  id<FreemarkerTemplateUtilityDateUtil_DateToISO8601CalendarFactory> r = dateToCalenderFieldsCalculator_;
  if (r == nil) {
    r = new_FreemarkerTemplateUtilityDateUtil_TrivialDateToISO8601CalendarFactory_init();
    dateToCalenderFieldsCalculator_ = r;
  }
  return r;
}

- (id<FreemarkerTemplateUtilityDateUtil_CalendarFieldsToDateConverter>)getCalendarFieldsToDateCalculator {
  id<FreemarkerTemplateUtilityDateUtil_CalendarFieldsToDateConverter> r = calendarFieldsToDateConverter_;
  if (r == nil) {
    r = new_FreemarkerTemplateUtilityDateUtil_TrivialCalendarFieldsToDateConverter_init();
    calendarFieldsToDateConverter_ = r;
  }
  return r;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilTimeZone:", "ISOLikeTemplateDateFormatFactory", NULL, 0x1, NULL, NULL },
    { "isLocaleBound", NULL, "Z", 0x1, NULL, NULL },
    { "getISOBuiltInCalendar", NULL, "Lfreemarker.template.utility.DateUtil$DateToISO8601CalendarFactory;", 0x1, NULL, NULL },
    { "getCalendarFieldsToDateCalculator", NULL, "Lfreemarker.template.utility.DateUtil$CalendarFieldsToDateConverter;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dateToCalenderFieldsCalculator_", NULL, 0x2, "Lfreemarker.template.utility.DateUtil$DateToISO8601CalendarFactory;", NULL, NULL,  },
    { "calendarFieldsToDateConverter_", NULL, 0x2, "Lfreemarker.template.utility.DateUtil$CalendarFieldsToDateConverter;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreISOLikeTemplateDateFormatFactory = { 2, "ISOLikeTemplateDateFormatFactory", "freemarker.core", NULL, 0x400, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreISOLikeTemplateDateFormatFactory;
}

@end


#line 31
void FreemarkerCoreISOLikeTemplateDateFormatFactory_initWithJavaUtilTimeZone_(FreemarkerCoreISOLikeTemplateDateFormatFactory *self, JavaUtilTimeZone *timeZone) {
  (void) FreemarkerCoreTemplateDateFormatFactory_initWithJavaUtilTimeZone_(self, timeZone);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreISOLikeTemplateDateFormatFactory)
