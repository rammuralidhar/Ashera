//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/TemplateNotFoundException.java
//

#ifndef _FreemarkerTemplateTemplateNotFoundException_H_
#define _FreemarkerTemplateTemplateNotFoundException_H_

#include "J2ObjC_header.h"
#include "java/io/FileNotFoundException.h"

/**
 @brief Thrown when Configuration#getTemplate(String) (or similar) doesn't find a template.
 This extends FileNotFoundException for backward compatibility, but in fact has nothing to do with files, as FreeMarker can load templates from many other sources.
 @since 2.3.22
 */
@interface FreemarkerTemplateTemplateNotFoundException : JavaIoFileNotFoundException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)templateName
                          withId:(id)customLookupCondition
                    withNSString:(NSString *)message;

/**
 @brief The custom lookup condition with which the template was requested, or <code>null</code> if there's no such condition.
 See the <code>customLookupCondition</code> parameter of Configuration#getTemplate(String,java.util.Locale,Object,String,boolean,boolean) .
 */
- (id)getCustomLookupCondition;

/**
 @brief The name (path) of the template that wasn't found.
 */
- (NSString *)getTemplateName;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateTemplateNotFoundException)

FOUNDATION_EXPORT void FreemarkerTemplateTemplateNotFoundException_initWithNSString_withId_withNSString_(FreemarkerTemplateTemplateNotFoundException *self, NSString *templateName, id customLookupCondition, NSString *message);

FOUNDATION_EXPORT FreemarkerTemplateTemplateNotFoundException *new_FreemarkerTemplateTemplateNotFoundException_initWithNSString_withId_withNSString_(NSString *templateName, id customLookupCondition, NSString *message) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateTemplateNotFoundException)

#endif // _FreemarkerTemplateTemplateNotFoundException_H_
