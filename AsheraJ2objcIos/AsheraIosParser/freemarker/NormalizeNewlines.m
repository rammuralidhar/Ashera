//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/NormalizeNewlines.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "NormalizeNewlines.h"
#include "java/io/BufferedReader.h"
#include "java/io/IOException.h"
#include "java/io/PrintWriter.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/io/StringWriter.h"
#include "java/io/Writer.h"
#include "java/lang/StringBuffer.h"
#include "java/util/Map.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/NormalizeNewlines.java"

@interface FreemarkerTemplateUtilityNormalizeNewlines_$1 : JavaIoWriter {
 @public
  FreemarkerTemplateUtilityNormalizeNewlines *this$0_;
  JavaLangStringBuffer *val$buf_;
  JavaIoWriter *val$out_;
}

- (void)writeWithCharArray:(IOSCharArray *)cbuf
                   withInt:(jint)off
                   withInt:(jint)len;

- (void)flush;

- (void)close;

- (instancetype)initWithFreemarkerTemplateUtilityNormalizeNewlines:(FreemarkerTemplateUtilityNormalizeNewlines *)outer$
                                          withJavaLangStringBuffer:(JavaLangStringBuffer *)capture$0
                                                  withJavaIoWriter:(JavaIoWriter *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateUtilityNormalizeNewlines_$1)

J2OBJC_FIELD_SETTER(FreemarkerTemplateUtilityNormalizeNewlines_$1, this$0_, FreemarkerTemplateUtilityNormalizeNewlines *)
J2OBJC_FIELD_SETTER(FreemarkerTemplateUtilityNormalizeNewlines_$1, val$buf_, JavaLangStringBuffer *)
J2OBJC_FIELD_SETTER(FreemarkerTemplateUtilityNormalizeNewlines_$1, val$out_, JavaIoWriter *)

__attribute__((unused)) static void FreemarkerTemplateUtilityNormalizeNewlines_$1_initWithFreemarkerTemplateUtilityNormalizeNewlines_withJavaLangStringBuffer_withJavaIoWriter_(FreemarkerTemplateUtilityNormalizeNewlines_$1 *self, FreemarkerTemplateUtilityNormalizeNewlines *outer$, JavaLangStringBuffer *capture$0, JavaIoWriter *capture$1);

__attribute__((unused)) static FreemarkerTemplateUtilityNormalizeNewlines_$1 *new_FreemarkerTemplateUtilityNormalizeNewlines_$1_initWithFreemarkerTemplateUtilityNormalizeNewlines_withJavaLangStringBuffer_withJavaIoWriter_(FreemarkerTemplateUtilityNormalizeNewlines *outer$, JavaLangStringBuffer *capture$0, JavaIoWriter *capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateUtilityNormalizeNewlines_$1)


#line 61
@implementation FreemarkerTemplateUtilityNormalizeNewlines

- (JavaIoWriter *)getWriterWithJavaIoWriter:(JavaIoWriter *)outArg
                            withJavaUtilMap:(id<JavaUtilMap>)args {
  
#line 66
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  return new_FreemarkerTemplateUtilityNormalizeNewlines_$1_initWithFreemarkerTemplateUtilityNormalizeNewlines_withJavaLangStringBuffer_withJavaIoWriter_(self, buf, outArg);
}


#line 91
- (void)transformWithJavaIoReader:(JavaIoReader *)inArg
                 withJavaIoWriter:(JavaIoWriter *)outArg {
  
#line 93
  JavaIoBufferedReader *br = ([inArg isKindOfClass:[JavaIoBufferedReader class]]) ?
#line 94
  (JavaIoBufferedReader *) check_class_cast(inArg, [JavaIoBufferedReader class]) : new_JavaIoBufferedReader_initWithJavaIoReader_(
#line 95
  inArg);
  JavaIoPrintWriter *pw = ([outArg isKindOfClass:[JavaIoPrintWriter class]]) ?
#line 97
  (JavaIoPrintWriter *) check_class_cast(outArg, [JavaIoPrintWriter class]) : new_JavaIoPrintWriter_initWithJavaIoWriter_(
#line 98
  outArg);
  NSString *line = [br readLine];
  if (line != nil) {
    if (((jint) [line length]) > 0) {
      [pw printlnWithNSString:line];
    }
  }
  while ((line = [br readLine]) != nil) {
    [pw printlnWithNSString:line];
  }
}

- (instancetype)init {
  FreemarkerTemplateUtilityNormalizeNewlines_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getWriterWithJavaIoWriter:withJavaUtilMap:", "getWriter", "Ljava.io.Writer;", 0x1, NULL, NULL },
    { "transformWithJavaIoReader:withJavaIoWriter:", "transform", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateUtilityNormalizeNewlines = { 2, "NormalizeNewlines", "freemarker.template.utility", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateUtilityNormalizeNewlines;
}

@end

void FreemarkerTemplateUtilityNormalizeNewlines_init(FreemarkerTemplateUtilityNormalizeNewlines *self) {
  (void) NSObject_init(self);
}

FreemarkerTemplateUtilityNormalizeNewlines *new_FreemarkerTemplateUtilityNormalizeNewlines_init() {
  FreemarkerTemplateUtilityNormalizeNewlines *self = [FreemarkerTemplateUtilityNormalizeNewlines alloc];
  FreemarkerTemplateUtilityNormalizeNewlines_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateUtilityNormalizeNewlines)

@implementation FreemarkerTemplateUtilityNormalizeNewlines_$1


#line 68
- (void)writeWithCharArray:(IOSCharArray *)cbuf
                   withInt:(jint)off
                   withInt:(jint)len {
  (void) [((JavaLangStringBuffer *) nil_chk(val$buf_)) appendWithCharArray:cbuf withInt:off withInt:len];
}


#line 72
- (void)flush {
  [((JavaIoWriter *) nil_chk(val$out_)) flush];
}

- (void)close {
  JavaIoStringReader *sr = new_JavaIoStringReader_initWithNSString_([((JavaLangStringBuffer *) nil_chk(val$buf_)) description]);
  JavaIoStringWriter *sw = new_JavaIoStringWriter_init();
  [this$0_ transformWithJavaIoReader:sr withJavaIoWriter:sw];
  [((JavaIoWriter *) nil_chk(val$out_)) writeWithNSString:[sw description]];
}

- (instancetype)initWithFreemarkerTemplateUtilityNormalizeNewlines:(FreemarkerTemplateUtilityNormalizeNewlines *)outer$
                                          withJavaLangStringBuffer:(JavaLangStringBuffer *)capture$0
                                                  withJavaIoWriter:(JavaIoWriter *)capture$1 {
  FreemarkerTemplateUtilityNormalizeNewlines_$1_initWithFreemarkerTemplateUtilityNormalizeNewlines_withJavaLangStringBuffer_withJavaIoWriter_(self, outer$, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "writeWithCharArray:withInt:withInt:", "write", "V", 0x1, NULL, NULL },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithFreemarkerTemplateUtilityNormalizeNewlines:withJavaLangStringBuffer:withJavaIoWriter:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.template.utility.NormalizeNewlines;", NULL, NULL,  },
    { "val$buf_", NULL, 0x1012, "Ljava.lang.StringBuffer;", NULL, NULL,  },
    { "val$out_", NULL, 0x1012, "Ljava.io.Writer;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "FreemarkerTemplateUtilityNormalizeNewlines", "getWriterWithJavaIoWriter:withJavaUtilMap:" };
  static const J2ObjcClassInfo _FreemarkerTemplateUtilityNormalizeNewlines_$1 = { 2, "", "freemarker.template.utility", "NormalizeNewlines", 0x8008, 4, methods, 3, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_FreemarkerTemplateUtilityNormalizeNewlines_$1;
}

@end

void FreemarkerTemplateUtilityNormalizeNewlines_$1_initWithFreemarkerTemplateUtilityNormalizeNewlines_withJavaLangStringBuffer_withJavaIoWriter_(FreemarkerTemplateUtilityNormalizeNewlines_$1 *self, FreemarkerTemplateUtilityNormalizeNewlines *outer$, JavaLangStringBuffer *capture$0, JavaIoWriter *capture$1) {
  self->this$0_ = outer$;
  self->val$buf_ = capture$0;
  self->val$out_ = capture$1;
  (void) JavaIoWriter_init(self);
}

FreemarkerTemplateUtilityNormalizeNewlines_$1 *new_FreemarkerTemplateUtilityNormalizeNewlines_$1_initWithFreemarkerTemplateUtilityNormalizeNewlines_withJavaLangStringBuffer_withJavaIoWriter_(FreemarkerTemplateUtilityNormalizeNewlines *outer$, JavaLangStringBuffer *capture$0, JavaIoWriter *capture$1) {
  FreemarkerTemplateUtilityNormalizeNewlines_$1 *self = [FreemarkerTemplateUtilityNormalizeNewlines_$1 alloc];
  FreemarkerTemplateUtilityNormalizeNewlines_$1_initWithFreemarkerTemplateUtilityNormalizeNewlines_withJavaLangStringBuffer_withJavaIoWriter_(self, outer$, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateUtilityNormalizeNewlines_$1)
