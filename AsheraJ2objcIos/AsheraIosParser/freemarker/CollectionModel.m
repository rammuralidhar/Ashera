//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/CollectionModel.java
//


#include "BeanModel.h"
#include "BeansWrapper.h"
#include "CollectionModel.h"
#include "IOSClass.h"
#include "IteratorModel.h"
#include "J2ObjC_source.h"
#include "ModelFactory.h"
#include "ObjectWrapper.h"
#include "StringModel.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "TemplateModelIterator.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/CollectionModel.java"

@interface FreemarkerExtBeansCollectionModel_$1 : NSObject < FreemarkerExtUtilModelFactory >

- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerExtBeansCollectionModel_$1)

__attribute__((unused)) static void FreemarkerExtBeansCollectionModel_$1_init(FreemarkerExtBeansCollectionModel_$1 *self);

__attribute__((unused)) static FreemarkerExtBeansCollectionModel_$1 *new_FreemarkerExtBeansCollectionModel_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansCollectionModel_$1)

J2OBJC_INITIALIZED_DEFN(FreemarkerExtBeansCollectionModel)

id<FreemarkerExtUtilModelFactory> FreemarkerExtBeansCollectionModel_FACTORY_;


#line 35
@implementation FreemarkerExtBeansCollectionModel


#line 60
- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection
        withFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)wrapper {
  FreemarkerExtBeansCollectionModel_initWithJavaUtilCollection_withFreemarkerExtBeansBeansWrapper_(self, collection, wrapper);
  return self;
}


#line 70
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 75
  if ([JavaUtilList_class_() isInstance:object_]) {
    
#line 77
    @try {
      
#line 79
      return [self wrapWithId:[((id<JavaUtilList>) nil_chk(((id<JavaUtilList>) check_protocol_cast(object_, @protocol(JavaUtilList))))) getWithInt:index]];
    }
    @catch (JavaLangIndexOutOfBoundsException *e) {
      
#line 83
      return nil;
    }
  }
  else {
    
#line 89
    @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_(JreStrcat("$$", @"Underlying collection is not a list, it's ", [[nil_chk(object_) getClass] getName]));
  }
}


#line 102
- (jboolean)getSupportsIndexedAccess {
  return [JavaUtilList_class_() isInstance:object_];
}

- (id<FreemarkerTemplateTemplateModelIterator>)iterator {
  
#line 108
  return new_FreemarkerExtBeansIteratorModel_initWithJavaUtilIterator_withFreemarkerExtBeansBeansWrapper_([((id<JavaUtilCollection>) nil_chk(((id<JavaUtilCollection>) check_protocol_cast(object_, @protocol(JavaUtilCollection))))) iterator], wrapper_);
}


#line 111
- (jint)size {
  
#line 113
  return [((id<JavaUtilCollection>) nil_chk(((id<JavaUtilCollection>) check_protocol_cast(object_, @protocol(JavaUtilCollection))))) size];
}

+ (void)initialize {
  if (self == [FreemarkerExtBeansCollectionModel class]) {
    FreemarkerExtBeansCollectionModel_FACTORY_ = new_FreemarkerExtBeansCollectionModel_$1_init();
    J2OBJC_SET_INITIALIZED(FreemarkerExtBeansCollectionModel)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilCollection:withFreemarkerExtBeansBeansWrapper:", "CollectionModel", NULL, 0x1, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getSupportsIndexedAccess", NULL, "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Lfreemarker.template.TemplateModelIterator;", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FACTORY_", NULL, 0x18, "Lfreemarker.ext.util.ModelFactory;", &FreemarkerExtBeansCollectionModel_FACTORY_, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansCollectionModel = { 2, "CollectionModel", "freemarker.ext.beans", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansCollectionModel;
}

@end


#line 60
void FreemarkerExtBeansCollectionModel_initWithJavaUtilCollection_withFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansCollectionModel *self, id<JavaUtilCollection> collection, FreemarkerExtBeansBeansWrapper *wrapper) {
  (void) FreemarkerExtBeansStringModel_initWithId_withFreemarkerExtBeansBeansWrapper_(self,
#line 62
  collection, wrapper);
}


#line 60
FreemarkerExtBeansCollectionModel *new_FreemarkerExtBeansCollectionModel_initWithJavaUtilCollection_withFreemarkerExtBeansBeansWrapper_(id<JavaUtilCollection> collection, FreemarkerExtBeansBeansWrapper *wrapper) {
  FreemarkerExtBeansCollectionModel *self = [FreemarkerExtBeansCollectionModel alloc];
  FreemarkerExtBeansCollectionModel_initWithJavaUtilCollection_withFreemarkerExtBeansBeansWrapper_(self, collection, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansCollectionModel)

@implementation FreemarkerExtBeansCollectionModel_$1


#line 45
- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  
#line 47
  return new_FreemarkerExtBeansCollectionModel_initWithJavaUtilCollection_withFreemarkerExtBeansBeansWrapper_((id<JavaUtilCollection>) check_protocol_cast(object, @protocol(JavaUtilCollection)), (FreemarkerExtBeansBeansWrapper *) check_class_cast(wrapper, [FreemarkerExtBeansBeansWrapper class]));
}

- (instancetype)init {
  FreemarkerExtBeansCollectionModel_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createWithId:withFreemarkerTemplateObjectWrapper:", "create", "Lfreemarker.template.TemplateModel;", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansCollectionModel_$1 = { 2, "", "freemarker.ext.beans", "CollectionModel", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansCollectionModel_$1;
}

@end

void FreemarkerExtBeansCollectionModel_$1_init(FreemarkerExtBeansCollectionModel_$1 *self) {
  (void) NSObject_init(self);
}

FreemarkerExtBeansCollectionModel_$1 *new_FreemarkerExtBeansCollectionModel_$1_init() {
  FreemarkerExtBeansCollectionModel_$1 *self = [FreemarkerExtBeansCollectionModel_$1 alloc];
  FreemarkerExtBeansCollectionModel_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansCollectionModel_$1)
