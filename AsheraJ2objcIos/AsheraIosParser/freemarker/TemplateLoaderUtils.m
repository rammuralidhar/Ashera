//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/TemplateLoaderUtils.java
//


#include "Configuration.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "TemplateLoader.h"
#include "TemplateLoaderUtils.h"
#include "java/lang/Package.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/TemplateLoaderUtils.java"

@interface FreemarkerCacheTemplateLoaderUtils ()

- (instancetype)init;

+ (NSString *)getSimpleNameWithIOSClass:(IOSClass *)tlClass;

@end

__attribute__((unused)) static void FreemarkerCacheTemplateLoaderUtils_init(FreemarkerCacheTemplateLoaderUtils *self);

__attribute__((unused)) static FreemarkerCacheTemplateLoaderUtils *new_FreemarkerCacheTemplateLoaderUtils_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static NSString *FreemarkerCacheTemplateLoaderUtils_getSimpleNameWithIOSClass_(IOSClass *tlClass);


#line 21
@implementation FreemarkerCacheTemplateLoaderUtils

- (instancetype)init {
  FreemarkerCacheTemplateLoaderUtils_init(self);
  return self;
}


#line 27
+ (NSString *)getClassNameForToStringWithFreemarkerCacheTemplateLoader:(id<FreemarkerCacheTemplateLoader>)templateLoader {
  return FreemarkerCacheTemplateLoaderUtils_getClassNameForToStringWithFreemarkerCacheTemplateLoader_(templateLoader);
}


#line 35
+ (NSString *)getSimpleNameWithIOSClass:(IOSClass *)tlClass {
  return FreemarkerCacheTemplateLoaderUtils_getSimpleNameWithIOSClass_(tlClass);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "TemplateLoaderUtils", NULL, 0x2, NULL, NULL },
    { "getClassNameForToStringWithFreemarkerCacheTemplateLoader:", "getClassNameForToString", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getSimpleNameWithIOSClass:", "getSimpleName", "Ljava.lang.String;", 0xa, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCacheTemplateLoaderUtils = { 2, "TemplateLoaderUtils", "freemarker.cache", NULL, 0x10, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCacheTemplateLoaderUtils;
}

@end


#line 23
void FreemarkerCacheTemplateLoaderUtils_init(FreemarkerCacheTemplateLoaderUtils *self) {
  (void) NSObject_init(self);
}


#line 23
FreemarkerCacheTemplateLoaderUtils *new_FreemarkerCacheTemplateLoaderUtils_init() {
  FreemarkerCacheTemplateLoaderUtils *self = [FreemarkerCacheTemplateLoaderUtils alloc];
  FreemarkerCacheTemplateLoaderUtils_init(self);
  return self;
}


#line 27
NSString *FreemarkerCacheTemplateLoaderUtils_getClassNameForToStringWithFreemarkerCacheTemplateLoader_(id<FreemarkerCacheTemplateLoader> templateLoader) {
  FreemarkerCacheTemplateLoaderUtils_initialize();
  
#line 28
  IOSClass *tlClass = [((id<FreemarkerCacheTemplateLoader>) nil_chk(templateLoader)) getClass];
  JavaLangPackage *tlPackage = [tlClass getPackage];
  return tlPackage == [FreemarkerTemplateConfiguration_class_() getPackage] || tlPackage == [FreemarkerCacheTemplateLoader_class_() getPackage] ? FreemarkerCacheTemplateLoaderUtils_getSimpleNameWithIOSClass_(
#line 31
  tlClass) : [tlClass getName];
}


#line 35
NSString *FreemarkerCacheTemplateLoaderUtils_getSimpleNameWithIOSClass_(IOSClass *tlClass) {
  FreemarkerCacheTemplateLoaderUtils_initialize();
  
#line 36
  NSString *name = [((IOSClass *) nil_chk(tlClass)) getName];
  jint lastDotIdx = [((NSString *) nil_chk(name)) lastIndexOf:'.'];
  return lastDotIdx < 0 ? name : [name substring:lastDotIdx + 1];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCacheTemplateLoaderUtils)
