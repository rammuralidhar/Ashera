//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/BuiltIn.java
//


#include "BuiltIn.h"
#include "BuiltInsForDates.h"
#include "BuiltInsForHashes.h"
#include "BuiltInsForLoopVariables.h"
#include "BuiltInsForMultipleTypes.h"
#include "BuiltInsForNodes.h"
#include "BuiltInsForNumbers.h"
#include "BuiltInsForSequences.h"
#include "BuiltInsForStringsBasic.h"
#include "BuiltInsForStringsEncoding.h"
#include "BuiltInsForStringsMisc.h"
#include "BuiltInsForStringsRegexp.h"
#include "BuiltInsWithParseTimeParameters.h"
#include "Configuration.h"
#include "DateUtil.h"
#include "EvalUtil.h"
#include "ExistenceBuiltins.h"
#include "Expression.h"
#include "FMParserTokenManager.h"
#include "ICIChainMember.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "Interpret.h"
#include "J2ObjC_source.h"
#include "MessageUtil.h"
#include "NewBI.h"
#include "ParameterRole.h"
#include "ParseException.h"
#include "StringUtil.h"
#include "TemplateDateModel.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "TemplateNumberModel.h"
#include "TemplateScalarModel.h"
#include "Token.h"
#include "Version.h"
#include "_CoreStringUtils.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Boolean.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/InternalError.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Set.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/BuiltIn.java"

@interface FreemarkerCoreBuiltIn ()

+ (void)putBIWithNSString:(NSString *)name
withFreemarkerCoreBuiltIn:(FreemarkerCoreBuiltIn *)bi;

+ (void)putBIWithNSString:(NSString *)name
             withNSString:(NSString *)nameCamelCase
withFreemarkerCoreBuiltIn:(FreemarkerCoreBuiltIn *)bi;

@end

__attribute__((unused)) static void FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(NSString *name, FreemarkerCoreBuiltIn *bi);

__attribute__((unused)) static void FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(NSString *name, NSString *nameCamelCase, FreemarkerCoreBuiltIn *bi);

__attribute__((unused)) static void FreemarkerCoreBuiltIn_checkMethodArgCountWithInt_withInt_(FreemarkerCoreBuiltIn *self, jint argCnt, jint expectedCnt);

__attribute__((unused)) static void FreemarkerCoreBuiltIn_checkMethodArgCountWithInt_withInt_withInt_(FreemarkerCoreBuiltIn *self, jint argCnt, jint minCnt, jint maxCnt);

__attribute__((unused)) static NSString *FreemarkerCoreBuiltIn_getStringMethodArgWithJavaUtilList_withInt_(FreemarkerCoreBuiltIn *self, id<JavaUtilList> args, jint argIdx);

J2OBJC_INITIALIZED_DEFN(FreemarkerCoreBuiltIn)

JavaUtilHashMap *FreemarkerCoreBuiltIn_builtins_;


#line 69
@implementation FreemarkerCoreBuiltIn


#line 278
+ (void)putBIWithNSString:(NSString *)name
withFreemarkerCoreBuiltIn:(FreemarkerCoreBuiltIn *)bi {
  FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(name, bi);
}


#line 282
+ (void)putBIWithNSString:(NSString *)name
             withNSString:(NSString *)nameCamelCase
withFreemarkerCoreBuiltIn:(FreemarkerCoreBuiltIn *)bi {
  FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(name, nameCamelCase, bi);
}


#line 293
+ (FreemarkerCoreBuiltIn *)newBuiltInWithInt:(jint)incompatibleImprovements
                withFreemarkerCoreExpression:(FreemarkerCoreExpression *)target
                     withFreemarkerCoreToken:(FreemarkerCoreToken *)keyTk
      withFreemarkerCoreFMParserTokenManager:(FreemarkerCoreFMParserTokenManager *)tokenManager {
  return FreemarkerCoreBuiltIn_newBuiltInWithInt_withFreemarkerCoreExpression_withFreemarkerCoreToken_withFreemarkerCoreFMParserTokenManager_(incompatibleImprovements, target, keyTk, tokenManager);
}


#line 357
- (NSString *)getCanonicalForm {
  return JreStrcat("$C$", [((FreemarkerCoreExpression *) nil_chk(target_)) getCanonicalForm], '?', key_);
}

- (NSString *)getNodeTypeSymbol {
  return JreStrcat("C$", '?', key_);
}

- (jboolean)isLiteral {
  return NO;
}

- (void)checkMethodArgCountWithJavaUtilList:(id<JavaUtilList>)args
                                    withInt:(jint)expectedCnt {
  FreemarkerCoreBuiltIn_checkMethodArgCountWithInt_withInt_(self, [((id<JavaUtilList>) nil_chk(args)) size], expectedCnt);
}


#line 373
- (void)checkMethodArgCountWithInt:(jint)argCnt
                           withInt:(jint)expectedCnt {
  FreemarkerCoreBuiltIn_checkMethodArgCountWithInt_withInt_(self, argCnt, expectedCnt);
}


#line 379
- (void)checkMethodArgCountWithJavaUtilList:(id<JavaUtilList>)args
                                    withInt:(jint)minCnt
                                    withInt:(jint)maxCnt {
  FreemarkerCoreBuiltIn_checkMethodArgCountWithInt_withInt_withInt_(self, [((id<JavaUtilList>) nil_chk(args)) size], minCnt, maxCnt);
}


#line 383
- (void)checkMethodArgCountWithInt:(jint)argCnt
                           withInt:(jint)minCnt
                           withInt:(jint)maxCnt {
  FreemarkerCoreBuiltIn_checkMethodArgCountWithInt_withInt_withInt_(self, argCnt, minCnt, maxCnt);
}


#line 393
- (NSString *)getOptStringMethodArgWithJavaUtilList:(id<JavaUtilList>)args
                                            withInt:(jint)argIdx {
  
#line 395
  return [((id<JavaUtilList>) nil_chk(args)) size] > argIdx ? FreemarkerCoreBuiltIn_getStringMethodArgWithJavaUtilList_withInt_(self, args, argIdx) : nil;
}


#line 401
- (NSString *)getStringMethodArgWithJavaUtilList:(id<JavaUtilList>)args
                                         withInt:(jint)argIdx {
  return FreemarkerCoreBuiltIn_getStringMethodArgWithJavaUtilList_withInt_(self, args, argIdx);
}


#line 414
- (NSNumber *)getNumberMethodArgWithJavaUtilList:(id<JavaUtilList>)args
                                         withInt:(jint)argIdx {
  
#line 416
  id<FreemarkerTemplateTemplateModel> arg = (id<FreemarkerTemplateTemplateModel>) check_protocol_cast([((id<JavaUtilList>) nil_chk(args)) getWithInt:argIdx], @protocol(FreemarkerTemplateTemplateModel));
  if (!([FreemarkerTemplateTemplateNumberModel_class_() isInstance:arg])) {
    @throw FreemarkerCoreMessageUtil_newMethodArgMustBeNumberExceptionWithNSString_withInt_withFreemarkerTemplateTemplateModel_(JreStrcat("C$", '?', key_), argIdx, arg);
  }
  else {
    
#line 420
    return FreemarkerCoreEvalUtil_modelToNumberWithFreemarkerTemplateTemplateNumberModel_withFreemarkerCoreExpression_((id<FreemarkerTemplateTemplateNumberModel>) check_protocol_cast(arg, @protocol(FreemarkerTemplateTemplateNumberModel)), nil);
  }
}


#line 424
- (FreemarkerTemplateTemplateModelException *)newMethodArgInvalidValueExceptionWithInt:(jint)argIdx
                                                                     withNSObjectArray:(IOSObjectArray *)details {
  return FreemarkerCoreMessageUtil_newMethodArgInvalidValueExceptionWithNSString_withInt_withNSObjectArray_(JreStrcat("C$", '?', key_), argIdx, details);
}


#line 428
- (FreemarkerTemplateTemplateModelException *)newMethodArgsInvalidValueExceptionWithNSObjectArray:(IOSObjectArray *)details {
  return FreemarkerCoreMessageUtil_newMethodArgsInvalidValueExceptionWithNSString_withNSObjectArray_(JreStrcat("C$", '?', key_), details);
}

- (FreemarkerCoreExpression *)deepCloneWithIdentifierReplaced_innerWithNSString:(NSString *)replacedIdentifier
                                                   withFreemarkerCoreExpression:(FreemarkerCoreExpression *)replacement
                                 withFreemarkerCoreExpression_ReplacemenetState:(FreemarkerCoreExpression_ReplacemenetState *)replacementState {
  
#line 434
  @try {
    FreemarkerCoreBuiltIn *clone = (FreemarkerCoreBuiltIn *) check_class_cast([self clone], [FreemarkerCoreBuiltIn class]);
    ((FreemarkerCoreBuiltIn *) nil_chk(clone))->target_ = [((FreemarkerCoreExpression *) nil_chk(target_)) deepCloneWithIdentifierReplacedWithNSString:replacedIdentifier withFreemarkerCoreExpression:replacement withFreemarkerCoreExpression_ReplacemenetState:replacementState];
    return clone;
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$@", @"Internal error: ", e));
  }
}


#line 444
- (jint)getParameterCount {
  return 2;
}

- (id)getParameterValueWithInt:(jint)idx {
  switch (idx) {
    case 0:
    
#line 450
    return target_;
    case 1:
    
#line 451
    return key_;
    default:
    
#line 452
    @throw new_JavaLangIndexOutOfBoundsException_init();
  }
}


#line 456
- (FreemarkerCoreParameterRole *)getParameterRoleWithInt:(jint)idx {
  switch (idx) {
    case 0:
    
#line 458
    return FreemarkerCoreParameterRole_get_LEFT_HAND_OPERAND_();
    case 1:
    
#line 459
    return FreemarkerCoreParameterRole_get_RIGHT_HAND_OPERAND_();
    default:
    
#line 460
    @throw new_JavaLangIndexOutOfBoundsException_init();
  }
}

- (instancetype)init {
  FreemarkerCoreBuiltIn_init(self);
  return self;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (void)initialize {
  if (self == [FreemarkerCoreBuiltIn class]) {
    FreemarkerCoreBuiltIn_builtins_ = new_JavaUtilHashMap_initWithInt_withFloat_(
#line 75
    FreemarkerCoreBuiltIn_NUMBER_OF_BIS * 3 / 2 + 1, 0.67f);
    {
      
#line 79
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"abs", new_FreemarkerCoreBuiltInsForNumbers_absBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"ancestors", new_FreemarkerCoreBuiltInsForNodes_ancestorsBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"api", new_FreemarkerCoreBuiltInsForMultipleTypes_apiBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"boolean", new_FreemarkerCoreBuiltInsForStringsMisc_booleanBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"byte", new_FreemarkerCoreBuiltInsForNumbers_byteBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"c", new_FreemarkerCoreBuiltInsForMultipleTypes_cBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"cap_first", @"capFirst", new_FreemarkerCoreBuiltInsForStringsBasic_cap_firstBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"capitalize", new_FreemarkerCoreBuiltInsForStringsBasic_capitalizeBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"ceiling", new_FreemarkerCoreBuiltInsForNumbers_ceilingBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"children", new_FreemarkerCoreBuiltInsForNodes_childrenBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"chop_linebreak", @"chopLinebreak", new_FreemarkerCoreBuiltInsForStringsBasic_chop_linebreakBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"contains", new_FreemarkerCoreBuiltInsForStringsBasic_containsBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"date", new_FreemarkerCoreBuiltInsForMultipleTypes_dateBI_initWithInt_(FreemarkerTemplateTemplateDateModel_DATE));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"date_if_unknown", @"dateIfUnknown", new_FreemarkerCoreBuiltInsForDates_dateType_if_unknownBI_initWithInt_(FreemarkerTemplateTemplateDateModel_DATE));
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"datetime", new_FreemarkerCoreBuiltInsForMultipleTypes_dateBI_initWithInt_(FreemarkerTemplateTemplateDateModel_DATETIME));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"datetime_if_unknown", @"datetimeIfUnknown", new_FreemarkerCoreBuiltInsForDates_dateType_if_unknownBI_initWithInt_(FreemarkerTemplateTemplateDateModel_DATETIME));
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"default", new_FreemarkerCoreExistenceBuiltins_defaultBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"double", new_FreemarkerCoreBuiltInsForNumbers_doubleBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"ends_with", @"endsWith", new_FreemarkerCoreBuiltInsForStringsBasic_ends_withBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"ensure_ends_with", @"ensureEndsWith", new_FreemarkerCoreBuiltInsForStringsBasic_ensure_ends_withBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"ensure_starts_with", @"ensureStartsWith", new_FreemarkerCoreBuiltInsForStringsBasic_ensure_starts_withBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"eval", new_FreemarkerCoreBuiltInsForStringsMisc_evalBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"exists", new_FreemarkerCoreExistenceBuiltins_existsBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"first", new_FreemarkerCoreBuiltInsForSequences_firstBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"float", new_FreemarkerCoreBuiltInsForNumbers_floatBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"floor", new_FreemarkerCoreBuiltInsForNumbers_floorBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"chunk", new_FreemarkerCoreBuiltInsForSequences_chunkBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"counter", new_FreemarkerCoreBuiltInsForLoopVariables_counterBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"item_cycle", @"itemCycle", new_FreemarkerCoreBuiltInsForLoopVariables_item_cycleBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"has_api", @"hasApi", new_FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"has_content", @"hasContent", new_FreemarkerCoreExistenceBuiltins_has_contentBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"has_next", @"hasNext", new_FreemarkerCoreBuiltInsForLoopVariables_has_nextBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"html", new_FreemarkerCoreBuiltInsForStringsEncoding_htmlBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"if_exists", @"ifExists", new_FreemarkerCoreExistenceBuiltins_if_existsBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"index", new_FreemarkerCoreBuiltInsForLoopVariables_indexBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"index_of", @"indexOf", new_FreemarkerCoreBuiltInsForStringsBasic_index_ofBI_initWithBoolean_(NO));
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"int", new_FreemarkerCoreBuiltInsForNumbers_intBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"interpret", new_FreemarkerCoreInterpret_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_boolean", @"isBoolean", new_FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_collection", @"isCollection", new_FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_collection_ex", @"isCollectionEx", new_FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI_init());
      FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI *bi = new_FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI_init();
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_date", @"isDate", bi);
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_date_like", @"isDateLike", bi);
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_date_only", @"isDateOnly", new_FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI_initWithInt_(FreemarkerTemplateTemplateDateModel_DATE));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_even_item", @"isEvenItem", new_FreemarkerCoreBuiltInsForLoopVariables_is_even_itemBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_first", @"isFirst", new_FreemarkerCoreBuiltInsForLoopVariables_is_firstBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_last", @"isLast", new_FreemarkerCoreBuiltInsForLoopVariables_is_lastBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_unknown_date_like", @"isUnknownDateLike", new_FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI_initWithInt_(FreemarkerTemplateTemplateDateModel_UNKNOWN));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_datetime", @"isDatetime", new_FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI_initWithInt_(FreemarkerTemplateTemplateDateModel_DATETIME));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_directive", @"isDirective", new_FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_enumerable", @"isEnumerable", new_FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_hash_ex", @"isHashEx", new_FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_hash", @"isHash", new_FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_infinite", @"isInfinite", new_FreemarkerCoreBuiltInsForNumbers_is_infiniteBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_indexable", @"isIndexable", new_FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_macro", @"isMacro", new_FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_method", @"isMethod", new_FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_nan", @"isNan", new_FreemarkerCoreBuiltInsForNumbers_is_nanBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_node", @"isNode", new_FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_number", @"isNumber", new_FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_odd_item", @"isOddItem", new_FreemarkerCoreBuiltInsForLoopVariables_is_odd_itemBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_sequence", @"isSequence", new_FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_string", @"isString", new_FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_time", @"isTime", new_FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI_initWithInt_(FreemarkerTemplateTemplateDateModel_TIME));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"is_transform", @"isTransform", new_FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI_init());
      
#line 146
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_utc", @"isoUtc", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(
#line 147
      nil, FreemarkerTemplateUtilityDateUtil_ACCURACY_SECONDS, YES));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_utc_fz", @"isoUtcFZ", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(JavaLangBoolean_get_TRUE__(),
#line 149
      FreemarkerTemplateUtilityDateUtil_ACCURACY_SECONDS, YES));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_utc_nz", @"isoUtcNZ", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(JavaLangBoolean_get_FALSE__(),
#line 151
      FreemarkerTemplateUtilityDateUtil_ACCURACY_SECONDS, YES));
      
#line 153
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_utc_ms", @"isoUtcMs", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(
#line 154
      nil, FreemarkerTemplateUtilityDateUtil_ACCURACY_MILLISECONDS, YES));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_utc_ms_nz", @"isoUtcMsNZ", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(JavaLangBoolean_get_FALSE__(),
#line 156
      FreemarkerTemplateUtilityDateUtil_ACCURACY_MILLISECONDS, YES));
      
#line 158
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_utc_m", @"isoUtcM", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(
#line 159
      nil, FreemarkerTemplateUtilityDateUtil_ACCURACY_MINUTES, YES));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_utc_m_nz", @"isoUtcMNZ", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(JavaLangBoolean_get_FALSE__(),
#line 161
      FreemarkerTemplateUtilityDateUtil_ACCURACY_MINUTES, YES));
      
#line 163
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_utc_h", @"isoUtcH", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(
#line 164
      nil, FreemarkerTemplateUtilityDateUtil_ACCURACY_HOURS, YES));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_utc_h_nz", @"isoUtcHNZ", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(JavaLangBoolean_get_FALSE__(),
#line 166
      FreemarkerTemplateUtilityDateUtil_ACCURACY_HOURS, YES));
      
#line 168
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_local", @"isoLocal", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(
#line 169
      nil, FreemarkerTemplateUtilityDateUtil_ACCURACY_SECONDS, NO));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_local_nz", @"isoLocalNZ", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(JavaLangBoolean_get_FALSE__(),
#line 171
      FreemarkerTemplateUtilityDateUtil_ACCURACY_SECONDS, NO));
      
#line 173
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_local_ms", @"isoLocalMs", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(
#line 174
      nil, FreemarkerTemplateUtilityDateUtil_ACCURACY_MILLISECONDS, NO));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_local_ms_nz", @"isoLocalMsNZ", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(JavaLangBoolean_get_FALSE__(),
#line 176
      FreemarkerTemplateUtilityDateUtil_ACCURACY_MILLISECONDS, NO));
      
#line 178
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_local_m", @"isoLocalM", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(
#line 179
      nil, FreemarkerTemplateUtilityDateUtil_ACCURACY_MINUTES, NO));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_local_m_nz", @"isoLocalMNZ", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(JavaLangBoolean_get_FALSE__(),
#line 181
      FreemarkerTemplateUtilityDateUtil_ACCURACY_MINUTES, NO));
      
#line 183
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_local_h", @"isoLocalH", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(
#line 184
      nil, FreemarkerTemplateUtilityDateUtil_ACCURACY_HOURS, NO));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_local_h_nz", @"isoLocalHNZ", new_FreemarkerCoreBuiltInsForDates_iso_utc_or_local_BI_initWithJavaLangBoolean_withInt_withBoolean_(JavaLangBoolean_get_FALSE__(),
#line 186
      FreemarkerTemplateUtilityDateUtil_ACCURACY_HOURS, NO));
      
#line 188
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"iso", new_FreemarkerCoreBuiltInsForDates_iso_BI_initWithJavaLangBoolean_withInt_(
#line 189
      nil, FreemarkerTemplateUtilityDateUtil_ACCURACY_SECONDS));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_nz", @"isoNZ", new_FreemarkerCoreBuiltInsForDates_iso_BI_initWithJavaLangBoolean_withInt_(JavaLangBoolean_get_FALSE__(),
#line 191
      FreemarkerTemplateUtilityDateUtil_ACCURACY_SECONDS));
      
#line 193
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_ms", @"isoMs", new_FreemarkerCoreBuiltInsForDates_iso_BI_initWithJavaLangBoolean_withInt_(
#line 194
      nil, FreemarkerTemplateUtilityDateUtil_ACCURACY_MILLISECONDS));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_ms_nz", @"isoMsNZ", new_FreemarkerCoreBuiltInsForDates_iso_BI_initWithJavaLangBoolean_withInt_(JavaLangBoolean_get_FALSE__(),
#line 196
      FreemarkerTemplateUtilityDateUtil_ACCURACY_MILLISECONDS));
      
#line 198
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_m", @"isoM", new_FreemarkerCoreBuiltInsForDates_iso_BI_initWithJavaLangBoolean_withInt_(
#line 199
      nil, FreemarkerTemplateUtilityDateUtil_ACCURACY_MINUTES));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_m_nz", @"isoMNZ", new_FreemarkerCoreBuiltInsForDates_iso_BI_initWithJavaLangBoolean_withInt_(JavaLangBoolean_get_FALSE__(),
#line 201
      FreemarkerTemplateUtilityDateUtil_ACCURACY_MINUTES));
      
#line 203
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_h", @"isoH", new_FreemarkerCoreBuiltInsForDates_iso_BI_initWithJavaLangBoolean_withInt_(
#line 204
      nil, FreemarkerTemplateUtilityDateUtil_ACCURACY_HOURS));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"iso_h_nz", @"isoHNZ", new_FreemarkerCoreBuiltInsForDates_iso_BI_initWithJavaLangBoolean_withInt_(JavaLangBoolean_get_FALSE__(),
#line 206
      FreemarkerTemplateUtilityDateUtil_ACCURACY_HOURS));
      
#line 208
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"j_string", @"jString", new_FreemarkerCoreBuiltInsForStringsEncoding_j_stringBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"join", new_FreemarkerCoreBuiltInsForSequences_joinBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"js_string", @"jsString", new_FreemarkerCoreBuiltInsForStringsEncoding_js_stringBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"json_string", @"jsonString", new_FreemarkerCoreBuiltInsForStringsEncoding_json_stringBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"keep_after", @"keepAfter", new_FreemarkerCoreBuiltInsForStringsBasic_keep_afterBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"keep_before", @"keepBefore", new_FreemarkerCoreBuiltInsForStringsBasic_keep_beforeBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"keep_after_last", @"keepAfterLast", new_FreemarkerCoreBuiltInsForStringsBasic_keep_after_lastBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"keep_before_last", @"keepBeforeLast", new_FreemarkerCoreBuiltInsForStringsBasic_keep_before_lastBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"keys", new_FreemarkerCoreBuiltInsForHashes_keysBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"last_index_of", @"lastIndexOf", new_FreemarkerCoreBuiltInsForStringsBasic_index_ofBI_initWithBoolean_(YES));
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"last", new_FreemarkerCoreBuiltInsForSequences_lastBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"left_pad", @"leftPad", new_FreemarkerCoreBuiltInsForStringsBasic_padBI_initWithBoolean_(YES));
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"length", new_FreemarkerCoreBuiltInsForStringsBasic_lengthBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"long", new_FreemarkerCoreBuiltInsForNumbers_longBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"lower_abc", @"lowerAbc", new_FreemarkerCoreBuiltInsForNumbers_lower_abcBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"lower_case", @"lowerCase", new_FreemarkerCoreBuiltInsForStringsBasic_lower_caseBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"namespace", new_FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"new", new_FreemarkerCoreNewBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"node_name", @"nodeName", new_FreemarkerCoreBuiltInsForNodes_node_nameBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"node_namespace", @"nodeNamespace", new_FreemarkerCoreBuiltInsForNodes_node_namespaceBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"node_type", @"nodeType", new_FreemarkerCoreBuiltInsForNodes_node_typeBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"number", new_FreemarkerCoreBuiltInsForStringsMisc_numberBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"number_to_date", @"numberToDate", new_FreemarkerCoreBuiltInsForNumbers_number_to_dateBI_initWithInt_(FreemarkerTemplateTemplateDateModel_DATE));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"number_to_time", @"numberToTime", new_FreemarkerCoreBuiltInsForNumbers_number_to_dateBI_initWithInt_(FreemarkerTemplateTemplateDateModel_TIME));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"number_to_datetime", @"numberToDatetime", new_FreemarkerCoreBuiltInsForNumbers_number_to_dateBI_initWithInt_(FreemarkerTemplateTemplateDateModel_DATETIME));
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"parent", new_FreemarkerCoreBuiltInsForNodes_parentBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"item_parity", @"itemParity", new_FreemarkerCoreBuiltInsForLoopVariables_item_parityBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"item_parity_cap", @"itemParityCap", new_FreemarkerCoreBuiltInsForLoopVariables_item_parity_capBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"reverse", new_FreemarkerCoreBuiltInsForSequences_reverseBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"right_pad", @"rightPad", new_FreemarkerCoreBuiltInsForStringsBasic_padBI_initWithBoolean_(NO));
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"root", new_FreemarkerCoreBuiltInsForNodes_rootBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"round", new_FreemarkerCoreBuiltInsForNumbers_roundBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"remove_ending", @"removeEnding", new_FreemarkerCoreBuiltInsForStringsBasic_remove_endingBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"remove_beginning", @"removeBeginning", new_FreemarkerCoreBuiltInsForStringsBasic_remove_beginningBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"rtf", new_FreemarkerCoreBuiltInsForStringsEncoding_rtfBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"seq_contains", @"seqContains", new_FreemarkerCoreBuiltInsForSequences_seq_containsBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"seq_index_of", @"seqIndexOf", new_FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_initWithInt_(1));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"seq_last_index_of", @"seqLastIndexOf", new_FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_initWithInt_(-1));
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"short", new_FreemarkerCoreBuiltInsForNumbers_shortBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"size", new_FreemarkerCoreBuiltInsForMultipleTypes_sizeBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"sort_by", @"sortBy", new_FreemarkerCoreBuiltInsForSequences_sort_byBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"sort", new_FreemarkerCoreBuiltInsForSequences_sortBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"split", new_FreemarkerCoreBuiltInsForStringsBasic_split_BI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"switch", new_FreemarkerCoreBuiltInsWithParseTimeParameters_switch_BI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"starts_with", @"startsWith", new_FreemarkerCoreBuiltInsForStringsBasic_starts_withBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"string", new_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"substring", new_FreemarkerCoreBuiltInsForStringsBasic_substringBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"then", new_FreemarkerCoreBuiltInsWithParseTimeParameters_then_BI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"time", new_FreemarkerCoreBuiltInsForMultipleTypes_dateBI_initWithInt_(FreemarkerTemplateTemplateDateModel_TIME));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"time_if_unknown", @"timeIfUnknown", new_FreemarkerCoreBuiltInsForDates_dateType_if_unknownBI_initWithInt_(FreemarkerTemplateTemplateDateModel_TIME));
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"trim", new_FreemarkerCoreBuiltInsForStringsBasic_trimBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"uncap_first", @"uncapFirst", new_FreemarkerCoreBuiltInsForStringsBasic_uncap_firstBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"upper_abc", @"upperAbc", new_FreemarkerCoreBuiltInsForNumbers_upper_abcBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"upper_case", @"upperCase", new_FreemarkerCoreBuiltInsForStringsBasic_upper_caseBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"url", new_FreemarkerCoreBuiltInsForStringsEncoding_urlBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"url_path", @"urlPath", new_FreemarkerCoreBuiltInsForStringsEncoding_urlPathBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"values", new_FreemarkerCoreBuiltInsForHashes_valuesBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"web_safe", @"webSafe", (FreemarkerCoreBuiltIn *) check_class_cast([FreemarkerCoreBuiltIn_builtins_ getWithId:@"html"], [FreemarkerCoreBuiltIn class]));
      FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(@"word_list", @"wordList", new_FreemarkerCoreBuiltInsForStringsBasic_word_listBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"xhtml", new_FreemarkerCoreBuiltInsForStringsEncoding_xhtmlBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"xml", new_FreemarkerCoreBuiltInsForStringsEncoding_xmlBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"matches", new_FreemarkerCoreBuiltInsForStringsRegexp_matchesBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"groups", new_FreemarkerCoreBuiltInsForStringsRegexp_groupsBI_init());
      FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(@"replace", new_FreemarkerCoreBuiltInsForStringsRegexp_replace_reBI_init());
      
#line 273
      if (FreemarkerCoreBuiltIn_NUMBER_OF_BIS < [FreemarkerCoreBuiltIn_builtins_ size]) {
        @throw new_JavaLangAssertionError_initWithId_(JreStrcat("$I", @"Update NUMBER_OF_BIS! Should be: ", [FreemarkerCoreBuiltIn_builtins_ size]));
      }
    }
    J2OBJC_SET_INITIALIZED(FreemarkerCoreBuiltIn)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "putBIWithNSString:withFreemarkerCoreBuiltIn:", "putBI", "V", 0xa, NULL, NULL },
    { "putBIWithNSString:withNSString:withFreemarkerCoreBuiltIn:", "putBI", "V", 0xa, NULL, NULL },
    { "newBuiltInWithInt:withFreemarkerCoreExpression:withFreemarkerCoreToken:withFreemarkerCoreFMParserTokenManager:", "newBuiltIn", "Lfreemarker.core.BuiltIn;", 0x8, "Lfreemarker.core.ParseException;", NULL },
    { "getCanonicalForm", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getNodeTypeSymbol", NULL, "Ljava.lang.String;", 0x0, NULL, NULL },
    { "isLiteral", NULL, "Z", 0x0, NULL, NULL },
    { "checkMethodArgCountWithJavaUtilList:withInt:", "checkMethodArgCount", "V", 0x14, "Lfreemarker.template.TemplateModelException;", NULL },
    { "checkMethodArgCountWithInt:withInt:", "checkMethodArgCount", "V", 0x14, "Lfreemarker.template.TemplateModelException;", NULL },
    { "checkMethodArgCountWithJavaUtilList:withInt:withInt:", "checkMethodArgCount", "V", 0x14, "Lfreemarker.template.TemplateModelException;", NULL },
    { "checkMethodArgCountWithInt:withInt:withInt:", "checkMethodArgCount", "V", 0x14, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getOptStringMethodArgWithJavaUtilList:withInt:", "getOptStringMethodArg", "Ljava.lang.String;", 0x14, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getStringMethodArgWithJavaUtilList:withInt:", "getStringMethodArg", "Ljava.lang.String;", 0x14, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getNumberMethodArgWithJavaUtilList:withInt:", "getNumberMethodArg", "Ljava.lang.Number;", 0x14, "Lfreemarker.template.TemplateModelException;", NULL },
    { "newMethodArgInvalidValueExceptionWithInt:withNSObjectArray:", "newMethodArgInvalidValueException", "Lfreemarker.template.TemplateModelException;", 0x14, NULL, NULL },
    { "newMethodArgsInvalidValueExceptionWithNSObjectArray:", "newMethodArgsInvalidValueException", "Lfreemarker.template.TemplateModelException;", 0x14, NULL, NULL },
    { "deepCloneWithIdentifierReplaced_innerWithNSString:withFreemarkerCoreExpression:withFreemarkerCoreExpression_ReplacemenetState:", "deepCloneWithIdentifierReplaced_inner", "Lfreemarker.core.Expression;", 0x4, NULL, NULL },
    { "getParameterCount", NULL, "I", 0x0, NULL, NULL },
    { "getParameterValueWithInt:", "getParameterValue", "Ljava.lang.Object;", 0x0, NULL, NULL },
    { "getParameterRoleWithInt:", "getParameterRole", "Lfreemarker.core.ParameterRole;", 0x0, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "target_", NULL, 0x4, "Lfreemarker.core.Expression;", NULL, NULL,  },
    { "key_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL,  },
    { "NUMBER_OF_BIS_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = FreemarkerCoreBuiltIn_NUMBER_OF_BIS },
    { "builtins_", NULL, 0x18, "Ljava.util.HashMap;", &FreemarkerCoreBuiltIn_builtins_, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltIn = { 2, "BuiltIn", "freemarker.core", NULL, 0x400, 20, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltIn;
}

@end


#line 278
void FreemarkerCoreBuiltIn_putBIWithNSString_withFreemarkerCoreBuiltIn_(NSString *name, FreemarkerCoreBuiltIn *bi) {
  FreemarkerCoreBuiltIn_initialize();
  
#line 279
  (void) [((JavaUtilHashMap *) nil_chk(FreemarkerCoreBuiltIn_builtins_)) putWithId:name withId:bi];
}


#line 282
void FreemarkerCoreBuiltIn_putBIWithNSString_withNSString_withFreemarkerCoreBuiltIn_(NSString *name, NSString *nameCamelCase, FreemarkerCoreBuiltIn *bi) {
  FreemarkerCoreBuiltIn_initialize();
  
#line 283
  (void) [((JavaUtilHashMap *) nil_chk(FreemarkerCoreBuiltIn_builtins_)) putWithId:name withId:bi];
  (void) [FreemarkerCoreBuiltIn_builtins_ putWithId:nameCamelCase withId:bi];
}


#line 293
FreemarkerCoreBuiltIn *FreemarkerCoreBuiltIn_newBuiltInWithInt_withFreemarkerCoreExpression_withFreemarkerCoreToken_withFreemarkerCoreFMParserTokenManager_(jint incompatibleImprovements, FreemarkerCoreExpression *target, FreemarkerCoreToken *keyTk, FreemarkerCoreFMParserTokenManager *tokenManager) {
  FreemarkerCoreBuiltIn_initialize();
  NSString *key = ((FreemarkerCoreToken *) nil_chk(keyTk))->image_;
  FreemarkerCoreBuiltIn *bi = (FreemarkerCoreBuiltIn *) check_class_cast([((JavaUtilHashMap *) nil_chk(FreemarkerCoreBuiltIn_builtins_)) getWithId:key], [FreemarkerCoreBuiltIn class]);
  if (bi == nil) {
    JavaLangStringBuffer *buf = [((JavaLangStringBuffer *) nil_chk([new_JavaLangStringBuffer_initWithNSString_(@"Unknown built-in: ") appendWithNSString:FreemarkerTemplateUtilityStringUtil_jQuoteWithNSString_(key)])) appendWithNSString:@". "];
    
#line 300
    (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:@"Help (latest version): http://freemarker.org/docs/ref_builtins.html; you're using FreeMarker "])) appendWithId:FreemarkerTemplateConfiguration_getVersion()])) appendWithNSString:@".\nThe alphabetical list of built-ins:"];
    
#line 304
    id<JavaUtilList> names = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilSet>) nil_chk([FreemarkerCoreBuiltIn_builtins_ keySet])) size]);
    [names addAllWithJavaUtilCollection:[FreemarkerCoreBuiltIn_builtins_ keySet]];
    JavaUtilCollections_sortWithJavaUtilList_(names);
    jchar lastLetter = 0;
    
#line 309
    jint shownNamingConvention;
    {
      jint namingConvention = ((FreemarkerCoreFMParserTokenManager *) nil_chk(tokenManager))->namingConvention_;
      shownNamingConvention = namingConvention != FreemarkerTemplateConfiguration_AUTO_DETECT_NAMING_CONVENTION ?
#line 313
      namingConvention : FreemarkerTemplateConfiguration_LEGACY_NAMING_CONVENTION;
    }
    
#line 316
    jboolean first = YES;
    for (id<JavaUtilIterator> it = [names iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      NSString *correctName = (NSString *) check_class_cast([it next], [NSString class]);
      jint correctNameNamingConvetion = FreemarkerCore_CoreStringUtils_getIdentifierNamingConventionWithNSString_(correctName);
      if (shownNamingConvention == FreemarkerTemplateConfiguration_CAMEL_CASE_NAMING_CONVENTION ?
#line 321
      correctNameNamingConvetion != FreemarkerTemplateConfiguration_LEGACY_NAMING_CONVENTION :
#line 322
      correctNameNamingConvetion != FreemarkerTemplateConfiguration_CAMEL_CASE_NAMING_CONVENTION) {
        if (first) {
          first = NO;
        }
        else {
          
#line 326
          (void) [buf appendWithNSString:@", "];
        }
        
#line 329
        jchar firstChar = [((NSString *) nil_chk(correctName)) charAtWithInt:0];
        if (firstChar != lastLetter) {
          lastLetter = firstChar;
          (void) [buf appendWithChar:0x000a];
        }
        (void) [buf appendWithNSString:correctName];
      }
    }
    
#line 338
    @throw new_FreemarkerCoreParseException_initWithNSString_withId_withId_([buf description], nil, keyTk);
  }
  
#line 341
  while ([FreemarkerCoreICIChainMember_class_() isInstance:bi] &&
#line 342
  incompatibleImprovements < [((id<FreemarkerCoreICIChainMember>) nil_chk(((id<FreemarkerCoreICIChainMember>) check_protocol_cast(bi, @protocol(FreemarkerCoreICIChainMember))))) getMinimumICIVersion]) {
    bi = (FreemarkerCoreBuiltIn *) check_class_cast([((id<FreemarkerCoreICIChainMember>) nil_chk(((id<FreemarkerCoreICIChainMember>) check_protocol_cast(bi, @protocol(FreemarkerCoreICIChainMember))))) getPreviousICIChainMember], [FreemarkerCoreBuiltIn class]);
  }
  
#line 346
  @try {
    bi = (FreemarkerCoreBuiltIn *) check_class_cast([((FreemarkerCoreBuiltIn *) nil_chk(bi)) clone], [FreemarkerCoreBuiltIn class]);
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw new_JavaLangInternalError_init();
  }
  ((FreemarkerCoreBuiltIn *) nil_chk(bi))->key_ = key;
  bi->target_ = target;
  return bi;
}


#line 373
void FreemarkerCoreBuiltIn_checkMethodArgCountWithInt_withInt_(FreemarkerCoreBuiltIn *self, jint argCnt, jint expectedCnt) {
  if (argCnt != expectedCnt) {
    @throw FreemarkerCoreMessageUtil_newArgCntErrorWithNSString_withInt_withInt_(JreStrcat("C$", '?', self->key_), argCnt, expectedCnt);
  }
}


#line 383
void FreemarkerCoreBuiltIn_checkMethodArgCountWithInt_withInt_withInt_(FreemarkerCoreBuiltIn *self, jint argCnt, jint minCnt, jint maxCnt) {
  if (argCnt < minCnt || argCnt > maxCnt) {
    @throw FreemarkerCoreMessageUtil_newArgCntErrorWithNSString_withInt_withInt_withInt_(JreStrcat("C$", '?', self->key_), argCnt, minCnt, maxCnt);
  }
}


#line 401
NSString *FreemarkerCoreBuiltIn_getStringMethodArgWithJavaUtilList_withInt_(FreemarkerCoreBuiltIn *self, id<JavaUtilList> args, jint argIdx) {
  
#line 403
  id<FreemarkerTemplateTemplateModel> arg = (id<FreemarkerTemplateTemplateModel>) check_protocol_cast([((id<JavaUtilList>) nil_chk(args)) getWithInt:argIdx], @protocol(FreemarkerTemplateTemplateModel));
  if (!([FreemarkerTemplateTemplateScalarModel_class_() isInstance:arg])) {
    @throw FreemarkerCoreMessageUtil_newMethodArgMustBeStringExceptionWithNSString_withInt_withFreemarkerTemplateTemplateModel_(JreStrcat("C$", '?', self->key_), argIdx, arg);
  }
  else {
    
#line 407
    return FreemarkerCoreEvalUtil_modelToStringWithFreemarkerTemplateTemplateScalarModel_withFreemarkerCoreExpression_withFreemarkerCoreEnvironment_((id<FreemarkerTemplateTemplateScalarModel>) check_protocol_cast(arg, @protocol(FreemarkerTemplateTemplateScalarModel)), nil, nil);
  }
}

void FreemarkerCoreBuiltIn_init(FreemarkerCoreBuiltIn *self) {
  (void) FreemarkerCoreExpression_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltIn)
