//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/StringTemplateLoader.java
//


#include "J2ObjC_source.h"
#include "StringTemplateLoader.h"
#include "StringUtil.h"
#include "TemplateLoaderUtils.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/StringTemplateLoader.java"

@interface FreemarkerCacheStringTemplateLoader () {
 @public
  id<JavaUtilMap> templates_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerCacheStringTemplateLoader, templates_, id<JavaUtilMap>)

@interface FreemarkerCacheStringTemplateLoader_StringTemplateSource : NSObject {
 @public
  NSString *name_;
  NSString *source_;
  jlong lastModified_;
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)source
                        withLong:(jlong)lastModified;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCacheStringTemplateLoader_StringTemplateSource)

J2OBJC_FIELD_SETTER(FreemarkerCacheStringTemplateLoader_StringTemplateSource, name_, NSString *)
J2OBJC_FIELD_SETTER(FreemarkerCacheStringTemplateLoader_StringTemplateSource, source_, NSString *)

__attribute__((unused)) static void FreemarkerCacheStringTemplateLoader_StringTemplateSource_initWithNSString_withNSString_withLong_(FreemarkerCacheStringTemplateLoader_StringTemplateSource *self, NSString *name, NSString *source, jlong lastModified);

__attribute__((unused)) static FreemarkerCacheStringTemplateLoader_StringTemplateSource *new_FreemarkerCacheStringTemplateLoader_StringTemplateSource_initWithNSString_withNSString_withLong_(NSString *name, NSString *source, jlong lastModified) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCacheStringTemplateLoader_StringTemplateSource)


#line 60
@implementation FreemarkerCacheStringTemplateLoader


#line 70
- (void)putTemplateWithNSString:(NSString *)name
                   withNSString:(NSString *)templateSource {
  [self putTemplateWithNSString:name withNSString:templateSource withLong:JavaLangSystem_currentTimeMillis()];
}


#line 89
- (void)putTemplateWithNSString:(NSString *)name
                   withNSString:(NSString *)templateSource
                       withLong:(jlong)lastModified {
  (void) [((id<JavaUtilMap>) nil_chk(templates_)) putWithId:name withId:new_FreemarkerCacheStringTemplateLoader_StringTemplateSource_initWithNSString_withNSString_withLong_(name, templateSource, lastModified)];
}


#line 93
- (void)closeTemplateSourceWithId:(id)templateSource {
}

- (id)findTemplateSourceWithNSString:(NSString *)name {
  return [((id<JavaUtilMap>) nil_chk(templates_)) getWithId:name];
}

- (jlong)getLastModifiedWithId:(id)templateSource {
  return ((FreemarkerCacheStringTemplateLoader_StringTemplateSource *) nil_chk(((FreemarkerCacheStringTemplateLoader_StringTemplateSource *) check_class_cast(templateSource, [FreemarkerCacheStringTemplateLoader_StringTemplateSource class]))))->lastModified_;
}

- (JavaIoReader *)getReaderWithId:(id)templateSource
                     withNSString:(NSString *)encoding {
  return new_JavaIoStringReader_initWithNSString_(((FreemarkerCacheStringTemplateLoader_StringTemplateSource *) nil_chk(((FreemarkerCacheStringTemplateLoader_StringTemplateSource *) check_class_cast(templateSource, [FreemarkerCacheStringTemplateLoader_StringTemplateSource class]))))->source_);
}


#line 145
- (NSString *)description {
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  (void) [sb appendWithNSString:FreemarkerCacheTemplateLoaderUtils_getClassNameForToStringWithFreemarkerCacheTemplateLoader_(self)];
  (void) [sb appendWithNSString:@"(Map { "];
  jint cnt = 0;
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(templates_)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    cnt++;
    if (cnt != 1) {
      (void) [sb appendWithNSString:@", "];
    }
    if (cnt > 10) {
      (void) [sb appendWithNSString:@"..."];
      break;
    }
    (void) [sb appendWithNSString:FreemarkerTemplateUtilityStringUtil_jQuoteWithId_([it next])];
    (void) [sb appendWithNSString:@"=..."];
  }
  if (cnt != 0) {
    (void) [sb appendWithChar:' '];
  }
  (void) [sb appendWithNSString:@"})"];
  return [sb description];
}

- (instancetype)init {
  FreemarkerCacheStringTemplateLoader_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "putTemplateWithNSString:withNSString:", "putTemplate", "V", 0x1, NULL, NULL },
    { "putTemplateWithNSString:withNSString:withLong:", "putTemplate", "V", 0x1, NULL, NULL },
    { "closeTemplateSourceWithId:", "closeTemplateSource", "V", 0x1, NULL, NULL },
    { "findTemplateSourceWithNSString:", "findTemplateSource", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getLastModifiedWithId:", "getLastModified", "J", 0x1, NULL, NULL },
    { "getReaderWithId:withNSString:", "getReader", "Ljava.io.Reader;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "templates_", NULL, 0x12, "Ljava.util.Map;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lfreemarker.cache.StringTemplateLoader$StringTemplateSource;"};
  static const J2ObjcClassInfo _FreemarkerCacheStringTemplateLoader = { 2, "StringTemplateLoader", "freemarker.cache", NULL, 0x1, 8, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_FreemarkerCacheStringTemplateLoader;
}

@end

void FreemarkerCacheStringTemplateLoader_init(FreemarkerCacheStringTemplateLoader *self) {
  (void) NSObject_init(self);
  self->templates_ = new_JavaUtilHashMap_init();
}

FreemarkerCacheStringTemplateLoader *new_FreemarkerCacheStringTemplateLoader_init() {
  FreemarkerCacheStringTemplateLoader *self = [FreemarkerCacheStringTemplateLoader alloc];
  FreemarkerCacheStringTemplateLoader_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCacheStringTemplateLoader)


#line 108
@implementation FreemarkerCacheStringTemplateLoader_StringTemplateSource


#line 113
- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)source
                        withLong:(jlong)lastModified {
  FreemarkerCacheStringTemplateLoader_StringTemplateSource_initWithNSString_withNSString_withLong_(self, name, source, lastModified);
  return self;
}


#line 128
- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[FreemarkerCacheStringTemplateLoader_StringTemplateSource class]]) {
    return [((NSString *) nil_chk(name_)) isEqual:((FreemarkerCacheStringTemplateLoader_StringTemplateSource *) nil_chk(((FreemarkerCacheStringTemplateLoader_StringTemplateSource *) check_class_cast(obj, [FreemarkerCacheStringTemplateLoader_StringTemplateSource class]))))->name_];
  }
  return NO;
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(name_)) hash]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withLong:", "StringTemplateSource", NULL, 0x0, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL,  },
    { "source_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL,  },
    { "lastModified_", NULL, 0x12, "J", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCacheStringTemplateLoader_StringTemplateSource = { 2, "StringTemplateSource", "freemarker.cache", "StringTemplateLoader", 0xa, 3, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCacheStringTemplateLoader_StringTemplateSource;
}

@end


#line 113
void FreemarkerCacheStringTemplateLoader_StringTemplateSource_initWithNSString_withNSString_withLong_(FreemarkerCacheStringTemplateLoader_StringTemplateSource *self, NSString *name, NSString *source, jlong lastModified) {
  (void) NSObject_init(self);
  
#line 114
  if (name == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"name == null");
  }
  if (source == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"source == null");
  }
  if (lastModified < -1LL) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"lastModified < -1L");
  }
  self->name_ = name;
  self->source_ = source;
  self->lastModified_ = lastModified;
}


#line 113
FreemarkerCacheStringTemplateLoader_StringTemplateSource *new_FreemarkerCacheStringTemplateLoader_StringTemplateSource_initWithNSString_withNSString_withLong_(NSString *name, NSString *source, jlong lastModified) {
  FreemarkerCacheStringTemplateLoader_StringTemplateSource *self = [FreemarkerCacheStringTemplateLoader_StringTemplateSource alloc];
  FreemarkerCacheStringTemplateLoader_StringTemplateSource_initWithNSString_withNSString_withLong_(self, name, source, lastModified);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCacheStringTemplateLoader_StringTemplateSource)
