//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/ObjectConstructor.java
//


#include "BeansWrapper.h"
#include "ClassUtil.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "ObjectConstructor.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "java/lang/Exception.h"
#include "java/util/List.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/ObjectConstructor.java"


#line 38
@implementation FreemarkerTemplateUtilityObjectConstructor

- (id)execWithJavaUtilList:(id<JavaUtilList>)args {
  if ([((id<JavaUtilList>) nil_chk(args)) isEmpty]) {
    @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_(@"This method must have at least one argument, the name of the class to instantiate.");
  }
  NSString *classname = [nil_chk([args getWithInt:0]) description];
  IOSClass *cl = nil;
  @try {
    cl = FreemarkerTemplateUtilityClassUtil_forNameWithNSString_(classname);
  }
  @catch (JavaLangException *e) {
    @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_([((JavaLangException *) nil_chk(e)) getMessage]);
  }
  FreemarkerExtBeansBeansWrapper *bw = FreemarkerExtBeansBeansWrapper_getDefaultInstance();
  id obj = [((FreemarkerExtBeansBeansWrapper *) nil_chk(bw)) newInstanceWithIOSClass:cl withJavaUtilList:[args subListWithInt:1 withInt:[args size]]];
  return [bw wrapWithId:obj];
}

- (instancetype)init {
  FreemarkerTemplateUtilityObjectConstructor_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateUtilityObjectConstructor = { 2, "ObjectConstructor", "freemarker.template.utility", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateUtilityObjectConstructor;
}

@end

void FreemarkerTemplateUtilityObjectConstructor_init(FreemarkerTemplateUtilityObjectConstructor *self) {
  (void) NSObject_init(self);
}

FreemarkerTemplateUtilityObjectConstructor *new_FreemarkerTemplateUtilityObjectConstructor_init() {
  FreemarkerTemplateUtilityObjectConstructor *self = [FreemarkerTemplateUtilityObjectConstructor alloc];
  FreemarkerTemplateUtilityObjectConstructor_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateUtilityObjectConstructor)
