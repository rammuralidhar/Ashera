//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/ArrayModel.java
//


#include "ArrayModel.h"
#include "BeanModel.h"
#include "BeansWrapper.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "ModelFactory.h"
#include "ObjectWrapper.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "TemplateModelIterator.h"
#include "TemplateSequenceModel.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/reflect/Array.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/ArrayModel.java"

@interface FreemarkerExtBeansArrayModel () {
 @public
  jint length_;
}

@end

@interface FreemarkerExtBeansArrayModel_Iterator : NSObject < FreemarkerTemplateTemplateSequenceModel, FreemarkerTemplateTemplateModelIterator > {
 @public
  FreemarkerExtBeansArrayModel *this$0_;
  jint position_;
}

- (jboolean)hasNext;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index;

- (id<FreemarkerTemplateTemplateModel>)next;

- (jint)size;

- (instancetype)initWithFreemarkerExtBeansArrayModel:(FreemarkerExtBeansArrayModel *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerExtBeansArrayModel_Iterator)

J2OBJC_FIELD_SETTER(FreemarkerExtBeansArrayModel_Iterator, this$0_, FreemarkerExtBeansArrayModel *)

__attribute__((unused)) static void FreemarkerExtBeansArrayModel_Iterator_initWithFreemarkerExtBeansArrayModel_(FreemarkerExtBeansArrayModel_Iterator *self, FreemarkerExtBeansArrayModel *outer$);

__attribute__((unused)) static FreemarkerExtBeansArrayModel_Iterator *new_FreemarkerExtBeansArrayModel_Iterator_initWithFreemarkerExtBeansArrayModel_(FreemarkerExtBeansArrayModel *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansArrayModel_Iterator)

@interface FreemarkerExtBeansArrayModel_$1 : NSObject < FreemarkerExtUtilModelFactory >

- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerExtBeansArrayModel_$1)

__attribute__((unused)) static void FreemarkerExtBeansArrayModel_$1_init(FreemarkerExtBeansArrayModel_$1 *self);

__attribute__((unused)) static FreemarkerExtBeansArrayModel_$1 *new_FreemarkerExtBeansArrayModel_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansArrayModel_$1)

J2OBJC_INITIALIZED_DEFN(FreemarkerExtBeansArrayModel)

id<FreemarkerExtUtilModelFactory> FreemarkerExtBeansArrayModel_FACTORY_;


#line 34
@implementation FreemarkerExtBeansArrayModel


#line 62
- (instancetype)initWithId:(id)array
withFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)wrapper {
  FreemarkerExtBeansArrayModel_initWithId_withFreemarkerExtBeansBeansWrapper_(self, array, wrapper);
  return self;
}


#line 72
- (id<FreemarkerTemplateTemplateModelIterator>)iterator {
  
#line 74
  return new_FreemarkerExtBeansArrayModel_Iterator_initWithFreemarkerExtBeansArrayModel_(self);
}


#line 77
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 81
  @try {
    
#line 83
    return [self wrapWithId:JavaLangReflectArray_getWithId_withInt_(object_, index)];
  }
  @catch (JavaLangIndexOutOfBoundsException *e) {
    
#line 87
    return nil;
  }
}


#line 124
- (jint)size {
  
#line 126
  return length_;
}


#line 129
- (jboolean)isEmpty {
  return length_ == 0;
}

+ (void)initialize {
  if (self == [FreemarkerExtBeansArrayModel class]) {
    FreemarkerExtBeansArrayModel_FACTORY_ = new_FreemarkerExtBeansArrayModel_$1_init();
    J2OBJC_SET_INITIALIZED(FreemarkerExtBeansArrayModel)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withFreemarkerExtBeansBeansWrapper:", "ArrayModel", NULL, 0x1, NULL, NULL },
    { "iterator", NULL, "Lfreemarker.template.TemplateModelIterator;", 0x1, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FACTORY_", NULL, 0x18, "Lfreemarker.ext.util.ModelFactory;", &FreemarkerExtBeansArrayModel_FACTORY_, NULL,  },
    { "length_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lfreemarker.ext.beans.ArrayModel$Iterator;"};
  static const J2ObjcClassInfo _FreemarkerExtBeansArrayModel = { 2, "ArrayModel", "freemarker.ext.beans", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_FreemarkerExtBeansArrayModel;
}

@end


#line 62
void FreemarkerExtBeansArrayModel_initWithId_withFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansArrayModel *self, id array, FreemarkerExtBeansBeansWrapper *wrapper) {
  (void) FreemarkerExtBeansBeanModel_initWithId_withFreemarkerExtBeansBeansWrapper_(self,
#line 64
  array, wrapper);
  IOSClass *clazz = [nil_chk(array) getClass];
  if (![clazz isArray])
#line 67
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Object is not an array, it's ", [[array getClass] getName]));
  self->length_ = JavaLangReflectArray_getLengthWithId_(array);
}


#line 62
FreemarkerExtBeansArrayModel *new_FreemarkerExtBeansArrayModel_initWithId_withFreemarkerExtBeansBeansWrapper_(id array, FreemarkerExtBeansBeansWrapper *wrapper) {
  FreemarkerExtBeansArrayModel *self = [FreemarkerExtBeansArrayModel alloc];
  FreemarkerExtBeansArrayModel_initWithId_withFreemarkerExtBeansBeansWrapper_(self, array, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansArrayModel)


#line 92
@implementation FreemarkerExtBeansArrayModel_Iterator


#line 99
- (jboolean)hasNext {
  
#line 101
  return position_ < this$0_->length_;
}


#line 104
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 108
  return [this$0_ getWithInt:index];
}


#line 111
- (id<FreemarkerTemplateTemplateModel>)next {
  
#line 115
  return position_ < this$0_->length_ ? [self getWithInt:position_++] : nil;
}


#line 118
- (jint)size {
  
#line 120
  return [this$0_ size];
}

- (instancetype)initWithFreemarkerExtBeansArrayModel:(FreemarkerExtBeansArrayModel *)outer$ {
  FreemarkerExtBeansArrayModel_Iterator_initWithFreemarkerExtBeansArrayModel_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "next", NULL, "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "initWithFreemarkerExtBeansArrayModel:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.ext.beans.ArrayModel;", NULL, NULL,  },
    { "position_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansArrayModel_Iterator = { 2, "Iterator", "freemarker.ext.beans", "ArrayModel", 0x2, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansArrayModel_Iterator;
}

@end

void FreemarkerExtBeansArrayModel_Iterator_initWithFreemarkerExtBeansArrayModel_(FreemarkerExtBeansArrayModel_Iterator *self, FreemarkerExtBeansArrayModel *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  self->position_ =
#line 97
  0;
}

FreemarkerExtBeansArrayModel_Iterator *new_FreemarkerExtBeansArrayModel_Iterator_initWithFreemarkerExtBeansArrayModel_(FreemarkerExtBeansArrayModel *outer$) {
  FreemarkerExtBeansArrayModel_Iterator *self = [FreemarkerExtBeansArrayModel_Iterator alloc];
  FreemarkerExtBeansArrayModel_Iterator_initWithFreemarkerExtBeansArrayModel_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansArrayModel_Iterator)

@implementation FreemarkerExtBeansArrayModel_$1


#line 44
- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  
#line 46
  return new_FreemarkerExtBeansArrayModel_initWithId_withFreemarkerExtBeansBeansWrapper_(object, (FreemarkerExtBeansBeansWrapper *) check_class_cast(wrapper, [FreemarkerExtBeansBeansWrapper class]));
}

- (instancetype)init {
  FreemarkerExtBeansArrayModel_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createWithId:withFreemarkerTemplateObjectWrapper:", "create", "Lfreemarker.template.TemplateModel;", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansArrayModel_$1 = { 2, "", "freemarker.ext.beans", "ArrayModel", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansArrayModel_$1;
}

@end

void FreemarkerExtBeansArrayModel_$1_init(FreemarkerExtBeansArrayModel_$1 *self) {
  (void) NSObject_init(self);
}

FreemarkerExtBeansArrayModel_$1 *new_FreemarkerExtBeansArrayModel_$1_init() {
  FreemarkerExtBeansArrayModel_$1 *self = [FreemarkerExtBeansArrayModel_$1 alloc];
  FreemarkerExtBeansArrayModel_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansArrayModel_$1)
