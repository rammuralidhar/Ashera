//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/Token.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "Token.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/Token.java"

#define FreemarkerCoreToken_serialVersionUID 1LL

J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreToken, serialVersionUID, jlong)


#line 9
@implementation FreemarkerCoreToken


#line 71
- (id)getValue {
  return nil;
}


#line 78
- (instancetype)init {
  FreemarkerCoreToken_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)kind {
  FreemarkerCoreToken_initWithInt_(self, kind);
  return self;
}


#line 91
- (instancetype)initWithInt:(jint)kind
               withNSString:(NSString *)image {
  FreemarkerCoreToken_initWithInt_withNSString_(self, kind, image);
  return self;
}


#line 100
- (NSString *)description {
  
#line 102
  return image_;
}


#line 117
+ (FreemarkerCoreToken *)newTokenWithInt:(jint)ofKind
                            withNSString:(NSString *)image {
  return FreemarkerCoreToken_newTokenWithInt_withNSString_(ofKind, image);
}


#line 125
+ (FreemarkerCoreToken *)newTokenWithInt:(jint)ofKind {
  return FreemarkerCoreToken_newTokenWithInt_(ofKind);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "init", "Token", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "Token", NULL, 0x1, NULL, NULL },
    { "initWithInt:withNSString:", "Token", NULL, 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "newTokenWithInt:withNSString:", "newToken", "Lfreemarker.core.Token;", 0x9, NULL, NULL },
    { "newTokenWithInt:", "newToken", "Lfreemarker.core.Token;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = FreemarkerCoreToken_serialVersionUID },
    { "kind_", NULL, 0x1, "I", NULL, NULL,  },
    { "beginLine_", NULL, 0x1, "I", NULL, NULL,  },
    { "beginColumn_", NULL, 0x1, "I", NULL, NULL,  },
    { "endLine_", NULL, 0x1, "I", NULL, NULL,  },
    { "endColumn_", NULL, 0x1, "I", NULL, NULL,  },
    { "image_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL,  },
    { "next_", NULL, 0x1, "Lfreemarker.core.Token;", NULL, NULL,  },
    { "specialToken_", NULL, 0x1, "Lfreemarker.core.Token;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreToken = { 2, "Token", "freemarker.core", NULL, 0x1, 7, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreToken;
}

@end


#line 78
void FreemarkerCoreToken_init(FreemarkerCoreToken *self) {
  (void) NSObject_init(self);
}


#line 78
FreemarkerCoreToken *new_FreemarkerCoreToken_init() {
  FreemarkerCoreToken *self = [FreemarkerCoreToken alloc];
  FreemarkerCoreToken_init(self);
  return self;
}


#line 83
void FreemarkerCoreToken_initWithInt_(FreemarkerCoreToken *self, jint kind) {
  (void) FreemarkerCoreToken_initWithInt_withNSString_(self,
#line 85
  kind, nil);
}


#line 83
FreemarkerCoreToken *new_FreemarkerCoreToken_initWithInt_(jint kind) {
  FreemarkerCoreToken *self = [FreemarkerCoreToken alloc];
  FreemarkerCoreToken_initWithInt_(self, kind);
  return self;
}


#line 91
void FreemarkerCoreToken_initWithInt_withNSString_(FreemarkerCoreToken *self, jint kind, NSString *image) {
  (void) NSObject_init(self);
  self->kind_ = kind;
  self->image_ = image;
}


#line 91
FreemarkerCoreToken *new_FreemarkerCoreToken_initWithInt_withNSString_(jint kind, NSString *image) {
  FreemarkerCoreToken *self = [FreemarkerCoreToken alloc];
  FreemarkerCoreToken_initWithInt_withNSString_(self, kind, image);
  return self;
}


#line 117
FreemarkerCoreToken *FreemarkerCoreToken_newTokenWithInt_withNSString_(jint ofKind, NSString *image) {
  FreemarkerCoreToken_initialize();
  switch (ofKind) {
    
#line 121
    default:
    
#line 121
    return new_FreemarkerCoreToken_initWithInt_withNSString_(ofKind, image);
  }
}


#line 125
FreemarkerCoreToken *FreemarkerCoreToken_newTokenWithInt_(jint ofKind) {
  FreemarkerCoreToken_initialize();
  return FreemarkerCoreToken_newTokenWithInt_withNSString_(ofKind, nil);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreToken)
