//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/SimpleScalar.java
//

#ifndef _FreemarkerTemplateSimpleScalar_H_
#define _FreemarkerTemplateSimpleScalar_H_

#include "J2ObjC_header.h"
#include "TemplateScalarModel.h"
#include "java/io/Serializable.h"

/**
 @brief A simple implementation of the <tt>TemplateScalarModel</tt> interface, using a <tt>String</tt>.
 As of version 2.0 this object is immutable. <p>This class is thread-safe.
 */
@interface FreemarkerTemplateSimpleScalar : NSObject < FreemarkerTemplateTemplateScalarModel, JavaIoSerializable >

#pragma mark Public

/**
 @brief Constructs a <tt>SimpleScalar</tt> containing a string value.
 @param value the string value. If this is <code>null</code> , its value in FTL will be <code>""</code> .
 */
- (instancetype)initWithNSString:(NSString *)value;

- (NSString *)getAsString;

/**
 @brief Same as calling the constructor, except that for a <code>null</code> parameter it returns null.
 @since 2.3.23
 */
+ (FreemarkerTemplateSimpleScalar *)newInstanceOrNullWithNSString:(NSString *)s OBJC_METHOD_FAMILY_NONE;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateSimpleScalar)

FOUNDATION_EXPORT void FreemarkerTemplateSimpleScalar_initWithNSString_(FreemarkerTemplateSimpleScalar *self, NSString *value);

FOUNDATION_EXPORT FreemarkerTemplateSimpleScalar *new_FreemarkerTemplateSimpleScalar_initWithNSString_(NSString *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT FreemarkerTemplateSimpleScalar *FreemarkerTemplateSimpleScalar_newInstanceOrNullWithNSString_(NSString *s);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateSimpleScalar)

#endif // _FreemarkerTemplateSimpleScalar_H_
