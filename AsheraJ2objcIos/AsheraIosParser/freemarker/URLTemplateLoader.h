//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/URLTemplateLoader.java
//

#ifndef _FreemarkerCacheURLTemplateLoader_H_
#define _FreemarkerCacheURLTemplateLoader_H_

#include "J2ObjC_header.h"
#include "TemplateLoader.h"

@class JavaIoReader;
@class JavaLangBoolean;
@class JavaNetURL;

/**
 @brief This is an abstract template loader that can load templates whose location can be described by an URL.
 Subclasses only need to override the #getURL(String) method. Both ClassTemplateLoader and WebappTemplateLoader are (quite trivial) subclasses of this class.
 */
@interface FreemarkerCacheURLTemplateLoader : NSObject < FreemarkerCacheTemplateLoader >

#pragma mark Public

- (instancetype)init;

- (void)closeTemplateSourceWithId:(id)templateSource;

- (id)findTemplateSourceWithNSString:(NSString *)name;

- (jlong)getLastModifiedWithId:(id)templateSource;

- (JavaIoReader *)getReaderWithId:(id)templateSource
                     withNSString:(NSString *)encoding;

/**
 @brief Getter pair of #setURLConnectionUsesCaches(Boolean) .
 @since 2.3.21
 */
- (JavaLangBoolean *)getURLConnectionUsesCaches;

/**
 @brief Sets if URLConnection#setUseCaches(boolean) will be called, and with what value.
 By default this is <code>null</code> ; see the behavior then below. The recommended value is <code>false</code> , so that FreeMarker can always reliably detect when a template was changed. The default is <code>null</code> only for backward compatibility, and certainly will be changed to <code>false</code> in 2.4.0. As FreeMarker has its own template cache with its own update delay setting ( Configuration#setTemplateUpdateDelay(int) ), setting this to <code>false</code> shouldn't cause performance problems. <p>Regarding <code>null</code> value: By default then URLConnection#setUseCaches(boolean) won't be called, and so the default of the URLConnection subclass will be in effect (usually <code>true</code> ). That's the 2.3.0-compatible mode. However, if Configuration#getIncompatibleImprovements() is at least 2.3.21, then when <code>Configuration.getTemplate</code> is used, <code>null</code> will mean <code>false</code> . Note that this 2.3.21 trick only works if the template is loaded through <code>Configuration.getTemplate</code> (or TemplateCache ).
 @since 2.3.21
 */
- (void)setURLConnectionUsesCachesWithJavaLangBoolean:(JavaLangBoolean *)urlConnectionUsesCaches;

#pragma mark Protected

/**
 @brief Can be used by subclasses to canonicalize URL path prefixes.
 @param prefix the path prefix to canonicalize
 @return the canonicalized prefix. All backslashes are replaced with forward slashes, and a trailing slash is appended if the original prefix wasn't empty and didn't already end with a slash.
 */
+ (NSString *)canonicalizePrefixWithNSString:(NSString *)prefix;

/**
 @brief Given a template name (plus potential locale decorations) retrieves an URL that points the template source.
 @param name the name of the sought template, including the locale decorations.
 @return an URL that points to the template source, or null if it can determine that the template source does not exist.
 */
- (JavaNetURL *)getURLWithNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCacheURLTemplateLoader)

FOUNDATION_EXPORT NSString *FreemarkerCacheURLTemplateLoader_canonicalizePrefixWithNSString_(NSString *prefix);

FOUNDATION_EXPORT void FreemarkerCacheURLTemplateLoader_init(FreemarkerCacheURLTemplateLoader *self);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCacheURLTemplateLoader)

#endif // _FreemarkerCacheURLTemplateLoader_H_
