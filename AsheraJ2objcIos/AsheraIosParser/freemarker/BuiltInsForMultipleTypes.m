//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/BuiltInsForMultipleTypes.java
//


#include "APINotSupportedTemplateException.h"
#include "BeanModel.h"
#include "BugException.h"
#include "BuiltIn.h"
#include "BuiltInsForMultipleTypes.h"
#include "Configurable.h"
#include "Environment.h"
#include "EvalUtil.h"
#include "Expression.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Macro.h"
#include "MessageUtil.h"
#include "MiscUtil.h"
#include "OverloadedMethodsModel.h"
#include "SimpleDate.h"
#include "SimpleMethodModel.h"
#include "SimpleNumber.h"
#include "SimpleScalar.h"
#include "TemplateBooleanModel.h"
#include "TemplateCollectionModel.h"
#include "TemplateCollectionModelEx.h"
#include "TemplateDateFormat.h"
#include "TemplateDateModel.h"
#include "TemplateDirectiveModel.h"
#include "TemplateException.h"
#include "TemplateHashModel.h"
#include "TemplateHashModelEx.h"
#include "TemplateMethodModel.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "TemplateModelWithAPISupport.h"
#include "TemplateNodeModel.h"
#include "TemplateNumberModel.h"
#include "TemplateScalarModel.h"
#include "TemplateSequenceModel.h"
#include "TemplateTransformModel.h"
#include "UnexpectedTypeException.h"
#include "UnformattableDateException.h"
#include "_BeansAPI.h"
#include "_DelayedJQuote.h"
#include "_MiscTemplateException.h"
#include "_TemplateAPI.h"
#include "_TemplateModelException.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/text/NumberFormat.h"
#include "java/text/ParseException.h"
#include "java/util/Date.h"
#include "java/util/List.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/BuiltInsForMultipleTypes.java"

@interface FreemarkerCoreBuiltInsForMultipleTypes ()

- (instancetype)init;

@end

__attribute__((unused)) static void FreemarkerCoreBuiltInsForMultipleTypes_init(FreemarkerCoreBuiltInsForMultipleTypes *self);

__attribute__((unused)) static FreemarkerCoreBuiltInsForMultipleTypes *new_FreemarkerCoreBuiltInsForMultipleTypes_init() NS_RETURNS_RETAINED;

@interface FreemarkerCoreBuiltInsForMultipleTypes_cBI () {
 @public
  FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21 *prevICIObj_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_cBI, prevICIObj_, FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21 *)

@interface FreemarkerCoreBuiltInsForMultipleTypes_dateBI () {
 @public
  jint dateType_;
}

@end

@interface FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser : NSObject < FreemarkerTemplateTemplateDateModel, FreemarkerTemplateTemplateMethodModel, FreemarkerTemplateTemplateHashModel > {
 @public
  FreemarkerCoreBuiltInsForMultipleTypes_dateBI *this$0_;
  NSString *text_;
  FreemarkerCoreEnvironment *env_;
  FreemarkerCoreTemplateDateFormat *defaultFormat_;
  JavaUtilDate *cachedValue_;
}

- (instancetype)initWithFreemarkerCoreBuiltInsForMultipleTypes_dateBI:(FreemarkerCoreBuiltInsForMultipleTypes_dateBI *)outer$
                                                         withNSString:(NSString *)text
                                        withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

- (id)execWithJavaUtilList:(id<JavaUtilList>)args;

- (id<FreemarkerTemplateTemplateModel>)getWithNSString:(NSString *)pattern;

- (JavaUtilDate *)getAsDate;

- (jint)getDateType;

- (jboolean)isEmpty;

- (JavaUtilDate *)parseWithFreemarkerCoreTemplateDateFormat:(FreemarkerCoreTemplateDateFormat *)df;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser, this$0_, FreemarkerCoreBuiltInsForMultipleTypes_dateBI *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser, text_, NSString *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser, env_, FreemarkerCoreEnvironment *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser, defaultFormat_, FreemarkerCoreTemplateDateFormat *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser, cachedValue_, JavaUtilDate *)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser_initWithFreemarkerCoreBuiltInsForMultipleTypes_dateBI_withNSString_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser *self, FreemarkerCoreBuiltInsForMultipleTypes_dateBI *outer$, NSString *text, FreemarkerCoreEnvironment *env);

__attribute__((unused)) static FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser *new_FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser_initWithFreemarkerCoreBuiltInsForMultipleTypes_dateBI_withNSString_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_dateBI *outer$, NSString *text, FreemarkerCoreEnvironment *env) NS_RETURNS_RETAINED;

__attribute__((unused)) static JavaUtilDate *FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser_parseWithFreemarkerCoreTemplateDateFormat_(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser *self, FreemarkerCoreTemplateDateFormat *df);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser)

@interface FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI () {
 @public
  jint dateType_;
}

@end

@interface FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter : NSObject < FreemarkerTemplateTemplateScalarModel, FreemarkerTemplateTemplateMethodModel > {
 @public
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI *this$0_;
  id<FreemarkerTemplateTemplateBooleanModel> bool__;
  FreemarkerCoreEnvironment *env_;
}

- (instancetype)initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI:(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *)outer$
                             withFreemarkerTemplateTemplateBooleanModel:(id<FreemarkerTemplateTemplateBooleanModel>)bool_
                                          withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

- (id)execWithJavaUtilList:(id<JavaUtilList>)args;

- (NSString *)getAsString;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter, this$0_, FreemarkerCoreBuiltInsForMultipleTypes_stringBI *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter, bool__, id<FreemarkerTemplateTemplateBooleanModel>)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter, env_, FreemarkerCoreEnvironment *)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateBooleanModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter *self, FreemarkerCoreBuiltInsForMultipleTypes_stringBI *outer$, id<FreemarkerTemplateTemplateBooleanModel> bool_, FreemarkerCoreEnvironment *env);

__attribute__((unused)) static FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter *new_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateBooleanModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *outer$, id<FreemarkerTemplateTemplateBooleanModel> bool_, FreemarkerCoreEnvironment *env) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter)

@interface FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter : NSObject < FreemarkerTemplateTemplateScalarModel, FreemarkerTemplateTemplateHashModel, FreemarkerTemplateTemplateMethodModel > {
 @public
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI *this$0_;
  id<FreemarkerTemplateTemplateDateModel> dateModel_;
  FreemarkerCoreEnvironment *env_;
  FreemarkerCoreTemplateDateFormat *defaultFormat_;
  NSString *cachedValue_;
}

- (instancetype)initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI:(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *)outer$
                                withFreemarkerTemplateTemplateDateModel:(id<FreemarkerTemplateTemplateDateModel>)dateModel
                                          withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

- (id)execWithJavaUtilList:(id<JavaUtilList>)args;

- (id<FreemarkerTemplateTemplateModel>)getWithNSString:(NSString *)key;

- (NSString *)getAsString;

- (jboolean)isEmpty;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter, this$0_, FreemarkerCoreBuiltInsForMultipleTypes_stringBI *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter, dateModel_, id<FreemarkerTemplateTemplateDateModel>)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter, env_, FreemarkerCoreEnvironment *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter, defaultFormat_, FreemarkerCoreTemplateDateFormat *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter, cachedValue_, NSString *)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateDateModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter *self, FreemarkerCoreBuiltInsForMultipleTypes_stringBI *outer$, id<FreemarkerTemplateTemplateDateModel> dateModel, FreemarkerCoreEnvironment *env);

__attribute__((unused)) static FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter *new_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateDateModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *outer$, id<FreemarkerTemplateTemplateDateModel> dateModel, FreemarkerCoreEnvironment *env) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter)

@interface FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter : NSObject < FreemarkerTemplateTemplateScalarModel, FreemarkerTemplateTemplateHashModel, FreemarkerTemplateTemplateMethodModel > {
 @public
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI *this$0_;
  NSNumber *number_;
  FreemarkerCoreEnvironment *env_;
  JavaTextNumberFormat *defaultFormat_;
  NSString *cachedValue_;
}

- (instancetype)initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI:(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *)outer$
                                                           withNSNumber:(NSNumber *)number
                                          withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

- (id)execWithJavaUtilList:(id<JavaUtilList>)args;

- (id<FreemarkerTemplateTemplateModel>)getWithNSString:(NSString *)key;

- (NSString *)getAsString;

- (jboolean)isEmpty;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter, this$0_, FreemarkerCoreBuiltInsForMultipleTypes_stringBI *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter, number_, NSNumber *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter, env_, FreemarkerCoreEnvironment *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter, defaultFormat_, JavaTextNumberFormat *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter, cachedValue_, NSString *)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withNSNumber_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter *self, FreemarkerCoreBuiltInsForMultipleTypes_stringBI *outer$, NSNumber *number, FreemarkerCoreEnvironment *env);

__attribute__((unused)) static FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter *new_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withNSNumber_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *outer$, NSNumber *number, FreemarkerCoreEnvironment *env) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter)


#line 52
@implementation FreemarkerCoreBuiltInsForMultipleTypes


#line 625
- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "BuiltInsForMultipleTypes", NULL, 0x2, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForMultipleTypes$cBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$dateBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$apiBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$has_apiBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_booleanBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_collectionBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_collection_exBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_dateLikeBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_dateOfTypeBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_directiveBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_enumerableBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_hash_exBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_hashBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_indexableBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_macroBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_methodBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_nodeBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_numberBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_sequenceBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_stringBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$is_transformBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$namespaceBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$sizeBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$stringBI;", "Lfreemarker.core.BuiltInsForMultipleTypes$AbstractCBI;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes = { 2, "BuiltInsForMultipleTypes", "freemarker.core", NULL, 0x0, 1, methods, 0, NULL, 0, NULL, 25, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes;
}

@end


#line 625
void FreemarkerCoreBuiltInsForMultipleTypes_init(FreemarkerCoreBuiltInsForMultipleTypes *self) {
  (void) NSObject_init(self);
}


#line 625
FreemarkerCoreBuiltInsForMultipleTypes *new_FreemarkerCoreBuiltInsForMultipleTypes_init() {
  FreemarkerCoreBuiltInsForMultipleTypes *self = [FreemarkerCoreBuiltInsForMultipleTypes alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes)


#line 627
@implementation FreemarkerCoreBuiltInsForMultipleTypes_AbstractCBI

- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> model = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  if ([FreemarkerTemplateTemplateNumberModel_class_() isInstance:model]) {
    return [self formatNumberWithFreemarkerCoreEnvironment:env withFreemarkerTemplateTemplateModel:model];
  }
  else
#line 633
  if ([FreemarkerTemplateTemplateBooleanModel_class_() isInstance:model]) {
    return new_FreemarkerTemplateSimpleScalar_initWithNSString_([((id<FreemarkerTemplateTemplateBooleanModel>) nil_chk(((id<FreemarkerTemplateTemplateBooleanModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateBooleanModel))))) getAsBoolean] ? FreemarkerCoreMiscUtil_get_C_TRUE_() : FreemarkerCoreMiscUtil_get_C_FALSE_());
  }
  else {
    @throw new_FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withIOSClassArray_withFreemarkerCoreEnvironment_(
#line 638
    target_, model,
#line 639
    @"number or boolean", [IOSObjectArray newArrayWithObjects:(id[]){ FreemarkerTemplateTemplateNumberModel_class_(), FreemarkerTemplateTemplateBooleanModel_class_() } count:2 type:IOSClass_class_()],
#line 640
    env);
  }
}


#line 644
- (id<FreemarkerTemplateTemplateModel>)formatNumberWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env
                                             withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_AbstractCBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "formatNumberWithFreemarkerCoreEnvironment:withFreemarkerTemplateTemplateModel:", "formatNumber", "Lfreemarker.template.TemplateModel;", 0x404, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_AbstractCBI = { 2, "AbstractCBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x408, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_AbstractCBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_AbstractCBI_init(FreemarkerCoreBuiltInsForMultipleTypes_AbstractCBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_AbstractCBI)


#line 54
@implementation FreemarkerCoreBuiltInsForMultipleTypes_cBI


#line 72
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> model = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  if ([FreemarkerTemplateTemplateNumberModel_class_() isInstance:model]) {
    return [self formatNumberWithFreemarkerCoreEnvironment:env withFreemarkerTemplateTemplateModel:model];
  }
  else
#line 76
  if ([FreemarkerTemplateTemplateBooleanModel_class_() isInstance:model]) {
    return new_FreemarkerTemplateSimpleScalar_initWithNSString_([((id<FreemarkerTemplateTemplateBooleanModel>) nil_chk(((id<FreemarkerTemplateTemplateBooleanModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateBooleanModel))))) getAsBoolean] ? FreemarkerCoreMiscUtil_get_C_TRUE_() : FreemarkerCoreMiscUtil_get_C_FALSE_());
  }
  else {
    @throw new_FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withIOSClassArray_withFreemarkerCoreEnvironment_(
#line 81
    target_, model,
#line 82
    @"number or boolean", [IOSObjectArray newArrayWithObjects:(id[]){ FreemarkerTemplateTemplateNumberModel_class_(), FreemarkerTemplateTemplateBooleanModel_class_() } count:2 type:IOSClass_class_()],
#line 83
    env);
  }
}


#line 87
- (id<FreemarkerTemplateTemplateModel>)formatNumberWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env
                                             withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model {
  NSNumber *num = FreemarkerCoreEvalUtil_modelToNumberWithFreemarkerTemplateTemplateNumberModel_withFreemarkerCoreExpression_((id<FreemarkerTemplateTemplateNumberModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateNumberModel)), target_);
  if ([num isKindOfClass:[JavaLangInteger class]] || [num isKindOfClass:[JavaLangLong class]]) {
    
#line 91
    return new_FreemarkerTemplateSimpleScalar_initWithNSString_([((NSNumber *) nil_chk(num)) description]);
  }
  else
#line 92
  if ([num isKindOfClass:[JavaLangDouble class]]) {
    jdouble n = [((NSNumber *) nil_chk(num)) doubleValue];
    if (n == JavaLangDouble_POSITIVE_INFINITY) {
      return new_FreemarkerTemplateSimpleScalar_initWithNSString_(@"INF");
    }
    if (n == JavaLangDouble_NEGATIVE_INFINITY) {
      return new_FreemarkerTemplateSimpleScalar_initWithNSString_(@"-INF");
    }
    if (JavaLangDouble_isNaNWithDouble_(n)) {
      return new_FreemarkerTemplateSimpleScalar_initWithNSString_(@"NaN");
    }
  }
  else if ([num isKindOfClass:[JavaLangFloat class]]) {
    jfloat n = [((NSNumber *) nil_chk(num)) floatValue];
    if (n == JavaLangFloat_POSITIVE_INFINITY) {
      return new_FreemarkerTemplateSimpleScalar_initWithNSString_(@"INF");
    }
    if (n == JavaLangFloat_NEGATIVE_INFINITY) {
      return new_FreemarkerTemplateSimpleScalar_initWithNSString_(@"-INF");
    }
    if (JavaLangFloat_isNaNWithFloat_(n)) {
      return new_FreemarkerTemplateSimpleScalar_initWithNSString_(@"NaN");
    }
  }
  
#line 118
  return new_FreemarkerTemplateSimpleScalar_initWithNSString_([((JavaTextNumberFormat *) nil_chk([((FreemarkerCoreEnvironment *) nil_chk(env)) getCNumberFormat])) formatWithId:num]);
}


#line 121
- (jint)getMinimumICIVersion {
  return FreemarkerTemplate_TemplateAPI_get_VERSION_INT_2_3_21_();
}

- (id)getPreviousICIChainMember {
  return prevICIObj_;
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_cBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "formatNumberWithFreemarkerCoreEnvironment:withFreemarkerTemplateTemplateModel:", "formatNumber", "Lfreemarker.template.TemplateModel;", 0x4, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getMinimumICIVersion", NULL, "I", 0x1, NULL, NULL },
    { "getPreviousICIChainMember", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "prevICIObj_", NULL, 0x12, "Lfreemarker.core.BuiltInsForMultipleTypes$cBI$BIBeforeICE2d3d21;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForMultipleTypes$cBI$BIBeforeICE2d3d21;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_cBI = { 2, "cBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 5, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_cBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_cBI_init(FreemarkerCoreBuiltInsForMultipleTypes_cBI *self) {
  (void) FreemarkerCoreBuiltInsForMultipleTypes_AbstractCBI_init(self);
  self->prevICIObj_ = new_FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21_init();
}

FreemarkerCoreBuiltInsForMultipleTypes_cBI *new_FreemarkerCoreBuiltInsForMultipleTypes_cBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_cBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_cBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_cBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_cBI)


#line 56
@implementation FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21

- (id<FreemarkerTemplateTemplateModel>)formatNumberWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env
                                             withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model {
  NSNumber *num = FreemarkerCoreEvalUtil_modelToNumberWithFreemarkerTemplateTemplateNumberModel_withFreemarkerCoreExpression_((id<FreemarkerTemplateTemplateNumberModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateNumberModel)), target_);
  if ([num isKindOfClass:[JavaLangInteger class]] || [num isKindOfClass:[JavaLangLong class]]) {
    
#line 62
    return new_FreemarkerTemplateSimpleScalar_initWithNSString_([((NSNumber *) nil_chk(num)) description]);
  }
  else {
    
#line 64
    return new_FreemarkerTemplateSimpleScalar_initWithNSString_([((JavaTextNumberFormat *) nil_chk([((FreemarkerCoreEnvironment *) nil_chk(env)) getCNumberFormat])) formatWithId:num]);
  }
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "formatNumberWithFreemarkerCoreEnvironment:withFreemarkerTemplateTemplateModel:", "formatNumber", "Lfreemarker.template.TemplateModel;", 0x4, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21 = { 2, "BIBeforeICE2d3d21", "freemarker.core", "BuiltInsForMultipleTypes$cBI", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21_init(FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21 *self) {
  (void) FreemarkerCoreBuiltInsForMultipleTypes_AbstractCBI_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21 *new_FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21 *self = [FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21 alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_cBI_BIBeforeICE2d3d21)


#line 131
@implementation FreemarkerCoreBuiltInsForMultipleTypes_dateBI


#line 201
- (instancetype)initWithInt:(jint)dateType {
  FreemarkerCoreBuiltInsForMultipleTypes_dateBI_initWithInt_(self, dateType);
  return self;
}


#line 205
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  
#line 208
  id<FreemarkerTemplateTemplateModel> model = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  if ([FreemarkerTemplateTemplateDateModel_class_() isInstance:model]) {
    id<FreemarkerTemplateTemplateDateModel> dmodel = (id<FreemarkerTemplateTemplateDateModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateDateModel));
    jint dtype = [((id<FreemarkerTemplateTemplateDateModel>) nil_chk(dmodel)) getDateType];
    
#line 213
    if (dateType_ == dtype) {
      return model;
    }
    
#line 217
    if (dtype == FreemarkerTemplateTemplateDateModel_UNKNOWN || dtype == FreemarkerTemplateTemplateDateModel_DATETIME) {
      return new_FreemarkerTemplateSimpleDate_initWithJavaUtilDate_withInt_([dmodel getAsDate], dateType_);
    }
    @throw new_FreemarkerCore_MiscTemplateException_initWithFreemarkerCoreExpression_withNSObjectArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){
#line 221
      @"Cannot convert ", [((id<JavaUtilList>) nil_chk(FreemarkerTemplateTemplateDateModel_get_TYPE_NAMES_())) getWithInt:dtype],
#line 222
      @" to ", [FreemarkerTemplateTemplateDateModel_get_TYPE_NAMES_() getWithInt:dateType_] } count:4 type:NSObject_class_()]);
    }
    
#line 226
    NSString *s = [target_ evalAndCoerceToStringWithFreemarkerCoreEnvironment:env];
    return new_FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser_initWithFreemarkerCoreBuiltInsForMultipleTypes_dateBI_withNSString_withFreemarkerCoreEnvironment_(self, s, env);
  }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "dateBI", NULL, 0x0, NULL, NULL },
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dateType_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForMultipleTypes$dateBI$DateParser;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_dateBI = { 2, "dateBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_dateBI;
}

@end


#line 201
void FreemarkerCoreBuiltInsForMultipleTypes_dateBI_initWithInt_(FreemarkerCoreBuiltInsForMultipleTypes_dateBI *self, jint dateType) {
  (void) FreemarkerCoreBuiltIn_init(self);
  
#line 202
  self->dateType_ = dateType;
}


#line 201
FreemarkerCoreBuiltInsForMultipleTypes_dateBI *new_FreemarkerCoreBuiltInsForMultipleTypes_dateBI_initWithInt_(jint dateType) {
  FreemarkerCoreBuiltInsForMultipleTypes_dateBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_dateBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_dateBI_initWithInt_(self, dateType);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_dateBI)


#line 132
@implementation FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser


#line 143
- (instancetype)initWithFreemarkerCoreBuiltInsForMultipleTypes_dateBI:(FreemarkerCoreBuiltInsForMultipleTypes_dateBI *)outer$
                                                         withNSString:(NSString *)text
                                        withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser_initWithFreemarkerCoreBuiltInsForMultipleTypes_dateBI_withNSString_withFreemarkerCoreEnvironment_(self, outer$, text, env);
  return self;
}


#line 153
- (id)execWithJavaUtilList:(id<JavaUtilList>)args {
  [this$0_ checkMethodArgCountWithJavaUtilList:args withInt:1];
  return [self getWithNSString:(NSString *) check_class_cast([((id<JavaUtilList>) nil_chk(args)) getWithInt:0], [NSString class])];
}

- (id<FreemarkerTemplateTemplateModel>)getWithNSString:(NSString *)pattern {
  return new_FreemarkerTemplateSimpleDate_initWithJavaUtilDate_withInt_(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser_parseWithFreemarkerCoreTemplateDateFormat_(self,
#line 160
  [((FreemarkerCoreEnvironment *) nil_chk(env_)) getTemplateDateFormatWithInt:this$0_->dateType_ withIOSClass:JavaUtilDate_class_() withNSString:pattern withFreemarkerCoreExpression:this$0_->target_]), this$0_->dateType_);
}

- (JavaUtilDate *)getAsDate {
  if (cachedValue_ == nil) {
    cachedValue_ = FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser_parseWithFreemarkerCoreTemplateDateFormat_(self, defaultFormat_);
  }
  return cachedValue_;
}

- (jint)getDateType {
  return this$0_->dateType_;
}

- (jboolean)isEmpty {
  
#line 177
  return NO;
}


#line 180
- (JavaUtilDate *)parseWithFreemarkerCoreTemplateDateFormat:(FreemarkerCoreTemplateDateFormat *)df {
  return FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser_parseWithFreemarkerCoreTemplateDateFormat_(self, df);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreBuiltInsForMultipleTypes_dateBI:withNSString:withFreemarkerCoreEnvironment:", "DateParser", NULL, 0x0, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWithNSString:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getAsDate", NULL, "Ljava.util.Date;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getDateType", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "parseWithFreemarkerCoreTemplateDateFormat:", "parse", "Ljava.util.Date;", 0x2, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.core.BuiltInsForMultipleTypes$dateBI;", NULL, NULL,  },
    { "text_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL,  },
    { "env_", NULL, 0x12, "Lfreemarker.core.Environment;", NULL, NULL,  },
    { "defaultFormat_", NULL, 0x12, "Lfreemarker.core.TemplateDateFormat;", NULL, NULL,  },
    { "cachedValue_", NULL, 0x2, "Ljava.util.Date;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser = { 2, "DateParser", "freemarker.core", "BuiltInsForMultipleTypes$dateBI", 0x2, 7, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser;
}

@end


#line 143
void FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser_initWithFreemarkerCoreBuiltInsForMultipleTypes_dateBI_withNSString_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser *self, FreemarkerCoreBuiltInsForMultipleTypes_dateBI *outer$, NSString *text, FreemarkerCoreEnvironment *env) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  
#line 147
  self->text_ = text;
  self->env_ = env;
  
#line 150
  self->defaultFormat_ = [((FreemarkerCoreEnvironment *) nil_chk(env)) getTemplateDateFormatWithInt:outer$->dateType_ withIOSClass:JavaUtilDate_class_() withFreemarkerCoreExpression:outer$->target_];
}


#line 143
FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser *new_FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser_initWithFreemarkerCoreBuiltInsForMultipleTypes_dateBI_withNSString_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_dateBI *outer$, NSString *text, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser *self = [FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser_initWithFreemarkerCoreBuiltInsForMultipleTypes_dateBI_withNSString_withFreemarkerCoreEnvironment_(self, outer$, text, env);
  return self;
}


#line 180
JavaUtilDate *FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser_parseWithFreemarkerCoreTemplateDateFormat_(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser *self, FreemarkerCoreTemplateDateFormat *df) {
  
#line 184
  @try {
    return [((FreemarkerCoreTemplateDateFormat *) nil_chk(df)) parseWithNSString:self->text_];
  }
  @catch (JavaTextParseException *e) {
    @throw new_FreemarkerCore_TemplateModelException_initWithJavaLangThrowable_withNSObjectArray_(e, [IOSObjectArray newArrayWithObjects:(id[]){ @"The string doesn't match the expected date/time/date-time format. The string to parse was: ", new_FreemarkerCore_DelayedJQuote_initWithId_(self->text_),
#line 190
    @". ",
#line 191
    @"The expected format was: ", new_FreemarkerCore_DelayedJQuote_initWithId_([((FreemarkerCoreTemplateDateFormat *) nil_chk(df)) getDescription]), @".",
#line 192
    [((JavaTextParseException *) nil_chk(e)) getMessage] != nil ? @"\nThe nested reason given follows:\n" : @"",
#line 193
    [e getMessage] != nil ? [e getMessage] : @"" } count:8 type:NSObject_class_()]);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_dateBI_DateParser)


#line 232
@implementation FreemarkerCoreBuiltInsForMultipleTypes_apiBI


#line 233
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  if (![((FreemarkerCoreEnvironment *) nil_chk(env)) isAPIBuiltinEnabled]) {
    @throw new_FreemarkerCore_MiscTemplateException_initWithFreemarkerCoreExpression_withNSObjectArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){
#line 236
      @"Can't use ?api, because the \"", FreemarkerCoreConfigurable_get_API_BUILTIN_ENABLED_KEY_(), @"\" configuration setting is false. Think twice before you set it to true though. Especially, it shouldn't abussed for modifying Map-s and Collection-s." } count:3 type:NSObject_class_()]);
    }
    
#line 240
    id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
    if (!([FreemarkerTemplateTemplateModelWithAPISupport_class_() isInstance:tm])) {
      [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
      @throw new_FreemarkerCoreAPINotSupportedTemplateException_initWithFreemarkerCoreEnvironment_withFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_(env, target_, tm);
    }
    return [((id<FreemarkerTemplateTemplateModelWithAPISupport>) nil_chk(((id<FreemarkerTemplateTemplateModelWithAPISupport>) check_protocol_cast(tm, @protocol(FreemarkerTemplateTemplateModelWithAPISupport))))) getAPI];
  }

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_apiBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_apiBI = { 2, "apiBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_apiBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_apiBI_init(FreemarkerCoreBuiltInsForMultipleTypes_apiBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_apiBI *new_FreemarkerCoreBuiltInsForMultipleTypes_apiBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_apiBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_apiBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_apiBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_apiBI)


#line 249
@implementation FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI


#line 250
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return [FreemarkerTemplateTemplateModelWithAPISupport_class_() isInstance:tm] ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI = { 2, "has_apiBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI_init(FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI *new_FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_has_apiBI)


#line 257
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI


#line 258
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateBooleanModel_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI = { 2, "is_booleanBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_booleanBI)


#line 266
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI


#line 267
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateCollectionModel_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI = { 2, "is_collectionBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_collectionBI)


#line 274
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI


#line 275
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateCollectionModelEx_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI = { 2, "is_collection_exBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_collection_exBI)


#line 282
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI


#line 283
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateDateModel_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI = { 2, "is_dateLikeBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_dateLikeBI)


#line 291
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI


#line 295
- (instancetype)initWithInt:(jint)dateType {
  FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI_initWithInt_(self, dateType);
  return self;
}


#line 299
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateDateModel_class_() isInstance:tm]) && [((id<FreemarkerTemplateTemplateDateModel>) nil_chk(((id<FreemarkerTemplateTemplateDateModel>) check_protocol_cast(tm, @protocol(FreemarkerTemplateTemplateDateModel))))) getDateType] == dateType_ ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "is_dateOfTypeBI", NULL, 0x0, NULL, NULL },
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dateType_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI = { 2, "is_dateOfTypeBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI;
}

@end


#line 295
void FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI_initWithInt_(FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI *self, jint dateType) {
  (void) FreemarkerCoreBuiltIn_init(self);
  
#line 296
  self->dateType_ = dateType;
}


#line 295
FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI_initWithInt_(jint dateType) {
  FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI_initWithInt_(self, dateType);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_dateOfTypeBI)


#line 307
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI


#line 308
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  
#line 312
  return ([FreemarkerTemplateTemplateTransformModel_class_() isInstance:tm] || [tm isKindOfClass:[FreemarkerCoreMacro class]] || [FreemarkerTemplateTemplateDirectiveModel_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI = { 2, "is_directiveBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_directiveBI)


#line 317
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI


#line 318
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateSequenceModel_class_() isInstance:tm] || [FreemarkerTemplateTemplateCollectionModel_class_() isInstance:tm]) &&
#line 322
  (FreemarkerTemplate_TemplateAPI_getTemplateLanguageVersionAsIntWithFreemarkerCoreTemplateObject_(self) < FreemarkerTemplate_TemplateAPI_get_VERSION_INT_2_3_21_() ||
#line 324
  !([tm isKindOfClass:[FreemarkerExtBeansSimpleMethodModel class]] || [tm isKindOfClass:[FreemarkerExtBeansOverloadedMethodsModel class]])) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI = { 2, "is_enumerableBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_enumerableBI)


#line 329
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI


#line 330
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateHashModelEx_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI = { 2, "is_hash_exBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_hash_exBI)


#line 337
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI


#line 338
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateHashModel_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI = { 2, "is_hashBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_hashBI)


#line 345
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI


#line 346
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateSequenceModel_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI = { 2, "is_indexableBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_indexableBI)


#line 353
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI


#line 354
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  
#line 358
  return ([tm isKindOfClass:[FreemarkerCoreMacro class]]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI = { 2, "is_macroBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_macroBI)


#line 363
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI


#line 364
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateMethodModel_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI = { 2, "is_methodBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_methodBI)


#line 372
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI


#line 373
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateNodeModel_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI = { 2, "is_nodeBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_nodeBI)


#line 381
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI


#line 382
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateNumberModel_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI = { 2, "is_numberBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_numberBI)


#line 390
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI


#line 391
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateSequenceModel_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI = { 2, "is_sequenceBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_sequenceBI)


#line 398
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI


#line 399
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateScalarModel_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI = { 2, "is_stringBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_stringBI)


#line 407
@implementation FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI


#line 408
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  [target_ assertNonNullWithFreemarkerTemplateTemplateModel:tm withFreemarkerCoreEnvironment:env];
  return ([FreemarkerTemplateTemplateTransformModel_class_() isInstance:tm]) ? FreemarkerTemplateTemplateBooleanModel_get_TRUE__() : FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI = { 2, "is_transformBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI_init(FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI *new_FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_is_transformBI)


#line 416
@implementation FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI


#line 417
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> tm = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  if (!([tm isKindOfClass:[FreemarkerCoreMacro class]])) {
    @throw new_FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withIOSClassArray_withFreemarkerCoreEnvironment_(
#line 421
    target_, tm,
#line 422
    @"macro or function", [IOSObjectArray newArrayWithObjects:(id[]){ FreemarkerCoreMacro_class_() } count:1 type:IOSClass_class_()],
#line 423
    env);
  }
  else {
    
#line 425
    return [((FreemarkerCoreEnvironment *) nil_chk(env)) getMacroNamespaceWithFreemarkerCoreMacro:(FreemarkerCoreMacro *) check_class_cast(tm, [FreemarkerCoreMacro class])];
  }
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI = { 2, "namespaceBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI_init(FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI *new_FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_namespaceBI)


#line 430
@implementation FreemarkerCoreBuiltInsForMultipleTypes_sizeBI


#line 431
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> model = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  
#line 434
  jint size;
  if ([FreemarkerTemplateTemplateSequenceModel_class_() isInstance:model]) {
    size = [((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(((id<FreemarkerTemplateTemplateSequenceModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateSequenceModel))))) size];
  }
  else
#line 437
  if ([FreemarkerTemplateTemplateCollectionModelEx_class_() isInstance:model]) {
    size = [((id<FreemarkerTemplateTemplateCollectionModelEx>) nil_chk(((id<FreemarkerTemplateTemplateCollectionModelEx>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateCollectionModelEx))))) size];
  }
  else
#line 439
  if ([FreemarkerTemplateTemplateHashModelEx_class_() isInstance:model]) {
    size = [((id<FreemarkerTemplateTemplateHashModelEx>) nil_chk(((id<FreemarkerTemplateTemplateHashModelEx>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateHashModelEx))))) size];
  }
  else {
    
#line 442
    @throw new_FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withIOSClassArray_withFreemarkerCoreEnvironment_(
#line 443
    target_, model,
#line 444
    @"extended-hash or sequence or extended collection", [IOSObjectArray newArrayWithObjects:(id[]){
#line 446
      FreemarkerTemplateTemplateHashModelEx_class_(),
#line 447
      FreemarkerTemplateTemplateSequenceModel_class_(),
#line 448
      FreemarkerTemplateTemplateCollectionModelEx_class_() } count:3 type:IOSClass_class_()],
#line 450
      env);
    }
    return new_FreemarkerTemplateSimpleNumber_initWithInt_(size);
  }

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_sizeBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_sizeBI = { 2, "sizeBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_sizeBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_sizeBI_init(FreemarkerCoreBuiltInsForMultipleTypes_sizeBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_sizeBI *new_FreemarkerCoreBuiltInsForMultipleTypes_sizeBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_sizeBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_sizeBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_sizeBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_sizeBI)


#line 456
@implementation FreemarkerCoreBuiltInsForMultipleTypes_stringBI


#line 596
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> model = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  if ([FreemarkerTemplateTemplateNumberModel_class_() isInstance:model]) {
    return new_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withNSNumber_withFreemarkerCoreEnvironment_(self, FreemarkerCoreEvalUtil_modelToNumberWithFreemarkerTemplateTemplateNumberModel_withFreemarkerCoreExpression_((id<FreemarkerTemplateTemplateNumberModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateNumberModel)), target_), env);
  }
  else
#line 600
  if ([FreemarkerTemplateTemplateDateModel_class_() isInstance:model]) {
    id<FreemarkerTemplateTemplateDateModel> dm = (id<FreemarkerTemplateTemplateDateModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateDateModel));
    return new_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateDateModel_withFreemarkerCoreEnvironment_(self, dm, env);
  }
  else
#line 603
  if ([model isKindOfClass:[FreemarkerTemplateSimpleScalar class]]) {
    return model;
  }
  else
#line 605
  if ([FreemarkerTemplateTemplateBooleanModel_class_() isInstance:model]) {
    return new_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateBooleanModel_withFreemarkerCoreEnvironment_(self, (id<FreemarkerTemplateTemplateBooleanModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateBooleanModel)), env);
  }
  else
#line 607
  if ([FreemarkerTemplateTemplateScalarModel_class_() isInstance:model]) {
    return new_FreemarkerTemplateSimpleScalar_initWithNSString_([((id<FreemarkerTemplateTemplateScalarModel>) nil_chk(((id<FreemarkerTemplateTemplateScalarModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateScalarModel))))) getAsString]);
  }
  else
#line 609
  if ([((FreemarkerCoreEnvironment *) nil_chk(env)) isClassicCompatible] && [model isKindOfClass:[FreemarkerExtBeansBeanModel class]]) {
    return new_FreemarkerTemplateSimpleScalar_initWithNSString_(FreemarkerExtBeans_BeansAPI_getAsClassicCompatibleStringWithFreemarkerExtBeansBeanModel_((FreemarkerExtBeansBeanModel *) check_class_cast(model, [FreemarkerExtBeansBeanModel class])));
  }
  else {
    
#line 612
    @throw new_FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withIOSClassArray_withFreemarkerCoreEnvironment_(
#line 613
    target_, model,
#line 614
    @"number, date, boolean or string", [IOSObjectArray newArrayWithObjects:(id[]){
#line 616
      FreemarkerTemplateTemplateNumberModel_class_(), FreemarkerTemplateTemplateDateModel_class_(), FreemarkerTemplateTemplateBooleanModel_class_(),
#line 617
      FreemarkerTemplateTemplateScalarModel_class_() } count:4 type:IOSClass_class_()],
#line 619
      env);
    }
  }

- (instancetype)init {
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForMultipleTypes$stringBI$BooleanFormatter;", "Lfreemarker.core.BuiltInsForMultipleTypes$stringBI$DateFormatter;", "Lfreemarker.core.BuiltInsForMultipleTypes$stringBI$NumberFormatter;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_stringBI = { 2, "stringBI", "freemarker.core", "BuiltInsForMultipleTypes", 0x8, 2, methods, 0, NULL, 0, NULL, 3, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_stringBI;
}

@end

void FreemarkerCoreBuiltInsForMultipleTypes_stringBI_init(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForMultipleTypes_stringBI *new_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_init() {
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI *self = [FreemarkerCoreBuiltInsForMultipleTypes_stringBI alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_stringBI)


#line 458
@implementation FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter


#line 466
- (instancetype)initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI:(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *)outer$
                             withFreemarkerTemplateTemplateBooleanModel:(id<FreemarkerTemplateTemplateBooleanModel>)bool_
                                          withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateBooleanModel_withFreemarkerCoreEnvironment_(self, outer$, bool_, env);
  return self;
}


#line 471
- (id)execWithJavaUtilList:(id<JavaUtilList>)args {
  [this$0_ checkMethodArgCountWithJavaUtilList:args withInt:2];
  return new_FreemarkerTemplateSimpleScalar_initWithNSString_((NSString *) check_class_cast([((id<JavaUtilList>) nil_chk(args)) getWithInt:[((id<FreemarkerTemplateTemplateBooleanModel>) nil_chk(bool__)) getAsBoolean] ? 0 : 1], [NSString class]));
}

- (NSString *)getAsString {
  
#line 478
  if ([FreemarkerTemplateTemplateScalarModel_class_() isInstance:bool__]) {
    return [((id<FreemarkerTemplateTemplateScalarModel>) nil_chk(((id<FreemarkerTemplateTemplateScalarModel>) check_protocol_cast(bool__, @protocol(FreemarkerTemplateTemplateScalarModel))))) getAsString];
  }
  else {
    
#line 481
    @try {
      return [((FreemarkerCoreEnvironment *) nil_chk(env_)) formatBooleanWithBoolean:[((id<FreemarkerTemplateTemplateBooleanModel>) nil_chk(bool__)) getAsBoolean] withBoolean:YES];
    }
    @catch (
#line 483
    FreemarkerTemplateTemplateException *e) {
      @throw new_FreemarkerTemplateTemplateModelException_initWithJavaLangException_(e);
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI:withFreemarkerTemplateTemplateBooleanModel:withFreemarkerCoreEnvironment:", "BooleanFormatter", NULL, 0x0, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getAsString", NULL, "Ljava.lang.String;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.core.BuiltInsForMultipleTypes$stringBI;", NULL, NULL,  },
    { "bool__", "bool", 0x12, "Lfreemarker.template.TemplateBooleanModel;", NULL, NULL,  },
    { "env_", NULL, 0x12, "Lfreemarker.core.Environment;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter = { 2, "BooleanFormatter", "freemarker.core", "BuiltInsForMultipleTypes$stringBI", 0x2, 3, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter;
}

@end


#line 466
void FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateBooleanModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter *self, FreemarkerCoreBuiltInsForMultipleTypes_stringBI *outer$, id<FreemarkerTemplateTemplateBooleanModel> bool_, FreemarkerCoreEnvironment *env) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  
#line 467
  self->bool__ = bool_;
  self->env_ = env;
}


#line 466
FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter *new_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateBooleanModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *outer$, id<FreemarkerTemplateTemplateBooleanModel> bool_, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter *self = [FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateBooleanModel_withFreemarkerCoreEnvironment_(self, outer$, bool_, env);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_BooleanFormatter)


#line 490
@implementation FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter


#line 501
- (instancetype)initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI:(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *)outer$
                                withFreemarkerTemplateTemplateDateModel:(id<FreemarkerTemplateTemplateDateModel>)dateModel
                                          withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateDateModel_withFreemarkerCoreEnvironment_(self, outer$, dateModel, env);
  return self;
}


#line 515
- (id)execWithJavaUtilList:(id<JavaUtilList>)args {
  [this$0_ checkMethodArgCountWithJavaUtilList:args withInt:1];
  return [self getWithNSString:(NSString *) check_class_cast([((id<JavaUtilList>) nil_chk(args)) getWithInt:0], [NSString class])];
}

- (id<FreemarkerTemplateTemplateModel>)getWithNSString:(NSString *)key {
  
#line 524
  return new_FreemarkerTemplateSimpleScalar_initWithNSString_([((FreemarkerCoreEnvironment *) nil_chk(env_)) formatDateWithFreemarkerTemplateTemplateDateModel:dateModel_ withNSString:key withFreemarkerCoreExpression:this$0_->target_]);
}


#line 527
- (NSString *)getAsString {
  
#line 531
  if (cachedValue_ == nil) {
    @try {
      if (defaultFormat_ == nil) {
        if ([((id<FreemarkerTemplateTemplateDateModel>) nil_chk(dateModel_)) getDateType] == FreemarkerTemplateTemplateDateModel_UNKNOWN) {
          @throw FreemarkerCoreMessageUtil_newCantFormatUnknownTypeDateExceptionWithFreemarkerCoreExpression_withFreemarkerCoreUnknownDateTypeFormattingUnsupportedException_(this$0_->target_, nil);
        }
        else {
          
#line 537
          @throw new_FreemarkerCoreBugException_init();
        }
      }
      cachedValue_ = [((FreemarkerCoreTemplateDateFormat *) nil_chk(defaultFormat_)) formatWithFreemarkerTemplateTemplateDateModel:dateModel_];
    }
    @catch (
#line 541
    FreemarkerCoreUnformattableDateException *e) {
      @throw FreemarkerCoreMessageUtil_newCantFormatDateExceptionWithFreemarkerCoreExpression_withFreemarkerCoreUnformattableDateException_(this$0_->target_, e);
    }
  }
  return cachedValue_;
}


#line 548
- (jboolean)isEmpty {
  
#line 550
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI:withFreemarkerTemplateTemplateDateModel:withFreemarkerCoreEnvironment:", "DateFormatter", NULL, 0x0, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWithNSString:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getAsString", NULL, "Ljava.lang.String;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.core.BuiltInsForMultipleTypes$stringBI;", NULL, NULL,  },
    { "dateModel_", NULL, 0x12, "Lfreemarker.template.TemplateDateModel;", NULL, NULL,  },
    { "env_", NULL, 0x12, "Lfreemarker.core.Environment;", NULL, NULL,  },
    { "defaultFormat_", NULL, 0x12, "Lfreemarker.core.TemplateDateFormat;", NULL, NULL,  },
    { "cachedValue_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter = { 2, "DateFormatter", "freemarker.core", "BuiltInsForMultipleTypes$stringBI", 0x2, 5, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter;
}

@end


#line 501
void FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateDateModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter *self, FreemarkerCoreBuiltInsForMultipleTypes_stringBI *outer$, id<FreemarkerTemplateTemplateDateModel> dateModel, FreemarkerCoreEnvironment *env) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  
#line 505
  self->dateModel_ = dateModel;
  self->env_ = env;
  
#line 508
  jint dateType = [((id<FreemarkerTemplateTemplateDateModel>) nil_chk(dateModel)) getDateType];
  self->defaultFormat_ = dateType == FreemarkerTemplateTemplateDateModel_UNKNOWN ?
#line 510
  nil :
#line 511
  [((FreemarkerCoreEnvironment *) nil_chk(env)) getTemplateDateFormatWithInt:
#line 512
  dateType withIOSClass:[((JavaUtilDate *) nil_chk(FreemarkerCoreEvalUtil_modelToDateWithFreemarkerTemplateTemplateDateModel_withFreemarkerCoreExpression_(dateModel, outer$->target_))) getClass] withFreemarkerCoreExpression:outer$->target_];
}


#line 501
FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter *new_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateDateModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *outer$, id<FreemarkerTemplateTemplateDateModel> dateModel, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter *self = [FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withFreemarkerTemplateTemplateDateModel_withFreemarkerCoreEnvironment_(self, outer$, dateModel, env);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_DateFormatter)


#line 554
@implementation FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter


#line 565
- (instancetype)initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI:(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *)outer$
                                                           withNSNumber:(NSNumber *)number
                                          withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withNSNumber_withFreemarkerCoreEnvironment_(self, outer$, number, env);
  return self;
}

- (id)execWithJavaUtilList:(id<JavaUtilList>)args {
  [this$0_ checkMethodArgCountWithJavaUtilList:args withInt:1];
  return [self getWithNSString:(NSString *) check_class_cast([((id<JavaUtilList>) nil_chk(args)) getWithInt:0], [NSString class])];
}

- (id<FreemarkerTemplateTemplateModel>)getWithNSString:(NSString *)key {
  
#line 579
  return new_FreemarkerTemplateSimpleScalar_initWithNSString_([((JavaTextNumberFormat *) nil_chk([((FreemarkerCoreEnvironment *) nil_chk(env_)) getNumberFormatObjectWithNSString:key])) formatWithId:number_]);
}


#line 582
- (NSString *)getAsString {
  
#line 584
  if (cachedValue_ == nil) {
    cachedValue_ = [((JavaTextNumberFormat *) nil_chk(defaultFormat_)) formatWithId:number_];
  }
  return cachedValue_;
}


#line 590
- (jboolean)isEmpty {
  
#line 592
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI:withNSNumber:withFreemarkerCoreEnvironment:", "NumberFormatter", NULL, 0x0, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWithNSString:", "get", "Lfreemarker.template.TemplateModel;", 0x1, NULL, NULL },
    { "getAsString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.core.BuiltInsForMultipleTypes$stringBI;", NULL, NULL,  },
    { "number_", NULL, 0x12, "Ljava.lang.Number;", NULL, NULL,  },
    { "env_", NULL, 0x12, "Lfreemarker.core.Environment;", NULL, NULL,  },
    { "defaultFormat_", NULL, 0x12, "Ljava.text.NumberFormat;", NULL, NULL,  },
    { "cachedValue_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter = { 2, "NumberFormatter", "freemarker.core", "BuiltInsForMultipleTypes$stringBI", 0x2, 5, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter;
}

@end


#line 565
void FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withNSNumber_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter *self, FreemarkerCoreBuiltInsForMultipleTypes_stringBI *outer$, NSNumber *number, FreemarkerCoreEnvironment *env) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  
#line 567
  self->number_ = number;
  self->env_ = env;
  self->defaultFormat_ = [env getNumberFormatObjectWithNSString:[((FreemarkerCoreEnvironment *) nil_chk(env)) getNumberFormat]];
}


#line 565
FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter *new_FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withNSNumber_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForMultipleTypes_stringBI *outer$, NSNumber *number, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter *self = [FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter alloc];
  FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter_initWithFreemarkerCoreBuiltInsForMultipleTypes_stringBI_withNSNumber_withFreemarkerCoreEnvironment_(self, outer$, number, env);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForMultipleTypes_stringBI_NumberFormatter)
