//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/NonStringException.java
//


#include "Environment.h"
#include "Expression.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "InvalidReferenceException.h"
#include "J2ObjC_source.h"
#include "NonStringException.h"
#include "TemplateBooleanModel.h"
#include "TemplateDateModel.h"
#include "TemplateModel.h"
#include "TemplateNumberModel.h"
#include "TemplateScalarModel.h"
#include "UnexpectedTypeException.h"
#include "_ErrorDescriptionBuilder.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/NonStringException.java"

static NSString *FreemarkerCoreNonStringException_DEFAULT_DESCRIPTION_ = @"Expecting string or something automatically convertible to string (number, date or boolean) value here";
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreNonStringException, DEFAULT_DESCRIPTION_, NSString *)

J2OBJC_INITIALIZED_DEFN(FreemarkerCoreNonStringException)

NSString *FreemarkerCoreNonStringException_STRING_COERCABLE_TYPES_DESC_ = 
#line 32
@"string or something automatically convertible to string (number, date or boolean)";
IOSObjectArray *FreemarkerCoreNonStringException_STRING_COERCABLE_TYPES_;


#line 29
@implementation FreemarkerCoreNonStringException


#line 41
- (instancetype)initWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreNonStringException_initWithFreemarkerCoreEnvironment_(self, env);
  return self;
}


#line 45
- (instancetype)initWithNSString:(NSString *)description_
   withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreNonStringException_initWithNSString_withFreemarkerCoreEnvironment_(self, description_, env);
  return self;
}


#line 49
- (instancetype)initWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env
       withFreemarkerCore_ErrorDescriptionBuilder:(FreemarkerCore_ErrorDescriptionBuilder *)description_ {
  FreemarkerCoreNonStringException_initWithFreemarkerCoreEnvironment_withFreemarkerCore_ErrorDescriptionBuilder_(self, env, description_);
  return self;
}


#line 53
- (instancetype)initWithFreemarkerCoreExpression:(FreemarkerCoreExpression *)blamed
             withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model
                   withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreNonStringException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(self, blamed, model, env);
  return self;
}


#line 59
- (instancetype)initWithFreemarkerCoreExpression:(FreemarkerCoreExpression *)blamed
             withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model
                                    withNSString:(NSString *)tip
                   withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreNonStringException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withFreemarkerCoreEnvironment_(self, blamed, model, tip, env);
  return self;
}


#line 66
- (instancetype)initWithFreemarkerCoreExpression:(FreemarkerCoreExpression *)blamed
             withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model
                               withNSStringArray:(IOSObjectArray *)tips
                   withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreNonStringException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSStringArray_withFreemarkerCoreEnvironment_(self, blamed, model, tips, env);
  return self;
}

+ (void)initialize {
  if (self == [FreemarkerCoreNonStringException class]) {
    FreemarkerCoreNonStringException_STRING_COERCABLE_TYPES_ = [IOSObjectArray newArrayWithObjects:(id[]){
#line 35
      FreemarkerTemplateTemplateScalarModel_class_(), FreemarkerTemplateTemplateNumberModel_class_(), FreemarkerTemplateTemplateDateModel_class_(), FreemarkerTemplateTemplateBooleanModel_class_() } count:4 type:IOSClass_class_()];
      J2OBJC_SET_INITIALIZED(FreemarkerCoreNonStringException)
    }
  }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreEnvironment:", "NonStringException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withFreemarkerCoreEnvironment:", "NonStringException", NULL, 0x1, NULL, NULL },
    { "initWithFreemarkerCoreEnvironment:withFreemarkerCore_ErrorDescriptionBuilder:", "NonStringException", NULL, 0x0, NULL, NULL },
    { "initWithFreemarkerCoreExpression:withFreemarkerTemplateTemplateModel:withFreemarkerCoreEnvironment:", "NonStringException", NULL, 0x0, "Lfreemarker.core.InvalidReferenceException;", NULL },
    { "initWithFreemarkerCoreExpression:withFreemarkerTemplateTemplateModel:withNSString:withFreemarkerCoreEnvironment:", "NonStringException", NULL, 0x0, "Lfreemarker.core.InvalidReferenceException;", NULL },
    { "initWithFreemarkerCoreExpression:withFreemarkerTemplateTemplateModel:withNSStringArray:withFreemarkerCoreEnvironment:", "NonStringException", NULL, 0x0, "Lfreemarker.core.InvalidReferenceException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "STRING_COERCABLE_TYPES_DESC_", NULL, 0x18, "Ljava.lang.String;", &FreemarkerCoreNonStringException_STRING_COERCABLE_TYPES_DESC_, NULL,  },
    { "STRING_COERCABLE_TYPES_", NULL, 0x18, "[Ljava.lang.Class;", &FreemarkerCoreNonStringException_STRING_COERCABLE_TYPES_, NULL,  },
    { "DEFAULT_DESCRIPTION_", NULL, 0x1a, "Ljava.lang.String;", &FreemarkerCoreNonStringException_DEFAULT_DESCRIPTION_, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreNonStringException = { 2, "NonStringException", "freemarker.core", NULL, 0x1, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreNonStringException;
}

@end


#line 41
void FreemarkerCoreNonStringException_initWithFreemarkerCoreEnvironment_(FreemarkerCoreNonStringException *self, FreemarkerCoreEnvironment *env) {
  (void) FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreEnvironment_withNSString_(self, env, FreemarkerCoreNonStringException_DEFAULT_DESCRIPTION_);
}


#line 41
FreemarkerCoreNonStringException *new_FreemarkerCoreNonStringException_initWithFreemarkerCoreEnvironment_(FreemarkerCoreEnvironment *env) {
  FreemarkerCoreNonStringException *self = [FreemarkerCoreNonStringException alloc];
  FreemarkerCoreNonStringException_initWithFreemarkerCoreEnvironment_(self, env);
  return self;
}


#line 45
void FreemarkerCoreNonStringException_initWithNSString_withFreemarkerCoreEnvironment_(FreemarkerCoreNonStringException *self, NSString *description_, FreemarkerCoreEnvironment *env) {
  (void) FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreEnvironment_withNSString_(self, env, description_);
}


#line 45
FreemarkerCoreNonStringException *new_FreemarkerCoreNonStringException_initWithNSString_withFreemarkerCoreEnvironment_(NSString *description_, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreNonStringException *self = [FreemarkerCoreNonStringException alloc];
  FreemarkerCoreNonStringException_initWithNSString_withFreemarkerCoreEnvironment_(self, description_, env);
  return self;
}


#line 49
void FreemarkerCoreNonStringException_initWithFreemarkerCoreEnvironment_withFreemarkerCore_ErrorDescriptionBuilder_(FreemarkerCoreNonStringException *self, FreemarkerCoreEnvironment *env, FreemarkerCore_ErrorDescriptionBuilder *description_) {
  (void) FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreEnvironment_withFreemarkerCore_ErrorDescriptionBuilder_(self, env, description_);
}


#line 49
FreemarkerCoreNonStringException *new_FreemarkerCoreNonStringException_initWithFreemarkerCoreEnvironment_withFreemarkerCore_ErrorDescriptionBuilder_(FreemarkerCoreEnvironment *env, FreemarkerCore_ErrorDescriptionBuilder *description_) {
  FreemarkerCoreNonStringException *self = [FreemarkerCoreNonStringException alloc];
  FreemarkerCoreNonStringException_initWithFreemarkerCoreEnvironment_withFreemarkerCore_ErrorDescriptionBuilder_(self, env, description_);
  return self;
}


#line 53
void FreemarkerCoreNonStringException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(FreemarkerCoreNonStringException *self, FreemarkerCoreExpression *blamed, id<FreemarkerTemplateTemplateModel> model, FreemarkerCoreEnvironment *env) {
  (void) FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withIOSClassArray_withFreemarkerCoreEnvironment_(self,
#line 56
  blamed, model, FreemarkerCoreNonStringException_STRING_COERCABLE_TYPES_DESC_, FreemarkerCoreNonStringException_STRING_COERCABLE_TYPES_, env);
}


#line 53
FreemarkerCoreNonStringException *new_FreemarkerCoreNonStringException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(FreemarkerCoreExpression *blamed, id<FreemarkerTemplateTemplateModel> model, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreNonStringException *self = [FreemarkerCoreNonStringException alloc];
  FreemarkerCoreNonStringException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(self, blamed, model, env);
  return self;
}

void FreemarkerCoreNonStringException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withFreemarkerCoreEnvironment_(FreemarkerCoreNonStringException *self, FreemarkerCoreExpression *blamed, id<FreemarkerTemplateTemplateModel> model, NSString *tip, FreemarkerCoreEnvironment *env) {
  (void) FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withIOSClassArray_withNSString_withFreemarkerCoreEnvironment_(self,
#line 63
  blamed, model, FreemarkerCoreNonStringException_STRING_COERCABLE_TYPES_DESC_, FreemarkerCoreNonStringException_STRING_COERCABLE_TYPES_, tip, env);
}


#line 59
FreemarkerCoreNonStringException *new_FreemarkerCoreNonStringException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withFreemarkerCoreEnvironment_(FreemarkerCoreExpression *blamed, id<FreemarkerTemplateTemplateModel> model, NSString *tip, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreNonStringException *self = [FreemarkerCoreNonStringException alloc];
  FreemarkerCoreNonStringException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withFreemarkerCoreEnvironment_(self, blamed, model, tip, env);
  return self;
}


#line 66
void FreemarkerCoreNonStringException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSStringArray_withFreemarkerCoreEnvironment_(FreemarkerCoreNonStringException *self, FreemarkerCoreExpression *blamed, id<FreemarkerTemplateTemplateModel> model, IOSObjectArray *tips, FreemarkerCoreEnvironment *env) {
  (void) FreemarkerCoreUnexpectedTypeException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSString_withIOSClassArray_withNSStringArray_withFreemarkerCoreEnvironment_(self,
#line 68
  blamed, model, FreemarkerCoreNonStringException_STRING_COERCABLE_TYPES_DESC_, FreemarkerCoreNonStringException_STRING_COERCABLE_TYPES_, tips, env);
}


#line 66
FreemarkerCoreNonStringException *new_FreemarkerCoreNonStringException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSStringArray_withFreemarkerCoreEnvironment_(FreemarkerCoreExpression *blamed, id<FreemarkerTemplateTemplateModel> model, IOSObjectArray *tips, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreNonStringException *self = [FreemarkerCoreNonStringException alloc];
  FreemarkerCoreNonStringException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withNSStringArray_withFreemarkerCoreEnvironment_(self, blamed, model, tips, env);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreNonStringException)
