//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/RegexpHelper.java
//

#ifndef _FreemarkerCoreRegexpHelper_H_
#define _FreemarkerCoreRegexpHelper_H_

#include "J2ObjC_header.h"

@class JavaUtilRegexPattern;

#define FreemarkerCoreRegexpHelper_RE_FLAG_REGEXP 4294967296LL
#define FreemarkerCoreRegexpHelper_RE_FLAG_FIRST_ONLY 8589934592LL

/**
 @brief Helper for language features (like built-ins) that use regular expressions.
 */
@interface FreemarkerCoreRegexpHelper : NSObject

#pragma mark Package-Private

+ (void)checkNonRegexpFlagsWithNSString:(NSString *)biName
                               withLong:(jlong)flags;

+ (void)checkOnlyHasNonRegexpFlagsWithNSString:(NSString *)biName
                                      withLong:(jlong)flags
                                   withBoolean:(jboolean)strict;

+ (JavaUtilRegexPattern *)getPatternWithNSString:(NSString *)patternString
                                         withInt:(jint)flags;

/**
 @brief Logs flag warning for a limited number of times.
 This is used to prevent log flooding.
 */
+ (void)logFlagWarningWithNSString:(NSString *)message;

+ (jlong)parseFlagStringWithNSString:(NSString *)flagString;

@end

J2OBJC_STATIC_INIT(FreemarkerCoreRegexpHelper)

FOUNDATION_EXPORT jlong FreemarkerCoreRegexpHelper_RE_FLAG_CASE_INSENSITIVE_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreRegexpHelper, RE_FLAG_CASE_INSENSITIVE_, jlong)

FOUNDATION_EXPORT jlong FreemarkerCoreRegexpHelper_RE_FLAG_MULTILINE_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreRegexpHelper, RE_FLAG_MULTILINE_, jlong)

FOUNDATION_EXPORT jlong FreemarkerCoreRegexpHelper_RE_FLAG_COMMENTS_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreRegexpHelper, RE_FLAG_COMMENTS_, jlong)

FOUNDATION_EXPORT jlong FreemarkerCoreRegexpHelper_RE_FLAG_DOTALL_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreRegexpHelper, RE_FLAG_DOTALL_, jlong)

J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreRegexpHelper, RE_FLAG_REGEXP, jlong)

J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreRegexpHelper, RE_FLAG_FIRST_ONLY, jlong)

FOUNDATION_EXPORT JavaUtilRegexPattern *FreemarkerCoreRegexpHelper_getPatternWithNSString_withInt_(NSString *patternString, jint flags);

FOUNDATION_EXPORT jlong FreemarkerCoreRegexpHelper_parseFlagStringWithNSString_(NSString *flagString);

FOUNDATION_EXPORT void FreemarkerCoreRegexpHelper_logFlagWarningWithNSString_(NSString *message);

FOUNDATION_EXPORT void FreemarkerCoreRegexpHelper_checkNonRegexpFlagsWithNSString_withLong_(NSString *biName, jlong flags);

FOUNDATION_EXPORT void FreemarkerCoreRegexpHelper_checkOnlyHasNonRegexpFlagsWithNSString_withLong_withBoolean_(NSString *biName, jlong flags, jboolean strict);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreRegexpHelper)

#endif // _FreemarkerCoreRegexpHelper_H_
