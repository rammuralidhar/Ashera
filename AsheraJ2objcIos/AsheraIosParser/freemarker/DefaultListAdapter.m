//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/DefaultListAdapter.java
//


#include "DefaultListAdapter.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "ObjectWrapper.h"
#include "ObjectWrapperWithAPISupport.h"
#include "RichObjectWrapper.h"
#include "TemplateCollectionModel.h"
#include "TemplateHashModel.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "TemplateModelIterator.h"
#include "WrappingTemplateModel.h"
#include "java/util/AbstractSequentialList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/NoSuchElementException.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/DefaultListAdapter.java"

@interface FreemarkerTemplateDefaultListAdapter ()

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)list
withFreemarkerTemplateUtilityRichObjectWrapper:(id<FreemarkerTemplateUtilityRichObjectWrapper>)wrapper;

@end

__attribute__((unused)) static void FreemarkerTemplateDefaultListAdapter_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(FreemarkerTemplateDefaultListAdapter *self, id<JavaUtilList> list, id<FreemarkerTemplateUtilityRichObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultListAdapter *new_FreemarkerTemplateDefaultListAdapter_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(id<JavaUtilList> list, id<FreemarkerTemplateUtilityRichObjectWrapper> wrapper) NS_RETURNS_RETAINED;

@interface FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport : FreemarkerTemplateDefaultListAdapter < FreemarkerTemplateTemplateCollectionModel >

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)list
withFreemarkerTemplateUtilityRichObjectWrapper:(id<FreemarkerTemplateUtilityRichObjectWrapper>)wrapper;

- (id<FreemarkerTemplateTemplateModelIterator>)iterator;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport)

__attribute__((unused)) static void FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport *self, id<JavaUtilList> list, id<FreemarkerTemplateUtilityRichObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport *new_FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(id<JavaUtilList> list, id<FreemarkerTemplateUtilityRichObjectWrapper> wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport)

@interface FreemarkerTemplateDefaultListAdapter_IteratorAdapter : NSObject < FreemarkerTemplateTemplateModelIterator > {
 @public
  id<JavaUtilIterator> it_;
  id<FreemarkerTemplateObjectWrapper> wrapper_;
}

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)it
     withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (id<FreemarkerTemplateTemplateModel>)next;

- (jboolean)hasNext;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateDefaultListAdapter_IteratorAdapter)

J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultListAdapter_IteratorAdapter, it_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(FreemarkerTemplateDefaultListAdapter_IteratorAdapter, wrapper_, id<FreemarkerTemplateObjectWrapper>)

__attribute__((unused)) static void FreemarkerTemplateDefaultListAdapter_IteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultListAdapter_IteratorAdapter *self, id<JavaUtilIterator> it, id<FreemarkerTemplateObjectWrapper> wrapper);

__attribute__((unused)) static FreemarkerTemplateDefaultListAdapter_IteratorAdapter *new_FreemarkerTemplateDefaultListAdapter_IteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(id<JavaUtilIterator> it, id<FreemarkerTemplateObjectWrapper> wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateDefaultListAdapter_IteratorAdapter)


#line 49
@implementation FreemarkerTemplateDefaultListAdapter


#line 62
+ (FreemarkerTemplateDefaultListAdapter *)adaptWithJavaUtilList:(id<JavaUtilList>)list
                 withFreemarkerTemplateUtilityRichObjectWrapper:(id<FreemarkerTemplateUtilityRichObjectWrapper>)wrapper {
  return FreemarkerTemplateDefaultListAdapter_adaptWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(list, wrapper);
}


#line 69
- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)list
withFreemarkerTemplateUtilityRichObjectWrapper:(id<FreemarkerTemplateUtilityRichObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultListAdapter_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(self, list, wrapper);
  return self;
}


#line 74
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  return index >= 0 && index < [((id<JavaUtilList>) nil_chk(list_)) size] ? [self wrapWithId:[list_ getWithInt:index]] : nil;
}

- (jint)size {
  return [((id<JavaUtilList>) nil_chk(list_)) size];
}

- (id)getAdaptedObjectWithIOSClass:(IOSClass *)hint {
  return [self getWrappedObject];
}

- (id)getWrappedObject {
  return list_;
}


#line 127
- (id<FreemarkerTemplateTemplateModel>)getAPI {
  return [((id<FreemarkerTemplateUtilityObjectWrapperWithAPISupport>) nil_chk(((id<FreemarkerTemplateUtilityObjectWrapperWithAPISupport>) check_protocol_cast([self getObjectWrapper], @protocol(FreemarkerTemplateUtilityObjectWrapperWithAPISupport))))) wrapAsAPIWithId:list_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "adaptWithJavaUtilList:withFreemarkerTemplateUtilityRichObjectWrapper:", "adapt", "Lfreemarker.template.DefaultListAdapter;", 0x9, NULL, NULL },
    { "initWithJavaUtilList:withFreemarkerTemplateUtilityRichObjectWrapper:", "DefaultListAdapter", NULL, 0x2, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getAdaptedObjectWithIOSClass:", "getAdaptedObject", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getWrappedObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getAPI", NULL, "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "list_", NULL, 0x14, "Ljava.util.List;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lfreemarker.template.DefaultListAdapter$DefaultListAdapterWithCollectionSupport;", "Lfreemarker.template.DefaultListAdapter$IteratorAdapter;"};
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultListAdapter = { 2, "DefaultListAdapter", "freemarker.template", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_FreemarkerTemplateDefaultListAdapter;
}

@end


#line 62
FreemarkerTemplateDefaultListAdapter *FreemarkerTemplateDefaultListAdapter_adaptWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(id<JavaUtilList> list, id<FreemarkerTemplateUtilityRichObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultListAdapter_initialize();
  return [list isKindOfClass:[JavaUtilAbstractSequentialList class]] ? new_FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(
#line 65
  list, wrapper) : new_FreemarkerTemplateDefaultListAdapter_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(
#line 66
  list, wrapper);
}


#line 69
void FreemarkerTemplateDefaultListAdapter_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(FreemarkerTemplateDefaultListAdapter *self, id<JavaUtilList> list, id<FreemarkerTemplateUtilityRichObjectWrapper> wrapper) {
  (void) FreemarkerTemplateWrappingTemplateModel_initWithFreemarkerTemplateObjectWrapper_(self, wrapper);
  self->list_ = list;
}


#line 69
FreemarkerTemplateDefaultListAdapter *new_FreemarkerTemplateDefaultListAdapter_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(id<JavaUtilList> list, id<FreemarkerTemplateUtilityRichObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultListAdapter *self = [FreemarkerTemplateDefaultListAdapter alloc];
  FreemarkerTemplateDefaultListAdapter_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(self, list, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultListAdapter)


#line 90
@implementation FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport


#line 93
- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)list
withFreemarkerTemplateUtilityRichObjectWrapper:(id<FreemarkerTemplateUtilityRichObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(self, list, wrapper);
  return self;
}


#line 97
- (id<FreemarkerTemplateTemplateModelIterator>)iterator {
  return new_FreemarkerTemplateDefaultListAdapter_IteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_([((id<JavaUtilList>) nil_chk(list_)) iterator], [self getObjectWrapper]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:withFreemarkerTemplateUtilityRichObjectWrapper:", "DefaultListAdapterWithCollectionSupport", NULL, 0x2, NULL, NULL },
    { "iterator", NULL, "Lfreemarker.template.TemplateModelIterator;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport = { 2, "DefaultListAdapterWithCollectionSupport", "freemarker.template", "DefaultListAdapter", 0xa, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport;
}

@end


#line 93
void FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport *self, id<JavaUtilList> list, id<FreemarkerTemplateUtilityRichObjectWrapper> wrapper) {
  (void) FreemarkerTemplateDefaultListAdapter_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(self, list, wrapper);
}


#line 93
FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport *new_FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(id<JavaUtilList> list, id<FreemarkerTemplateUtilityRichObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport *self = [FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport alloc];
  FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport_initWithJavaUtilList_withFreemarkerTemplateUtilityRichObjectWrapper_(self, list, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultListAdapter_DefaultListAdapterWithCollectionSupport)


#line 103
@implementation FreemarkerTemplateDefaultListAdapter_IteratorAdapter


#line 108
- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)it
     withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  FreemarkerTemplateDefaultListAdapter_IteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(self, it, wrapper);
  return self;
}


#line 113
- (id<FreemarkerTemplateTemplateModel>)next {
  @try {
    return [((id<FreemarkerTemplateObjectWrapper>) nil_chk(wrapper_)) wrapWithId:[((id<JavaUtilIterator>) nil_chk(it_)) next]];
  }
  @catch (
#line 116
  JavaUtilNoSuchElementException *e) {
    @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_withJavaLangException_(@"The collection has no more items.", e);
  }
}


#line 121
- (jboolean)hasNext {
  return [((id<JavaUtilIterator>) nil_chk(it_)) hasNext];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilIterator:withFreemarkerTemplateObjectWrapper:", "IteratorAdapter", NULL, 0x2, NULL, NULL },
    { "next", NULL, "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "hasNext", NULL, "Z", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "it_", NULL, 0x12, "Ljava.util.Iterator;", NULL, NULL,  },
    { "wrapper_", NULL, 0x12, "Lfreemarker.template.ObjectWrapper;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateDefaultListAdapter_IteratorAdapter = { 2, "IteratorAdapter", "freemarker.template", "DefaultListAdapter", 0xa, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateDefaultListAdapter_IteratorAdapter;
}

@end


#line 108
void FreemarkerTemplateDefaultListAdapter_IteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(FreemarkerTemplateDefaultListAdapter_IteratorAdapter *self, id<JavaUtilIterator> it, id<FreemarkerTemplateObjectWrapper> wrapper) {
  (void) NSObject_init(self);
  
#line 109
  self->it_ = it;
  self->wrapper_ = wrapper;
}


#line 108
FreemarkerTemplateDefaultListAdapter_IteratorAdapter *new_FreemarkerTemplateDefaultListAdapter_IteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(id<JavaUtilIterator> it, id<FreemarkerTemplateObjectWrapper> wrapper) {
  FreemarkerTemplateDefaultListAdapter_IteratorAdapter *self = [FreemarkerTemplateDefaultListAdapter_IteratorAdapter alloc];
  FreemarkerTemplateDefaultListAdapter_IteratorAdapter_initWithJavaUtilIterator_withFreemarkerTemplateObjectWrapper_(self, it, wrapper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateDefaultListAdapter_IteratorAdapter)
