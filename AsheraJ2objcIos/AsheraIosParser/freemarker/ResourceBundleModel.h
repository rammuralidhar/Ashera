//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/ResourceBundleModel.java
//

#ifndef _FreemarkerExtBeansResourceBundleModel_H_
#define _FreemarkerExtBeansResourceBundleModel_H_

#include "BeanModel.h"
#include "J2ObjC_header.h"
#include "TemplateMethodModelEx.h"

@class FreemarkerExtBeansBeansWrapper;
@class IOSClass;
@class IOSObjectArray;
@class JavaUtilResourceBundle;
@protocol FreemarkerExtUtilModelFactory;
@protocol FreemarkerTemplateTemplateModel;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

/**
 @brief <p>A hash model that wraps a resource bundle.
 Makes it convenient to store localized content in the data model. It also acts as a method model that will take a resource key and arbitrary number of arguments and will apply MessageFormat with arguments on the string represented by the key.</p> <p>Typical usages:</p> <ul> <li><tt>bundle.resourceKey</tt> will retrieve the object from resource bundle with key <tt>resourceKey</tt></li> <li><tt>bundle("patternKey", arg1, arg2, arg3)</tt> will retrieve the string from resource bundle with key <tt>patternKey</tt>, and will use it as a pattern for MessageFormat with arguments arg1, arg2 and arg3</li> </ul>
 */
@interface FreemarkerExtBeansResourceBundleModel : FreemarkerExtBeansBeanModel < FreemarkerTemplateTemplateMethodModelEx >

#pragma mark Public

- (instancetype)initWithJavaUtilResourceBundle:(JavaUtilResourceBundle *)bundle
            withFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)wrapper;

/**
 @brief Takes first argument as a resource key, looks up a string in resource bundle with this key, then applies a MessageFormat.format on the string with the rest of the arguments.
 The created MessageFormats are cached for later reuse.
 */
- (id)execWithJavaUtilList:(id<JavaUtilList>)arguments;

/**
 @brief Provides direct access to caching format engine from code (instead of from script).
 */
- (NSString *)formatWithNSString:(NSString *)key
               withNSObjectArray:(IOSObjectArray *)params;

- (JavaUtilResourceBundle *)getBundle;

/**
 @brief Returns true if this bundle contains no objects.
 */
- (jboolean)isEmpty;

- (jint)size;

#pragma mark Protected

/**
 @brief Overridden to invoke the getObject method of the resource bundle.
 */
- (id<FreemarkerTemplateTemplateModel>)invokeGenericGetWithJavaUtilMap:(id<JavaUtilMap>)keyMap
                                                          withIOSClass:(IOSClass *)clazz
                                                          withNSString:(NSString *)key;

- (id<JavaUtilSet>)keySet;

@end

J2OBJC_STATIC_INIT(FreemarkerExtBeansResourceBundleModel)

FOUNDATION_EXPORT id<FreemarkerExtUtilModelFactory> FreemarkerExtBeansResourceBundleModel_FACTORY_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerExtBeansResourceBundleModel, FACTORY_, id<FreemarkerExtUtilModelFactory>)

FOUNDATION_EXPORT void FreemarkerExtBeansResourceBundleModel_initWithJavaUtilResourceBundle_withFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansResourceBundleModel *self, JavaUtilResourceBundle *bundle, FreemarkerExtBeansBeansWrapper *wrapper);

FOUNDATION_EXPORT FreemarkerExtBeansResourceBundleModel *new_FreemarkerExtBeansResourceBundleModel_initWithJavaUtilResourceBundle_withFreemarkerExtBeansBeansWrapper_(JavaUtilResourceBundle *bundle, FreemarkerExtBeansBeansWrapper *wrapper) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansResourceBundleModel)

#endif // _FreemarkerExtBeansResourceBundleModel_H_
