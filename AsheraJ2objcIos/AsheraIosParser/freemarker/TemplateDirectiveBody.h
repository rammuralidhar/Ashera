//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/TemplateDirectiveBody.java
//

#ifndef _FreemarkerTemplateTemplateDirectiveBody_H_
#define _FreemarkerTemplateTemplateDirectiveBody_H_

#include "J2ObjC_header.h"

@class JavaIoWriter;

/**
 @brief Represents the nested content of a directive ( TemplateDirectiveModel ) invocation.
 An implementation of this class is passed to TemplateDirectiveModel#execute(freemarker.core.Environment,java.util.Map,TemplateModel[],TemplateDirectiveBody) . The implementation of the method is free to invoke it for any number of times, with any writer.
 @since 2.3.11
 */
@protocol FreemarkerTemplateTemplateDirectiveBody < NSObject, JavaObject >

/**
 @brief Renders the body of the directive body to the specified writer.
 The writer is not flushed after the rendering. If you pass the environment's writer, there is no need to flush it. If you supply your own writer, you are responsible to flush/close it when you're done with using it (which might be after multiple renderings).
 @param out the writer to write the output to.
 */
- (void)renderWithJavaIoWriter:(JavaIoWriter *)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateTemplateDirectiveBody)

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateTemplateDirectiveBody)

#endif // _FreemarkerTemplateTemplateDirectiveBody_H_
