//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/ReturnInstruction.java
//


#include "Environment.h"
#include "Expression.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "Macro.h"
#include "ParameterRole.h"
#include "ReturnInstruction.h"
#include "TemplateElement.h"
#include "TemplateException.h"
#include "TemplateModel.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuffer.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/ReturnInstruction.java"

@interface FreemarkerCoreReturnInstruction () {
 @public
  FreemarkerCoreExpression *exp_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerCoreReturnInstruction, exp_, FreemarkerCoreExpression *)

@interface FreemarkerCoreReturnInstruction_Return ()

- (instancetype)init;

@end

__attribute__((unused)) static void FreemarkerCoreReturnInstruction_Return_init(FreemarkerCoreReturnInstruction_Return *self);

__attribute__((unused)) static FreemarkerCoreReturnInstruction_Return *new_FreemarkerCoreReturnInstruction_Return_init() NS_RETURNS_RETAINED;


#line 24
@implementation FreemarkerCoreReturnInstruction


#line 28
- (instancetype)initWithFreemarkerCoreExpression:(FreemarkerCoreExpression *)exp {
  FreemarkerCoreReturnInstruction_initWithFreemarkerCoreExpression_(self, exp);
  return self;
}


#line 32
- (void)acceptWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  if (exp_ != nil) {
    [((FreemarkerCoreEnvironment *) nil_chk(env)) setLastReturnValueWithFreemarkerTemplateTemplateModel:[exp_ evalWithFreemarkerCoreEnvironment:env]];
  }
  if ([self nextSibling] != nil) {
    
#line 38
    @throw FreemarkerCoreReturnInstruction_Return_get_INSTANCE_();
  }
  if (!([[self getParentElement] isKindOfClass:[FreemarkerCoreMacro class]] || [[((FreemarkerCoreTemplateElement *) nil_chk([self getParentElement])) getParentElement] isKindOfClass:[FreemarkerCoreMacro class]])) {
    
#line 42
    @throw FreemarkerCoreReturnInstruction_Return_get_INSTANCE_();
  }
}


#line 46
- (NSString *)dumpWithBoolean:(jboolean)canonical {
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  if (canonical) (void) [sb appendWithChar:'<'];
  (void) [sb appendWithNSString:[self getNodeTypeSymbol]];
  if (exp_ != nil) {
    (void) [sb appendWithChar:' '];
    (void) [sb appendWithNSString:[exp_ getCanonicalForm]];
  }
  if (canonical) (void) [sb appendWithNSString:@"/>"];
  return [sb description];
}

- (NSString *)getNodeTypeSymbol {
  return @"#return";
}


#line 68
- (jint)getParameterCount {
  return 1;
}

- (id)getParameterValueWithInt:(jint)idx {
  if (idx != 0) @throw new_JavaLangIndexOutOfBoundsException_init();
  return exp_;
}

- (FreemarkerCoreParameterRole *)getParameterRoleWithInt:(jint)idx {
  if (idx != 0) @throw new_JavaLangIndexOutOfBoundsException_init();
  return FreemarkerCoreParameterRole_get_VALUE_();
}

- (jboolean)isNestedBlockRepeater {
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreExpression:", "ReturnInstruction", NULL, 0x0, NULL, NULL },
    { "acceptWithFreemarkerCoreEnvironment:", "accept", "V", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "dumpWithBoolean:", "dump", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getNodeTypeSymbol", NULL, "Ljava.lang.String;", 0x0, NULL, NULL },
    { "getParameterCount", NULL, "I", 0x0, NULL, NULL },
    { "getParameterValueWithInt:", "getParameterValue", "Ljava.lang.Object;", 0x0, NULL, NULL },
    { "getParameterRoleWithInt:", "getParameterRole", "Lfreemarker.core.ParameterRole;", 0x0, NULL, NULL },
    { "isNestedBlockRepeater", NULL, "Z", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "exp_", NULL, 0x2, "Lfreemarker.core.Expression;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.ReturnInstruction$Return;"};
  static const J2ObjcClassInfo _FreemarkerCoreReturnInstruction = { 2, "ReturnInstruction", "freemarker.core", NULL, 0x11, 8, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_FreemarkerCoreReturnInstruction;
}

@end


#line 28
void FreemarkerCoreReturnInstruction_initWithFreemarkerCoreExpression_(FreemarkerCoreReturnInstruction *self, FreemarkerCoreExpression *exp) {
  (void) FreemarkerCoreTemplateElement_init(self);
  
#line 29
  self->exp_ = exp;
}


#line 28
FreemarkerCoreReturnInstruction *new_FreemarkerCoreReturnInstruction_initWithFreemarkerCoreExpression_(FreemarkerCoreExpression *exp) {
  FreemarkerCoreReturnInstruction *self = [FreemarkerCoreReturnInstruction alloc];
  FreemarkerCoreReturnInstruction_initWithFreemarkerCoreExpression_(self, exp);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreReturnInstruction)

J2OBJC_INITIALIZED_DEFN(FreemarkerCoreReturnInstruction_Return)

FreemarkerCoreReturnInstruction_Return *FreemarkerCoreReturnInstruction_Return_INSTANCE_;


#line 62
@implementation FreemarkerCoreReturnInstruction_Return

- (instancetype)init {
  FreemarkerCoreReturnInstruction_Return_init(self);
  return self;
}

+ (void)initialize {
  if (self == [FreemarkerCoreReturnInstruction_Return class]) {
    FreemarkerCoreReturnInstruction_Return_INSTANCE_ = new_FreemarkerCoreReturnInstruction_Return_init();
    J2OBJC_SET_INITIALIZED(FreemarkerCoreReturnInstruction_Return)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Return", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE_", NULL, 0x18, "Lfreemarker.core.ReturnInstruction$Return;", &FreemarkerCoreReturnInstruction_Return_INSTANCE_, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreReturnInstruction_Return = { 2, "Return", "freemarker.core", "ReturnInstruction", 0x9, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreReturnInstruction_Return;
}

@end


#line 64
void FreemarkerCoreReturnInstruction_Return_init(FreemarkerCoreReturnInstruction_Return *self) {
  (void) JavaLangRuntimeException_init(self);
}


#line 64
FreemarkerCoreReturnInstruction_Return *new_FreemarkerCoreReturnInstruction_Return_init() {
  FreemarkerCoreReturnInstruction_Return *self = [FreemarkerCoreReturnInstruction_Return alloc];
  FreemarkerCoreReturnInstruction_Return_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreReturnInstruction_Return)
