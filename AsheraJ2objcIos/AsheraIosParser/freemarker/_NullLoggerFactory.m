//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/log/_NullLoggerFactory.java
//


#include "J2ObjC_source.h"
#include "Logger.h"
#include "_NullLoggerFactory.h"
#include "java/lang/Throwable.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/log/_NullLoggerFactory.java"

static FreemarkerLogLogger *FreemarkerLog_NullLoggerFactory_INSTANCE_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerLog_NullLoggerFactory, INSTANCE_, FreemarkerLogLogger *)

@interface FreemarkerLog_NullLoggerFactory_$1 : FreemarkerLogLogger

- (void)debugWithNSString:(NSString *)message;

- (void)debugWithNSString:(NSString *)message
    withJavaLangThrowable:(JavaLangThrowable *)t;

- (void)errorWithNSString:(NSString *)message;

- (void)errorWithNSString:(NSString *)message
    withJavaLangThrowable:(JavaLangThrowable *)t;

- (void)infoWithNSString:(NSString *)message;

- (void)infoWithNSString:(NSString *)message
   withJavaLangThrowable:(JavaLangThrowable *)t;

- (void)warnWithNSString:(NSString *)message;

- (void)warnWithNSString:(NSString *)message
   withJavaLangThrowable:(JavaLangThrowable *)t;

- (jboolean)isDebugEnabled;

- (jboolean)isInfoEnabled;

- (jboolean)isWarnEnabled;

- (jboolean)isErrorEnabled;

- (jboolean)isFatalEnabled;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerLog_NullLoggerFactory_$1)

__attribute__((unused)) static void FreemarkerLog_NullLoggerFactory_$1_init(FreemarkerLog_NullLoggerFactory_$1 *self);

__attribute__((unused)) static FreemarkerLog_NullLoggerFactory_$1 *new_FreemarkerLog_NullLoggerFactory_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerLog_NullLoggerFactory_$1)

J2OBJC_INITIALIZED_DEFN(FreemarkerLog_NullLoggerFactory)


#line 23
@implementation FreemarkerLog_NullLoggerFactory

- (instancetype)init {
  FreemarkerLog_NullLoggerFactory_init(self);
  return self;
}


#line 29
- (FreemarkerLogLogger *)getLoggerWithNSString:(NSString *)category {
  
#line 31
  return FreemarkerLog_NullLoggerFactory_INSTANCE_;
}

+ (void)initialize {
  if (self == [FreemarkerLog_NullLoggerFactory class]) {
    FreemarkerLog_NullLoggerFactory_INSTANCE_ = new_FreemarkerLog_NullLoggerFactory_$1_init();
    J2OBJC_SET_INITIALIZED(FreemarkerLog_NullLoggerFactory)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "_NullLoggerFactory", NULL, 0x0, NULL, NULL },
    { "getLoggerWithNSString:", "getLogger", "Lfreemarker.log.Logger;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE_", NULL, 0x1a, "Lfreemarker.log.Logger;", &FreemarkerLog_NullLoggerFactory_INSTANCE_, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerLog_NullLoggerFactory = { 2, "_NullLoggerFactory", "freemarker.log", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerLog_NullLoggerFactory;
}

@end


#line 25
void FreemarkerLog_NullLoggerFactory_init(FreemarkerLog_NullLoggerFactory *self) {
  (void) NSObject_init(self);
}


#line 25
FreemarkerLog_NullLoggerFactory *new_FreemarkerLog_NullLoggerFactory_init() {
  FreemarkerLog_NullLoggerFactory *self = [FreemarkerLog_NullLoggerFactory alloc];
  FreemarkerLog_NullLoggerFactory_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerLog_NullLoggerFactory)

@implementation FreemarkerLog_NullLoggerFactory_$1


#line 36
- (void)debugWithNSString:(NSString *)message {
}


#line 40
- (void)debugWithNSString:(NSString *)message
    withJavaLangThrowable:(JavaLangThrowable *)t {
}

- (void)errorWithNSString:(NSString *)message {
}


#line 48
- (void)errorWithNSString:(NSString *)message
    withJavaLangThrowable:(JavaLangThrowable *)t {
}

- (void)infoWithNSString:(NSString *)message {
}


#line 56
- (void)infoWithNSString:(NSString *)message
   withJavaLangThrowable:(JavaLangThrowable *)t {
}

- (void)warnWithNSString:(NSString *)message {
}


#line 64
- (void)warnWithNSString:(NSString *)message
   withJavaLangThrowable:(JavaLangThrowable *)t {
}

- (jboolean)isDebugEnabled {
  
#line 70
  return NO;
}


#line 73
- (jboolean)isInfoEnabled {
  
#line 75
  return NO;
}


#line 78
- (jboolean)isWarnEnabled {
  
#line 80
  return NO;
}


#line 83
- (jboolean)isErrorEnabled {
  
#line 85
  return NO;
}


#line 88
- (jboolean)isFatalEnabled {
  
#line 90
  return NO;
}

- (instancetype)init {
  FreemarkerLog_NullLoggerFactory_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "debugWithNSString:", "debug", "V", 0x1, NULL, NULL },
    { "debugWithNSString:withJavaLangThrowable:", "debug", "V", 0x1, NULL, NULL },
    { "errorWithNSString:", "error", "V", 0x1, NULL, NULL },
    { "errorWithNSString:withJavaLangThrowable:", "error", "V", 0x1, NULL, NULL },
    { "infoWithNSString:", "info", "V", 0x1, NULL, NULL },
    { "infoWithNSString:withJavaLangThrowable:", "info", "V", 0x1, NULL, NULL },
    { "warnWithNSString:", "warn", "V", 0x1, NULL, NULL },
    { "warnWithNSString:withJavaLangThrowable:", "warn", "V", 0x1, NULL, NULL },
    { "isDebugEnabled", NULL, "Z", 0x1, NULL, NULL },
    { "isInfoEnabled", NULL, "Z", 0x1, NULL, NULL },
    { "isWarnEnabled", NULL, "Z", 0x1, NULL, NULL },
    { "isErrorEnabled", NULL, "Z", 0x1, NULL, NULL },
    { "isFatalEnabled", NULL, "Z", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerLog_NullLoggerFactory_$1 = { 2, "", "freemarker.log", "_NullLoggerFactory", 0x8008, 14, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerLog_NullLoggerFactory_$1;
}

@end

void FreemarkerLog_NullLoggerFactory_$1_init(FreemarkerLog_NullLoggerFactory_$1 *self) {
  (void) FreemarkerLogLogger_init(self);
}

FreemarkerLog_NullLoggerFactory_$1 *new_FreemarkerLog_NullLoggerFactory_$1_init() {
  FreemarkerLog_NullLoggerFactory_$1 *self = [FreemarkerLog_NullLoggerFactory_$1 alloc];
  FreemarkerLog_NullLoggerFactory_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerLog_NullLoggerFactory_$1)
