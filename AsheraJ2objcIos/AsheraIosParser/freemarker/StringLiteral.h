//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/StringLiteral.java
//

#ifndef _FreemarkerCoreStringLiteral_H_
#define _FreemarkerCoreStringLiteral_H_

#include "Expression.h"
#include "J2ObjC_header.h"
#include "TemplateScalarModel.h"

@class FreemarkerCoreEnvironment;
@class FreemarkerCoreFMParserTokenManager;
@class FreemarkerCoreParameterRole;
@protocol FreemarkerTemplateTemplateModel;

@interface FreemarkerCoreStringLiteral : FreemarkerCoreExpression < FreemarkerTemplateTemplateScalarModel >

#pragma mark Public

- (NSString *)getAsString;

- (NSString *)getCanonicalForm;

#pragma mark Protected

- (FreemarkerCoreExpression *)deepCloneWithIdentifierReplaced_innerWithNSString:(NSString *)replacedIdentifier
                                                   withFreemarkerCoreExpression:(FreemarkerCoreExpression *)replacement
                                 withFreemarkerCoreExpression_ReplacemenetState:(FreemarkerCoreExpression_ReplacemenetState *)replacementState;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)value;

- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

- (NSString *)evalAndCoerceToStringWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

- (NSString *)getNodeTypeSymbol;

- (jint)getParameterCount;

- (FreemarkerCoreParameterRole *)getParameterRoleWithInt:(jint)idx;

- (id)getParameterValueWithInt:(jint)idx;

- (jboolean)isLiteral;

/**
 @brief Tells if this is something like <tt>"${foo}"</tt>, which is usually a user mistake.
 */
- (jboolean)isSingleInterpolationLiteral;

/**
 @param parentTokenSource The token source of the template that contains this string literal. As of this writing, we only need this to share the <code>namingConvetion</code> with that.
 */
- (void)parseValueWithFreemarkerCoreFMParserTokenManager:(FreemarkerCoreFMParserTokenManager *)parentTokenSource;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreStringLiteral)

FOUNDATION_EXPORT void FreemarkerCoreStringLiteral_initWithNSString_(FreemarkerCoreStringLiteral *self, NSString *value);

FOUNDATION_EXPORT FreemarkerCoreStringLiteral *new_FreemarkerCoreStringLiteral_initWithNSString_(NSString *value) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreStringLiteral)

#endif // _FreemarkerCoreStringLiteral_H_
