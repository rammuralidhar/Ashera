//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/MalformedTemplateNameException.java
//

#ifndef _FreemarkerTemplateMalformedTemplateNameException_H_
#define _FreemarkerTemplateMalformedTemplateNameException_H_

#include "J2ObjC_header.h"
#include "java/io/IOException.h"

/**
 @brief Indicates that the template name given was malformed according the TemplateNameFormat in use.
 Note that for backward compatibility, TemplateNameFormat#DEFAULT_2_3_0 doesn't throw this exception, TemplateNameFormat#DEFAULT_2_4_0 does. This exception extends IOException for backward compatibility.
 @since 2.3.22
 */
@interface FreemarkerTemplateMalformedTemplateNameException : JavaIoIOException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)templateName
                    withNSString:(NSString *)malformednessDescription;

- (NSString *)getMalformednessDescription;

- (NSString *)getTemplateName;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateMalformedTemplateNameException)

FOUNDATION_EXPORT void FreemarkerTemplateMalformedTemplateNameException_initWithNSString_withNSString_(FreemarkerTemplateMalformedTemplateNameException *self, NSString *templateName, NSString *malformednessDescription);

FOUNDATION_EXPORT FreemarkerTemplateMalformedTemplateNameException *new_FreemarkerTemplateMalformedTemplateNameException_initWithNSString_withNSString_(NSString *templateName, NSString *malformednessDescription) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateMalformedTemplateNameException)

#endif // _FreemarkerTemplateMalformedTemplateNameException_H_
