//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/CommandLine.java
//


#include "CommandLine.h"
#include "Configuration.h"
#include "DateUtil.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Version.h"
#include "java/io/PrintStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/System.h"
#include "java/util/Date.h"
#include "java/util/TimeZone.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/CommandLine.java"


#line 29
@implementation FreemarkerCoreCommandLine

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  FreemarkerCoreCommandLine_mainWithNSStringArray_(args);
}

- (instancetype)init {
  FreemarkerCoreCommandLine_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "mainWithNSStringArray:", "main", "V", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreCommandLine = { 2, "CommandLine", "freemarker.core", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreCommandLine;
}

@end


#line 31
void FreemarkerCoreCommandLine_mainWithNSStringArray_(IOSObjectArray *args) {
  FreemarkerCoreCommandLine_initialize();
  
#line 32
  FreemarkerTemplateVersion *ver = FreemarkerTemplateConfiguration_getVersion();
  
#line 34
  [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) println];
  [JavaLangSystem_get_out_() printWithNSString:@"FreeMarker version "];
  [JavaLangSystem_get_out_() printWithId:ver];
  
#line 39
  if (![((NSString *) nil_chk([((FreemarkerTemplateVersion *) nil_chk(ver)) description])) hasSuffix:@"Z"] &&
#line 40
  [ver getBuildDate] != nil) {
    [JavaLangSystem_get_out_() printWithNSString:@" (built on "];
    [JavaLangSystem_get_out_() printWithNSString:FreemarkerTemplateUtilityDateUtil_dateToISO8601StringWithJavaUtilDate_withBoolean_withBoolean_withBoolean_withInt_withJavaUtilTimeZone_withFreemarkerTemplateUtilityDateUtil_DateToISO8601CalendarFactory_(
#line 43
    [ver getBuildDate],
#line 44
    YES, YES, YES, FreemarkerTemplateUtilityDateUtil_ACCURACY_SECONDS, FreemarkerTemplateUtilityDateUtil_get_UTC_(), new_FreemarkerTemplateUtilityDateUtil_TrivialDateToISO8601CalendarFactory_init())];
    
#line 47
    [JavaLangSystem_get_out_() printWithNSString:@")"];
  }
  [JavaLangSystem_get_out_() println];
  
#line 51
  if ([ver isGAECompliant] != nil) {
    [JavaLangSystem_get_out_() printWithNSString:@"Google App Engine complian variant: "];
    [JavaLangSystem_get_out_() printlnWithNSString:[((JavaLangBoolean *) nil_chk([ver isGAECompliant])) booleanValue] ? @"Yes" : @"No"];
  }
  
#line 56
  [JavaLangSystem_get_out_() println];
  [JavaLangSystem_get_out_() printlnWithNSString:@"Copyright (c) 2014 Attila Szegedi, Daniel Dekany, Jonathan Revusky."];
  [JavaLangSystem_get_out_() printlnWithNSString:@"Licensed under the Apache License, Version 2.0"];
  [JavaLangSystem_get_out_() println];
  [JavaLangSystem_get_out_() printlnWithNSString:@"For more information and for updates visit our Web site:"];
  [JavaLangSystem_get_out_() printlnWithNSString:@"http://freemarker.org/"];
  [JavaLangSystem_get_out_() println];
}

void FreemarkerCoreCommandLine_init(FreemarkerCoreCommandLine *self) {
  (void) NSObject_init(self);
}

FreemarkerCoreCommandLine *new_FreemarkerCoreCommandLine_init() {
  FreemarkerCoreCommandLine *self = [FreemarkerCoreCommandLine alloc];
  FreemarkerCoreCommandLine_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreCommandLine)
