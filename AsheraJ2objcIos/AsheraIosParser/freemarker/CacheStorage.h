//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/CacheStorage.java
//

#ifndef _FreemarkerCacheCacheStorage_H_
#define _FreemarkerCacheCacheStorage_H_

#include "J2ObjC_header.h"

/**
 @brief Cache storage abstracts away the storage aspects of a cache - associating an object with a key, retrieval and removal via the key.
 It is actually a small subset of the java.util.Map interface. The implementations can be coded in a non-threadsafe manner as the natural user of the cache storage, TemplateCache does the necessary synchronization.
 */
@protocol FreemarkerCacheCacheStorage < NSObject, JavaObject >

- (id)getWithId:(id)key;

- (void)putWithId:(id)key
           withId:(id)value;

- (void)removeWithId:(id)key;

- (void)clear;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCacheCacheStorage)

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCacheCacheStorage)

#endif // _FreemarkerCacheCacheStorage_H_
