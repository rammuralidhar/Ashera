//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/ToCanonical.java
//


#include "Configuration.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Template.h"
#include "ToCanonical.h"
#include "java/io/File.h"
#include "java/io/FileWriter.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/ToCanonical.java"

J2OBJC_INITIALIZED_DEFN(FreemarkerTemplateUtilityToCanonical)

FreemarkerTemplateConfiguration *FreemarkerTemplateUtilityToCanonical_config_;


#line 31
@implementation FreemarkerTemplateUtilityToCanonical


#line 38
+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  FreemarkerTemplateUtilityToCanonical_mainWithNSStringArray_(args);
}


#line 57
+ (void)convertFileWithJavaIoFile:(JavaIoFile *)f {
  FreemarkerTemplateUtilityToCanonical_convertFileWithJavaIoFile_(f);
}


#line 72
+ (void)usage {
  FreemarkerTemplateUtilityToCanonical_usage();
}

- (instancetype)init {
  FreemarkerTemplateUtilityToCanonical_init(self);
  return self;
}

+ (void)initialize {
  if (self == [FreemarkerTemplateUtilityToCanonical class]) {
    FreemarkerTemplateUtilityToCanonical_config_ = FreemarkerTemplateConfiguration_getDefaultConfiguration();
    J2OBJC_SET_INITIALIZED(FreemarkerTemplateUtilityToCanonical)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "mainWithNSStringArray:", "main", "V", 0x9, NULL, NULL },
    { "convertFileWithJavaIoFile:", "convertFile", "V", 0x8, "Ljava.io.IOException;", NULL },
    { "usage", NULL, "V", 0x8, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "config_", NULL, 0x8, "Lfreemarker.template.Configuration;", &FreemarkerTemplateUtilityToCanonical_config_, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateUtilityToCanonical = { 2, "ToCanonical", "freemarker.template.utility", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateUtilityToCanonical;
}

@end


#line 38
void FreemarkerTemplateUtilityToCanonical_mainWithNSStringArray_(IOSObjectArray *args) {
  FreemarkerTemplateUtilityToCanonical_initialize();
  
#line 39
  [((FreemarkerTemplateConfiguration *) nil_chk(FreemarkerTemplateUtilityToCanonical_config_)) setWhitespaceStrippingWithBoolean:NO];
  if (((IOSObjectArray *) nil_chk(args))->size_ == 0) {
    FreemarkerTemplateUtilityToCanonical_usage();
  }
  for (jint i = 0; i < args->size_; i++) {
    JavaIoFile *f = new_JavaIoFile_initWithNSString_(IOSObjectArray_Get(args, i));
    if (![f exists]) {
      [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_err_())) printlnWithNSString:JreStrcat("$@$", @"File ", f, @" doesn't exist.")];
    }
    @try {
      FreemarkerTemplateUtilityToCanonical_convertFileWithJavaIoFile_(f);
    }
    @catch (
#line 50
    JavaLangException *e) {
      [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_err_())) printlnWithNSString:JreStrcat("$@", @"Error converting file: ", f)];
      [((JavaLangException *) nil_chk(e)) printStackTrace];
    }
  }
}


#line 57
void FreemarkerTemplateUtilityToCanonical_convertFileWithJavaIoFile_(JavaIoFile *f) {
  FreemarkerTemplateUtilityToCanonical_initialize();
  
#line 58
  JavaIoFile *fullPath = [((JavaIoFile *) nil_chk(f)) getAbsoluteFile];
  JavaIoFile *dir = [((JavaIoFile *) nil_chk(fullPath)) getParentFile];
  NSString *filename = [fullPath getName];
  JavaIoFile *convertedFile = new_JavaIoFile_initWithJavaIoFile_withNSString_(dir, JreStrcat("$$", filename, @".canonical"));
  [((FreemarkerTemplateConfiguration *) nil_chk(FreemarkerTemplateUtilityToCanonical_config_)) setDirectoryForTemplateLoadingWithJavaIoFile:dir];
  FreemarkerTemplateTemplate *template_ = [FreemarkerTemplateUtilityToCanonical_config_ getTemplateWithNSString:filename];
  JavaIoFileWriter *output = new_JavaIoFileWriter_initWithJavaIoFile_(convertedFile);
  @try {
    [((FreemarkerTemplateTemplate *) nil_chk(template_)) dumpWithJavaIoWriter:output];
  }
  @finally {
    
#line 68
    [output close];
  }
}


#line 72
void FreemarkerTemplateUtilityToCanonical_usage() {
  FreemarkerTemplateUtilityToCanonical_initialize();
  
#line 73
  [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_err_())) printlnWithNSString:@"Usage: java freemarker.template.utility.ToCanonical <filename(s)>"];
}

void FreemarkerTemplateUtilityToCanonical_init(FreemarkerTemplateUtilityToCanonical *self) {
  (void) NSObject_init(self);
}

FreemarkerTemplateUtilityToCanonical *new_FreemarkerTemplateUtilityToCanonical_init() {
  FreemarkerTemplateUtilityToCanonical *self = [FreemarkerTemplateUtilityToCanonical alloc];
  FreemarkerTemplateUtilityToCanonical_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateUtilityToCanonical)
