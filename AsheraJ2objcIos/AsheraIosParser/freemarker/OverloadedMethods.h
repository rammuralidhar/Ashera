//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/OverloadedMethods.java
//

#ifndef _FreemarkerExtBeansOverloadedMethods_H_
#define _FreemarkerExtBeansOverloadedMethods_H_

#include "J2ObjC_header.h"

@class FreemarkerExtBeansBeansWrapper;
@class FreemarkerExtBeansMemberAndArguments;
@class JavaLangReflectConstructor;
@class JavaLangReflectMethod;
@protocol JavaUtilList;

/**
 @brief Used instead of java.lang.reflect.Method or java.lang.reflect.Constructor for overloaded methods and constructors.
 <p>After the initialization with the #addMethod(Method) and #addConstructor(Constructor) calls are done, the instance must be thread-safe. Before that, it's the responsibility of the caller of those methods to ensure that the object is properly publishing to other threads.
 */
@interface FreemarkerExtBeansOverloadedMethods : NSObject

#pragma mark Package-Private

- (instancetype)initWithBoolean:(jboolean)bugfixed;

- (void)addConstructorWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)constr;

- (void)addMethodWithJavaLangReflectMethod:(JavaLangReflectMethod *)method;

- (FreemarkerExtBeansMemberAndArguments *)getMemberAndArgumentsWithJavaUtilList:(id<JavaUtilList>)tmArgs
                                             withFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)unwrapper;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerExtBeansOverloadedMethods)

FOUNDATION_EXPORT void FreemarkerExtBeansOverloadedMethods_initWithBoolean_(FreemarkerExtBeansOverloadedMethods *self, jboolean bugfixed);

FOUNDATION_EXPORT FreemarkerExtBeansOverloadedMethods *new_FreemarkerExtBeansOverloadedMethods_initWithBoolean_(jboolean bugfixed) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansOverloadedMethods)

#endif // _FreemarkerExtBeansOverloadedMethods_H_
