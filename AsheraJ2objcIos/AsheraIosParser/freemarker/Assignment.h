//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/Assignment.java
//

#ifndef _FreemarkerCoreAssignment_H_
#define _FreemarkerCoreAssignment_H_

#include "J2ObjC_header.h"
#include "TemplateElement.h"

@class FreemarkerCoreEnvironment;
@class FreemarkerCoreExpression;
@class FreemarkerCoreParameterRole;

#define FreemarkerCoreAssignment_NAMESPACE 1
#define FreemarkerCoreAssignment_LOCAL 2
#define FreemarkerCoreAssignment_GLOBAL 3

/**
 @brief An instruction that makes a single assignment, like [#local x=1].
 This is also used as the child of AssignmentInstruction , if there are multiple assignments in the same tag, like in [#local x=1 x=2].
 */
@interface FreemarkerCoreAssignment : FreemarkerCoreTemplateElement

#pragma mark Protected

- (NSString *)dumpWithBoolean:(jboolean)canonical;

#pragma mark Package-Private

/**
 @param variableName the variable name to assign to.
 @param valueExp the expression to assign.
 @param scope the scope of the assignment, one of NAMESPACE, LOCAL, or GLOBAL
 */
- (instancetype)initWithNSString:(NSString *)variableName
                         withInt:(jint)operator_
    withFreemarkerCoreExpression:(FreemarkerCoreExpression *)valueExp
                         withInt:(jint)scope;

- (void)acceptWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

+ (NSString *)getDirectiveNameWithInt:(jint)scope;

- (NSString *)getNodeTypeSymbol;

- (jint)getParameterCount;

- (FreemarkerCoreParameterRole *)getParameterRoleWithInt:(jint)idx;

- (id)getParameterValueWithInt:(jint)idx;

- (jboolean)isNestedBlockRepeater;

- (void)setNamespaceExpWithFreemarkerCoreExpression:(FreemarkerCoreExpression *)namespaceExp;

@end

J2OBJC_STATIC_INIT(FreemarkerCoreAssignment)

J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreAssignment, NAMESPACE, jint)

J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreAssignment, LOCAL, jint)

J2OBJC_STATIC_FIELD_GETTER(FreemarkerCoreAssignment, GLOBAL, jint)

FOUNDATION_EXPORT void FreemarkerCoreAssignment_initWithNSString_withInt_withFreemarkerCoreExpression_withInt_(FreemarkerCoreAssignment *self, NSString *variableName, jint operator_, FreemarkerCoreExpression *valueExp, jint scope);

FOUNDATION_EXPORT FreemarkerCoreAssignment *new_FreemarkerCoreAssignment_initWithNSString_withInt_withFreemarkerCoreExpression_withInt_(NSString *variableName, jint operator_, FreemarkerCoreExpression *valueExp, jint scope) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NSString *FreemarkerCoreAssignment_getDirectiveNameWithInt_(jint scope);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreAssignment)

#endif // _FreemarkerCoreAssignment_H_
