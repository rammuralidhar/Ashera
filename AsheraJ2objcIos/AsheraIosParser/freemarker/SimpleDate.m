//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/SimpleDate.java
//


#include "J2ObjC_source.h"
#include "SimpleDate.h"
#include "TemplateDateModel.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/sql/Date.h"
#include "java/sql/Time.h"
#include "java/sql/Timestamp.h"
#include "java/util/Date.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/SimpleDate.java"

@interface FreemarkerTemplateSimpleDate () {
 @public
  JavaUtilDate *date_;
  jint type_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerTemplateSimpleDate, date_, JavaUtilDate *)


#line 24
@implementation FreemarkerTemplateSimpleDate


#line 33
- (instancetype)initWithJavaSqlDate:(JavaSqlDate *)date {
  FreemarkerTemplateSimpleDate_initWithJavaSqlDate_(self, date);
  return self;
}


#line 41
- (instancetype)initWithJavaSqlTime:(JavaSqlTime *)time {
  FreemarkerTemplateSimpleDate_initWithJavaSqlTime_(self, time);
  return self;
}


#line 49
- (instancetype)initWithJavaSqlTimestamp:(JavaSqlTimestamp *)datetime {
  FreemarkerTemplateSimpleDate_initWithJavaSqlTimestamp_(self, datetime);
  return self;
}


#line 57
- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)date
                             withInt:(jint)type {
  FreemarkerTemplateSimpleDate_initWithJavaUtilDate_withInt_(self, date, type);
  return self;
}


#line 65
- (JavaUtilDate *)getAsDate {
  return date_;
}

- (jint)getDateType {
  return type_;
}

- (NSString *)description {
  return [((JavaUtilDate *) nil_chk(date_)) description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaSqlDate:", "SimpleDate", NULL, 0x1, NULL, NULL },
    { "initWithJavaSqlTime:", "SimpleDate", NULL, 0x1, NULL, NULL },
    { "initWithJavaSqlTimestamp:", "SimpleDate", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilDate:withInt:", "SimpleDate", NULL, 0x1, NULL, NULL },
    { "getAsDate", NULL, "Ljava.util.Date;", 0x1, NULL, NULL },
    { "getDateType", NULL, "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "date_", NULL, 0x12, "Ljava.util.Date;", NULL, NULL,  },
    { "type_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateSimpleDate = { 2, "SimpleDate", "freemarker.template", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateSimpleDate;
}

@end


#line 33
void FreemarkerTemplateSimpleDate_initWithJavaSqlDate_(FreemarkerTemplateSimpleDate *self, JavaSqlDate *date) {
  (void) FreemarkerTemplateSimpleDate_initWithJavaUtilDate_withInt_(self, date, FreemarkerTemplateTemplateDateModel_DATE);
}


#line 33
FreemarkerTemplateSimpleDate *new_FreemarkerTemplateSimpleDate_initWithJavaSqlDate_(JavaSqlDate *date) {
  FreemarkerTemplateSimpleDate *self = [FreemarkerTemplateSimpleDate alloc];
  FreemarkerTemplateSimpleDate_initWithJavaSqlDate_(self, date);
  return self;
}


#line 41
void FreemarkerTemplateSimpleDate_initWithJavaSqlTime_(FreemarkerTemplateSimpleDate *self, JavaSqlTime *time) {
  (void) FreemarkerTemplateSimpleDate_initWithJavaUtilDate_withInt_(self, time, FreemarkerTemplateTemplateDateModel_TIME);
}


#line 41
FreemarkerTemplateSimpleDate *new_FreemarkerTemplateSimpleDate_initWithJavaSqlTime_(JavaSqlTime *time) {
  FreemarkerTemplateSimpleDate *self = [FreemarkerTemplateSimpleDate alloc];
  FreemarkerTemplateSimpleDate_initWithJavaSqlTime_(self, time);
  return self;
}


#line 49
void FreemarkerTemplateSimpleDate_initWithJavaSqlTimestamp_(FreemarkerTemplateSimpleDate *self, JavaSqlTimestamp *datetime) {
  (void) FreemarkerTemplateSimpleDate_initWithJavaUtilDate_withInt_(self, datetime, FreemarkerTemplateTemplateDateModel_DATETIME);
}


#line 49
FreemarkerTemplateSimpleDate *new_FreemarkerTemplateSimpleDate_initWithJavaSqlTimestamp_(JavaSqlTimestamp *datetime) {
  FreemarkerTemplateSimpleDate *self = [FreemarkerTemplateSimpleDate alloc];
  FreemarkerTemplateSimpleDate_initWithJavaSqlTimestamp_(self, datetime);
  return self;
}


#line 57
void FreemarkerTemplateSimpleDate_initWithJavaUtilDate_withInt_(FreemarkerTemplateSimpleDate *self, JavaUtilDate *date, jint type) {
  (void) NSObject_init(self);
  
#line 58
  if (date == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"date == null");
  }
  self->date_ = date;
  self->type_ = type;
}


#line 57
FreemarkerTemplateSimpleDate *new_FreemarkerTemplateSimpleDate_initWithJavaUtilDate_withInt_(JavaUtilDate *date, jint type) {
  FreemarkerTemplateSimpleDate *self = [FreemarkerTemplateSimpleDate alloc];
  FreemarkerTemplateSimpleDate_initWithJavaUtilDate_withInt_(self, date, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateSimpleDate)
