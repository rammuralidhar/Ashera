//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/NullCacheStorage.java
//


#include "J2ObjC_source.h"
#include "NullCacheStorage.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/NullCacheStorage.java"

J2OBJC_INITIALIZED_DEFN(FreemarkerCacheNullCacheStorage)

FreemarkerCacheNullCacheStorage *FreemarkerCacheNullCacheStorage_INSTANCE_;


#line 27
@implementation FreemarkerCacheNullCacheStorage


#line 34
- (jboolean)isConcurrent {
  return YES;
}

- (id)getWithId:(id)key {
  return nil;
}

- (void)putWithId:(id)key
           withId:(id)value {
}

- (void)removeWithId:(id)key {
}


#line 50
- (void)clear {
}


#line 59
- (jint)getSize {
  return 0;
}

- (instancetype)init {
  FreemarkerCacheNullCacheStorage_init(self);
  return self;
}

+ (void)initialize {
  if (self == [FreemarkerCacheNullCacheStorage class]) {
    FreemarkerCacheNullCacheStorage_INSTANCE_ = new_FreemarkerCacheNullCacheStorage_init();
    J2OBJC_SET_INITIALIZED(FreemarkerCacheNullCacheStorage)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isConcurrent", NULL, "Z", 0x1, NULL, NULL },
    { "getWithId:", "get", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "putWithId:withId:", "put", "V", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "V", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "getSize", NULL, "I", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE_", NULL, 0x19, "Lfreemarker.cache.NullCacheStorage;", &FreemarkerCacheNullCacheStorage_INSTANCE_, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCacheNullCacheStorage = { 2, "NullCacheStorage", "freemarker.cache", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCacheNullCacheStorage;
}

@end

void FreemarkerCacheNullCacheStorage_init(FreemarkerCacheNullCacheStorage *self) {
  (void) NSObject_init(self);
}

FreemarkerCacheNullCacheStorage *new_FreemarkerCacheNullCacheStorage_init() {
  FreemarkerCacheNullCacheStorage *self = [FreemarkerCacheNullCacheStorage alloc];
  FreemarkerCacheNullCacheStorage_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCacheNullCacheStorage)
