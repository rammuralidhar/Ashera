//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/BuiltInsForNodes.java
//


#include "BuiltInForNode.h"
#include "BuiltInsForNodes.h"
#include "Environment.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "SimpleScalar.h"
#include "SimpleSequence.h"
#include "StringUtil.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "TemplateNodeModel.h"
#include "TemplateSequenceModel.h"
#include "java/util/List.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/BuiltInsForNodes.java"

@interface FreemarkerCoreBuiltInsForNodes ()

- (instancetype)init;

@end

__attribute__((unused)) static void FreemarkerCoreBuiltInsForNodes_init(FreemarkerCoreBuiltInsForNodes *self);

__attribute__((unused)) static FreemarkerCoreBuiltInsForNodes *new_FreemarkerCoreBuiltInsForNodes_init() NS_RETURNS_RETAINED;

@interface FreemarkerCoreBuiltInsForNodes_AncestorSequence () {
 @public
  FreemarkerCoreEnvironment *env_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForNodes_AncestorSequence, env_, FreemarkerCoreEnvironment *)


#line 32
@implementation FreemarkerCoreBuiltInsForNodes


#line 92
- (instancetype)init {
  FreemarkerCoreBuiltInsForNodes_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "BuiltInsForNodes", NULL, 0x2, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForNodes$ancestorsBI;", "Lfreemarker.core.BuiltInsForNodes$childrenBI;", "Lfreemarker.core.BuiltInsForNodes$node_nameBI;", "Lfreemarker.core.BuiltInsForNodes$node_namespaceBI;", "Lfreemarker.core.BuiltInsForNodes$node_typeBI;", "Lfreemarker.core.BuiltInsForNodes$parentBI;", "Lfreemarker.core.BuiltInsForNodes$rootBI;", "Lfreemarker.core.BuiltInsForNodes$AncestorSequence;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForNodes = { 2, "BuiltInsForNodes", "freemarker.core", NULL, 0x0, 1, methods, 0, NULL, 0, NULL, 8, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForNodes;
}

@end


#line 92
void FreemarkerCoreBuiltInsForNodes_init(FreemarkerCoreBuiltInsForNodes *self) {
  (void) NSObject_init(self);
}


#line 92
FreemarkerCoreBuiltInsForNodes *new_FreemarkerCoreBuiltInsForNodes_init() {
  FreemarkerCoreBuiltInsForNodes *self = [FreemarkerCoreBuiltInsForNodes alloc];
  FreemarkerCoreBuiltInsForNodes_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForNodes)


#line 34
@implementation FreemarkerCoreBuiltInsForNodes_ancestorsBI


#line 35
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateNodeModel:(id<FreemarkerTemplateTemplateNodeModel>)nodeModel
                                                                withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreBuiltInsForNodes_AncestorSequence *result = new_FreemarkerCoreBuiltInsForNodes_AncestorSequence_initWithFreemarkerCoreEnvironment_(env);
  id<FreemarkerTemplateTemplateNodeModel> parent = [((id<FreemarkerTemplateTemplateNodeModel>) nil_chk(nodeModel)) getParentNode];
  while (parent != nil) {
    [result addWithId:parent];
    parent = [((id<FreemarkerTemplateTemplateNodeModel>) nil_chk(parent)) getParentNode];
  }
  return result;
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForNodes_ancestorsBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateResultWithFreemarkerTemplateTemplateNodeModel:withFreemarkerCoreEnvironment:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForNodes_ancestorsBI = { 2, "ancestorsBI", "freemarker.core", "BuiltInsForNodes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForNodes_ancestorsBI;
}

@end

void FreemarkerCoreBuiltInsForNodes_ancestorsBI_init(FreemarkerCoreBuiltInsForNodes_ancestorsBI *self) {
  (void) FreemarkerCoreBuiltInForNode_init(self);
}

FreemarkerCoreBuiltInsForNodes_ancestorsBI *new_FreemarkerCoreBuiltInsForNodes_ancestorsBI_init() {
  FreemarkerCoreBuiltInsForNodes_ancestorsBI *self = [FreemarkerCoreBuiltInsForNodes_ancestorsBI alloc];
  FreemarkerCoreBuiltInsForNodes_ancestorsBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForNodes_ancestorsBI)


#line 46
@implementation FreemarkerCoreBuiltInsForNodes_childrenBI


#line 47
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateNodeModel:(id<FreemarkerTemplateTemplateNodeModel>)nodeModel
                                                                withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  return [((id<FreemarkerTemplateTemplateNodeModel>) nil_chk(nodeModel)) getChildNodes];
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForNodes_childrenBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateResultWithFreemarkerTemplateTemplateNodeModel:withFreemarkerCoreEnvironment:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForNodes_childrenBI = { 2, "childrenBI", "freemarker.core", "BuiltInsForNodes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForNodes_childrenBI;
}

@end

void FreemarkerCoreBuiltInsForNodes_childrenBI_init(FreemarkerCoreBuiltInsForNodes_childrenBI *self) {
  (void) FreemarkerCoreBuiltInForNode_init(self);
}

FreemarkerCoreBuiltInsForNodes_childrenBI *new_FreemarkerCoreBuiltInsForNodes_childrenBI_init() {
  FreemarkerCoreBuiltInsForNodes_childrenBI *self = [FreemarkerCoreBuiltInsForNodes_childrenBI alloc];
  FreemarkerCoreBuiltInsForNodes_childrenBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForNodes_childrenBI)


#line 52
@implementation FreemarkerCoreBuiltInsForNodes_node_nameBI


#line 53
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateNodeModel:(id<FreemarkerTemplateTemplateNodeModel>)nodeModel
                                                                withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  return new_FreemarkerTemplateSimpleScalar_initWithNSString_([((id<FreemarkerTemplateTemplateNodeModel>) nil_chk(nodeModel)) getNodeName]);
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForNodes_node_nameBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateResultWithFreemarkerTemplateTemplateNodeModel:withFreemarkerCoreEnvironment:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForNodes_node_nameBI = { 2, "node_nameBI", "freemarker.core", "BuiltInsForNodes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForNodes_node_nameBI;
}

@end

void FreemarkerCoreBuiltInsForNodes_node_nameBI_init(FreemarkerCoreBuiltInsForNodes_node_nameBI *self) {
  (void) FreemarkerCoreBuiltInForNode_init(self);
}

FreemarkerCoreBuiltInsForNodes_node_nameBI *new_FreemarkerCoreBuiltInsForNodes_node_nameBI_init() {
  FreemarkerCoreBuiltInsForNodes_node_nameBI *self = [FreemarkerCoreBuiltInsForNodes_node_nameBI alloc];
  FreemarkerCoreBuiltInsForNodes_node_nameBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForNodes_node_nameBI)


#line 59
@implementation FreemarkerCoreBuiltInsForNodes_node_namespaceBI


#line 60
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateNodeModel:(id<FreemarkerTemplateTemplateNodeModel>)nodeModel
                                                                withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  NSString *nsURI = [((id<FreemarkerTemplateTemplateNodeModel>) nil_chk(nodeModel)) getNodeNamespace];
  return nsURI == nil ? nil : new_FreemarkerTemplateSimpleScalar_initWithNSString_(nsURI);
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForNodes_node_namespaceBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateResultWithFreemarkerTemplateTemplateNodeModel:withFreemarkerCoreEnvironment:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForNodes_node_namespaceBI = { 2, "node_namespaceBI", "freemarker.core", "BuiltInsForNodes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForNodes_node_namespaceBI;
}

@end

void FreemarkerCoreBuiltInsForNodes_node_namespaceBI_init(FreemarkerCoreBuiltInsForNodes_node_namespaceBI *self) {
  (void) FreemarkerCoreBuiltInForNode_init(self);
}

FreemarkerCoreBuiltInsForNodes_node_namespaceBI *new_FreemarkerCoreBuiltInsForNodes_node_namespaceBI_init() {
  FreemarkerCoreBuiltInsForNodes_node_namespaceBI *self = [FreemarkerCoreBuiltInsForNodes_node_namespaceBI alloc];
  FreemarkerCoreBuiltInsForNodes_node_namespaceBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForNodes_node_namespaceBI)


#line 66
@implementation FreemarkerCoreBuiltInsForNodes_node_typeBI


#line 67
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateNodeModel:(id<FreemarkerTemplateTemplateNodeModel>)nodeModel
                                                                withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  return new_FreemarkerTemplateSimpleScalar_initWithNSString_([((id<FreemarkerTemplateTemplateNodeModel>) nil_chk(nodeModel)) getNodeType]);
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForNodes_node_typeBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateResultWithFreemarkerTemplateTemplateNodeModel:withFreemarkerCoreEnvironment:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForNodes_node_typeBI = { 2, "node_typeBI", "freemarker.core", "BuiltInsForNodes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForNodes_node_typeBI;
}

@end

void FreemarkerCoreBuiltInsForNodes_node_typeBI_init(FreemarkerCoreBuiltInsForNodes_node_typeBI *self) {
  (void) FreemarkerCoreBuiltInForNode_init(self);
}

FreemarkerCoreBuiltInsForNodes_node_typeBI *new_FreemarkerCoreBuiltInsForNodes_node_typeBI_init() {
  FreemarkerCoreBuiltInsForNodes_node_typeBI *self = [FreemarkerCoreBuiltInsForNodes_node_typeBI alloc];
  FreemarkerCoreBuiltInsForNodes_node_typeBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForNodes_node_typeBI)


#line 72
@implementation FreemarkerCoreBuiltInsForNodes_parentBI


#line 73
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateNodeModel:(id<FreemarkerTemplateTemplateNodeModel>)nodeModel
                                                                withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  return [((id<FreemarkerTemplateTemplateNodeModel>) nil_chk(nodeModel)) getParentNode];
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForNodes_parentBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateResultWithFreemarkerTemplateTemplateNodeModel:withFreemarkerCoreEnvironment:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForNodes_parentBI = { 2, "parentBI", "freemarker.core", "BuiltInsForNodes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForNodes_parentBI;
}

@end

void FreemarkerCoreBuiltInsForNodes_parentBI_init(FreemarkerCoreBuiltInsForNodes_parentBI *self) {
  (void) FreemarkerCoreBuiltInForNode_init(self);
}

FreemarkerCoreBuiltInsForNodes_parentBI *new_FreemarkerCoreBuiltInsForNodes_parentBI_init() {
  FreemarkerCoreBuiltInsForNodes_parentBI *self = [FreemarkerCoreBuiltInsForNodes_parentBI alloc];
  FreemarkerCoreBuiltInsForNodes_parentBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForNodes_parentBI)


#line 78
@implementation FreemarkerCoreBuiltInsForNodes_rootBI


#line 79
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateNodeModel:(id<FreemarkerTemplateTemplateNodeModel>)nodeModel
                                                                withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateNodeModel> result = nodeModel;
  id<FreemarkerTemplateTemplateNodeModel> parent = [((id<FreemarkerTemplateTemplateNodeModel>) nil_chk(nodeModel)) getParentNode];
  while (parent != nil) {
    result = parent;
    parent = [((id<FreemarkerTemplateTemplateNodeModel>) nil_chk(result)) getParentNode];
  }
  return result;
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForNodes_rootBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateResultWithFreemarkerTemplateTemplateNodeModel:withFreemarkerCoreEnvironment:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForNodes_rootBI = { 2, "rootBI", "freemarker.core", "BuiltInsForNodes", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForNodes_rootBI;
}

@end

void FreemarkerCoreBuiltInsForNodes_rootBI_init(FreemarkerCoreBuiltInsForNodes_rootBI *self) {
  (void) FreemarkerCoreBuiltInForNode_init(self);
}

FreemarkerCoreBuiltInsForNodes_rootBI *new_FreemarkerCoreBuiltInsForNodes_rootBI_init() {
  FreemarkerCoreBuiltInsForNodes_rootBI *self = [FreemarkerCoreBuiltInsForNodes_rootBI alloc];
  FreemarkerCoreBuiltInsForNodes_rootBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForNodes_rootBI)


#line 95
@implementation FreemarkerCoreBuiltInsForNodes_AncestorSequence


#line 99
- (instancetype)initWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreBuiltInsForNodes_AncestorSequence_initWithFreemarkerCoreEnvironment_(self, env);
  return self;
}


#line 103
- (id)execWithJavaUtilList:(id<JavaUtilList>)names {
  if (names == nil || [names isEmpty]) {
    return self;
  }
  FreemarkerCoreBuiltInsForNodes_AncestorSequence *result = new_FreemarkerCoreBuiltInsForNodes_AncestorSequence_initWithFreemarkerCoreEnvironment_(env_);
  for (jint i = 0; i < [self size]; i++) {
    id<FreemarkerTemplateTemplateNodeModel> tnm = (id<FreemarkerTemplateTemplateNodeModel>) check_protocol_cast([self getWithInt:i], @protocol(FreemarkerTemplateTemplateNodeModel));
    NSString *nodeName = [((id<FreemarkerTemplateTemplateNodeModel>) nil_chk(tnm)) getNodeName];
    NSString *nsURI = [tnm getNodeNamespace];
    if (nsURI == nil) {
      if ([((id<JavaUtilList>) nil_chk(names)) containsWithId:nodeName]) {
        [result addWithId:tnm];
      }
    }
    else {
      
#line 117
      for (jint j = 0; j < [((id<JavaUtilList>) nil_chk(names)) size]; j++) {
        if (FreemarkerTemplateUtilityStringUtil_matchesNameWithNSString_withNSString_withNSString_withFreemarkerCoreEnvironment_((NSString *) check_class_cast([names getWithInt:j], [NSString class]), nodeName, nsURI, env_)) {
          [result addWithId:tnm];
          break;
        }
      }
    }
  }
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreEnvironment:", "AncestorSequence", NULL, 0x0, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "env_", NULL, 0x2, "Lfreemarker.core.Environment;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForNodes_AncestorSequence = { 2, "AncestorSequence", "freemarker.core", "BuiltInsForNodes", 0x8, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForNodes_AncestorSequence;
}

@end


#line 99
void FreemarkerCoreBuiltInsForNodes_AncestorSequence_initWithFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForNodes_AncestorSequence *self, FreemarkerCoreEnvironment *env) {
  (void) FreemarkerTemplateSimpleSequence_init(self);
  
#line 100
  self->env_ = env;
}


#line 99
FreemarkerCoreBuiltInsForNodes_AncestorSequence *new_FreemarkerCoreBuiltInsForNodes_AncestorSequence_initWithFreemarkerCoreEnvironment_(FreemarkerCoreEnvironment *env) {
  FreemarkerCoreBuiltInsForNodes_AncestorSequence *self = [FreemarkerCoreBuiltInsForNodes_AncestorSequence alloc];
  FreemarkerCoreBuiltInsForNodes_AncestorSequence_initWithFreemarkerCoreEnvironment_(self, env);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForNodes_AncestorSequence)
