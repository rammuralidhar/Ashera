//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/BeansWrapper.java
//


#include "APIModel.h"
#include "AdapterTemplateModel.h"
#include "ArrayModel.h"
#include "BeansModelCache.h"
#include "BeansWrapper.h"
#include "BeansWrapperConfiguration.h"
#include "BeansWrapperSingletonHolder.h"
#include "BooleanModel.h"
#include "BugException.h"
#include "CallableMemberDescriptor.h"
#include "CharacterOrString.h"
#include "ClassBasedModelFactory.h"
#include "ClassIntrospector.h"
#include "ClassIntrospectorBuilder.h"
#include "ClassUtil.h"
#include "CollectionAdapter.h"
#include "CollectionModel.h"
#include "Configuration.h"
#include "DateModel.h"
#include "DefaultObjectWrapper.h"
#include "EnumerationModel.h"
#include "HashAdapter.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IdentityHashMap.h"
#include "IteratorModel.h"
#include "J2ObjC_source.h"
#include "Logger.h"
#include "MapModel.h"
#include "MemberAndArguments.h"
#include "MethodAppearanceFineTuner.h"
#include "MethodSorter.h"
#include "ModelCache.h"
#include "ModelFactory.h"
#include "NonPrimitiveArrayBackedReadOnlyList.h"
#include "NumberModel.h"
#include "ObjectWrapper.h"
#include "ObjectWrapperAndUnwrapper.h"
#include "OverloadedMethods.h"
#include "OverloadedNumberUtil.h"
#include "PrimtiveArrayBackedReadOnlyList.h"
#include "ResourceBundleModel.h"
#include "SequenceAdapter.h"
#include "SetAdapter.h"
#include "SimpleMapModel.h"
#include "SimpleMethod.h"
#include "SimpleMethodModel.h"
#include "SimpleObjectWrapper.h"
#include "StaticModels.h"
#include "StringModel.h"
#include "TemplateBooleanModel.h"
#include "TemplateCollectionModel.h"
#include "TemplateDateModel.h"
#include "TemplateHashModel.h"
#include "TemplateMethodModelEx.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "TemplateNumberModel.h"
#include "TemplateScalarModel.h"
#include "TemplateSequenceModel.h"
#include "TypeFlags.h"
#include "UndeclaredThrowableException.h"
#include "Version.h"
#include "WrapperTemplateModel.h"
#include "_DelayedFTLTypeDescription.h"
#include "_DelayedShortClassName.h"
#include "_MethodUtil.h"
#include "_TemplateAPI.h"
#include "_TemplateModelException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/Short.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/reflect/AccessibleObject.h"
#include "java/lang/reflect/Array.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Member.h"
#include "java/lang/reflect/Method.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/Enumeration.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/ResourceBundle.h"
#include "java/util/Set.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/ext/beans/BeansWrapper.java"

@interface FreemarkerExtBeansBeansWrapper () {
 @public
  id sharedIntrospectionLock_;
  /**
   @brief Class to class info cache.
   This object is possibly shared with other BeansWrapper -s! <p>To write this, always use #replaceClassIntrospector(ClassIntrospectorBuilder) . <p>When reading this, it's good idea to synchronize on sharedInrospectionLock when it doesn't hurt overall performance. In theory that's not needed, but apps might fail to keep the rules.
   */
  FreemarkerExtBeansClassIntrospector *classIntrospector_;
  /**
   @brief String class name to StaticModel cache.
   This object only belongs to a single BeansWrapper . This has to be final as #getStaticModels() might returns it any time and then it has to remain a good reference.
   */
  FreemarkerExtBeansStaticModels *staticModels_;
  /**
   @brief String class name to EnumerationModel cache.
   This object only belongs to a single BeansWrapper . This has to be final as #getStaticModels() might returns it any time and then it has to remain a good reference.
   */
  FreemarkerExtBeansClassBasedModelFactory *enumModels_;
  /**
   @brief Object to wrapped object cache; not used by default.
   This object only belongs to a single BeansWrapper .
   */
  FreemarkerExtUtilModelCache *modelCache_;
  FreemarkerExtBeansBooleanModel *falseModel_;
  FreemarkerExtBeansBooleanModel *trueModel_;
  jboolean writeProtected_;
  id<FreemarkerTemplateTemplateModel> nullModel_;
  jint defaultDateType_;
  id<FreemarkerTemplateObjectWrapper> outerIdentity_;
  jboolean methodsShadowItems_;
  jboolean simpleMapWrapper_;
  jboolean strict_;
  FreemarkerTemplateVersion *incompatibleImprovements_;
  id<FreemarkerExtUtilModelFactory> BOOLEAN_FACTORY_;
}

/**
 @brief Replaces the value of #classIntrospector , but first it unregisters the model factories in the old #classIntrospector .
 */
- (void)replaceClassIntrospectorWithFreemarkerExtBeansClassIntrospectorBuilder:(FreemarkerExtBeansClassIntrospectorBuilder *)pa;

- (void)registerModelFactories;

/**
 @brief See #tryUnwrap(TemplateModel, Class, int, boolean) .
 */
- (id)tryUnwrapToWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model
                                        withIOSClass:(IOSClass *)targetClass
                                             withInt:(jint)typeFlags
                                     withJavaUtilMap:(id<JavaUtilMap>)recursionStops;

+ (FreemarkerExtBeansClassBasedModelFactory *)createEnumModelsWithFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)wrapper;

+ (JavaLangReflectConstructor *)enumsModelCtor;

@end

J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper, sharedIntrospectionLock_, id)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper, classIntrospector_, FreemarkerExtBeansClassIntrospector *)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper, staticModels_, FreemarkerExtBeansStaticModels *)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper, enumModels_, FreemarkerExtBeansClassBasedModelFactory *)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper, modelCache_, FreemarkerExtUtilModelCache *)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper, falseModel_, FreemarkerExtBeansBooleanModel *)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper, trueModel_, FreemarkerExtBeansBooleanModel *)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper, nullModel_, id<FreemarkerTemplateTemplateModel>)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper, outerIdentity_, id<FreemarkerTemplateObjectWrapper>)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper, incompatibleImprovements_, FreemarkerTemplateVersion *)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper, BOOLEAN_FACTORY_, id<FreemarkerExtUtilModelFactory>)

static FreemarkerLogLogger *FreemarkerExtBeansBeansWrapper_LOG_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerExtBeansBeansWrapper, LOG_, FreemarkerLogLogger *)

static IOSClass *FreemarkerExtBeansBeansWrapper_ITERABLE_CLASS_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerExtBeansBeansWrapper, ITERABLE_CLASS_, IOSClass *)

static JavaLangReflectConstructor *FreemarkerExtBeansBeansWrapper_ENUMS_MODEL_CTOR_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerExtBeansBeansWrapper, ENUMS_MODEL_CTOR_, JavaLangReflectConstructor *)

static jboolean FreemarkerExtBeansBeansWrapper_ftmaDeprecationWarnLogged_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerExtBeansBeansWrapper, ftmaDeprecationWarnLogged_, jboolean)
J2OBJC_STATIC_FIELD_REF_GETTER(FreemarkerExtBeansBeansWrapper, ftmaDeprecationWarnLogged_, jboolean)

static id<FreemarkerExtUtilModelFactory> FreemarkerExtBeansBeansWrapper_ITERATOR_FACTORY_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerExtBeansBeansWrapper, ITERATOR_FACTORY_, id<FreemarkerExtUtilModelFactory>)

static id<FreemarkerExtUtilModelFactory> FreemarkerExtBeansBeansWrapper_ENUMERATION_FACTORY_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerExtBeansBeansWrapper, ENUMERATION_FACTORY_, id<FreemarkerExtUtilModelFactory>)

__attribute__((unused)) static void FreemarkerExtBeansBeansWrapper_replaceClassIntrospectorWithFreemarkerExtBeansClassIntrospectorBuilder_(FreemarkerExtBeansBeansWrapper *self, FreemarkerExtBeansClassIntrospectorBuilder *pa);

__attribute__((unused)) static void FreemarkerExtBeansBeansWrapper_registerModelFactories(FreemarkerExtBeansBeansWrapper *self);

__attribute__((unused)) static id FreemarkerExtBeansBeansWrapper_tryUnwrapToWithFreemarkerTemplateTemplateModel_withIOSClass_withInt_withJavaUtilMap_(FreemarkerExtBeansBeansWrapper *self, id<FreemarkerTemplateTemplateModel> model, IOSClass *targetClass, jint typeFlags, id<JavaUtilMap> recursionStops);

__attribute__((unused)) static FreemarkerExtBeansClassBasedModelFactory *FreemarkerExtBeansBeansWrapper_createEnumModelsWithFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansBeansWrapper *wrapper);

__attribute__((unused)) static JavaLangReflectConstructor *FreemarkerExtBeansBeansWrapper_enumsModelCtor();

@interface FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision () {
 @public
  NSString *exposeMethodAs_;
  jboolean methodShadowsProperty_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision, exposeMethodAs_, NSString *)

@interface FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput () {
 @public
  JavaLangReflectMethod *method_;
  IOSClass *containingClass_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput, method_, JavaLangReflectMethod *)
J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput, containingClass_, IOSClass *)

@interface FreemarkerExtBeansBeansWrapper_$4 : FreemarkerExtBeansBeansWrapperConfiguration

- (instancetype)initWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerExtBeansBeansWrapper_$4)

__attribute__((unused)) static void FreemarkerExtBeansBeansWrapper_$4_initWithFreemarkerTemplateVersion_(FreemarkerExtBeansBeansWrapper_$4 *self, FreemarkerTemplateVersion *arg$0);

__attribute__((unused)) static FreemarkerExtBeansBeansWrapper_$4 *new_FreemarkerExtBeansBeansWrapper_$4_initWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansBeansWrapper_$4)

@interface FreemarkerExtBeansBeansWrapper_$5 : NSObject < FreemarkerExtBeansMethodAppearanceFineTuner > {
 @public
  FreemarkerExtBeansBeansWrapper *this$0_;
}

- (void)processWithFreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput:(FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput *)inArg
                    withFreemarkerExtBeansBeansWrapper_MethodAppearanceDecision:(FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision *)outArg;

- (instancetype)initWithFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerExtBeansBeansWrapper_$5)

J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper_$5, this$0_, FreemarkerExtBeansBeansWrapper *)

__attribute__((unused)) static void FreemarkerExtBeansBeansWrapper_$5_initWithFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansBeansWrapper_$5 *self, FreemarkerExtBeansBeansWrapper *outer$);

__attribute__((unused)) static FreemarkerExtBeansBeansWrapper_$5 *new_FreemarkerExtBeansBeansWrapper_$5_initWithFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansBeansWrapper *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansBeansWrapper_$5)

@interface FreemarkerExtBeansBeansWrapper_$1 : NSObject < FreemarkerExtUtilModelFactory > {
 @public
  FreemarkerExtBeansBeansWrapper *this$0_;
}

- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (instancetype)initWithFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerExtBeansBeansWrapper_$1)

J2OBJC_FIELD_SETTER(FreemarkerExtBeansBeansWrapper_$1, this$0_, FreemarkerExtBeansBeansWrapper *)

__attribute__((unused)) static void FreemarkerExtBeansBeansWrapper_$1_initWithFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansBeansWrapper_$1 *self, FreemarkerExtBeansBeansWrapper *outer$);

__attribute__((unused)) static FreemarkerExtBeansBeansWrapper_$1 *new_FreemarkerExtBeansBeansWrapper_$1_initWithFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansBeansWrapper *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansBeansWrapper_$1)

@interface FreemarkerExtBeansBeansWrapper_$2 : NSObject < FreemarkerExtUtilModelFactory >

- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerExtBeansBeansWrapper_$2)

__attribute__((unused)) static void FreemarkerExtBeansBeansWrapper_$2_init(FreemarkerExtBeansBeansWrapper_$2 *self);

__attribute__((unused)) static FreemarkerExtBeansBeansWrapper_$2 *new_FreemarkerExtBeansBeansWrapper_$2_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansBeansWrapper_$2)

@interface FreemarkerExtBeansBeansWrapper_$3 : NSObject < FreemarkerExtUtilModelFactory >

- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerExtBeansBeansWrapper_$3)

__attribute__((unused)) static void FreemarkerExtBeansBeansWrapper_$3_init(FreemarkerExtBeansBeansWrapper_$3 *self);

__attribute__((unused)) static FreemarkerExtBeansBeansWrapper_$3 *new_FreemarkerExtBeansBeansWrapper_$3_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerExtBeansBeansWrapper_$3)

J2OBJC_INITIALIZED_DEFN(FreemarkerExtBeansBeansWrapper)

id FreemarkerExtBeansBeansWrapper_CAN_NOT_UNWRAP_;


#line 83
@implementation FreemarkerExtBeansBeansWrapper


#line 207
- (instancetype)init {
  FreemarkerExtBeansBeansWrapper_init(self);
  return self;
}


#line 256
- (instancetype)initWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)incompatibleImprovements {
  FreemarkerExtBeansBeansWrapper_initWithFreemarkerTemplateVersion_(self, incompatibleImprovements);
  return self;
}


#line 270
- (instancetype)initWithFreemarkerExtBeansBeansWrapperConfiguration:(FreemarkerExtBeansBeansWrapperConfiguration *)bwConf
                                                        withBoolean:(jboolean)writeProtected {
  FreemarkerExtBeansBeansWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_(self, bwConf, writeProtected);
  return self;
}


#line 285
- (instancetype)initWithFreemarkerExtBeansBeansWrapperConfiguration:(FreemarkerExtBeansBeansWrapperConfiguration *)bwConf
                                                        withBoolean:(jboolean)writeProtected
                                                        withBoolean:(jboolean)finalizeConstruction {
  FreemarkerExtBeansBeansWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_withBoolean_(self, bwConf, writeProtected, finalizeConstruction);
  return self;
}


#line 370
- (void)finalizeConstructionWithBoolean:(jboolean)writeProtected {
  if (writeProtected) {
    [self writeProtect];
  }
  
#line 380
  FreemarkerExtBeansBeansWrapper_registerModelFactories(self);
}


#line 393
- (void)writeProtect {
  writeProtected_ = YES;
}


#line 400
- (jboolean)isWriteProtected {
  return writeProtected_;
}

- (id)getSharedIntrospectionLock {
  return sharedIntrospectionLock_;
}


#line 414
- (void)checkModifiable {
  if (writeProtected_) @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"Can't modify the ",
#line 416
  [[self getClass] getName], @" object, as it was write protected."));
}


#line 422
- (jboolean)isStrict {
  return strict_;
}


#line 447
- (void)setStrictWithBoolean:(jboolean)strict {
  [self checkModifiable];
  self->strict_ = strict;
}


#line 461
- (void)setOuterIdentityWithFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)outerIdentity {
  
#line 463
  [self checkModifiable];
  self->outerIdentity_ = outerIdentity;
}


#line 471
- (id<FreemarkerTemplateObjectWrapper>)getOuterIdentity {
  
#line 473
  return outerIdentity_;
}


#line 499
- (void)setSimpleMapWrapperWithBoolean:(jboolean)simpleMapWrapper {
  
#line 501
  [self checkModifiable];
  self->simpleMapWrapper_ = simpleMapWrapper;
}


#line 511
- (jboolean)isSimpleMapWrapper {
  
#line 513
  return simpleMapWrapper_;
}


#line 546
- (void)setExposureLevelWithInt:(jint)exposureLevel {
  
#line 548
  [self checkModifiable];
  
#line 550
  if ([((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) getExposureLevel] != exposureLevel) {
    FreemarkerExtBeansClassIntrospectorBuilder *pa = [classIntrospector_ getPropertyAssignments];
    [((FreemarkerExtBeansClassIntrospectorBuilder *) nil_chk(pa)) setExposureLevelWithInt:exposureLevel];
    FreemarkerExtBeansBeansWrapper_replaceClassIntrospectorWithFreemarkerExtBeansClassIntrospectorBuilder_(self, pa);
  }
}


#line 560
- (jint)getExposureLevel {
  
#line 562
  return [((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) getExposureLevel];
}


#line 575
- (void)setExposeFieldsWithBoolean:(jboolean)exposeFields {
  
#line 577
  [self checkModifiable];
  
#line 579
  if ([((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) getExposeFields] != exposeFields) {
    FreemarkerExtBeansClassIntrospectorBuilder *pa = [classIntrospector_ getPropertyAssignments];
    [((FreemarkerExtBeansClassIntrospectorBuilder *) nil_chk(pa)) setExposeFieldsWithBoolean:exposeFields];
    FreemarkerExtBeansBeansWrapper_replaceClassIntrospectorWithFreemarkerExtBeansClassIntrospectorBuilder_(self, pa);
  }
}


#line 591
- (jboolean)isExposeFields {
  
#line 593
  return [((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) getExposeFields];
}


#line 596
- (id<FreemarkerExtBeansMethodAppearanceFineTuner>)getMethodAppearanceFineTuner {
  return [((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) getMethodAppearanceFineTuner];
}


#line 604
- (void)setMethodAppearanceFineTunerWithFreemarkerExtBeansMethodAppearanceFineTuner:(id<FreemarkerExtBeansMethodAppearanceFineTuner>)methodAppearanceFineTuner {
  [self checkModifiable];
  
#line 607
  if ([((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) getMethodAppearanceFineTuner] != methodAppearanceFineTuner) {
    FreemarkerExtBeansClassIntrospectorBuilder *pa = [classIntrospector_ getPropertyAssignments];
    [((FreemarkerExtBeansClassIntrospectorBuilder *) nil_chk(pa)) setMethodAppearanceFineTunerWithFreemarkerExtBeansMethodAppearanceFineTuner:methodAppearanceFineTuner];
    FreemarkerExtBeansBeansWrapper_replaceClassIntrospectorWithFreemarkerExtBeansClassIntrospectorBuilder_(self, pa);
  }
}


#line 614
- (id<FreemarkerExtBeansMethodSorter>)getMethodSorter {
  return [((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) getMethodSorter];
}

- (void)setMethodSorterWithFreemarkerExtBeansMethodSorter:(id<FreemarkerExtBeansMethodSorter>)methodSorter {
  [self checkModifiable];
  
#line 621
  if ([((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) getMethodSorter] != methodSorter) {
    FreemarkerExtBeansClassIntrospectorBuilder *pa = [classIntrospector_ getPropertyAssignments];
    [((FreemarkerExtBeansClassIntrospectorBuilder *) nil_chk(pa)) setMethodSorterWithFreemarkerExtBeansMethodSorter:methodSorter];
    FreemarkerExtBeansBeansWrapper_replaceClassIntrospectorWithFreemarkerExtBeansClassIntrospectorBuilder_(self, pa);
  }
}


#line 638
- (jboolean)isClassIntrospectionCacheRestricted {
  return [((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) getHasSharedInstanceRestrictons];
}


#line 646
- (void)replaceClassIntrospectorWithFreemarkerExtBeansClassIntrospectorBuilder:(FreemarkerExtBeansClassIntrospectorBuilder *)pa {
  FreemarkerExtBeansBeansWrapper_replaceClassIntrospectorWithFreemarkerExtBeansClassIntrospectorBuilder_(self, pa);
}


#line 688
- (void)registerModelFactories {
  FreemarkerExtBeansBeansWrapper_registerModelFactories(self);
}


#line 710
- (void)setMethodsShadowItemsWithBoolean:(jboolean)methodsShadowItems {
  
#line 714
  @synchronized(self) {
    [self checkModifiable];
    self->methodsShadowItems_ = methodsShadowItems;
  }
}


#line 720
- (jboolean)isMethodsShadowItems {
  
#line 722
  return methodsShadowItems_;
}


#line 732
- (void)setDefaultDateTypeWithInt:(jint)defaultDateType {
  
#line 735
  @synchronized(self) {
    [self checkModifiable];
    
#line 738
    self->defaultDateType_ = defaultDateType;
  }
}


#line 747
- (jint)getDefaultDateType {
  return defaultDateType_;
}


#line 758
- (void)setUseCacheWithBoolean:(jboolean)useCache {
  
#line 760
  [self checkModifiable];
  [((FreemarkerExtUtilModelCache *) nil_chk(modelCache_)) setUseCacheWithBoolean:useCache];
}


#line 767
- (jboolean)getUseCache {
  
#line 769
  return [((FreemarkerExtUtilModelCache *) nil_chk(modelCache_)) getUseCache];
}


#line 781
- (void)setNullModelWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)nullModel {
  
#line 783
  [self checkModifiable];
  self->nullModel_ = nullModel;
}


#line 793
- (FreemarkerTemplateVersion *)getIncompatibleImprovements {
  return incompatibleImprovements_;
}

- (jboolean)is2321Bugfixed {
  return FreemarkerExtBeansBeansWrapper_is2321BugfixedWithFreemarkerTemplateVersion_([self getIncompatibleImprovements]);
}

+ (jboolean)is2321BugfixedWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)version_ {
  return FreemarkerExtBeansBeansWrapper_is2321BugfixedWithFreemarkerTemplateVersion_(version_);
}


#line 809
+ (FreemarkerTemplateVersion *)normalizeIncompatibleImprovementsVersionWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)incompatibleImprovements {
  return FreemarkerExtBeansBeansWrapper_normalizeIncompatibleImprovementsVersionWithFreemarkerTemplateVersion_(incompatibleImprovements);
}


#line 831
+ (FreemarkerExtBeansBeansWrapper *)getDefaultInstance {
  return FreemarkerExtBeansBeansWrapper_getDefaultInstance();
}


#line 856
- (id<FreemarkerTemplateTemplateModel>)wrapWithId:(id)object {
  
#line 858
  if (object == nil) return nullModel_;
  return [((FreemarkerExtUtilModelCache *) nil_chk(modelCache_)) getInstanceWithId:object];
}


#line 876
- (id<FreemarkerTemplateTemplateMethodModelEx>)wrapWithId:(id)object
                                withJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  return new_FreemarkerExtBeansSimpleMethodModel_initWithId_withJavaLangReflectMethod_withIOSClassArray_withFreemarkerExtBeansBeansWrapper_(object, method, [((JavaLangReflectMethod *) nil_chk(method)) getParameterTypes], self);
}


#line 883
- (id<FreemarkerTemplateTemplateHashModel>)wrapAsAPIWithId:(id)obj {
  return new_FreemarkerExtBeansAPIModel_initWithId_withFreemarkerExtBeansBeansWrapper_(obj, self);
}


#line 894
- (id<FreemarkerTemplateTemplateModel>)getInstanceWithId:(id)object
                       withFreemarkerExtUtilModelFactory:(id<FreemarkerExtUtilModelFactory>)factory {
  
#line 896
  return [((id<FreemarkerExtUtilModelFactory>) nil_chk(factory)) createWithId:object withFreemarkerTemplateObjectWrapper:self];
}


#line 917
- (id<FreemarkerExtUtilModelFactory>)getModelFactoryWithIOSClass:(IOSClass *)clazz {
  if ([JavaUtilMap_class_() isAssignableFrom:clazz]) {
    return simpleMapWrapper_ ? FreemarkerExtBeansSimpleMapModel_get_FACTORY_() : FreemarkerExtBeansMapModel_get_FACTORY_();
  }
  if ([JavaUtilCollection_class_() isAssignableFrom:clazz]) {
    return FreemarkerExtBeansCollectionModel_get_FACTORY_();
  }
  if ([NSNumber_class_() isAssignableFrom:clazz]) {
    return FreemarkerExtBeansNumberModel_get_FACTORY_();
  }
  if ([JavaUtilDate_class_() isAssignableFrom:clazz]) {
    return FreemarkerExtBeansDateModel_get_FACTORY_();
  }
  if (JavaLangBoolean_class_() == clazz) {
    return BOOLEAN_FACTORY_;
  }
  if ([JavaUtilResourceBundle_class_() isAssignableFrom:clazz]) {
    return FreemarkerExtBeansResourceBundleModel_get_FACTORY_();
  }
  if ([JavaUtilIterator_class_() isAssignableFrom:clazz]) {
    return FreemarkerExtBeansBeansWrapper_ITERATOR_FACTORY_;
  }
  if ([JavaUtilEnumeration_class_() isAssignableFrom:clazz]) {
    return FreemarkerExtBeansBeansWrapper_ENUMERATION_FACTORY_;
  }
  if ([((IOSClass *) nil_chk(clazz)) isArray]) {
    return FreemarkerExtBeansArrayModel_get_FACTORY_();
  }
  return FreemarkerExtBeansStringModel_get_FACTORY_();
}


#line 961
- (id)unwrapWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model {
  
#line 963
  return [self unwrapWithFreemarkerTemplateTemplateModel:model withIOSClass:NSObject_class_()];
}


#line 979
- (id)unwrapWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model
                                   withIOSClass:(IOSClass *)targetClass {
  
#line 982
  id obj = [self tryUnwrapToWithFreemarkerTemplateTemplateModel:model withIOSClass:targetClass];
  if (obj == FreemarkerTemplateObjectWrapperAndUnwrapper_get_CANT_UNWRAP_TO_TARGET_CLASS_()) {
    @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_(JreStrcat("$$$$", @"Can not unwrap model of type ",
#line 985
    [[((id<FreemarkerTemplateTemplateModel>) nil_chk(model)) getClass] getName], @" to type ", [((IOSClass *) nil_chk(targetClass)) getName]));
  }
  return obj;
}


#line 993
- (id)tryUnwrapToWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model
                                        withIOSClass:(IOSClass *)targetClass {
  
#line 995
  return [self tryUnwrapToWithFreemarkerTemplateTemplateModel:model withIOSClass:targetClass withInt:0];
}


#line 1005
- (id)tryUnwrapToWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model
                                        withIOSClass:(IOSClass *)targetClass
                                             withInt:(jint)typeFlags {
  
#line 1008
  id res = FreemarkerExtBeansBeansWrapper_tryUnwrapToWithFreemarkerTemplateTemplateModel_withIOSClass_withInt_withJavaUtilMap_(self, model, targetClass, typeFlags, nil);
  if ((typeFlags & FreemarkerExtBeansTypeFlags_WIDENED_NUMERICAL_UNWRAPPING_HINT) != 0 &&
#line 1010
  [res isKindOfClass:[NSNumber class]]) {
    return FreemarkerExtBeansOverloadedNumberUtil_addFallbackTypeWithNSNumber_withInt_((NSNumber *) check_class_cast(res, [NSNumber class]), typeFlags);
  }
  else {
    
#line 1013
    return res;
  }
}


#line 1020
- (id)tryUnwrapToWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model
                                        withIOSClass:(IOSClass *)targetClass
                                             withInt:(jint)typeFlags
                                     withJavaUtilMap:(id<JavaUtilMap>)recursionStops {
  return FreemarkerExtBeansBeansWrapper_tryUnwrapToWithFreemarkerTemplateTemplateModel_withIOSClass_withInt_withJavaUtilMap_(self, model, targetClass, typeFlags, recursionStops);
}


#line 1248
- (id)unwrapSequenceToArrayWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)seq
                                                          withIOSClass:(IOSClass *)arrayClass
                                                           withBoolean:(jboolean)tryOnly
                                                       withJavaUtilMap:(id<JavaUtilMap>)recursionStops {
  
#line 1250
  if (recursionStops != nil) {
    id retval = [recursionStops getWithId:seq];
    if (retval != nil) {
      return retval;
    }
  }
  else {
    
#line 1256
    recursionStops = new_FreemarkerExtUtilIdentityHashMap_init();
  }
  IOSClass *componentType = [((IOSClass *) nil_chk(arrayClass)) getComponentType];
  id array = JavaLangReflectArray_newInstanceWithIOSClass_withInt_(componentType, [((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(seq)) size]);
  (void) [((id<JavaUtilMap>) nil_chk(recursionStops)) putWithId:seq withId:array];
  @try {
    jint size = [seq size];
    for (jint i = 0; i < size; i++) {
      id<FreemarkerTemplateTemplateModel> seqItem = [seq getWithInt:i];
      id val = FreemarkerExtBeansBeansWrapper_tryUnwrapToWithFreemarkerTemplateTemplateModel_withIOSClass_withInt_withJavaUtilMap_(self, seqItem, componentType, 0, recursionStops);
      if (val == FreemarkerTemplateObjectWrapperAndUnwrapper_get_CANT_UNWRAP_TO_TARGET_CLASS_()) {
        if (tryOnly) {
          return FreemarkerTemplateObjectWrapperAndUnwrapper_get_CANT_UNWRAP_TO_TARGET_CLASS_();
        }
        else {
          
#line 1270
          @throw new_FreemarkerCore_TemplateModelException_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){
#line 1271
            @"Failed to convert ", new_FreemarkerCore_DelayedFTLTypeDescription_initWithFreemarkerTemplateTemplateModel_(seq),
#line 1272
            @" object to ", new_FreemarkerCore_DelayedShortClassName_initWithIOSClass_([nil_chk(array) getClass]),
#line 1273
            @": Problematic sequence item at index ", new_JavaLangInteger_initWithInt_(i), @" with value type: ", new_FreemarkerCore_DelayedFTLTypeDescription_initWithFreemarkerTemplateTemplateModel_(
#line 1274
            seqItem) } count:8 type:NSObject_class_()]);
          }
        }
        
#line 1278
        JavaLangReflectArray_setWithId_withInt_withId_(array, i, val);
      }
    }
    @finally {
      
#line 1281
      (void) [recursionStops removeWithId:seq];
    }
    return array;
  }


#line 1286
- (id)listToArrayWithJavaUtilList:(id<JavaUtilList>)list
                     withIOSClass:(IOSClass *)arrayClass
                  withJavaUtilMap:(id<JavaUtilMap>)recursionStops {
  
#line 1288
  if ([list isKindOfClass:[FreemarkerExtBeansSequenceAdapter class]]) {
    return [self unwrapSequenceToArrayWithFreemarkerTemplateTemplateSequenceModel:
#line 1290
    [((FreemarkerExtBeansSequenceAdapter *) nil_chk(((FreemarkerExtBeansSequenceAdapter *) check_class_cast(list, [FreemarkerExtBeansSequenceAdapter class])))) getTemplateSequenceModel] withIOSClass:
#line 1291
    arrayClass withBoolean:NO withJavaUtilMap:
#line 1292
    recursionStops];
  }
  
#line 1295
  if (recursionStops != nil) {
    id retval = [recursionStops getWithId:list];
    if (retval != nil) {
      return retval;
    }
  }
  else {
    
#line 1301
    recursionStops = new_FreemarkerExtUtilIdentityHashMap_init();
  }
  IOSClass *componentType = [((IOSClass *) nil_chk(arrayClass)) getComponentType];
  id array = JavaLangReflectArray_newInstanceWithIOSClass_withInt_(componentType, [((id<JavaUtilList>) nil_chk(list)) size]);
  (void) [((id<JavaUtilMap>) nil_chk(recursionStops)) putWithId:list withId:array];
  @try {
    jboolean isComponentTypeExamined = NO;
    jboolean isComponentTypeNumerical = NO;
    jboolean isComponentTypeList = NO;
    jint i = 0;
    for (id<JavaUtilIterator> it = [list iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      id listItem = [it next];
      if (listItem != nil && ![((IOSClass *) nil_chk(componentType)) isInstance:listItem]) {
        
#line 1315
        if (!isComponentTypeExamined) {
          isComponentTypeNumerical = FreemarkerTemplateUtilityClassUtil_isNumericalWithIOSClass_(componentType);
          isComponentTypeList = [JavaUtilList_class_() isAssignableFrom:componentType];
          isComponentTypeExamined = YES;
        }
        if (isComponentTypeNumerical && [listItem isKindOfClass:[NSNumber class]]) {
          listItem = FreemarkerExtBeansBeansWrapper_forceUnwrappedNumberToTypeWithNSNumber_withIOSClass_withBoolean_((NSNumber *) check_class_cast(listItem, [NSNumber class]), componentType, YES);
        }
        else
#line 1322
        if (componentType == NSString_class_() && [listItem isKindOfClass:[JavaLangCharacter class]]) {
          listItem = NSString_valueOfChar_([((JavaLangCharacter *) check_class_cast(listItem, [JavaLangCharacter class])) charValue]);
        }
        else
#line 1324
        if ((componentType == JavaLangCharacter_class_() || componentType == [IOSClass charClass]) &&
#line 1325
        [listItem isKindOfClass:[NSString class]]) {
          NSString *listItemStr = (NSString *) check_class_cast(listItem, [NSString class]);
          if (((jint) [listItemStr length]) == 1) {
            
#line 1329
            listItem = new_JavaLangCharacter_initWithChar_([listItemStr charAtWithInt:0]);
          }
        }
        else
#line 1331
        if ([componentType isArray]) {
          if ([JavaUtilList_class_() isInstance:listItem]) {
            listItem = [self listToArrayWithJavaUtilList:(id<JavaUtilList>) check_protocol_cast(listItem, @protocol(JavaUtilList)) withIOSClass:componentType withJavaUtilMap:recursionStops];
          }
          else
#line 1334
          if ([FreemarkerTemplateTemplateSequenceModel_class_() isInstance:listItem]) {
            listItem = [self unwrapSequenceToArrayWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>) check_protocol_cast(listItem, @protocol(FreemarkerTemplateTemplateSequenceModel)) withIOSClass:componentType withBoolean:NO withJavaUtilMap:recursionStops];
          }
        }
        else
#line 1337
        if (isComponentTypeList && [[listItem getClass] isArray]) {
          listItem = [self arrayToListWithId:listItem];
        }
      }
      @try {
        JavaLangReflectArray_setWithId_withInt_withId_(array, i, listItem);
      }
      @catch (
#line 1343
      JavaLangIllegalArgumentException *e) {
        @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_withJavaLangException_(JreStrcat("$$$$$I$$", @"Failed to convert ", FreemarkerTemplateUtilityClassUtil_getShortClassNameOfObjectWithId_(
#line 1345
        list), @" object to ", FreemarkerTemplateUtilityClassUtil_getShortClassNameOfObjectWithId_(
#line 1346
        array), @": Problematic List item at index ",
#line 1347
        i, @" with value type: ", FreemarkerTemplateUtilityClassUtil_getShortClassNameOfObjectWithId_(
#line 1348
        listItem)), e);
      }
      i++;
    }
  }
  @finally {
    
#line 1353
    (void) [recursionStops removeWithId:list];
  }
  return array;
}


#line 1361
- (id<JavaUtilList>)arrayToListWithId:(id)array {
  if ([IOSClass_arrayType(NSObject_class_(), 1) isInstance:array]) {
    
#line 1365
    IOSObjectArray *objArray = (IOSObjectArray *) check_class_cast(array, [IOSObjectArray class]);
    return ((IOSObjectArray *) nil_chk(objArray))->size_ == 0 ? ((id) JavaUtilCollections_get_EMPTY_LIST_()) : new_FreemarkerExtBeansNonPrimitiveArrayBackedReadOnlyList_initWithNSObjectArray_(objArray);
  }
  else {
    return JavaLangReflectArray_getLengthWithId_(array) == 0 ? ((id) JavaUtilCollections_get_EMPTY_LIST_()) : new_FreemarkerExtBeansPrimtiveArrayBackedReadOnlyList_initWithId_(array);
  }
}


#line 1378
+ (NSNumber *)forceUnwrappedNumberToTypeWithNSNumber:(NSNumber *)n
                                        withIOSClass:(IOSClass *)targetType
                                         withBoolean:(jboolean)bugfixed {
  return FreemarkerExtBeansBeansWrapper_forceUnwrappedNumberToTypeWithNSNumber_withIOSClass_withBoolean_(n, targetType, bugfixed);
}


#line 1449
- (id<FreemarkerTemplateTemplateModel>)invokeMethodWithId:(id)object
                                withJavaLangReflectMethod:(JavaLangReflectMethod *)method
                                        withNSObjectArray:(IOSObjectArray *)args {
  
#line 1457
  id retval = [((JavaLangReflectMethod *) nil_chk(method)) invokeWithId:object withNSObjectArray:args];
  return
#line 1459
  [method getReturnType] == [IOSClass voidClass] ? FreemarkerTemplateTemplateModel_get_NOTHING_() :
#line 1461
  [((id<FreemarkerTemplateObjectWrapper>) nil_chk([self getOuterIdentity])) wrapWithId:retval];
}


#line 1477
- (id<FreemarkerTemplateTemplateHashModel>)getStaticModels {
  
#line 1479
  return staticModels_;
}


#line 1498
- (id<FreemarkerTemplateTemplateHashModel>)getEnumModels {
  if (enumModels_ == nil) {
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(
#line 1501
    @"Enums not supported before J2SE 5.");
  }
  return enumModels_;
}

- (FreemarkerExtUtilModelCache *)getModelCache {
  return modelCache_;
}


#line 1519
- (id)newInstanceWithIOSClass:(IOSClass *)clazz
             withJavaUtilList:(id<JavaUtilList>)arguments {
  
#line 1523
  @try {
    
#line 1525
    id ctors = [((id<JavaUtilMap>) nil_chk([((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) getWithIOSClass:clazz])) getWithId:FreemarkerExtBeansClassIntrospector_get_CONSTRUCTORS_KEY_()];
    if (ctors == nil) {
      
#line 1528
      @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_(JreStrcat("$$$", @"Class ", [((IOSClass *) nil_chk(clazz)) getName], @" has no public constructors."));
    }
    
#line 1531
    JavaLangReflectConstructor *ctor = nil;
    IOSObjectArray *objargs;
    if ([ctors isKindOfClass:[FreemarkerExtBeansSimpleMethod class]]) {
      
#line 1535
      FreemarkerExtBeansSimpleMethod *sm = (FreemarkerExtBeansSimpleMethod *) check_class_cast(ctors, [FreemarkerExtBeansSimpleMethod class]);
      ctor = (JavaLangReflectConstructor *) check_class_cast([((FreemarkerExtBeansSimpleMethod *) nil_chk(sm)) getMember], [JavaLangReflectConstructor class]);
      objargs = [sm unwrapArgumentsWithJavaUtilList:arguments withFreemarkerExtBeansBeansWrapper:self];
      @try {
        return [((JavaLangReflectConstructor *) nil_chk(ctor)) newInstanceWithNSObjectArray:objargs];
      }
      @catch (
#line 1540
      JavaLangException *e) {
        if ([e isKindOfClass:[FreemarkerTemplateTemplateModelException class]]) @throw (FreemarkerTemplateTemplateModelException *) check_class_cast(e, [FreemarkerTemplateTemplateModelException class]);
        @throw FreemarkerExtBeans_MethodUtil_newInvocationTemplateModelExceptionWithId_withJavaLangReflectMember_withJavaLangThrowable_(nil, ctor, e);
      }
    }
    else if ([ctors isKindOfClass:[FreemarkerExtBeansOverloadedMethods class]]) {
      
#line 1547
      FreemarkerExtBeansMemberAndArguments *mma = [((FreemarkerExtBeansOverloadedMethods *) nil_chk(((FreemarkerExtBeansOverloadedMethods *) check_class_cast(ctors, [FreemarkerExtBeansOverloadedMethods class])))) getMemberAndArgumentsWithJavaUtilList:arguments withFreemarkerExtBeansBeansWrapper:self];
      @try {
        return [((FreemarkerExtBeansMemberAndArguments *) nil_chk(mma)) invokeConstructorWithFreemarkerExtBeansBeansWrapper:self];
      }
      @catch (
#line 1550
      JavaLangException *e) {
        if ([e isKindOfClass:[FreemarkerTemplateTemplateModelException class]]) @throw (FreemarkerTemplateTemplateModelException *) check_class_cast(e, [FreemarkerTemplateTemplateModelException class]);
        
#line 1553
        @throw FreemarkerExtBeans_MethodUtil_newInvocationTemplateModelExceptionWithId_withFreemarkerExtBeansCallableMemberDescriptor_withJavaLangThrowable_(nil, [((FreemarkerExtBeansMemberAndArguments *) nil_chk(mma)) getCallableMemberDescriptor], e);
      }
    }
    else {
      
#line 1559
      @throw new_FreemarkerCoreBugException_init();
    }
  }
  @catch (FreemarkerTemplateTemplateModelException *e) {
    
#line 1564
    @throw e;
  }
  @catch (JavaLangException *e) {
    
#line 1568
    @throw new_FreemarkerTemplateTemplateModelException_initWithNSString_withJavaLangException_(JreStrcat("$$$", @"Error while creating new instance of class ",
#line 1569
    [((IOSClass *) nil_chk(clazz)) getName], @"; see cause exception"), e);
  }
}


#line 1581
- (void)removeFromClassIntrospectionCacheWithIOSClass:(IOSClass *)clazz {
  [((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) removeWithIOSClass:clazz];
}


#line 1595
- (void)clearClassIntrospecitonCache {
  [((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) clearCache];
}

- (FreemarkerExtBeansClassIntrospector *)getClassIntrospector {
  return classIntrospector_;
}


#line 1610
- (void)finetuneMethodAppearanceWithIOSClass:(IOSClass *)clazz
                   withJavaLangReflectMethod:(JavaLangReflectMethod *)m
withFreemarkerExtBeansBeansWrapper_MethodAppearanceDecision:(FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision *)decision {
}


#line 1620
+ (void)coerceBigDecimalsWithJavaLangReflectAccessibleObject:(JavaLangReflectAccessibleObject *)callable
                                           withNSObjectArray:(IOSObjectArray *)args {
  FreemarkerExtBeansBeansWrapper_coerceBigDecimalsWithJavaLangReflectAccessibleObject_withNSObjectArray_(callable, args);
}


#line 1648
+ (void)coerceBigDecimalsWithIOSClassArray:(IOSObjectArray *)formalTypes
                         withNSObjectArray:(IOSObjectArray *)args {
  FreemarkerExtBeansBeansWrapper_coerceBigDecimalsWithIOSClassArray_withNSObjectArray_(formalTypes, args);
}


#line 1670
+ (id)coerceBigDecimalWithJavaMathBigDecimal:(JavaMathBigDecimal *)bd
                                withIOSClass:(IOSClass *)formalType {
  return FreemarkerExtBeansBeansWrapper_coerceBigDecimalWithJavaMathBigDecimal_withIOSClass_(bd, formalType);
}


#line 1703
- (NSString *)description {
  NSString *propsStr = [self toPropertiesString];
  return JreStrcat("$CIC@$$C", FreemarkerTemplateUtilityClassUtil_getShortClassNameOfObjectWithId_(self), '@', JavaLangSystem_identityHashCodeWithId_(self), '(',
#line 1706
  incompatibleImprovements_, @", ",
#line 1707
  (((jint) [((NSString *) nil_chk(propsStr)) length]) != 0 ? JreStrcat("$$", propsStr, @", ...") : @""), ')');
}


#line 1719
- (NSString *)toPropertiesString {
  
#line 1721
  return JreStrcat("$Z$I$Z$$", @"simpleMapWrapper=", simpleMapWrapper_, @", exposureLevel=",
#line 1722
  [((FreemarkerExtBeansClassIntrospector *) nil_chk(classIntrospector_)) getExposureLevel], @", exposeFields=",
#line 1723
  [classIntrospector_ getExposeFields], @", sharedClassIntrospCache=",
#line 1725
  ([classIntrospector_ isShared] ? JreStrcat("CI", '@', JavaLangSystem_identityHashCodeWithId_(classIntrospector_)) : @"none"));
}


#line 1728
+ (FreemarkerExtBeansClassBasedModelFactory *)createEnumModelsWithFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)wrapper {
  return FreemarkerExtBeansBeansWrapper_createEnumModelsWithFreemarkerExtBeansBeansWrapper_(wrapper);
}


#line 1741
+ (JavaLangReflectConstructor *)enumsModelCtor {
  return FreemarkerExtBeansBeansWrapper_enumsModelCtor();
}

+ (void)initialize {
  if (self == [FreemarkerExtBeansBeansWrapper class]) {
    FreemarkerExtBeansBeansWrapper_LOG_ = FreemarkerLogLogger_getLoggerWithNSString_(
#line 85
    @"freemarker.beans");
    FreemarkerExtBeansBeansWrapper_CAN_NOT_UNWRAP_ = FreemarkerTemplateObjectWrapperAndUnwrapper_get_CANT_UNWRAP_TO_TARGET_CLASS_();
    {
      
#line 95
      IOSClass *iterable;
      @try {
        iterable = IOSClass_forName_(@"java.lang.Iterable");
      }
      @catch (JavaLangClassNotFoundException *e) {
        
#line 101
        iterable = nil;
      }
      FreemarkerExtBeansBeansWrapper_ITERABLE_CLASS_ = iterable;
    }
    FreemarkerExtBeansBeansWrapper_ENUMS_MODEL_CTOR_ = FreemarkerExtBeansBeansWrapper_enumsModelCtor();
    FreemarkerExtBeansBeansWrapper_ITERATOR_FACTORY_ = new_FreemarkerExtBeansBeansWrapper_$2_init();
    FreemarkerExtBeansBeansWrapper_ENUMERATION_FACTORY_ = new_FreemarkerExtBeansBeansWrapper_$3_init();
    J2OBJC_SET_INITIALIZED(FreemarkerExtBeansBeansWrapper)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "BeansWrapper", NULL, 0x1, NULL, NULL },
    { "initWithFreemarkerTemplateVersion:", "BeansWrapper", NULL, 0x1, NULL, NULL },
    { "initWithFreemarkerExtBeansBeansWrapperConfiguration:withBoolean:", "BeansWrapper", NULL, 0x4, NULL, NULL },
    { "initWithFreemarkerExtBeansBeansWrapperConfiguration:withBoolean:withBoolean:", "BeansWrapper", NULL, 0x4, NULL, NULL },
    { "finalizeConstructionWithBoolean:", "finalizeConstruction", "V", 0x4, NULL, NULL },
    { "writeProtect", NULL, "V", 0x1, NULL, NULL },
    { "isWriteProtected", NULL, "Z", 0x1, NULL, NULL },
    { "getSharedIntrospectionLock", NULL, "Ljava.lang.Object;", 0x0, NULL, NULL },
    { "checkModifiable", NULL, "V", 0x4, NULL, NULL },
    { "isStrict", NULL, "Z", 0x1, NULL, NULL },
    { "setStrictWithBoolean:", "setStrict", "V", 0x1, NULL, NULL },
    { "setOuterIdentityWithFreemarkerTemplateObjectWrapper:", "setOuterIdentity", "V", 0x1, NULL, NULL },
    { "getOuterIdentity", NULL, "Lfreemarker.template.ObjectWrapper;", 0x1, NULL, NULL },
    { "setSimpleMapWrapperWithBoolean:", "setSimpleMapWrapper", "V", 0x1, NULL, NULL },
    { "isSimpleMapWrapper", NULL, "Z", 0x1, NULL, NULL },
    { "setExposureLevelWithInt:", "setExposureLevel", "V", 0x1, NULL, NULL },
    { "getExposureLevel", NULL, "I", 0x1, NULL, NULL },
    { "setExposeFieldsWithBoolean:", "setExposeFields", "V", 0x1, NULL, NULL },
    { "isExposeFields", NULL, "Z", 0x1, NULL, NULL },
    { "getMethodAppearanceFineTuner", NULL, "Lfreemarker.ext.beans.MethodAppearanceFineTuner;", 0x1, NULL, NULL },
    { "setMethodAppearanceFineTunerWithFreemarkerExtBeansMethodAppearanceFineTuner:", "setMethodAppearanceFineTuner", "V", 0x1, NULL, NULL },
    { "getMethodSorter", NULL, "Lfreemarker.ext.beans.MethodSorter;", 0x0, NULL, NULL },
    { "setMethodSorterWithFreemarkerExtBeansMethodSorter:", "setMethodSorter", "V", 0x0, NULL, NULL },
    { "isClassIntrospectionCacheRestricted", NULL, "Z", 0x1, NULL, NULL },
    { "replaceClassIntrospectorWithFreemarkerExtBeansClassIntrospectorBuilder:", "replaceClassIntrospector", "V", 0x2, NULL, NULL },
    { "registerModelFactories", NULL, "V", 0x2, NULL, NULL },
    { "setMethodsShadowItemsWithBoolean:", "setMethodsShadowItems", "V", 0x1, NULL, NULL },
    { "isMethodsShadowItems", NULL, "Z", 0x0, NULL, NULL },
    { "setDefaultDateTypeWithInt:", "setDefaultDateType", "V", 0x1, NULL, NULL },
    { "getDefaultDateType", NULL, "I", 0x1, NULL, NULL },
    { "setUseCacheWithBoolean:", "setUseCache", "V", 0x1, NULL, NULL },
    { "getUseCache", NULL, "Z", 0x1, NULL, NULL },
    { "setNullModelWithFreemarkerTemplateTemplateModel:", "setNullModel", "V", 0x1, NULL, NULL },
    { "getIncompatibleImprovements", NULL, "Lfreemarker.template.Version;", 0x1, NULL, NULL },
    { "is2321Bugfixed", NULL, "Z", 0x0, NULL, NULL },
    { "is2321BugfixedWithFreemarkerTemplateVersion:", "is2321Bugfixed", "Z", 0x8, NULL, NULL },
    { "normalizeIncompatibleImprovementsVersionWithFreemarkerTemplateVersion:", "normalizeIncompatibleImprovementsVersion", "Lfreemarker.template.Version;", 0xc, NULL, NULL },
    { "getDefaultInstance", NULL, "Lfreemarker.ext.beans.BeansWrapper;", 0x19, NULL, NULL },
    { "wrapWithId:", "wrap", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "wrapWithId:withJavaLangReflectMethod:", "wrap", "Lfreemarker.template.TemplateMethodModelEx;", 0x1, NULL, NULL },
    { "wrapAsAPIWithId:", "wrapAsAPI", "Lfreemarker.template.TemplateHashModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getInstanceWithId:withFreemarkerExtUtilModelFactory:", "getInstance", "Lfreemarker.template.TemplateModel;", 0x4, NULL, NULL },
    { "getModelFactoryWithIOSClass:", "getModelFactory", "Lfreemarker.ext.util.ModelFactory;", 0x4, NULL, NULL },
    { "unwrapWithFreemarkerTemplateTemplateModel:", "unwrap", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "unwrapWithFreemarkerTemplateTemplateModel:withIOSClass:", "unwrap", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "tryUnwrapToWithFreemarkerTemplateTemplateModel:withIOSClass:", "tryUnwrapTo", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "tryUnwrapToWithFreemarkerTemplateTemplateModel:withIOSClass:withInt:", "tryUnwrapTo", "Ljava.lang.Object;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "tryUnwrapToWithFreemarkerTemplateTemplateModel:withIOSClass:withInt:withJavaUtilMap:", "tryUnwrapTo", "Ljava.lang.Object;", 0x2, "Lfreemarker.template.TemplateModelException;", NULL },
    { "unwrapSequenceToArrayWithFreemarkerTemplateTemplateSequenceModel:withIOSClass:withBoolean:withJavaUtilMap:", "unwrapSequenceToArray", "Ljava.lang.Object;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "listToArrayWithJavaUtilList:withIOSClass:withJavaUtilMap:", "listToArray", "Ljava.lang.Object;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "arrayToListWithId:", "arrayToList", "Ljava.util.List;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "forceUnwrappedNumberToTypeWithNSNumber:withIOSClass:withBoolean:", "forceUnwrappedNumberToType", "Ljava.lang.Number;", 0x8, NULL, NULL },
    { "invokeMethodWithId:withJavaLangReflectMethod:withNSObjectArray:", "invokeMethod", "Lfreemarker.template.TemplateModel;", 0x0, "Ljava.lang.reflect.InvocationTargetException;Ljava.lang.IllegalAccessException;Lfreemarker.template.TemplateModelException;", NULL },
    { "getStaticModels", NULL, "Lfreemarker.template.TemplateHashModel;", 0x1, NULL, NULL },
    { "getEnumModels", NULL, "Lfreemarker.template.TemplateHashModel;", 0x1, NULL, NULL },
    { "getModelCache", NULL, "Lfreemarker.ext.util.ModelCache;", 0x0, NULL, NULL },
    { "newInstanceWithIOSClass:withJavaUtilList:", "newInstance", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "removeFromClassIntrospectionCacheWithIOSClass:", "removeFromClassIntrospectionCache", "V", 0x1, NULL, NULL },
    { "clearClassIntrospecitonCache", NULL, "V", 0x1, NULL, NULL },
    { "getClassIntrospector", NULL, "Lfreemarker.ext.beans.ClassIntrospector;", 0x0, NULL, NULL },
    { "finetuneMethodAppearanceWithIOSClass:withJavaLangReflectMethod:withFreemarkerExtBeansBeansWrapper_MethodAppearanceDecision:", "finetuneMethodAppearance", "V", 0x4, NULL, NULL },
    { "coerceBigDecimalsWithJavaLangReflectAccessibleObject:withNSObjectArray:", "coerceBigDecimals", "V", 0x9, NULL, NULL },
    { "coerceBigDecimalsWithIOSClassArray:withNSObjectArray:", "coerceBigDecimals", "V", 0x9, NULL, NULL },
    { "coerceBigDecimalWithJavaMathBigDecimal:withIOSClass:", "coerceBigDecimal", "Ljava.lang.Object;", 0x9, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toPropertiesString", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "createEnumModelsWithFreemarkerExtBeansBeansWrapper:", "createEnumModels", "Lfreemarker.ext.beans.ClassBasedModelFactory;", 0xa, NULL, NULL },
    { "enumsModelCtor", NULL, "Ljava.lang.reflect.Constructor;", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "LOG_", NULL, 0x1a, "Lfreemarker.log.Logger;", &FreemarkerExtBeansBeansWrapper_LOG_, NULL,  },
    { "CAN_NOT_UNWRAP_", NULL, 0x18, "Ljava.lang.Object;", &FreemarkerExtBeansBeansWrapper_CAN_NOT_UNWRAP_, NULL,  },
    { "ITERABLE_CLASS_", NULL, 0x1a, "Ljava.lang.Class;", &FreemarkerExtBeansBeansWrapper_ITERABLE_CLASS_, NULL,  },
    { "ENUMS_MODEL_CTOR_", NULL, 0x1a, "Ljava.lang.reflect.Constructor;", &FreemarkerExtBeansBeansWrapper_ENUMS_MODEL_CTOR_, NULL,  },
    { "EXPOSE_ALL_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = FreemarkerExtBeansBeansWrapper_EXPOSE_ALL },
    { "EXPOSE_SAFE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = FreemarkerExtBeansBeansWrapper_EXPOSE_SAFE },
    { "EXPOSE_PROPERTIES_ONLY_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = FreemarkerExtBeansBeansWrapper_EXPOSE_PROPERTIES_ONLY },
    { "EXPOSE_NOTHING_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = FreemarkerExtBeansBeansWrapper_EXPOSE_NOTHING },
    { "sharedIntrospectionLock_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL,  },
    { "classIntrospector_", NULL, 0x2, "Lfreemarker.ext.beans.ClassIntrospector;", NULL, NULL,  },
    { "staticModels_", NULL, 0x12, "Lfreemarker.ext.beans.StaticModels;", NULL, NULL,  },
    { "enumModels_", NULL, 0x12, "Lfreemarker.ext.beans.ClassBasedModelFactory;", NULL, NULL,  },
    { "modelCache_", NULL, 0x12, "Lfreemarker.ext.util.ModelCache;", NULL, NULL,  },
    { "falseModel_", NULL, 0x12, "Lfreemarker.ext.beans.BooleanModel;", NULL, NULL,  },
    { "trueModel_", NULL, 0x12, "Lfreemarker.ext.beans.BooleanModel;", NULL, NULL,  },
    { "writeProtected_", NULL, 0x42, "Z", NULL, NULL,  },
    { "nullModel_", NULL, 0x2, "Lfreemarker.template.TemplateModel;", NULL, NULL,  },
    { "defaultDateType_", NULL, 0x2, "I", NULL, NULL,  },
    { "outerIdentity_", NULL, 0x2, "Lfreemarker.template.ObjectWrapper;", NULL, NULL,  },
    { "methodsShadowItems_", NULL, 0x2, "Z", NULL, NULL,  },
    { "simpleMapWrapper_", NULL, 0x2, "Z", NULL, NULL,  },
    { "strict_", NULL, 0x2, "Z", NULL, NULL,  },
    { "incompatibleImprovements_", NULL, 0x12, "Lfreemarker.template.Version;", NULL, NULL,  },
    { "ftmaDeprecationWarnLogged_", NULL, 0x4a, "Z", &FreemarkerExtBeansBeansWrapper_ftmaDeprecationWarnLogged_, NULL,  },
    { "BOOLEAN_FACTORY_", NULL, 0x12, "Lfreemarker.ext.util.ModelFactory;", NULL, NULL,  },
    { "ITERATOR_FACTORY_", NULL, 0x1a, "Lfreemarker.ext.util.ModelFactory;", &FreemarkerExtBeansBeansWrapper_ITERATOR_FACTORY_, NULL,  },
    { "ENUMERATION_FACTORY_", NULL, 0x1a, "Lfreemarker.ext.util.ModelFactory;", &FreemarkerExtBeansBeansWrapper_ENUMERATION_FACTORY_, NULL,  },
  };
  static const char *inner_classes[] = {"Lfreemarker.ext.beans.BeansWrapper$MethodAppearanceDecision;", "Lfreemarker.ext.beans.BeansWrapper$MethodAppearanceDecisionInput;"};
  static const J2ObjcClassInfo _FreemarkerExtBeansBeansWrapper = { 2, "BeansWrapper", "freemarker.ext.beans", NULL, 0x1, 68, methods, 27, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_FreemarkerExtBeansBeansWrapper;
}

@end


#line 207
void FreemarkerExtBeansBeansWrapper_init(FreemarkerExtBeansBeansWrapper *self) {
  (void) FreemarkerExtBeansBeansWrapper_initWithFreemarkerTemplateVersion_(self, FreemarkerTemplateConfiguration_get_DEFAULT_INCOMPATIBLE_IMPROVEMENTS_());
}


#line 207
FreemarkerExtBeansBeansWrapper *new_FreemarkerExtBeansBeansWrapper_init() {
  FreemarkerExtBeansBeansWrapper *self = [FreemarkerExtBeansBeansWrapper alloc];
  FreemarkerExtBeansBeansWrapper_init(self);
  return self;
}


#line 256
void FreemarkerExtBeansBeansWrapper_initWithFreemarkerTemplateVersion_(FreemarkerExtBeansBeansWrapper *self, FreemarkerTemplateVersion *incompatibleImprovements) {
  (void) FreemarkerExtBeansBeansWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_(self, new_FreemarkerExtBeansBeansWrapper_$4_initWithFreemarkerTemplateVersion_(incompatibleImprovements), NO);
}


#line 256
FreemarkerExtBeansBeansWrapper *new_FreemarkerExtBeansBeansWrapper_initWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *incompatibleImprovements) {
  FreemarkerExtBeansBeansWrapper *self = [FreemarkerExtBeansBeansWrapper alloc];
  FreemarkerExtBeansBeansWrapper_initWithFreemarkerTemplateVersion_(self, incompatibleImprovements);
  return self;
}


#line 270
void FreemarkerExtBeansBeansWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_(FreemarkerExtBeansBeansWrapper *self, FreemarkerExtBeansBeansWrapperConfiguration *bwConf, jboolean writeProtected) {
  (void) FreemarkerExtBeansBeansWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_withBoolean_(self, bwConf, writeProtected, YES);
}


#line 270
FreemarkerExtBeansBeansWrapper *new_FreemarkerExtBeansBeansWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_(FreemarkerExtBeansBeansWrapperConfiguration *bwConf, jboolean writeProtected) {
  FreemarkerExtBeansBeansWrapper *self = [FreemarkerExtBeansBeansWrapper alloc];
  FreemarkerExtBeansBeansWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_(self, bwConf, writeProtected);
  return self;
}


#line 285
void FreemarkerExtBeansBeansWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_withBoolean_(FreemarkerExtBeansBeansWrapper *self, FreemarkerExtBeansBeansWrapperConfiguration *bwConf, jboolean writeProtected, jboolean finalizeConstruction) {
  (void) NSObject_init(self);
  self->nullModel_ =
#line 192
  nil;
  self->outerIdentity_ = self;
  self->methodsShadowItems_ =
#line 195
  YES;
  self->BOOLEAN_FACTORY_ = new_FreemarkerExtBeansBeansWrapper_$1_initWithFreemarkerExtBeansBeansWrapper_(self);
  
#line 287
  if ([((FreemarkerExtBeansBeansWrapperConfiguration *) nil_chk(bwConf)) getMethodAppearanceFineTuner] == nil) {
    IOSClass *thisClass = [self getClass];
    jboolean overridden = NO;
    jboolean testFailed = NO;
    @try {
      while (!overridden &&
#line 293
      thisClass != FreemarkerTemplateDefaultObjectWrapper_class_() &&
#line 294
      thisClass != FreemarkerExtBeansBeansWrapper_class_() &&
#line 295
      thisClass != FreemarkerTemplateSimpleObjectWrapper_class_()) {
        @try {
          (void) [thisClass getDeclaredMethod:@"finetuneMethodAppearance" parameterTypes:[IOSObjectArray newArrayWithObjects:(id[]){
#line 298
            IOSClass_class_(), JavaLangReflectMethod_class_(), FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision_class_() } count:3 type:IOSClass_class_()]];
            overridden = YES;
          }
          @catch (
#line 300
          JavaLangNoSuchMethodException *e) {
            thisClass = [thisClass getSuperclass];
          }
        }
      }
      @catch (
#line 304
      JavaLangThrowable *e) {
        
#line 306
        [((FreemarkerLogLogger *) nil_chk(FreemarkerExtBeansBeansWrapper_LOG_)) infoWithNSString:JreStrcat("$$$", @"Failed to check if finetuneMethodAppearance is overidden in ", [((IOSClass *) nil_chk(thisClass)) getName], @"; acting like if it was, but this way it won't utilize the shared class introspection cache.") withJavaLangThrowable:
#line 309
        e];
        overridden = YES;
        testFailed = YES;
      }
      if (overridden) {
        if (!testFailed && !FreemarkerExtBeansBeansWrapper_ftmaDeprecationWarnLogged_) {
          [((FreemarkerLogLogger *) nil_chk(FreemarkerExtBeansBeansWrapper_LOG_)) warnWithNSString:JreStrcat("$$$", @"Overriding ", [FreemarkerExtBeansBeansWrapper_class_() getName], @".finetuneMethodAppearance is deprecated and will be banned sometimes in the future. Use setMethodAppearanceFineTuner instead.")];
          
#line 317
          FreemarkerExtBeansBeansWrapper_ftmaDeprecationWarnLogged_ = YES;
        }
        bwConf = (FreemarkerExtBeansBeansWrapperConfiguration *) check_class_cast([bwConf cloneWithBoolean:NO], [FreemarkerExtBeansBeansWrapperConfiguration class]);
        [((FreemarkerExtBeansBeansWrapperConfiguration *) nil_chk(bwConf)) setMethodAppearanceFineTunerWithFreemarkerExtBeansMethodAppearanceFineTuner:new_FreemarkerExtBeansBeansWrapper_$5_initWithFreemarkerExtBeansBeansWrapper_(self)];
      }
    }
    
#line 331
    self->incompatibleImprovements_ = [((FreemarkerExtBeansBeansWrapperConfiguration *) nil_chk(bwConf)) getIncompatibleImprovements];
    
#line 333
    self->simpleMapWrapper_ = [bwConf isSimpleMapWrapper];
    self->defaultDateType_ = [bwConf getDefaultDateType];
    self->outerIdentity_ = [bwConf getOuterIdentity] != nil ? ((id) [bwConf getOuterIdentity]) : self;
    self->strict_ = [bwConf isStrict];
    
#line 338
    if (!writeProtected) {
      
#line 342
      self->sharedIntrospectionLock_ = new_NSObject_init();
      self->classIntrospector_ = new_FreemarkerExtBeansClassIntrospector_initWithFreemarkerExtBeansClassIntrospectorBuilder_withId_(bwConf->classIntrospectorFactory_, self->sharedIntrospectionLock_);
    }
    else {
      
#line 347
      self->classIntrospector_ = [((FreemarkerExtBeansClassIntrospectorBuilder *) nil_chk(bwConf->classIntrospectorFactory_)) build];
      self->sharedIntrospectionLock_ = [((FreemarkerExtBeansClassIntrospector *) nil_chk(self->classIntrospector_)) getSharedLock];
    }
    
#line 351
    self->falseModel_ = new_FreemarkerExtBeansBooleanModel_initWithJavaLangBoolean_withFreemarkerExtBeansBeansWrapper_(JavaLangBoolean_get_FALSE__(), self);
    self->trueModel_ = new_FreemarkerExtBeansBooleanModel_initWithJavaLangBoolean_withFreemarkerExtBeansBeansWrapper_(JavaLangBoolean_get_TRUE__(), self);
    
#line 354
    self->staticModels_ = new_FreemarkerExtBeansStaticModels_initWithFreemarkerExtBeansBeansWrapper_(self);
    self->enumModels_ = FreemarkerExtBeansBeansWrapper_createEnumModelsWithFreemarkerExtBeansBeansWrapper_(self);
    self->modelCache_ = new_FreemarkerExtBeansBeansModelCache_initWithFreemarkerExtBeansBeansWrapper_(self);
    [self setUseCacheWithBoolean:[bwConf getUseModelCache]];
    
#line 359
    [self finalizeConstructionWithBoolean:writeProtected];
  }


#line 285
FreemarkerExtBeansBeansWrapper *new_FreemarkerExtBeansBeansWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_withBoolean_(FreemarkerExtBeansBeansWrapperConfiguration *bwConf, jboolean writeProtected, jboolean finalizeConstruction) {
  FreemarkerExtBeansBeansWrapper *self = [FreemarkerExtBeansBeansWrapper alloc];
  FreemarkerExtBeansBeansWrapper_initWithFreemarkerExtBeansBeansWrapperConfiguration_withBoolean_withBoolean_(self, bwConf, writeProtected, finalizeConstruction);
  return self;
}


#line 646
void FreemarkerExtBeansBeansWrapper_replaceClassIntrospectorWithFreemarkerExtBeansClassIntrospectorBuilder_(FreemarkerExtBeansBeansWrapper *self, FreemarkerExtBeansClassIntrospectorBuilder *pa) {
  [self checkModifiable];
  
#line 649
  FreemarkerExtBeansClassIntrospector *newCI = new_FreemarkerExtBeansClassIntrospector_initWithFreemarkerExtBeansClassIntrospectorBuilder_withId_(pa, self->sharedIntrospectionLock_);
  FreemarkerExtBeansClassIntrospector *oldCI;
  
#line 657
  @synchronized(self->sharedIntrospectionLock_) {
    oldCI = self->classIntrospector_;
    if (oldCI != nil) {
      
#line 662
      if (self->staticModels_ != nil) {
        [oldCI unregisterModelFactoryWithFreemarkerExtBeansClassBasedModelFactory:self->staticModels_];
        [self->staticModels_ clearCache];
      }
      if (self->enumModels_ != nil) {
        [oldCI unregisterModelFactoryWithFreemarkerExtBeansClassBasedModelFactory:self->enumModels_];
        [self->enumModels_ clearCache];
      }
      if (self->modelCache_ != nil) {
        [oldCI unregisterModelFactoryWithFreemarkerExtUtilModelCache:self->modelCache_];
        [self->modelCache_ clearCache];
      }
      if (self->trueModel_ != nil) {
        [self->trueModel_ clearMemberCache];
      }
      if (self->falseModel_ != nil) {
        [self->falseModel_ clearMemberCache];
      }
    }
    
#line 682
    self->classIntrospector_ = newCI;
    
#line 684
    FreemarkerExtBeansBeansWrapper_registerModelFactories(self);
  }
}


#line 688
void FreemarkerExtBeansBeansWrapper_registerModelFactories(FreemarkerExtBeansBeansWrapper *self) {
  if (self->staticModels_ != nil) {
    [((FreemarkerExtBeansClassIntrospector *) nil_chk(self->classIntrospector_)) registerModelFactoryWithFreemarkerExtBeansClassBasedModelFactory:self->staticModels_];
  }
  if (self->enumModels_ != nil) {
    [((FreemarkerExtBeansClassIntrospector *) nil_chk(self->classIntrospector_)) registerModelFactoryWithFreemarkerExtBeansClassBasedModelFactory:self->enumModels_];
  }
  if (self->modelCache_ != nil) {
    [((FreemarkerExtBeansClassIntrospector *) nil_chk(self->classIntrospector_)) registerModelFactoryWithFreemarkerExtUtilModelCache:self->modelCache_];
  }
}


#line 801
jboolean FreemarkerExtBeansBeansWrapper_is2321BugfixedWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *version_) {
  FreemarkerExtBeansBeansWrapper_initialize();
  
#line 802
  return [((FreemarkerTemplateVersion *) nil_chk(version_)) intValue] >= FreemarkerTemplate_TemplateAPI_get_VERSION_INT_2_3_21_();
}


#line 809
FreemarkerTemplateVersion *FreemarkerExtBeansBeansWrapper_normalizeIncompatibleImprovementsVersionWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *incompatibleImprovements) {
  FreemarkerExtBeansBeansWrapper_initialize();
  
#line 810
  FreemarkerTemplate_TemplateAPI_checkVersionNotNullAndSupportedWithFreemarkerTemplateVersion_(incompatibleImprovements);
  if ([((FreemarkerTemplateVersion *) nil_chk(incompatibleImprovements)) intValue] < FreemarkerTemplate_TemplateAPI_get_VERSION_INT_2_3_0_()) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Version must be at least 2.3.0.");
  }
  return FreemarkerExtBeansBeansWrapper_is2321BugfixedWithFreemarkerTemplateVersion_(incompatibleImprovements) ? FreemarkerTemplateConfiguration_get_VERSION_2_3_21_() : FreemarkerTemplateConfiguration_get_VERSION_2_3_0_();
}


#line 831
FreemarkerExtBeansBeansWrapper *FreemarkerExtBeansBeansWrapper_getDefaultInstance() {
  FreemarkerExtBeansBeansWrapper_initialize();
  return FreemarkerExtBeansBeansWrapperSingletonHolder_get_INSTANCE_();
}


#line 1020
id FreemarkerExtBeansBeansWrapper_tryUnwrapToWithFreemarkerTemplateTemplateModel_withIOSClass_withInt_withJavaUtilMap_(FreemarkerExtBeansBeansWrapper *self, id<FreemarkerTemplateTemplateModel> model, IOSClass *targetClass, jint typeFlags, id<JavaUtilMap> recursionStops) {
  
#line 1022
  if (model == nil || model == self->nullModel_) {
    return nil;
  }
  
#line 1026
  jboolean is2321Bugfixed = [self is2321Bugfixed];
  
#line 1028
  if (is2321Bugfixed && [((IOSClass *) nil_chk(targetClass)) isPrimitive]) {
    targetClass = FreemarkerTemplateUtilityClassUtil_primitiveClassToBoxingClassWithIOSClass_(targetClass);
  }
  
#line 1036
  if ([FreemarkerTemplateAdapterTemplateModel_class_() isInstance:model]) {
    id wrapped = [((id<FreemarkerTemplateAdapterTemplateModel>) nil_chk(((id<FreemarkerTemplateAdapterTemplateModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateAdapterTemplateModel))))) getAdaptedObjectWithIOSClass:
#line 1038
    targetClass];
    if (targetClass == NSObject_class_() || [((IOSClass *) nil_chk(targetClass)) isInstance:wrapped]) {
      return wrapped;
    }
    
#line 1044
    if (targetClass != NSObject_class_() && ([wrapped isKindOfClass:[NSNumber class]] && FreemarkerTemplateUtilityClassUtil_isNumericalWithIOSClass_(targetClass))) {
      NSNumber *number = FreemarkerExtBeansBeansWrapper_forceUnwrappedNumberToTypeWithNSNumber_withIOSClass_withBoolean_((NSNumber *) check_class_cast(wrapped, [NSNumber class]), targetClass, is2321Bugfixed);
      if (number != nil) return number;
    }
  }
  
#line 1050
  if ([FreemarkerExtUtilWrapperTemplateModel_class_() isInstance:model]) {
    id wrapped = [((id<FreemarkerExtUtilWrapperTemplateModel>) nil_chk(((id<FreemarkerExtUtilWrapperTemplateModel>) check_protocol_cast(model, @protocol(FreemarkerExtUtilWrapperTemplateModel))))) getWrappedObject];
    if (targetClass == NSObject_class_() || [((IOSClass *) nil_chk(targetClass)) isInstance:wrapped]) {
      return wrapped;
    }
    
#line 1057
    if (targetClass != NSObject_class_() && ([wrapped isKindOfClass:[NSNumber class]] && FreemarkerTemplateUtilityClassUtil_isNumericalWithIOSClass_(targetClass))) {
      NSNumber *number = FreemarkerExtBeansBeansWrapper_forceUnwrappedNumberToTypeWithNSNumber_withIOSClass_withBoolean_((NSNumber *) check_class_cast(wrapped, [NSNumber class]), targetClass, is2321Bugfixed);
      if (number != nil) {
        return number;
      }
    }
  }
  
#line 1069
  if (targetClass != NSObject_class_()) {
    
#line 1072
    if (NSString_class_() == targetClass) {
      if ([FreemarkerTemplateTemplateScalarModel_class_() isInstance:model]) {
        return [((id<FreemarkerTemplateTemplateScalarModel>) nil_chk(((id<FreemarkerTemplateTemplateScalarModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateScalarModel))))) getAsString];
      }
      
#line 1077
      return FreemarkerTemplateObjectWrapperAndUnwrapper_get_CANT_UNWRAP_TO_TARGET_CLASS_();
    }
    
#line 1081
    if (FreemarkerTemplateUtilityClassUtil_isNumericalWithIOSClass_(targetClass)) {
      if ([FreemarkerTemplateTemplateNumberModel_class_() isInstance:model]) {
        NSNumber *number = FreemarkerExtBeansBeansWrapper_forceUnwrappedNumberToTypeWithNSNumber_withIOSClass_withBoolean_(
#line 1084
        [((id<FreemarkerTemplateTemplateNumberModel>) nil_chk(((id<FreemarkerTemplateTemplateNumberModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateNumberModel))))) getAsNumber], targetClass, is2321Bugfixed);
        if (number != nil) {
          return number;
        }
      }
    }
    
#line 1091
    if ([IOSClass booleanClass] == targetClass || JavaLangBoolean_class_() == targetClass) {
      if ([FreemarkerTemplateTemplateBooleanModel_class_() isInstance:model]) {
        return JavaLangBoolean_valueOfWithBoolean_([((id<FreemarkerTemplateTemplateBooleanModel>) nil_chk(((id<FreemarkerTemplateTemplateBooleanModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateBooleanModel))))) getAsBoolean]);
      }
      
#line 1096
      return FreemarkerTemplateObjectWrapperAndUnwrapper_get_CANT_UNWRAP_TO_TARGET_CLASS_();
    }
    
#line 1099
    if (JavaUtilMap_class_() == targetClass) {
      if ([FreemarkerTemplateTemplateHashModel_class_() isInstance:model]) {
        return new_FreemarkerExtBeansHashAdapter_initWithFreemarkerTemplateTemplateHashModel_withFreemarkerExtBeansBeansWrapper_((id<FreemarkerTemplateTemplateHashModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateHashModel)), self);
      }
    }
    
#line 1105
    if (JavaUtilList_class_() == targetClass) {
      if ([FreemarkerTemplateTemplateSequenceModel_class_() isInstance:model]) {
        return new_FreemarkerExtBeansSequenceAdapter_initWithFreemarkerTemplateTemplateSequenceModel_withFreemarkerExtBeansBeansWrapper_((id<FreemarkerTemplateTemplateSequenceModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateSequenceModel)), self);
      }
    }
    
#line 1111
    if (JavaUtilSet_class_() == targetClass) {
      if ([FreemarkerTemplateTemplateCollectionModel_class_() isInstance:model]) {
        return new_FreemarkerExtBeansSetAdapter_initWithFreemarkerTemplateTemplateCollectionModel_withFreemarkerExtBeansBeansWrapper_((id<FreemarkerTemplateTemplateCollectionModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateCollectionModel)), self);
      }
    }
    
#line 1117
    if (JavaUtilCollection_class_() == targetClass || FreemarkerExtBeansBeansWrapper_ITERABLE_CLASS_ == targetClass) {
      if ([FreemarkerTemplateTemplateCollectionModel_class_() isInstance:model]) {
        return new_FreemarkerExtBeansCollectionAdapter_initWithFreemarkerTemplateTemplateCollectionModel_withFreemarkerExtBeansBeansWrapper_((id<FreemarkerTemplateTemplateCollectionModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateCollectionModel)), self);
      }
      
#line 1122
      if ([FreemarkerTemplateTemplateSequenceModel_class_() isInstance:model]) {
        return new_FreemarkerExtBeansSequenceAdapter_initWithFreemarkerTemplateTemplateSequenceModel_withFreemarkerExtBeansBeansWrapper_((id<FreemarkerTemplateTemplateSequenceModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateSequenceModel)), self);
      }
    }
    
#line 1128
    if ([((IOSClass *) nil_chk(targetClass)) isArray]) {
      if ([FreemarkerTemplateTemplateSequenceModel_class_() isInstance:model]) {
        return [self unwrapSequenceToArrayWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateSequenceModel)) withIOSClass:targetClass withBoolean:YES withJavaUtilMap:recursionStops];
      }
      
#line 1133
      return FreemarkerTemplateObjectWrapperAndUnwrapper_get_CANT_UNWRAP_TO_TARGET_CLASS_();
    }
    
#line 1137
    if ([IOSClass charClass] == targetClass || targetClass == JavaLangCharacter_class_()) {
      if ([FreemarkerTemplateTemplateScalarModel_class_() isInstance:model]) {
        NSString *s = [((id<FreemarkerTemplateTemplateScalarModel>) nil_chk(((id<FreemarkerTemplateTemplateScalarModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateScalarModel))))) getAsString];
        if (((jint) [((NSString *) nil_chk(s)) length]) == 1) {
          return new_JavaLangCharacter_initWithChar_([s charAtWithInt:0]);
        }
      }
      
#line 1145
      return FreemarkerTemplateObjectWrapperAndUnwrapper_get_CANT_UNWRAP_TO_TARGET_CLASS_();
    }
    
#line 1148
    if ([JavaUtilDate_class_() isAssignableFrom:targetClass] && [FreemarkerTemplateTemplateDateModel_class_() isInstance:model]) {
      JavaUtilDate *date = [((id<FreemarkerTemplateTemplateDateModel>) nil_chk(((id<FreemarkerTemplateTemplateDateModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateDateModel))))) getAsDate];
      if ([targetClass isInstance:date]) {
        return date;
      }
    }
  }
  
#line 1160
  jint itf = typeFlags;
  
#line 1163
  do {
    if ((itf == 0 || (itf & FreemarkerExtBeansTypeFlags_ACCEPTS_NUMBER) != 0) &&
#line 1165
    [FreemarkerTemplateTemplateNumberModel_class_() isInstance:model]) {
      NSNumber *number = [((id<FreemarkerTemplateTemplateNumberModel>) nil_chk(((id<FreemarkerTemplateTemplateNumberModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateNumberModel))))) getAsNumber];
      if (itf != 0 || [((IOSClass *) nil_chk(targetClass)) isInstance:number]) {
        return number;
      }
    }
    if ((itf == 0 || (itf & FreemarkerExtBeansTypeFlags_ACCEPTS_DATE) != 0) &&
#line 1172
    [FreemarkerTemplateTemplateDateModel_class_() isInstance:model]) {
      JavaUtilDate *date = [((id<FreemarkerTemplateTemplateDateModel>) nil_chk(((id<FreemarkerTemplateTemplateDateModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateDateModel))))) getAsDate];
      if (itf != 0 || [((IOSClass *) nil_chk(targetClass)) isInstance:date]) {
        return date;
      }
    }
    if ((itf == 0 || (itf & (FreemarkerExtBeansTypeFlags_ACCEPTS_STRING | FreemarkerExtBeansTypeFlags_CHARACTER)) != 0) &&
#line 1179
    [FreemarkerTemplateTemplateScalarModel_class_() isInstance:model] &&
#line 1180
    (itf != 0 || [((IOSClass *) nil_chk(targetClass)) isAssignableFrom:NSString_class_()])) {
      NSString *strVal = [((id<FreemarkerTemplateTemplateScalarModel>) nil_chk(((id<FreemarkerTemplateTemplateScalarModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateScalarModel))))) getAsString];
      if (itf == 0 || (itf & FreemarkerExtBeansTypeFlags_CHARACTER) == 0) {
        return strVal;
      }
      else {
        
#line 1185
        if (((jint) [((NSString *) nil_chk(strVal)) length]) == 1) {
          if ((itf & FreemarkerExtBeansTypeFlags_ACCEPTS_STRING) != 0) {
            return new_FreemarkerExtBeansCharacterOrString_initWithNSString_(strVal);
          }
          else {
            
#line 1189
            return new_JavaLangCharacter_initWithChar_([strVal charAtWithInt:0]);
          }
        }
        else
#line 1191
        if ((itf & FreemarkerExtBeansTypeFlags_ACCEPTS_STRING) != 0) {
          return strVal;
        }
      }
    }
    
#line 1198
    if ((itf == 0 || (itf & FreemarkerExtBeansTypeFlags_ACCEPTS_BOOLEAN) != 0) &&
#line 1199
    [FreemarkerTemplateTemplateBooleanModel_class_() isInstance:model] &&
#line 1200
    (itf != 0 || [((IOSClass *) nil_chk(targetClass)) isAssignableFrom:JavaLangBoolean_class_()])) {
      return JavaLangBoolean_valueOfWithBoolean_([((id<FreemarkerTemplateTemplateBooleanModel>) nil_chk(((id<FreemarkerTemplateTemplateBooleanModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateBooleanModel))))) getAsBoolean]);
    }
    if ((itf == 0 || (itf & FreemarkerExtBeansTypeFlags_ACCEPTS_MAP) != 0) &&
#line 1204
    [FreemarkerTemplateTemplateHashModel_class_() isInstance:model] &&
#line 1205
    (itf != 0 || [((IOSClass *) nil_chk(targetClass)) isAssignableFrom:FreemarkerExtBeansHashAdapter_class_()])) {
      return new_FreemarkerExtBeansHashAdapter_initWithFreemarkerTemplateTemplateHashModel_withFreemarkerExtBeansBeansWrapper_((id<FreemarkerTemplateTemplateHashModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateHashModel)), self);
    }
    if ((itf == 0 || (itf & FreemarkerExtBeansTypeFlags_ACCEPTS_LIST) != 0) &&
#line 1209
    [FreemarkerTemplateTemplateSequenceModel_class_() isInstance:model] &&
#line 1210
    (itf != 0 || [((IOSClass *) nil_chk(targetClass)) isAssignableFrom:FreemarkerExtBeansSequenceAdapter_class_()])) {
      return new_FreemarkerExtBeansSequenceAdapter_initWithFreemarkerTemplateTemplateSequenceModel_withFreemarkerExtBeansBeansWrapper_((id<FreemarkerTemplateTemplateSequenceModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateSequenceModel)), self);
    }
    if ((itf == 0 || (itf & FreemarkerExtBeansTypeFlags_ACCEPTS_SET) != 0) &&
#line 1214
    [FreemarkerTemplateTemplateCollectionModel_class_() isInstance:model] &&
#line 1215
    (itf != 0 || [((IOSClass *) nil_chk(targetClass)) isAssignableFrom:FreemarkerExtBeansSetAdapter_class_()])) {
      return new_FreemarkerExtBeansSetAdapter_initWithFreemarkerTemplateTemplateCollectionModel_withFreemarkerExtBeansBeansWrapper_((id<FreemarkerTemplateTemplateCollectionModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateCollectionModel)), self);
    }
    
#line 1222
    if ((itf & FreemarkerExtBeansTypeFlags_ACCEPTS_ARRAY) != 0 &&
#line 1223
    [FreemarkerTemplateTemplateSequenceModel_class_() isInstance:model]) {
      return new_FreemarkerExtBeansSequenceAdapter_initWithFreemarkerTemplateTemplateSequenceModel_withFreemarkerExtBeansBeansWrapper_((id<FreemarkerTemplateTemplateSequenceModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateSequenceModel)), self);
    }
    
#line 1227
    if (itf == 0) {
      break;
    }
    itf = 0;
  }
  while (
#line 1231
  YES);
  
#line 1235
  if ([((IOSClass *) nil_chk(targetClass)) isInstance:model]) {
    return model;
  }
  
#line 1239
  return FreemarkerTemplateObjectWrapperAndUnwrapper_get_CANT_UNWRAP_TO_TARGET_CLASS_();
}


#line 1378
NSNumber *FreemarkerExtBeansBeansWrapper_forceUnwrappedNumberToTypeWithNSNumber_withIOSClass_withBoolean_(NSNumber *n, IOSClass *targetType, jboolean bugfixed) {
  FreemarkerExtBeansBeansWrapper_initialize();
  if (targetType == [((NSNumber *) nil_chk(n)) getClass]) {
    return n;
  }
  else
#line 1382
  if (targetType == [IOSClass intClass] || targetType == JavaLangInteger_class_()) {
    return [n isKindOfClass:[JavaLangInteger class]] ? (JavaLangInteger *) check_class_cast(n, [JavaLangInteger class]) : new_JavaLangInteger_initWithInt_([n intValue]);
  }
  else
#line 1384
  if (targetType == [IOSClass longClass] || targetType == JavaLangLong_class_()) {
    return [n isKindOfClass:[JavaLangLong class]] ? (JavaLangLong *) check_class_cast(n, [JavaLangLong class]) : new_JavaLangLong_initWithLong_([n longLongValue]);
  }
  else
#line 1386
  if (targetType == [IOSClass doubleClass] || targetType == JavaLangDouble_class_()) {
    return [n isKindOfClass:[JavaLangDouble class]] ? (JavaLangDouble *) check_class_cast(n, [JavaLangDouble class]) : new_JavaLangDouble_initWithDouble_([n doubleValue]);
  }
  else
#line 1388
  if (targetType == JavaMathBigDecimal_class_()) {
    if ([n isKindOfClass:[JavaMathBigDecimal class]]) {
      return n;
    }
    else
#line 1391
    if ([n isKindOfClass:[JavaMathBigInteger class]]) {
      return new_JavaMathBigDecimal_initWithJavaMathBigInteger_((JavaMathBigInteger *) check_class_cast(n, [JavaMathBigInteger class]));
    }
    else
#line 1393
    if ([n isKindOfClass:[JavaLangLong class]]) {
      
#line 1395
      return JavaMathBigDecimal_valueOfWithLong_([n longLongValue]);
    }
    else {
      
#line 1397
      return new_JavaMathBigDecimal_initWithDouble_([n doubleValue]);
    }
  }
  else
#line 1399
  if (targetType == [IOSClass floatClass] || targetType == JavaLangFloat_class_()) {
    return [n isKindOfClass:[JavaLangFloat class]] ? (JavaLangFloat *) check_class_cast(n, [JavaLangFloat class]) : new_JavaLangFloat_initWithFloat_([n floatValue]);
  }
  else
#line 1401
  if (targetType == [IOSClass byteClass] || targetType == JavaLangByte_class_()) {
    return [n isKindOfClass:[JavaLangByte class]] ? (JavaLangByte *) check_class_cast(n, [JavaLangByte class]) : new_JavaLangByte_initWithByte_([n charValue]);
  }
  else
#line 1403
  if (targetType == [IOSClass shortClass] || targetType == JavaLangShort_class_()) {
    return [n isKindOfClass:[JavaLangShort class]] ? (JavaLangShort *) check_class_cast(n, [JavaLangShort class]) : new_JavaLangShort_initWithShort_([n shortValue]);
  }
  else
#line 1405
  if (targetType == JavaMathBigInteger_class_()) {
    if ([n isKindOfClass:[JavaMathBigInteger class]]) {
      return n;
    }
    else
#line 1408
    if (bugfixed) {
      if ([n isKindOfClass:[FreemarkerExtBeansOverloadedNumberUtil_IntegerBigDecimal class]]) {
        return [((FreemarkerExtBeansOverloadedNumberUtil_IntegerBigDecimal *) check_class_cast(n, [FreemarkerExtBeansOverloadedNumberUtil_IntegerBigDecimal class])) bigIntegerValue];
      }
      else
#line 1411
      if ([n isKindOfClass:[JavaMathBigDecimal class]]) {
        return [((JavaMathBigDecimal *) check_class_cast(n, [JavaMathBigDecimal class])) toBigInteger];
      }
      else {
        
#line 1414
        return JavaMathBigInteger_valueOfWithLong_([n longLongValue]);
      }
    }
    else {
      return new_JavaMathBigInteger_initWithNSString_([n description]);
    }
  }
  else {
    
#line 1421
    NSNumber *oriN = [n isKindOfClass:[FreemarkerExtBeansOverloadedNumberUtil_NumberWithFallbackType class]] ?
#line 1422
    [((FreemarkerExtBeansOverloadedNumberUtil_NumberWithFallbackType *) check_class_cast(n, [FreemarkerExtBeansOverloadedNumberUtil_NumberWithFallbackType class])) getSourceNumber] : n;
    if ([((IOSClass *) nil_chk(targetType)) isInstance:oriN]) {
      
#line 1425
      return oriN;
    }
    else {
      return nil;
    }
  }
}


#line 1620
void FreemarkerExtBeansBeansWrapper_coerceBigDecimalsWithJavaLangReflectAccessibleObject_withNSObjectArray_(JavaLangReflectAccessibleObject *callable, IOSObjectArray *args) {
  FreemarkerExtBeansBeansWrapper_initialize();
  IOSObjectArray *formalTypes = nil;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(args))->size_; ++i) {
    id arg = IOSObjectArray_Get(args, i);
    if ([arg isKindOfClass:[JavaMathBigDecimal class]]) {
      if (formalTypes == nil) {
        if ([callable isKindOfClass:[JavaLangReflectMethod class]]) {
          formalTypes = [((JavaLangReflectMethod *) nil_chk(((JavaLangReflectMethod *) check_class_cast(callable, [JavaLangReflectMethod class])))) getParameterTypes];
        }
        else if ([callable isKindOfClass:[JavaLangReflectConstructor class]]) {
          formalTypes = [((JavaLangReflectConstructor *) nil_chk(((JavaLangReflectConstructor *) check_class_cast(callable, [JavaLangReflectConstructor class])))) getParameterTypes];
        }
        else {
          @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Expected method or  constructor; callable is ",
#line 1636
          [[((JavaLangReflectAccessibleObject *) nil_chk(callable)) getClass] getName]));
        }
      }
      (void) IOSObjectArray_Set(args, i, FreemarkerExtBeansBeansWrapper_coerceBigDecimalWithJavaMathBigDecimal_withIOSClass_((JavaMathBigDecimal *) check_class_cast(arg, [JavaMathBigDecimal class]), IOSObjectArray_Get(nil_chk(formalTypes), i)));
    }
  }
}


#line 1648
void FreemarkerExtBeansBeansWrapper_coerceBigDecimalsWithIOSClassArray_withNSObjectArray_(IOSObjectArray *formalTypes, IOSObjectArray *args) {
  FreemarkerExtBeansBeansWrapper_initialize();
  jint typeLen = ((IOSObjectArray *) nil_chk(formalTypes))->size_;
  jint argsLen = ((IOSObjectArray *) nil_chk(args))->size_;
  jint min = JavaLangMath_minWithInt_withInt_(typeLen, argsLen);
  for (jint i = 0; i < min; ++i) {
    id arg = IOSObjectArray_Get(args, i);
    if ([arg isKindOfClass:[JavaMathBigDecimal class]]) {
      (void) IOSObjectArray_Set(args, i, FreemarkerExtBeansBeansWrapper_coerceBigDecimalWithJavaMathBigDecimal_withIOSClass_((JavaMathBigDecimal *) check_class_cast(arg, [JavaMathBigDecimal class]), IOSObjectArray_Get(formalTypes, i)));
    }
  }
  if (argsLen > typeLen) {
    IOSClass *varArgType = IOSObjectArray_Get(formalTypes, typeLen - 1);
    for (jint i = typeLen; i < argsLen; ++i) {
      id arg = IOSObjectArray_Get(args, i);
      if ([arg isKindOfClass:[JavaMathBigDecimal class]]) {
        (void) IOSObjectArray_Set(args, i, FreemarkerExtBeansBeansWrapper_coerceBigDecimalWithJavaMathBigDecimal_withIOSClass_((JavaMathBigDecimal *) check_class_cast(arg, [JavaMathBigDecimal class]), varArgType));
      }
    }
  }
}

id FreemarkerExtBeansBeansWrapper_coerceBigDecimalWithJavaMathBigDecimal_withIOSClass_(JavaMathBigDecimal *bd, IOSClass *formalType) {
  FreemarkerExtBeansBeansWrapper_initialize();
  if (formalType == [IOSClass intClass] || formalType == JavaLangInteger_class_()) {
    return new_JavaLangInteger_initWithInt_([((JavaMathBigDecimal *) nil_chk(bd)) intValue]);
  }
  else if (formalType == [IOSClass doubleClass] || formalType == JavaLangDouble_class_()) {
    return new_JavaLangDouble_initWithDouble_([((JavaMathBigDecimal *) nil_chk(bd)) doubleValue]);
  }
  else if (formalType == [IOSClass longClass] || formalType == JavaLangLong_class_()) {
    return new_JavaLangLong_initWithLong_([((JavaMathBigDecimal *) nil_chk(bd)) longLongValue]);
  }
  else if (formalType == [IOSClass floatClass] || formalType == JavaLangFloat_class_()) {
    return new_JavaLangFloat_initWithFloat_([((JavaMathBigDecimal *) nil_chk(bd)) floatValue]);
  }
  else if (formalType == [IOSClass shortClass] || formalType == JavaLangShort_class_()) {
    return new_JavaLangShort_initWithShort_([((JavaMathBigDecimal *) nil_chk(bd)) shortValue]);
  }
  else if (formalType == [IOSClass byteClass] || formalType == JavaLangByte_class_()) {
    return new_JavaLangByte_initWithByte_([((JavaMathBigDecimal *) nil_chk(bd)) charValue]);
  }
  else if ([JavaMathBigInteger_class_() isAssignableFrom:formalType]) {
    return [((JavaMathBigDecimal *) nil_chk(bd)) toBigInteger];
  }
  else {
    
#line 1693
    return bd;
  }
}


#line 1728
FreemarkerExtBeansClassBasedModelFactory *FreemarkerExtBeansBeansWrapper_createEnumModelsWithFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansBeansWrapper *wrapper) {
  FreemarkerExtBeansBeansWrapper_initialize();
  
#line 1729
  if (FreemarkerExtBeansBeansWrapper_ENUMS_MODEL_CTOR_ != nil) {
    @try {
      return (FreemarkerExtBeansClassBasedModelFactory *) check_class_cast([FreemarkerExtBeansBeansWrapper_ENUMS_MODEL_CTOR_ newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){
#line 1732
        wrapper } count:1 type:NSObject_class_()]], [FreemarkerExtBeansClassBasedModelFactory class]);
      }
      @catch (
#line 1733
      JavaLangException *e) {
        @throw new_FreemarkerTemplateUtilityUndeclaredThrowableException_initWithJavaLangThrowable_(e);
      }
    }
    else {
      
#line 1737
      return nil;
    }
  }


#line 1741
JavaLangReflectConstructor *FreemarkerExtBeansBeansWrapper_enumsModelCtor() {
  FreemarkerExtBeansBeansWrapper_initialize();
  
#line 1742
  @try {
    
#line 1744
    (void) IOSClass_forName_(@"java.lang.Enum");
    
#line 1746
    return [((IOSClass *) nil_chk(IOSClass_forName_(
#line 1747
    @"freemarker.ext.beans._EnumModels"))) getDeclaredConstructor:[IOSObjectArray newArrayWithObjects:(id[]){
#line 1748
      FreemarkerExtBeansBeansWrapper_class_() } count:1 type:IOSClass_class_()]];
    }
    @catch (JavaLangException *e) {
      
#line 1752
      return nil;
    }
  }

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansBeansWrapper)


#line 1762
@implementation FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision


#line 1767
- (void)setDefaultsWithJavaLangReflectMethod:(JavaLangReflectMethod *)m {
  
#line 1769
  exposeMethodAs_ = [((JavaLangReflectMethod *) nil_chk(m)) getName];
  methodShadowsProperty_ = YES;
}


#line 1781
- (NSString *)getExposeMethodAs {
  return exposeMethodAs_;
}

- (void)setExposeMethodAsWithNSString:(NSString *)exposeAsMethod {
  self->exposeMethodAs_ = exposeAsMethod;
}

- (jboolean)getMethodShadowsProperty {
  return methodShadowsProperty_;
}

- (void)setMethodShadowsPropertyWithBoolean:(jboolean)shadowEarlierProperty {
  self->methodShadowsProperty_ = shadowEarlierProperty;
}

- (instancetype)init {
  FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setDefaultsWithJavaLangReflectMethod:", "setDefaults", "V", 0x0, NULL, NULL },
    { "getExposeMethodAs", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setExposeMethodAsWithNSString:", "setExposeMethodAs", "V", 0x1, NULL, NULL },
    { "getMethodShadowsProperty", NULL, "Z", 0x1, NULL, NULL },
    { "setMethodShadowsPropertyWithBoolean:", "setMethodShadowsProperty", "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "exposeMethodAs_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "methodShadowsProperty_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision = { 2, "MethodAppearanceDecision", "freemarker.ext.beans", "BeansWrapper", 0x19, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision;
}

@end

void FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision_init(FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision *self) {
  (void) NSObject_init(self);
}

FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision *new_FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision_init() {
  FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision *self = [FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision alloc];
  FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision)


#line 1805
@implementation FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput


#line 1809
- (void)setMethodWithJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  self->method_ = method;
}

- (void)setContainingClassWithIOSClass:(IOSClass *)containingClass {
  self->containingClass_ = containingClass;
}

- (JavaLangReflectMethod *)getMethod {
  return method_;
}

- (IOSClass *)getContainingClass {
  return containingClass_;
}

- (instancetype)init {
  FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setMethodWithJavaLangReflectMethod:", "setMethod", "V", 0x0, NULL, NULL },
    { "setContainingClassWithIOSClass:", "setContainingClass", "V", 0x0, NULL, NULL },
    { "getMethod", NULL, "Ljava.lang.reflect.Method;", 0x1, NULL, NULL },
    { "getContainingClass", NULL, "Ljava.lang.Class;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "method_", NULL, 0x2, "Ljava.lang.reflect.Method;", NULL, NULL,  },
    { "containingClass_", NULL, 0x2, "Ljava.lang.Class;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput = { 2, "MethodAppearanceDecisionInput", "freemarker.ext.beans", "BeansWrapper", 0x19, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput;
}

@end

void FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput_init(FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput *self) {
  (void) NSObject_init(self);
}

FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput *new_FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput_init() {
  FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput *self = [FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput alloc];
  FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput)

@implementation FreemarkerExtBeansBeansWrapper_$4

- (instancetype)initWithFreemarkerTemplateVersion:(FreemarkerTemplateVersion *)arg$0 {
  FreemarkerExtBeansBeansWrapper_$4_initWithFreemarkerTemplateVersion_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerTemplateVersion:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "FreemarkerExtBeansBeansWrapper", "initWithFreemarkerTemplateVersion:" };
  static const J2ObjcClassInfo _FreemarkerExtBeansBeansWrapper_$4 = { 2, "", "freemarker.ext.beans", "BeansWrapper", 0x8008, 1, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_FreemarkerExtBeansBeansWrapper_$4;
}

@end

void FreemarkerExtBeansBeansWrapper_$4_initWithFreemarkerTemplateVersion_(FreemarkerExtBeansBeansWrapper_$4 *self, FreemarkerTemplateVersion *arg$0) {
  (void) FreemarkerExtBeansBeansWrapperConfiguration_initWithFreemarkerTemplateVersion_(self, arg$0);
}

FreemarkerExtBeansBeansWrapper_$4 *new_FreemarkerExtBeansBeansWrapper_$4_initWithFreemarkerTemplateVersion_(FreemarkerTemplateVersion *arg$0) {
  FreemarkerExtBeansBeansWrapper_$4 *self = [FreemarkerExtBeansBeansWrapper_$4 alloc];
  FreemarkerExtBeansBeansWrapper_$4_initWithFreemarkerTemplateVersion_(self, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansBeansWrapper_$4)

@implementation FreemarkerExtBeansBeansWrapper_$5


#line 322
- (void)processWithFreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput:(FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput *)inArg
                    withFreemarkerExtBeansBeansWrapper_MethodAppearanceDecision:(FreemarkerExtBeansBeansWrapper_MethodAppearanceDecision *)outArg {
  
#line 324
  [this$0_ finetuneMethodAppearanceWithIOSClass:[((FreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput *) nil_chk(inArg)) getContainingClass] withJavaLangReflectMethod:[inArg getMethod] withFreemarkerExtBeansBeansWrapper_MethodAppearanceDecision:outArg];
}

- (instancetype)initWithFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)outer$ {
  FreemarkerExtBeansBeansWrapper_$5_initWithFreemarkerExtBeansBeansWrapper_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "processWithFreemarkerExtBeansBeansWrapper_MethodAppearanceDecisionInput:withFreemarkerExtBeansBeansWrapper_MethodAppearanceDecision:", "process", "V", 0x1, NULL, NULL },
    { "initWithFreemarkerExtBeansBeansWrapper:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.ext.beans.BeansWrapper;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "FreemarkerExtBeansBeansWrapper", "initWithFreemarkerExtBeansBeansWrapperConfiguration:withBoolean:withBoolean:" };
  static const J2ObjcClassInfo _FreemarkerExtBeansBeansWrapper_$5 = { 2, "", "freemarker.ext.beans", "BeansWrapper", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_FreemarkerExtBeansBeansWrapper_$5;
}

@end

void FreemarkerExtBeansBeansWrapper_$5_initWithFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansBeansWrapper_$5 *self, FreemarkerExtBeansBeansWrapper *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

FreemarkerExtBeansBeansWrapper_$5 *new_FreemarkerExtBeansBeansWrapper_$5_initWithFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansBeansWrapper *outer$) {
  FreemarkerExtBeansBeansWrapper_$5 *self = [FreemarkerExtBeansBeansWrapper_$5 alloc];
  FreemarkerExtBeansBeansWrapper_$5_initWithFreemarkerExtBeansBeansWrapper_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansBeansWrapper_$5)

@implementation FreemarkerExtBeansBeansWrapper_$1


#line 900
- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  return [((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) check_class_cast(object, [JavaLangBoolean class])))) booleanValue] ? this$0_->trueModel_ : this$0_->falseModel_;
}

- (instancetype)initWithFreemarkerExtBeansBeansWrapper:(FreemarkerExtBeansBeansWrapper *)outer$ {
  FreemarkerExtBeansBeansWrapper_$1_initWithFreemarkerExtBeansBeansWrapper_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createWithId:withFreemarkerTemplateObjectWrapper:", "create", "Lfreemarker.template.TemplateModel;", 0x1, NULL, NULL },
    { "initWithFreemarkerExtBeansBeansWrapper:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.ext.beans.BeansWrapper;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansBeansWrapper_$1 = { 2, "", "freemarker.ext.beans", "BeansWrapper", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansBeansWrapper_$1;
}

@end

void FreemarkerExtBeansBeansWrapper_$1_initWithFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansBeansWrapper_$1 *self, FreemarkerExtBeansBeansWrapper *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

FreemarkerExtBeansBeansWrapper_$1 *new_FreemarkerExtBeansBeansWrapper_$1_initWithFreemarkerExtBeansBeansWrapper_(FreemarkerExtBeansBeansWrapper *outer$) {
  FreemarkerExtBeansBeansWrapper_$1 *self = [FreemarkerExtBeansBeansWrapper_$1 alloc];
  FreemarkerExtBeansBeansWrapper_$1_initWithFreemarkerExtBeansBeansWrapper_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansBeansWrapper_$1)

@implementation FreemarkerExtBeansBeansWrapper_$2


#line 906
- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  return new_FreemarkerExtBeansIteratorModel_initWithJavaUtilIterator_withFreemarkerExtBeansBeansWrapper_((id<JavaUtilIterator>) check_protocol_cast(object, @protocol(JavaUtilIterator)), (FreemarkerExtBeansBeansWrapper *) check_class_cast(wrapper, [FreemarkerExtBeansBeansWrapper class]));
}

- (instancetype)init {
  FreemarkerExtBeansBeansWrapper_$2_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createWithId:withFreemarkerTemplateObjectWrapper:", "create", "Lfreemarker.template.TemplateModel;", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansBeansWrapper_$2 = { 2, "", "freemarker.ext.beans", "BeansWrapper", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansBeansWrapper_$2;
}

@end

void FreemarkerExtBeansBeansWrapper_$2_init(FreemarkerExtBeansBeansWrapper_$2 *self) {
  (void) NSObject_init(self);
}

FreemarkerExtBeansBeansWrapper_$2 *new_FreemarkerExtBeansBeansWrapper_$2_init() {
  FreemarkerExtBeansBeansWrapper_$2 *self = [FreemarkerExtBeansBeansWrapper_$2 alloc];
  FreemarkerExtBeansBeansWrapper_$2_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansBeansWrapper_$2)

@implementation FreemarkerExtBeansBeansWrapper_$3


#line 912
- (id<FreemarkerTemplateTemplateModel>)createWithId:(id)object
                withFreemarkerTemplateObjectWrapper:(id<FreemarkerTemplateObjectWrapper>)wrapper {
  return new_FreemarkerExtBeansEnumerationModel_initWithJavaUtilEnumeration_withFreemarkerExtBeansBeansWrapper_((id<JavaUtilEnumeration>) check_protocol_cast(object, @protocol(JavaUtilEnumeration)), (FreemarkerExtBeansBeansWrapper *) check_class_cast(wrapper, [FreemarkerExtBeansBeansWrapper class]));
}

- (instancetype)init {
  FreemarkerExtBeansBeansWrapper_$3_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createWithId:withFreemarkerTemplateObjectWrapper:", "create", "Lfreemarker.template.TemplateModel;", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerExtBeansBeansWrapper_$3 = { 2, "", "freemarker.ext.beans", "BeansWrapper", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerExtBeansBeansWrapper_$3;
}

@end

void FreemarkerExtBeansBeansWrapper_$3_init(FreemarkerExtBeansBeansWrapper_$3 *self) {
  (void) NSObject_init(self);
}

FreemarkerExtBeansBeansWrapper_$3 *new_FreemarkerExtBeansBeansWrapper_$3_init() {
  FreemarkerExtBeansBeansWrapper_$3 *self = [FreemarkerExtBeansBeansWrapper_$3 alloc];
  FreemarkerExtBeansBeansWrapper_$3_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerExtBeansBeansWrapper_$3)
