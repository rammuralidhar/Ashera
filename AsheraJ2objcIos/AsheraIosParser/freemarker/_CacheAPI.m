//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/_CacheAPI.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "MalformedTemplateNameException.h"
#include "TemplateNameFormat.h"
#include "_CacheAPI.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/cache/_CacheAPI.java"


#line 26
@implementation FreemarkerCache_CacheAPI

- (instancetype)init {
  FreemarkerCache_CacheAPI_init(self);
  return self;
}


#line 32
+ (NSString *)toAbsoluteNameWithFreemarkerCacheTemplateNameFormat:(FreemarkerCacheTemplateNameFormat *)templateNameFormat
                                                     withNSString:(NSString *)baseName
                                                     withNSString:(NSString *)targetName {
  return FreemarkerCache_CacheAPI_toAbsoluteNameWithFreemarkerCacheTemplateNameFormat_withNSString_withNSString_(templateNameFormat, baseName, targetName);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "_CacheAPI", NULL, 0x1, NULL, NULL },
    { "toAbsoluteNameWithFreemarkerCacheTemplateNameFormat:withNSString:withNSString:", "toAbsoluteName", "Ljava.lang.String;", 0x9, "Lfreemarker.template.MalformedTemplateNameException;", NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCache_CacheAPI = { 2, "_CacheAPI", "freemarker.cache", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCache_CacheAPI;
}

@end


#line 28
void FreemarkerCache_CacheAPI_init(FreemarkerCache_CacheAPI *self) {
  (void) NSObject_init(self);
}


#line 28
FreemarkerCache_CacheAPI *new_FreemarkerCache_CacheAPI_init() {
  FreemarkerCache_CacheAPI *self = [FreemarkerCache_CacheAPI alloc];
  FreemarkerCache_CacheAPI_init(self);
  return self;
}


#line 32
NSString *FreemarkerCache_CacheAPI_toAbsoluteNameWithFreemarkerCacheTemplateNameFormat_withNSString_withNSString_(FreemarkerCacheTemplateNameFormat *templateNameFormat, NSString *baseName, NSString *targetName) {
  FreemarkerCache_CacheAPI_initialize();
  return [((FreemarkerCacheTemplateNameFormat *) nil_chk(templateNameFormat)) toAbsoluteNameWithNSString:baseName withNSString:targetName];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCache_CacheAPI)
