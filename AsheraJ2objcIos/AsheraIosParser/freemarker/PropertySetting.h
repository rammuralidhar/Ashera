//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/PropertySetting.java
//

#ifndef _FreemarkerCorePropertySetting_H_
#define _FreemarkerCorePropertySetting_H_

#include "J2ObjC_header.h"
#include "TemplateElement.h"

@class FreemarkerCoreEnvironment;
@class FreemarkerCoreExpression;
@class FreemarkerCoreFMParserTokenManager;
@class FreemarkerCoreParameterRole;
@class FreemarkerCoreToken;
@class FreemarkerTemplateConfiguration;
@class IOSObjectArray;

/**
 @brief An instruction that sets a property of the template rendering environment.
 */
@interface FreemarkerCorePropertySetting : FreemarkerCoreTemplateElement

#pragma mark Protected

- (NSString *)dumpWithBoolean:(jboolean)canonical;

#pragma mark Package-Private

- (instancetype)initWithFreemarkerCoreToken:(FreemarkerCoreToken *)keyTk
     withFreemarkerCoreFMParserTokenManager:(FreemarkerCoreFMParserTokenManager *)tokenManager
               withFreemarkerCoreExpression:(FreemarkerCoreExpression *)value
        withFreemarkerTemplateConfiguration:(FreemarkerTemplateConfiguration *)cfg;

- (void)acceptWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

- (NSString *)getNodeTypeSymbol;

- (jint)getParameterCount;

- (FreemarkerCoreParameterRole *)getParameterRoleWithInt:(jint)idx;

- (id)getParameterValueWithInt:(jint)idx;

- (jboolean)isNestedBlockRepeater;

@end

J2OBJC_STATIC_INIT(FreemarkerCorePropertySetting)

FOUNDATION_EXPORT IOSObjectArray *FreemarkerCorePropertySetting_SETTING_NAMES_;
J2OBJC_STATIC_FIELD_GETTER(FreemarkerCorePropertySetting, SETTING_NAMES_, IOSObjectArray *)

FOUNDATION_EXPORT void FreemarkerCorePropertySetting_initWithFreemarkerCoreToken_withFreemarkerCoreFMParserTokenManager_withFreemarkerCoreExpression_withFreemarkerTemplateConfiguration_(FreemarkerCorePropertySetting *self, FreemarkerCoreToken *keyTk, FreemarkerCoreFMParserTokenManager *tokenManager, FreemarkerCoreExpression *value, FreemarkerTemplateConfiguration *cfg);

FOUNDATION_EXPORT FreemarkerCorePropertySetting *new_FreemarkerCorePropertySetting_initWithFreemarkerCoreToken_withFreemarkerCoreFMParserTokenManager_withFreemarkerCoreExpression_withFreemarkerTemplateConfiguration_(FreemarkerCoreToken *keyTk, FreemarkerCoreFMParserTokenManager *tokenManager, FreemarkerCoreExpression *value, FreemarkerTemplateConfiguration *cfg) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCorePropertySetting)

#endif // _FreemarkerCorePropertySetting_H_
