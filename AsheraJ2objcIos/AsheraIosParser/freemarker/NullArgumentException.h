//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/NullArgumentException.java
//

#ifndef _FreemarkerTemplateUtilityNullArgumentException_H_
#define _FreemarkerTemplateUtilityNullArgumentException_H_

#include "J2ObjC_header.h"
#include "java/lang/IllegalArgumentException.h"

/**
 @brief Indicates that an argument that must be non- <code>null</code> was <code>null</code> .
 @since 2.3.20
 */
@interface FreemarkerTemplateUtilityNullArgumentException : JavaLangIllegalArgumentException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)argumentName;

/**
 @since 2.3.22
 */
+ (void)checkWithId:(id)argumentValue;

/**
 @brief Convenience method to protect against a <code>null</code> argument.
 */
+ (void)checkWithNSString:(NSString *)argumentName
                   withId:(id)argumentValue;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateUtilityNullArgumentException)

FOUNDATION_EXPORT void FreemarkerTemplateUtilityNullArgumentException_initWithNSString_(FreemarkerTemplateUtilityNullArgumentException *self, NSString *argumentName);

FOUNDATION_EXPORT FreemarkerTemplateUtilityNullArgumentException *new_FreemarkerTemplateUtilityNullArgumentException_initWithNSString_(NSString *argumentName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerTemplateUtilityNullArgumentException_checkWithNSString_withId_(NSString *argumentName, id argumentValue);

FOUNDATION_EXPORT void FreemarkerTemplateUtilityNullArgumentException_checkWithId_(id argumentValue);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateUtilityNullArgumentException)

#endif // _FreemarkerTemplateUtilityNullArgumentException_H_
