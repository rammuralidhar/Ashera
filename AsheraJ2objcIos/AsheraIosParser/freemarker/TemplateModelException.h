//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/TemplateModelException.java
//

#ifndef _FreemarkerTemplateTemplateModelException_H_
#define _FreemarkerTemplateTemplateModelException_H_

#include "J2ObjC_header.h"
#include "TemplateException.h"

@class FreemarkerCoreEnvironment;
@class FreemarkerCore_ErrorDescriptionBuilder;
@class JavaLangException;
@class JavaLangThrowable;

/**
 @brief TemplateModel methods throw this exception if the requested data can't be retrieved.
 */
@interface FreemarkerTemplateTemplateModelException : FreemarkerTemplateTemplateException

#pragma mark Public

/**
 @brief Constructs a <tt>TemplateModelException</tt> with no specified detail message.
 */
- (instancetype)init;

/**
 @brief The same as #TemplateModelException(Throwable) ; it's exists only for binary backward-compatibility.
 */
- (instancetype)initWithJavaLangException:(JavaLangException *)cause;

/**
 @brief Constructs a <tt>TemplateModelException</tt> with the specified detail message.
 @param description the detail message.
 */
- (instancetype)initWithNSString:(NSString *)description_;

/**
 @brief The same as #TemplateModelException(String,Throwable) ; it's exists only for binary backward-compatibility.
 */
- (instancetype)initWithNSString:(NSString *)description_
           withJavaLangException:(JavaLangException *)cause;

/**
 @brief Constructs a TemplateModelException with both a description of the error that occurred and the underlying Exception that caused this exception to be raised.
 @param description the description of the error that occurred
 @param cause the underlying Exception that caused this exception to be raised
 */
- (instancetype)initWithNSString:(NSString *)description_
           withJavaLangThrowable:(JavaLangThrowable *)cause;

/**
 @brief Constructs a <tt>TemplateModelException</tt> with the given underlying Exception, but no detail message.
 @param cause the underlying Exception that caused this exception to be raised
 */
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

#pragma mark Protected

/**
 @brief Don't use this; this is to be used internally by FreeMarker.
 @param preventAmbiguity its value is ignored; it's only to prevent constructor selection ambiguities for backward-compatibility
 */
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause
            withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env
withFreemarkerCore_ErrorDescriptionBuilder:(FreemarkerCore_ErrorDescriptionBuilder *)descriptionBuilder
                              withBoolean:(jboolean)preventAmbiguity;

/**
 @brief Don't use this; this is to be used internally by FreeMarker.
 @param preventAmbiguity its value is ignored; it's only to prevent constructor selection ambiguities for backward-compatibility
 */
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause
            withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env
                             withNSString:(NSString *)description_
                              withBoolean:(jboolean)preventAmbiguity;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerTemplateTemplateModelException)

FOUNDATION_EXPORT void FreemarkerTemplateTemplateModelException_init(FreemarkerTemplateTemplateModelException *self);

FOUNDATION_EXPORT FreemarkerTemplateTemplateModelException *new_FreemarkerTemplateTemplateModelException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerTemplateTemplateModelException_initWithNSString_(FreemarkerTemplateTemplateModelException *self, NSString *description_);

FOUNDATION_EXPORT FreemarkerTemplateTemplateModelException *new_FreemarkerTemplateTemplateModelException_initWithNSString_(NSString *description_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerTemplateTemplateModelException_initWithJavaLangException_(FreemarkerTemplateTemplateModelException *self, JavaLangException *cause);

FOUNDATION_EXPORT FreemarkerTemplateTemplateModelException *new_FreemarkerTemplateTemplateModelException_initWithJavaLangException_(JavaLangException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerTemplateTemplateModelException_initWithJavaLangThrowable_(FreemarkerTemplateTemplateModelException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT FreemarkerTemplateTemplateModelException *new_FreemarkerTemplateTemplateModelException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerTemplateTemplateModelException_initWithNSString_withJavaLangException_(FreemarkerTemplateTemplateModelException *self, NSString *description_, JavaLangException *cause);

FOUNDATION_EXPORT FreemarkerTemplateTemplateModelException *new_FreemarkerTemplateTemplateModelException_initWithNSString_withJavaLangException_(NSString *description_, JavaLangException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerTemplateTemplateModelException_initWithNSString_withJavaLangThrowable_(FreemarkerTemplateTemplateModelException *self, NSString *description_, JavaLangThrowable *cause);

FOUNDATION_EXPORT FreemarkerTemplateTemplateModelException *new_FreemarkerTemplateTemplateModelException_initWithNSString_withJavaLangThrowable_(NSString *description_, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerTemplateTemplateModelException_initWithJavaLangThrowable_withFreemarkerCoreEnvironment_withNSString_withBoolean_(FreemarkerTemplateTemplateModelException *self, JavaLangThrowable *cause, FreemarkerCoreEnvironment *env, NSString *description_, jboolean preventAmbiguity);

FOUNDATION_EXPORT FreemarkerTemplateTemplateModelException *new_FreemarkerTemplateTemplateModelException_initWithJavaLangThrowable_withFreemarkerCoreEnvironment_withNSString_withBoolean_(JavaLangThrowable *cause, FreemarkerCoreEnvironment *env, NSString *description_, jboolean preventAmbiguity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void FreemarkerTemplateTemplateModelException_initWithJavaLangThrowable_withFreemarkerCoreEnvironment_withFreemarkerCore_ErrorDescriptionBuilder_withBoolean_(FreemarkerTemplateTemplateModelException *self, JavaLangThrowable *cause, FreemarkerCoreEnvironment *env, FreemarkerCore_ErrorDescriptionBuilder *descriptionBuilder, jboolean preventAmbiguity);

FOUNDATION_EXPORT FreemarkerTemplateTemplateModelException *new_FreemarkerTemplateTemplateModelException_initWithJavaLangThrowable_withFreemarkerCoreEnvironment_withFreemarkerCore_ErrorDescriptionBuilder_withBoolean_(JavaLangThrowable *cause, FreemarkerCoreEnvironment *env, FreemarkerCore_ErrorDescriptionBuilder *descriptionBuilder, jboolean preventAmbiguity) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerTemplateTemplateModelException)

#endif // _FreemarkerTemplateTemplateModelException_H_
