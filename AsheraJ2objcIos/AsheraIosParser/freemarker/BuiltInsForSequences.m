//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/BuiltInsForSequences.java
//


#include "ArithmeticEngine.h"
#include "BugException.h"
#include "BuiltIn.h"
#include "BuiltInForSequence.h"
#include "BuiltInsForSequences.h"
#include "CollectionAndSequence.h"
#include "CollectionModel.h"
#include "Constants.h"
#include "Environment.h"
#include "EvalUtil.h"
#include "Expression.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "MessageUtil.h"
#include "NonSequenceOrCollectionException.h"
#include "RightUnboundedRangeModel.h"
#include "SimpleNumber.h"
#include "SimpleScalar.h"
#include "StringUtil.h"
#include "TemplateBooleanModel.h"
#include "TemplateCollectionModel.h"
#include "TemplateDateModel.h"
#include "TemplateException.h"
#include "TemplateHashModel.h"
#include "TemplateMethodModelEx.h"
#include "TemplateModel.h"
#include "TemplateModelException.h"
#include "TemplateModelIterator.h"
#include "TemplateModelListSequence.h"
#include "TemplateNumberModel.h"
#include "TemplateScalarModel.h"
#include "TemplateSequenceModel.h"
#include "_DelayedFTLTypeDescription.h"
#include "_DelayedGetMessage.h"
#include "_DelayedGetMessageWithoutStackTop.h"
#include "_DelayedJQuote.h"
#include "_TemplateModelException.h"
#include "java/io/Serializable.h"
#include "java/lang/Boolean.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"
#include "java/text/Collator.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/Date.h"
#include "java/util/List.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/core/BuiltInsForSequences.java"

@interface FreemarkerCoreBuiltInsForSequences ()

+ (jboolean)isBuggySeqButGoodCollectionWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model;

+ (jboolean)modelsEqualWithInt:(jint)seqItemIndex
withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)seqItem
withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)searchedItem
 withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

- (instancetype)init;

@end

__attribute__((unused)) static jboolean FreemarkerCoreBuiltInsForSequences_isBuggySeqButGoodCollectionWithFreemarkerTemplateTemplateModel_(id<FreemarkerTemplateTemplateModel> model);

__attribute__((unused)) static jboolean FreemarkerCoreBuiltInsForSequences_modelsEqualWithInt_withFreemarkerTemplateTemplateModel_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(jint seqItemIndex, id<FreemarkerTemplateTemplateModel> seqItem, id<FreemarkerTemplateTemplateModel> searchedItem, FreemarkerCoreEnvironment *env);

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_init(FreemarkerCoreBuiltInsForSequences *self);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences *new_FreemarkerCoreBuiltInsForSequences_init() NS_RETURNS_RETAINED;

@interface FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod : NSObject < FreemarkerTemplateTemplateMethodModelEx > {
 @public
  FreemarkerCoreBuiltInsForSequences_chunkBI *this$0_;
  id<FreemarkerTemplateTemplateSequenceModel> tsm_;
}

- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_chunkBI:(FreemarkerCoreBuiltInsForSequences_chunkBI *)outer$
                       withFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)tsm;

- (id)execWithJavaUtilList:(id<JavaUtilList>)args;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod, this$0_, FreemarkerCoreBuiltInsForSequences_chunkBI *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod, tsm_, id<FreemarkerTemplateTemplateSequenceModel>)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_withFreemarkerTemplateTemplateSequenceModel_(FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod *self, FreemarkerCoreBuiltInsForSequences_chunkBI *outer$, id<FreemarkerTemplateTemplateSequenceModel> tsm);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod *new_FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_withFreemarkerTemplateTemplateSequenceModel_(FreemarkerCoreBuiltInsForSequences_chunkBI *outer$, id<FreemarkerTemplateTemplateSequenceModel> tsm) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod)

@interface FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence : NSObject < FreemarkerTemplateTemplateSequenceModel > {
 @public
  id<FreemarkerTemplateTemplateSequenceModel> wrappedTsm_;
  jint chunkSize_;
  id<FreemarkerTemplateTemplateModel> fillerItem_;
  jint numberOfChunks_;
}

- (instancetype)initWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)wrappedTsm
                                                        withInt:(jint)chunkSize
                            withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)fillerItem;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)chunkIndex;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence, wrappedTsm_, id<FreemarkerTemplateTemplateSequenceModel>)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence, fillerItem_, id<FreemarkerTemplateTemplateModel>)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_initWithFreemarkerTemplateTemplateSequenceModel_withInt_withFreemarkerTemplateTemplateModel_(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *self, id<FreemarkerTemplateTemplateSequenceModel> wrappedTsm, jint chunkSize, id<FreemarkerTemplateTemplateModel> fillerItem);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *new_FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_initWithFreemarkerTemplateTemplateSequenceModel_withInt_withFreemarkerTemplateTemplateModel_(id<FreemarkerTemplateTemplateSequenceModel> wrappedTsm, jint chunkSize, id<FreemarkerTemplateTemplateModel> fillerItem) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence)

@interface FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1 : NSObject < FreemarkerTemplateTemplateSequenceModel > {
 @public
  FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *this$0_;
  jint baseIndex_;
  jint val$chunkIndex_;
}

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)relIndex;

- (jint)size;

- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence:(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *)outer$
                                                                           withInt:(jint)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1, this$0_, FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_withInt_(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1 *self, FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *outer$, jint capture$0);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1 *new_FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_withInt_(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *outer$, jint capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1)

@interface FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection : NSObject < FreemarkerTemplateTemplateMethodModelEx > {
 @public
  FreemarkerCoreBuiltInsForSequences_joinBI *this$0_;
  FreemarkerCoreEnvironment *env_;
  id<FreemarkerTemplateTemplateCollectionModel> coll_;
}

- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_joinBI:(FreemarkerCoreBuiltInsForSequences_joinBI *)outer$
                                    withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env
                    withFreemarkerTemplateTemplateCollectionModel:(id<FreemarkerTemplateTemplateCollectionModel>)coll;

- (id)execWithJavaUtilList:(id<JavaUtilList>)args;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection, this$0_, FreemarkerCoreBuiltInsForSequences_joinBI *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection, env_, FreemarkerCoreEnvironment *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection, coll_, id<FreemarkerTemplateTemplateCollectionModel>)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_joinBI_withFreemarkerCoreEnvironment_withFreemarkerTemplateTemplateCollectionModel_(FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection *self, FreemarkerCoreBuiltInsForSequences_joinBI *outer$, FreemarkerCoreEnvironment *env, id<FreemarkerTemplateTemplateCollectionModel> coll);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection *new_FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_joinBI_withFreemarkerCoreEnvironment_withFreemarkerTemplateTemplateCollectionModel_(FreemarkerCoreBuiltInsForSequences_joinBI *outer$, FreemarkerCoreEnvironment *env, id<FreemarkerTemplateTemplateCollectionModel> coll) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection)

@interface FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence : NSObject < FreemarkerTemplateTemplateSequenceModel > {
 @public
  id<FreemarkerTemplateTemplateSequenceModel> seq_;
}

- (instancetype)initWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)seq;

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence, seq_, id<FreemarkerTemplateTemplateSequenceModel>)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence_initWithFreemarkerTemplateTemplateSequenceModel_(FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence *self, id<FreemarkerTemplateTemplateSequenceModel> seq);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence *new_FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence_initWithFreemarkerTemplateTemplateSequenceModel_(id<FreemarkerTemplateTemplateSequenceModel> seq) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence)

@interface FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection : NSObject < FreemarkerTemplateTemplateMethodModelEx > {
 @public
  FreemarkerCoreBuiltInsForSequences_seq_containsBI *this$0_;
  id<FreemarkerTemplateTemplateCollectionModel> m_coll_;
  FreemarkerCoreEnvironment *m_env_;
}

- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI:(FreemarkerCoreBuiltInsForSequences_seq_containsBI *)outer$
                            withFreemarkerTemplateTemplateCollectionModel:(id<FreemarkerTemplateTemplateCollectionModel>)coll
                                            withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

- (id)execWithJavaUtilList:(id<JavaUtilList>)args;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection, this$0_, FreemarkerCoreBuiltInsForSequences_seq_containsBI *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection, m_coll_, id<FreemarkerTemplateTemplateCollectionModel>)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection, m_env_, FreemarkerCoreEnvironment *)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateCollectionModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection *self, FreemarkerCoreBuiltInsForSequences_seq_containsBI *outer$, id<FreemarkerTemplateTemplateCollectionModel> coll, FreemarkerCoreEnvironment *env);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection *new_FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateCollectionModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForSequences_seq_containsBI *outer$, id<FreemarkerTemplateTemplateCollectionModel> coll, FreemarkerCoreEnvironment *env) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection)

@interface FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence : NSObject < FreemarkerTemplateTemplateMethodModelEx > {
 @public
  FreemarkerCoreBuiltInsForSequences_seq_containsBI *this$0_;
  id<FreemarkerTemplateTemplateSequenceModel> m_seq_;
  FreemarkerCoreEnvironment *m_env_;
}

- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI:(FreemarkerCoreBuiltInsForSequences_seq_containsBI *)outer$
                              withFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)seq
                                            withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

- (id)execWithJavaUtilList:(id<JavaUtilList>)args;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence, this$0_, FreemarkerCoreBuiltInsForSequences_seq_containsBI *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence, m_seq_, id<FreemarkerTemplateTemplateSequenceModel>)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence, m_env_, FreemarkerCoreEnvironment *)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateSequenceModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence *self, FreemarkerCoreBuiltInsForSequences_seq_containsBI *outer$, id<FreemarkerTemplateTemplateSequenceModel> seq, FreemarkerCoreEnvironment *env);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence *new_FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateSequenceModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForSequences_seq_containsBI *outer$, id<FreemarkerTemplateTemplateSequenceModel> seq, FreemarkerCoreEnvironment *env) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence)

@interface FreemarkerCoreBuiltInsForSequences_seq_index_ofBI () {
 @public
  jint m_dir_;
}

@end

@interface FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod : NSObject < FreemarkerTemplateTemplateMethodModelEx > {
 @public
  FreemarkerCoreBuiltInsForSequences_seq_index_ofBI *this$0_;
  id<FreemarkerTemplateTemplateSequenceModel> m_seq_;
  id<FreemarkerTemplateTemplateCollectionModel> m_col_;
  FreemarkerCoreEnvironment *m_env_;
}

- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_seq_index_ofBI:(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI *)outer$
                                            withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env;

- (id)execWithJavaUtilList:(id<JavaUtilList>)args;

- (jint)findInColWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)target;

- (jint)findInColWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)target
                                             withInt:(jint)startIndex;

- (jint)findInColWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)target
                                             withInt:(jint)allowedRangeStart
                                             withInt:(jint)allowedRangeEnd;

- (jint)findInSeqWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)target;

- (jint)findInSeqWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)target
                                             withInt:(jint)startIndex;

- (jint)findInSeqWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)target
                                             withInt:(jint)scanStartIndex
                                             withInt:(jint)seqSize;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod, this$0_, FreemarkerCoreBuiltInsForSequences_seq_index_ofBI *)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod, m_seq_, id<FreemarkerTemplateTemplateSequenceModel>)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod, m_col_, id<FreemarkerTemplateTemplateCollectionModel>)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod, m_env_, FreemarkerCoreEnvironment *)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_seq_index_ofBI_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod *self, FreemarkerCoreBuiltInsForSequences_seq_index_ofBI *outer$, FreemarkerCoreEnvironment *env);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod *new_FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_seq_index_ofBI_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI *outer$, FreemarkerCoreEnvironment *env) NS_RETURNS_RETAINED;

__attribute__((unused)) static jint FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_findInSeqWithFreemarkerTemplateTemplateModel_withInt_(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod *self, id<FreemarkerTemplateTemplateModel> target, jint startIndex);

__attribute__((unused)) static jint FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_findInSeqWithFreemarkerTemplateTemplateModel_withInt_withInt_(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod *self, id<FreemarkerTemplateTemplateModel> target, jint scanStartIndex, jint seqSize);

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod)

@interface FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod () {
 @public
  FreemarkerCoreBuiltInsForSequences_sort_byBI *this$0_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod, this$0_, FreemarkerCoreBuiltInsForSequences_sort_byBI *)

@interface FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator : NSObject < JavaUtilComparator, JavaIoSerializable >

- (jint)compareWithId:(id)arg0
               withId:(id)arg1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator_init(FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator *self);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator *new_FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator)

@interface FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator : NSObject < JavaUtilComparator, JavaIoSerializable >

- (jint)compareWithId:(id)arg0
               withId:(id)arg1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator_init(FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator *self);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator *new_FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator)

/**
 @brief Stores a key-value pair.
 */
@interface FreemarkerCoreBuiltInsForSequences_sortBI_KVP : NSObject {
 @public
  id key_;
  id value_;
}

- (instancetype)initWithId:(id)key
                    withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_sortBI_KVP)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_sortBI_KVP, key_, id)
J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_sortBI_KVP, value_, id)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_sortBI_KVP_initWithId_withId_(FreemarkerCoreBuiltInsForSequences_sortBI_KVP *self, id key, id value);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_sortBI_KVP *new_FreemarkerCoreBuiltInsForSequences_sortBI_KVP_initWithId_withId_(id key, id value) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_sortBI_KVP)

@interface FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator : NSObject < JavaUtilComparator > {
 @public
  JavaTextCollator *collator_;
}

- (instancetype)initWithJavaTextCollator:(JavaTextCollator *)collator;

- (jint)compareWithId:(id)arg0
               withId:(id)arg1;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator, collator_, JavaTextCollator *)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator_initWithJavaTextCollator_(FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator *self, JavaTextCollator *collator);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator *new_FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator_initWithJavaTextCollator_(JavaTextCollator *collator) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator)

@interface FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator : NSObject < JavaUtilComparator > {
 @public
  FreemarkerCoreArithmeticEngine *ae_;
}

- (instancetype)initWithFreemarkerCoreArithmeticEngine:(FreemarkerCoreArithmeticEngine *)ae;

- (jint)compareWithId:(id)arg0
               withId:(id)arg1;

@end

J2OBJC_EMPTY_STATIC_INIT(FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator)

J2OBJC_FIELD_SETTER(FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator, ae_, FreemarkerCoreArithmeticEngine *)

__attribute__((unused)) static void FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator_initWithFreemarkerCoreArithmeticEngine_(FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator *self, FreemarkerCoreArithmeticEngine *ae);

__attribute__((unused)) static FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator *new_FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator_initWithFreemarkerCoreArithmeticEngine_(FreemarkerCoreArithmeticEngine *ae) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator)


#line 49
@implementation FreemarkerCoreBuiltInsForSequences


#line 804
+ (jboolean)isBuggySeqButGoodCollectionWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)model {
  return FreemarkerCoreBuiltInsForSequences_isBuggySeqButGoodCollectionWithFreemarkerTemplateTemplateModel_(model);
}


#line 811
+ (jboolean)modelsEqualWithInt:(jint)seqItemIndex
withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)seqItem
withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)searchedItem
 withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  return FreemarkerCoreBuiltInsForSequences_modelsEqualWithInt_withFreemarkerTemplateTemplateModel_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(seqItemIndex, seqItem, searchedItem, env);
}


#line 831
- (instancetype)init {
  FreemarkerCoreBuiltInsForSequences_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isBuggySeqButGoodCollectionWithFreemarkerTemplateTemplateModel:", "isBuggySeqButGoodCollection", "Z", 0xa, NULL, NULL },
    { "modelsEqualWithInt:withFreemarkerTemplateTemplateModel:withFreemarkerTemplateTemplateModel:withFreemarkerCoreEnvironment:", "modelsEqual", "Z", 0xa, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", "BuiltInsForSequences", NULL, 0x2, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForSequences$chunkBI;", "Lfreemarker.core.BuiltInsForSequences$firstBI;", "Lfreemarker.core.BuiltInsForSequences$joinBI;", "Lfreemarker.core.BuiltInsForSequences$lastBI;", "Lfreemarker.core.BuiltInsForSequences$reverseBI;", "Lfreemarker.core.BuiltInsForSequences$seq_containsBI;", "Lfreemarker.core.BuiltInsForSequences$seq_index_ofBI;", "Lfreemarker.core.BuiltInsForSequences$sort_byBI;", "Lfreemarker.core.BuiltInsForSequences$sortBI;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences = { 2, "BuiltInsForSequences", "freemarker.core", NULL, 0x0, 3, methods, 0, NULL, 0, NULL, 9, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences;
}

@end


#line 804
jboolean FreemarkerCoreBuiltInsForSequences_isBuggySeqButGoodCollectionWithFreemarkerTemplateTemplateModel_(id<FreemarkerTemplateTemplateModel> model) {
  FreemarkerCoreBuiltInsForSequences_initialize();
  return [model isKindOfClass:[FreemarkerExtBeansCollectionModel class]] ?
#line 807
  ![((FreemarkerExtBeansCollectionModel *) nil_chk(((FreemarkerExtBeansCollectionModel *) check_class_cast(model, [FreemarkerExtBeansCollectionModel class])))) getSupportsIndexedAccess] :
#line 808
  NO;
}


#line 811
jboolean FreemarkerCoreBuiltInsForSequences_modelsEqualWithInt_withFreemarkerTemplateTemplateModel_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(jint seqItemIndex, id<FreemarkerTemplateTemplateModel> seqItem, id<FreemarkerTemplateTemplateModel> searchedItem, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreBuiltInsForSequences_initialize();
  
#line 815
  @try {
    return FreemarkerCoreEvalUtil_compareWithFreemarkerTemplateTemplateModel_withFreemarkerCoreExpression_withInt_withNSString_withFreemarkerTemplateTemplateModel_withFreemarkerCoreExpression_withFreemarkerCoreExpression_withBoolean_withBoolean_withBoolean_withBoolean_withFreemarkerCoreEnvironment_(
#line 817
    seqItem, nil,
#line 818
    FreemarkerCoreEvalUtil_CMP_OP_EQUALS, nil,
#line 819
    searchedItem, nil,
#line 820
    nil, NO,
#line 821
    YES, YES, YES,
#line 822
    env);
  }
  @catch (
#line 823
  FreemarkerTemplateTemplateException *ex) {
    @throw new_FreemarkerCore_TemplateModelException_initWithJavaLangThrowable_withNSObjectArray_(ex, [IOSObjectArray newArrayWithObjects:(id[]){
#line 825
      @"This error has occurred when comparing sequence item at 0-based index ", new_JavaLangInteger_initWithInt_(seqItemIndex),
#line 826
      @" to the searched item:\n", new_FreemarkerCore_DelayedGetMessage_initWithJavaLangThrowable_(ex) } count:4 type:NSObject_class_()]);
    }
  }


#line 831
void FreemarkerCoreBuiltInsForSequences_init(FreemarkerCoreBuiltInsForSequences *self) {
  (void) NSObject_init(self);
}


#line 831
FreemarkerCoreBuiltInsForSequences *new_FreemarkerCoreBuiltInsForSequences_init() {
  FreemarkerCoreBuiltInsForSequences *self = [FreemarkerCoreBuiltInsForSequences alloc];
  FreemarkerCoreBuiltInsForSequences_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences)


#line 51
@implementation FreemarkerCoreBuiltInsForSequences_chunkBI


#line 132
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)tsm {
  return new_FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_withFreemarkerTemplateTemplateSequenceModel_(self, tsm);
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForSequences_chunkBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateResultWithFreemarkerTemplateTemplateSequenceModel:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForSequences$chunkBI$BIMethod;", "Lfreemarker.core.BuiltInsForSequences$chunkBI$ChunkedSequence;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_chunkBI = { 2, "chunkBI", "freemarker.core", "BuiltInsForSequences", 0x8, 2, methods, 0, NULL, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_chunkBI;
}

@end

void FreemarkerCoreBuiltInsForSequences_chunkBI_init(FreemarkerCoreBuiltInsForSequences_chunkBI *self) {
  (void) FreemarkerCoreBuiltInForSequence_init(self);
}

FreemarkerCoreBuiltInsForSequences_chunkBI *new_FreemarkerCoreBuiltInsForSequences_chunkBI_init() {
  FreemarkerCoreBuiltInsForSequences_chunkBI *self = [FreemarkerCoreBuiltInsForSequences_chunkBI alloc];
  FreemarkerCoreBuiltInsForSequences_chunkBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_chunkBI)


#line 53
@implementation FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod


#line 57
- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_chunkBI:(FreemarkerCoreBuiltInsForSequences_chunkBI *)outer$
                       withFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)tsm {
  FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_withFreemarkerTemplateTemplateSequenceModel_(self, outer$, tsm);
  return self;
}


#line 61
- (id)execWithJavaUtilList:(id<JavaUtilList>)args {
  [this$0_ checkMethodArgCountWithJavaUtilList:args withInt:1 withInt:2];
  jint chunkSize = [((NSNumber *) nil_chk([this$0_ getNumberMethodArgWithJavaUtilList:args withInt:0])) intValue];
  
#line 65
  return new_FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_initWithFreemarkerTemplateTemplateSequenceModel_withInt_withFreemarkerTemplateTemplateModel_(
#line 66
  tsm_,
#line 67
  chunkSize,
#line 68
  [((id<JavaUtilList>) nil_chk(args)) size] > 1 ? (id<FreemarkerTemplateTemplateModel>) check_protocol_cast([args getWithInt:1], @protocol(FreemarkerTemplateTemplateModel)) : nil);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreBuiltInsForSequences_chunkBI:withFreemarkerTemplateTemplateSequenceModel:", "BIMethod", NULL, 0x2, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.core.BuiltInsForSequences$chunkBI;", NULL, NULL,  },
    { "tsm_", NULL, 0x12, "Lfreemarker.template.TemplateSequenceModel;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod = { 2, "BIMethod", "freemarker.core", "BuiltInsForSequences$chunkBI", 0x2, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod;
}

@end


#line 57
void FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_withFreemarkerTemplateTemplateSequenceModel_(FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod *self, FreemarkerCoreBuiltInsForSequences_chunkBI *outer$, id<FreemarkerTemplateTemplateSequenceModel> tsm) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  
#line 58
  self->tsm_ = tsm;
}


#line 57
FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod *new_FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_withFreemarkerTemplateTemplateSequenceModel_(FreemarkerCoreBuiltInsForSequences_chunkBI *outer$, id<FreemarkerTemplateTemplateSequenceModel> tsm) {
  FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod *self = [FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod alloc];
  FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_withFreemarkerTemplateTemplateSequenceModel_(self, outer$, tsm);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_chunkBI_BIMethod)


#line 72
@implementation FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence


#line 82
- (instancetype)initWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)wrappedTsm
                                                        withInt:(jint)chunkSize
                            withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)fillerItem {
  FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_initWithFreemarkerTemplateTemplateSequenceModel_withInt_withFreemarkerTemplateTemplateModel_(self, wrappedTsm, chunkSize, fillerItem);
  return self;
}


#line 95
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)chunkIndex {
  
#line 97
  if (chunkIndex >= numberOfChunks_) {
    return nil;
  }
  
#line 101
  return new_FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_withInt_(self, chunkIndex);
}


#line 126
- (jint)size {
  return numberOfChunks_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerTemplateTemplateSequenceModel:withInt:withFreemarkerTemplateTemplateModel:", "ChunkedSequence", NULL, 0x2, "Lfreemarker.template.TemplateModelException;", NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "wrappedTsm_", NULL, 0x12, "Lfreemarker.template.TemplateSequenceModel;", NULL, NULL,  },
    { "chunkSize_", NULL, 0x12, "I", NULL, NULL,  },
    { "fillerItem_", NULL, 0x12, "Lfreemarker.template.TemplateModel;", NULL, NULL,  },
    { "numberOfChunks_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence = { 2, "ChunkedSequence", "freemarker.core", "BuiltInsForSequences$chunkBI", 0xa, 3, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence;
}

@end


#line 82
void FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_initWithFreemarkerTemplateTemplateSequenceModel_withInt_withFreemarkerTemplateTemplateModel_(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *self, id<FreemarkerTemplateTemplateSequenceModel> wrappedTsm, jint chunkSize, id<FreemarkerTemplateTemplateModel> fillerItem) {
  (void) NSObject_init(self);
  
#line 85
  if (chunkSize < 1) {
    @throw new_FreemarkerCore_TemplateModelException_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){
#line 87
      @"The 1st argument to ?', key, ' (...) must be at least 1." } count:1 type:NSObject_class_()]);
    }
    self->wrappedTsm_ = wrappedTsm;
    self->chunkSize_ = chunkSize;
    self->fillerItem_ = fillerItem;
    self->numberOfChunks_ = ([((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(wrappedTsm)) size] + chunkSize - 1) / chunkSize;
  }


#line 82
FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *new_FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_initWithFreemarkerTemplateTemplateSequenceModel_withInt_withFreemarkerTemplateTemplateModel_(id<FreemarkerTemplateTemplateSequenceModel> wrappedTsm, jint chunkSize, id<FreemarkerTemplateTemplateModel> fillerItem) {
  FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *self = [FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence alloc];
  FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_initWithFreemarkerTemplateTemplateSequenceModel_withInt_withFreemarkerTemplateTemplateModel_(self, wrappedTsm, chunkSize, fillerItem);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence)

@implementation FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1


#line 105
- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)relIndex {
  
#line 107
  jint absIndex = baseIndex_ + relIndex;
  if (absIndex < [((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(this$0_->wrappedTsm_)) size]) {
    return [this$0_->wrappedTsm_ getWithInt:absIndex];
  }
  else {
    
#line 111
    return absIndex < this$0_->numberOfChunks_ * this$0_->chunkSize_ ? this$0_->fillerItem_ :
#line 113
    nil;
  }
}


#line 117
- (jint)size {
  return this$0_->fillerItem_ != nil || val$chunkIndex_ + 1 < this$0_->numberOfChunks_ ? this$0_->chunkSize_ :
#line 120
  [((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(this$0_->wrappedTsm_)) size] - baseIndex_;
}

- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence:(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *)outer$
                                                                           withInt:(jint)capture$0 {
  FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_withInt_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "initWithFreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence:withInt:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.core.BuiltInsForSequences$chunkBI$ChunkedSequence;", NULL, NULL,  },
    { "baseIndex_", NULL, 0x12, "I", NULL, NULL,  },
    { "val$chunkIndex_", NULL, 0x1012, "I", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence", "getWithInt:" };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1 = { 2, "", "freemarker.core", "BuiltInsForSequences$chunkBI$ChunkedSequence", 0x8008, 3, methods, 3, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1;
}

@end

void FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_withInt_(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1 *self, FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *outer$, jint capture$0) {
  self->this$0_ = outer$;
  self->val$chunkIndex_ = capture$0;
  (void) NSObject_init(self);
  self->baseIndex_ =
#line 103
  self->val$chunkIndex_ * outer$->chunkSize_;
}

FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1 *new_FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_withInt_(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence *outer$, jint capture$0) {
  FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1 *self = [FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1 alloc];
  FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1_initWithFreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_withInt_(self, outer$, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_chunkBI_ChunkedSequence_$1)


#line 138
@implementation FreemarkerCoreBuiltInsForSequences_firstBI


#line 139
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)tsm {
  
#line 143
  if ([((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(tsm)) size] == 0) {
    return nil;
  }
  return [tsm getWithInt:0];
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForSequences_firstBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateResultWithFreemarkerTemplateTemplateSequenceModel:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_firstBI = { 2, "firstBI", "freemarker.core", "BuiltInsForSequences", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_firstBI;
}

@end

void FreemarkerCoreBuiltInsForSequences_firstBI_init(FreemarkerCoreBuiltInsForSequences_firstBI *self) {
  (void) FreemarkerCoreBuiltInForSequence_init(self);
}

FreemarkerCoreBuiltInsForSequences_firstBI *new_FreemarkerCoreBuiltInsForSequences_firstBI_init() {
  FreemarkerCoreBuiltInsForSequences_firstBI *self = [FreemarkerCoreBuiltInsForSequences_firstBI alloc];
  FreemarkerCoreBuiltInsForSequences_firstBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_firstBI)


#line 150
@implementation FreemarkerCoreBuiltInsForSequences_joinBI


#line 205
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  id<FreemarkerTemplateTemplateModel> model = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  if ([FreemarkerTemplateTemplateCollectionModel_class_() isInstance:model]) {
    if ([model isKindOfClass:[FreemarkerCoreRightUnboundedRangeModel class]]) {
      @throw new_FreemarkerCore_TemplateModelException_initWithNSString_(
#line 210
      @"The sequence to join was right-unbounded numerical range, thus it's infinitely long.");
    }
    return new_FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_joinBI_withFreemarkerCoreEnvironment_withFreemarkerTemplateTemplateCollectionModel_(self, env, (id<FreemarkerTemplateTemplateCollectionModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateCollectionModel)));
  }
  else
#line 213
  if ([FreemarkerTemplateTemplateSequenceModel_class_() isInstance:model]) {
    return new_FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_joinBI_withFreemarkerCoreEnvironment_withFreemarkerTemplateTemplateCollectionModel_(self, env, new_FreemarkerCoreCollectionAndSequence_initWithFreemarkerTemplateTemplateSequenceModel_((id<FreemarkerTemplateTemplateSequenceModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateSequenceModel))));
  }
  else {
    
#line 216
    @throw new_FreemarkerCoreNonSequenceOrCollectionException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(target_, model, env);
  }
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForSequences_joinBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForSequences$joinBI$BIMethodForCollection;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_joinBI = { 2, "joinBI", "freemarker.core", "BuiltInsForSequences", 0x8, 2, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_joinBI;
}

@end

void FreemarkerCoreBuiltInsForSequences_joinBI_init(FreemarkerCoreBuiltInsForSequences_joinBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForSequences_joinBI *new_FreemarkerCoreBuiltInsForSequences_joinBI_init() {
  FreemarkerCoreBuiltInsForSequences_joinBI *self = [FreemarkerCoreBuiltInsForSequences_joinBI alloc];
  FreemarkerCoreBuiltInsForSequences_joinBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_joinBI)


#line 152
@implementation FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection


#line 157
- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_joinBI:(FreemarkerCoreBuiltInsForSequences_joinBI *)outer$
                                    withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env
                    withFreemarkerTemplateTemplateCollectionModel:(id<FreemarkerTemplateTemplateCollectionModel>)coll {
  FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_joinBI_withFreemarkerCoreEnvironment_withFreemarkerTemplateTemplateCollectionModel_(self, outer$, env, coll);
  return self;
}


#line 162
- (id)execWithJavaUtilList:(id<JavaUtilList>)args {
  
#line 164
  [this$0_ checkMethodArgCountWithJavaUtilList:args withInt:1 withInt:3];
  NSString *separator = [this$0_ getStringMethodArgWithJavaUtilList:args withInt:0];
  NSString *whenEmpty = [this$0_ getOptStringMethodArgWithJavaUtilList:args withInt:1];
  NSString *afterLast = [this$0_ getOptStringMethodArgWithJavaUtilList:args withInt:2];
  
#line 169
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  
#line 171
  id<FreemarkerTemplateTemplateModelIterator> it = [((id<FreemarkerTemplateTemplateCollectionModel>) nil_chk(coll_)) iterator];
  
#line 173
  jint idx = 0;
  jboolean hadItem = NO;
  while ([((id<FreemarkerTemplateTemplateModelIterator>) nil_chk(it)) hasNext]) {
    id<FreemarkerTemplateTemplateModel> item = [it next];
    if (item != nil) {
      if (hadItem) {
        (void) [sb appendWithNSString:separator];
      }
      else {
        
#line 181
        hadItem = YES;
      }
      @try {
        (void) [sb appendWithNSString:FreemarkerCoreEvalUtil_coerceModelToStringWithFreemarkerTemplateTemplateModel_withFreemarkerCoreExpression_withNSString_withFreemarkerCoreEnvironment_(item, nil, nil, env_)];
      }
      @catch (
#line 185
      FreemarkerTemplateTemplateException *e) {
        @throw new_FreemarkerCore_TemplateModelException_initWithJavaLangThrowable_withNSObjectArray_(e, [IOSObjectArray newArrayWithObjects:(id[]){
#line 187
          @"\"?", this$0_->key_, @"\" failed at index ", new_JavaLangInteger_initWithInt_(idx), @" with this error:\n\n", FreemarkerCoreMessageUtil_get_EMBEDDED_MESSAGE_BEGIN_(), new_FreemarkerCore_DelayedGetMessageWithoutStackTop_initWithFreemarkerTemplateTemplateException_(
#line 189
          e), FreemarkerCoreMessageUtil_get_EMBEDDED_MESSAGE_END_() } count:8 type:NSObject_class_()]);
        }
      }
      
#line 193
      idx++;
    }
    if (hadItem) {
      if (afterLast != nil) (void) [sb appendWithNSString:afterLast];
    }
    else {
      
#line 198
      if (whenEmpty != nil) (void) [sb appendWithNSString:whenEmpty];
    }
    return new_FreemarkerTemplateSimpleScalar_initWithNSString_([sb description]);
  }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreBuiltInsForSequences_joinBI:withFreemarkerCoreEnvironment:withFreemarkerTemplateTemplateCollectionModel:", "BIMethodForCollection", NULL, 0x2, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.core.BuiltInsForSequences$joinBI;", NULL, NULL,  },
    { "env_", NULL, 0x12, "Lfreemarker.core.Environment;", NULL, NULL,  },
    { "coll_", NULL, 0x12, "Lfreemarker.template.TemplateCollectionModel;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection = { 2, "BIMethodForCollection", "freemarker.core", "BuiltInsForSequences$joinBI", 0x2, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection;
}

@end


#line 157
void FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_joinBI_withFreemarkerCoreEnvironment_withFreemarkerTemplateTemplateCollectionModel_(FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection *self, FreemarkerCoreBuiltInsForSequences_joinBI *outer$, FreemarkerCoreEnvironment *env, id<FreemarkerTemplateTemplateCollectionModel> coll) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  
#line 158
  self->env_ = env;
  self->coll_ = coll;
}


#line 157
FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection *new_FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_joinBI_withFreemarkerCoreEnvironment_withFreemarkerTemplateTemplateCollectionModel_(FreemarkerCoreBuiltInsForSequences_joinBI *outer$, FreemarkerCoreEnvironment *env, id<FreemarkerTemplateTemplateCollectionModel> coll) {
  FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection *self = [FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection alloc];
  FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_joinBI_withFreemarkerCoreEnvironment_withFreemarkerTemplateTemplateCollectionModel_(self, outer$, env, coll);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_joinBI_BIMethodForCollection)


#line 222
@implementation FreemarkerCoreBuiltInsForSequences_lastBI


#line 223
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)tsm {
  
#line 227
  if ([((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(tsm)) size] == 0) {
    return nil;
  }
  return [tsm getWithInt:[tsm size] - 1];
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForSequences_lastBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateResultWithFreemarkerTemplateTemplateSequenceModel:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_lastBI = { 2, "lastBI", "freemarker.core", "BuiltInsForSequences", 0x8, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_lastBI;
}

@end

void FreemarkerCoreBuiltInsForSequences_lastBI_init(FreemarkerCoreBuiltInsForSequences_lastBI *self) {
  (void) FreemarkerCoreBuiltInForSequence_init(self);
}

FreemarkerCoreBuiltInsForSequences_lastBI *new_FreemarkerCoreBuiltInsForSequences_lastBI_init() {
  FreemarkerCoreBuiltInsForSequences_lastBI *self = [FreemarkerCoreBuiltInsForSequences_lastBI alloc];
  FreemarkerCoreBuiltInsForSequences_lastBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_lastBI)


#line 234
@implementation FreemarkerCoreBuiltInsForSequences_reverseBI


#line 255
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)tsm {
  if ([tsm isKindOfClass:[FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence class]]) {
    return ((FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence *) nil_chk(((FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence *) check_class_cast(tsm, [FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence class]))))->seq_;
  }
  else {
    
#line 259
    return new_FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence_initWithFreemarkerTemplateTemplateSequenceModel_(tsm);
  }
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForSequences_reverseBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateResultWithFreemarkerTemplateTemplateSequenceModel:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForSequences$reverseBI$ReverseSequence;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_reverseBI = { 2, "reverseBI", "freemarker.core", "BuiltInsForSequences", 0x8, 2, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_reverseBI;
}

@end

void FreemarkerCoreBuiltInsForSequences_reverseBI_init(FreemarkerCoreBuiltInsForSequences_reverseBI *self) {
  (void) FreemarkerCoreBuiltInForSequence_init(self);
}

FreemarkerCoreBuiltInsForSequences_reverseBI *new_FreemarkerCoreBuiltInsForSequences_reverseBI_init() {
  FreemarkerCoreBuiltInsForSequences_reverseBI *self = [FreemarkerCoreBuiltInsForSequences_reverseBI alloc];
  FreemarkerCoreBuiltInsForSequences_reverseBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_reverseBI)


#line 235
@implementation FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence


#line 239
- (instancetype)initWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)seq {
  FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence_initWithFreemarkerTemplateTemplateSequenceModel_(self, seq);
  return self;
}

- (id<FreemarkerTemplateTemplateModel>)getWithInt:(jint)index {
  
#line 246
  return [seq_ getWithInt:[((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(seq_)) size] - 1 - index];
}


#line 249
- (jint)size {
  
#line 251
  return [((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(seq_)) size];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerTemplateTemplateSequenceModel:", "ReverseSequence", NULL, 0x0, NULL, NULL },
    { "getWithInt:", "get", "Lfreemarker.template.TemplateModel;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
    { "size", NULL, "I", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "seq_", NULL, 0x12, "Lfreemarker.template.TemplateSequenceModel;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence = { 2, "ReverseSequence", "freemarker.core", "BuiltInsForSequences$reverseBI", 0xa, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence;
}

@end


#line 239
void FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence_initWithFreemarkerTemplateTemplateSequenceModel_(FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence *self, id<FreemarkerTemplateTemplateSequenceModel> seq) {
  (void) NSObject_init(self);
  self->seq_ = seq;
}


#line 239
FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence *new_FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence_initWithFreemarkerTemplateTemplateSequenceModel_(id<FreemarkerTemplateTemplateSequenceModel> seq) {
  FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence *self = [FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence alloc];
  FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence_initWithFreemarkerTemplateTemplateSequenceModel_(self, seq);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_reverseBI_ReverseSequence)


#line 264
@implementation FreemarkerCoreBuiltInsForSequences_seq_containsBI


#line 313
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  
#line 315
  id<FreemarkerTemplateTemplateModel> model = [((FreemarkerCoreExpression *) nil_chk(target_)) evalWithFreemarkerCoreEnvironment:env];
  
#line 318
  if ([FreemarkerTemplateTemplateSequenceModel_class_() isInstance:model] && !FreemarkerCoreBuiltInsForSequences_isBuggySeqButGoodCollectionWithFreemarkerTemplateTemplateModel_(model)) {
    return new_FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateSequenceModel_withFreemarkerCoreEnvironment_(self, (id<FreemarkerTemplateTemplateSequenceModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateSequenceModel)), env);
  }
  else
#line 320
  if ([FreemarkerTemplateTemplateCollectionModel_class_() isInstance:model]) {
    return new_FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateCollectionModel_withFreemarkerCoreEnvironment_(self, (id<FreemarkerTemplateTemplateCollectionModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateCollectionModel)), env);
  }
  else {
    
#line 323
    @throw new_FreemarkerCoreNonSequenceOrCollectionException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(target_, model, env);
  }
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForSequences_seq_containsBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForSequences$seq_containsBI$BIMethodForCollection;", "Lfreemarker.core.BuiltInsForSequences$seq_containsBI$BIMethodForSequence;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_seq_containsBI = { 2, "seq_containsBI", "freemarker.core", "BuiltInsForSequences", 0x8, 2, methods, 0, NULL, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_seq_containsBI;
}

@end

void FreemarkerCoreBuiltInsForSequences_seq_containsBI_init(FreemarkerCoreBuiltInsForSequences_seq_containsBI *self) {
  (void) FreemarkerCoreBuiltIn_init(self);
}

FreemarkerCoreBuiltInsForSequences_seq_containsBI *new_FreemarkerCoreBuiltInsForSequences_seq_containsBI_init() {
  FreemarkerCoreBuiltInsForSequences_seq_containsBI *self = [FreemarkerCoreBuiltInsForSequences_seq_containsBI alloc];
  FreemarkerCoreBuiltInsForSequences_seq_containsBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_seq_containsBI)


#line 265
@implementation FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection


#line 269
- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI:(FreemarkerCoreBuiltInsForSequences_seq_containsBI *)outer$
                            withFreemarkerTemplateTemplateCollectionModel:(id<FreemarkerTemplateTemplateCollectionModel>)coll
                                            withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateCollectionModel_withFreemarkerCoreEnvironment_(self, outer$, coll, env);
  return self;
}


#line 274
- (id)execWithJavaUtilList:(id<JavaUtilList>)args {
  
#line 276
  [this$0_ checkMethodArgCountWithJavaUtilList:args withInt:1];
  id<FreemarkerTemplateTemplateModel> arg = (id<FreemarkerTemplateTemplateModel>) check_protocol_cast([((id<JavaUtilList>) nil_chk(args)) getWithInt:0], @protocol(FreemarkerTemplateTemplateModel));
  id<FreemarkerTemplateTemplateModelIterator> it = [((id<FreemarkerTemplateTemplateCollectionModel>) nil_chk(m_coll_)) iterator];
  jint idx = 0;
  while ([((id<FreemarkerTemplateTemplateModelIterator>) nil_chk(it)) hasNext]) {
    if (FreemarkerCoreBuiltInsForSequences_modelsEqualWithInt_withFreemarkerTemplateTemplateModel_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(idx, [it next], arg, m_env_))
#line 282
    return FreemarkerTemplateTemplateBooleanModel_get_TRUE__();
    idx++;
  }
  return FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI:withFreemarkerTemplateTemplateCollectionModel:withFreemarkerCoreEnvironment:", "BIMethodForCollection", NULL, 0x2, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.core.BuiltInsForSequences$seq_containsBI;", NULL, NULL,  },
    { "m_coll_", NULL, 0x2, "Lfreemarker.template.TemplateCollectionModel;", NULL, NULL,  },
    { "m_env_", NULL, 0x2, "Lfreemarker.core.Environment;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection = { 2, "BIMethodForCollection", "freemarker.core", "BuiltInsForSequences$seq_containsBI", 0x2, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection;
}

@end


#line 269
void FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateCollectionModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection *self, FreemarkerCoreBuiltInsForSequences_seq_containsBI *outer$, id<FreemarkerTemplateTemplateCollectionModel> coll, FreemarkerCoreEnvironment *env) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  
#line 270
  self->m_coll_ = coll;
  self->m_env_ = env;
}


#line 269
FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection *new_FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateCollectionModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForSequences_seq_containsBI *outer$, id<FreemarkerTemplateTemplateCollectionModel> coll, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection *self = [FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection alloc];
  FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateCollectionModel_withFreemarkerCoreEnvironment_(self, outer$, coll, env);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForCollection)


#line 290
@implementation FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence


#line 294
- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI:(FreemarkerCoreBuiltInsForSequences_seq_containsBI *)outer$
                              withFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)seq
                                            withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateSequenceModel_withFreemarkerCoreEnvironment_(self, outer$, seq, env);
  return self;
}


#line 299
- (id)execWithJavaUtilList:(id<JavaUtilList>)args {
  
#line 301
  [this$0_ checkMethodArgCountWithJavaUtilList:args withInt:1];
  id<FreemarkerTemplateTemplateModel> arg = (id<FreemarkerTemplateTemplateModel>) check_protocol_cast([((id<JavaUtilList>) nil_chk(args)) getWithInt:0], @protocol(FreemarkerTemplateTemplateModel));
  jint size = [((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(m_seq_)) size];
  for (jint i = 0; i < size; i++) {
    if (FreemarkerCoreBuiltInsForSequences_modelsEqualWithInt_withFreemarkerTemplateTemplateModel_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(i, [m_seq_ getWithInt:i], arg, m_env_))
#line 306
    return FreemarkerTemplateTemplateBooleanModel_get_TRUE__();
  }
  return FreemarkerTemplateTemplateBooleanModel_get_FALSE__();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI:withFreemarkerTemplateTemplateSequenceModel:withFreemarkerCoreEnvironment:", "BIMethodForSequence", NULL, 0x2, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.core.BuiltInsForSequences$seq_containsBI;", NULL, NULL,  },
    { "m_seq_", NULL, 0x2, "Lfreemarker.template.TemplateSequenceModel;", NULL, NULL,  },
    { "m_env_", NULL, 0x2, "Lfreemarker.core.Environment;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence = { 2, "BIMethodForSequence", "freemarker.core", "BuiltInsForSequences$seq_containsBI", 0x2, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence;
}

@end


#line 294
void FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateSequenceModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence *self, FreemarkerCoreBuiltInsForSequences_seq_containsBI *outer$, id<FreemarkerTemplateTemplateSequenceModel> seq, FreemarkerCoreEnvironment *env) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  
#line 295
  self->m_seq_ = seq;
  self->m_env_ = env;
}


#line 294
FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence *new_FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateSequenceModel_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForSequences_seq_containsBI *outer$, id<FreemarkerTemplateTemplateSequenceModel> seq, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence *self = [FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence alloc];
  FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence_initWithFreemarkerCoreBuiltInsForSequences_seq_containsBI_withFreemarkerTemplateTemplateSequenceModel_withFreemarkerCoreEnvironment_(self, outer$, seq, env);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_seq_containsBI_BIMethodForSequence)


#line 329
@implementation FreemarkerCoreBuiltInsForSequences_seq_index_ofBI


#line 479
- (instancetype)initWithInt:(jint)dir {
  FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_initWithInt_(self, dir);
  return self;
}


#line 483
- (id<FreemarkerTemplateTemplateModel>)_evalWithFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  
#line 485
  return new_FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_seq_index_ofBI_withFreemarkerCoreEnvironment_(self, env);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "seq_index_ofBI", NULL, 0x0, NULL, NULL },
    { "_evalWithFreemarkerCoreEnvironment:", "_eval", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "m_dir_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForSequences$seq_index_ofBI$BIMethod;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_seq_index_ofBI = { 2, "seq_index_ofBI", "freemarker.core", "BuiltInsForSequences", 0x8, 2, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_seq_index_ofBI;
}

@end


#line 479
void FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_initWithInt_(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI *self, jint dir) {
  (void) FreemarkerCoreBuiltIn_init(self);
  
#line 480
  self->m_dir_ = dir;
}


#line 479
FreemarkerCoreBuiltInsForSequences_seq_index_ofBI *new_FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_initWithInt_(jint dir) {
  FreemarkerCoreBuiltInsForSequences_seq_index_ofBI *self = [FreemarkerCoreBuiltInsForSequences_seq_index_ofBI alloc];
  FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_initWithInt_(self, dir);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI)


#line 331
@implementation FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod


#line 337
- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_seq_index_ofBI:(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI *)outer$
                                            withFreemarkerCoreEnvironment:(FreemarkerCoreEnvironment *)env {
  FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_seq_index_ofBI_withFreemarkerCoreEnvironment_(self, outer$, env);
  return self;
}


#line 361
- (id)execWithJavaUtilList:(id<JavaUtilList>)args {
  
#line 363
  jint argCnt = [((id<JavaUtilList>) nil_chk(args)) size];
  [this$0_ checkMethodArgCountWithInt:argCnt withInt:1 withInt:2];
  
#line 366
  id<FreemarkerTemplateTemplateModel> target = (id<FreemarkerTemplateTemplateModel>) check_protocol_cast([args getWithInt:0], @protocol(FreemarkerTemplateTemplateModel));
  jint foundAtIdx;
  if (argCnt > 1) {
    jint startIndex = [((NSNumber *) nil_chk([this$0_ getNumberMethodArgWithJavaUtilList:args withInt:1])) intValue];
    
#line 372
    foundAtIdx = m_seq_ != nil ? FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_findInSeqWithFreemarkerTemplateTemplateModel_withInt_(self,
#line 373
    target, startIndex) :
#line 374
    [self findInColWithFreemarkerTemplateTemplateModel:target withInt:startIndex];
  }
  else {
    
#line 378
    foundAtIdx = m_seq_ != nil ?
#line 379
    [self findInSeqWithFreemarkerTemplateTemplateModel:target] :
#line 380
    [self findInColWithFreemarkerTemplateTemplateModel:target];
  }
  return foundAtIdx == -1 ? ((id) FreemarkerTemplateUtilityConstants_get_MINUS_ONE_()) : new_FreemarkerTemplateSimpleNumber_initWithInt_(foundAtIdx);
}


#line 385
- (jint)findInColWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)target {
  return [self findInColWithFreemarkerTemplateTemplateModel:target withInt:0 withInt:JavaLangInteger_MAX_VALUE];
}

- (jint)findInColWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)target
                                             withInt:(jint)startIndex {
  
#line 391
  if (this$0_->m_dir_ == 1) {
    return [self findInColWithFreemarkerTemplateTemplateModel:target withInt:startIndex withInt:JavaLangInteger_MAX_VALUE];
  }
  else {
    
#line 394
    return [self findInColWithFreemarkerTemplateTemplateModel:target withInt:0 withInt:startIndex];
  }
}


#line 398
- (jint)findInColWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)target
                                             withInt:(jint)allowedRangeStart
                                             withInt:(jint)allowedRangeEnd {
  
#line 401
  if (allowedRangeEnd < 0) return -1;
  
#line 403
  id<FreemarkerTemplateTemplateModelIterator> it = [((id<FreemarkerTemplateTemplateCollectionModel>) nil_chk(m_col_)) iterator];
  
#line 405
  jint foundAtIdx = -1;
  jint idx = 0;
  while ([((id<FreemarkerTemplateTemplateModelIterator>) nil_chk(it)) hasNext]) {
    if (idx > allowedRangeEnd) goto break_searchItem;
    
#line 410
    id<FreemarkerTemplateTemplateModel> current = [it next];
    if (idx >= allowedRangeStart) {
      if (FreemarkerCoreBuiltInsForSequences_modelsEqualWithInt_withFreemarkerTemplateTemplateModel_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(idx, current, target, m_env_)) {
        foundAtIdx = idx;
        if (this$0_->m_dir_ == 1) goto break_searchItem;
      }
    }
    
#line 418
    idx++;
  }
  break_searchItem: ;
  
#line 420
  return foundAtIdx;
}


#line 423
- (jint)findInSeqWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)target {
  
#line 425
  jint seqSize = [((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(m_seq_)) size];
  jint actualStartIndex;
  
#line 428
  if (this$0_->m_dir_ == 1) {
    actualStartIndex = 0;
  }
  else {
    
#line 431
    actualStartIndex = seqSize - 1;
  }
  
#line 434
  return FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_findInSeqWithFreemarkerTemplateTemplateModel_withInt_withInt_(self, target, actualStartIndex, seqSize);
}


#line 437
- (jint)findInSeqWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)target
                                             withInt:(jint)startIndex {
  return FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_findInSeqWithFreemarkerTemplateTemplateModel_withInt_(self, target, startIndex);
}


#line 460
- (jint)findInSeqWithFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)target
                                             withInt:(jint)scanStartIndex
                                             withInt:(jint)seqSize {
  return FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_findInSeqWithFreemarkerTemplateTemplateModel_withInt_withInt_(self, target, scanStartIndex, seqSize);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreBuiltInsForSequences_seq_index_ofBI:withFreemarkerCoreEnvironment:", "BIMethod", NULL, 0x2, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x11, "Lfreemarker.template.TemplateModelException;", NULL },
    { "findInColWithFreemarkerTemplateTemplateModel:", "findInCol", "I", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "findInColWithFreemarkerTemplateTemplateModel:withInt:", "findInCol", "I", 0x4, "Lfreemarker.template.TemplateModelException;", NULL },
    { "findInColWithFreemarkerTemplateTemplateModel:withInt:withInt:", "findInCol", "I", 0x4, "Lfreemarker.template.TemplateModelException;", NULL },
    { "findInSeqWithFreemarkerTemplateTemplateModel:", "findInSeq", "I", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "findInSeqWithFreemarkerTemplateTemplateModel:withInt:", "findInSeq", "I", 0x2, "Lfreemarker.template.TemplateModelException;", NULL },
    { "findInSeqWithFreemarkerTemplateTemplateModel:withInt:withInt:", "findInSeq", "I", 0x2, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.core.BuiltInsForSequences$seq_index_ofBI;", NULL, NULL,  },
    { "m_seq_", NULL, 0x14, "Lfreemarker.template.TemplateSequenceModel;", NULL, NULL,  },
    { "m_col_", NULL, 0x14, "Lfreemarker.template.TemplateCollectionModel;", NULL, NULL,  },
    { "m_env_", NULL, 0x14, "Lfreemarker.core.Environment;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod = { 2, "BIMethod", "freemarker.core", "BuiltInsForSequences$seq_index_ofBI", 0x2, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod;
}

@end


#line 337
void FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_seq_index_ofBI_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod *self, FreemarkerCoreBuiltInsForSequences_seq_index_ofBI *outer$, FreemarkerCoreEnvironment *env) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  
#line 339
  id<FreemarkerTemplateTemplateModel> model = [((FreemarkerCoreExpression *) nil_chk(outer$->target_)) evalWithFreemarkerCoreEnvironment:env];
  self->m_seq_ = [FreemarkerTemplateTemplateSequenceModel_class_() isInstance:model] &&
#line 341
  !FreemarkerCoreBuiltInsForSequences_isBuggySeqButGoodCollectionWithFreemarkerTemplateTemplateModel_(model) ?
#line 342
  (id<FreemarkerTemplateTemplateSequenceModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateSequenceModel)) :
#line 343
  nil;
  
#line 351
  self->m_col_ = self->m_seq_ == nil && [FreemarkerTemplateTemplateCollectionModel_class_() isInstance:model] ?
#line 352
  (id<FreemarkerTemplateTemplateCollectionModel>) check_protocol_cast(model, @protocol(FreemarkerTemplateTemplateCollectionModel)) :
#line 353
  nil;
  if (self->m_seq_ == nil && self->m_col_ == nil) {
    @throw new_FreemarkerCoreNonSequenceOrCollectionException_initWithFreemarkerCoreExpression_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(outer$->target_, model, env);
  }
  
#line 358
  self->m_env_ = env;
}


#line 337
FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod *new_FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_seq_index_ofBI_withFreemarkerCoreEnvironment_(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI *outer$, FreemarkerCoreEnvironment *env) {
  FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod *self = [FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod alloc];
  FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_seq_index_ofBI_withFreemarkerCoreEnvironment_(self, outer$, env);
  return self;
}


#line 437
jint FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_findInSeqWithFreemarkerTemplateTemplateModel_withInt_(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod *self, id<FreemarkerTemplateTemplateModel> target, jint startIndex) {
  
#line 439
  jint seqSize = [((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(self->m_seq_)) size];
  
#line 441
  if (self->this$0_->m_dir_ == 1) {
    if (startIndex >= seqSize) {
      return -1;
    }
    if (startIndex < 0) {
      startIndex = 0;
    }
  }
  else {
    
#line 449
    if (startIndex >= seqSize) {
      startIndex = seqSize - 1;
    }
    if (startIndex < 0) {
      return -1;
    }
  }
  
#line 457
  return FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_findInSeqWithFreemarkerTemplateTemplateModel_withInt_withInt_(self, target, startIndex, seqSize);
}


#line 460
jint FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod_findInSeqWithFreemarkerTemplateTemplateModel_withInt_withInt_(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod *self, id<FreemarkerTemplateTemplateModel> target, jint scanStartIndex, jint seqSize) {
  
#line 463
  if (self->this$0_->m_dir_ == 1) {
    for (jint i = scanStartIndex; i < seqSize; i++) {
      if (FreemarkerCoreBuiltInsForSequences_modelsEqualWithInt_withFreemarkerTemplateTemplateModel_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(i, [((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(self->m_seq_)) getWithInt:i], target, self->m_env_)) return i;
    }
  }
  else {
    
#line 468
    for (jint i = scanStartIndex; i >= 0; i--) {
      if (FreemarkerCoreBuiltInsForSequences_modelsEqualWithInt_withFreemarkerTemplateTemplateModel_withFreemarkerTemplateTemplateModel_withFreemarkerCoreEnvironment_(i, [((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(self->m_seq_)) getWithInt:i], target, self->m_env_)) return i;
    }
  }
  return -1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_seq_index_ofBI_BIMethod)


#line 540
@implementation FreemarkerCoreBuiltInsForSequences_sortBI


#line 605
+ (FreemarkerTemplateTemplateModelException *)newInconsistentSortKeyTypeExceptionWithInt:(jint)keyNamesLn
                                                                            withNSString:(NSString *)firstType
                                                                            withNSString:(NSString *)firstTypePlural
                                                                                 withInt:(jint)index
                                                     withFreemarkerTemplateTemplateModel:(id<FreemarkerTemplateTemplateModel>)key {
  return FreemarkerCoreBuiltInsForSequences_sortBI_newInconsistentSortKeyTypeExceptionWithInt_withNSString_withNSString_withInt_withFreemarkerTemplateTemplateModel_(keyNamesLn, firstType, firstTypePlural, index, key);
}


#line 638
+ (id<FreemarkerTemplateTemplateSequenceModel>)sortWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)seq
                                                                             withNSStringArray:(IOSObjectArray *)keyNames {
  return FreemarkerCoreBuiltInsForSequences_sortBI_sortWithFreemarkerTemplateTemplateSequenceModel_withNSStringArray_(seq, keyNames);
}


#line 776
+ (IOSObjectArray *)startErrorMessageWithInt:(jint)keyNamesLn {
  return FreemarkerCoreBuiltInsForSequences_sortBI_startErrorMessageWithInt_(keyNamesLn);
}

+ (IOSObjectArray *)startErrorMessageWithInt:(jint)keyNamesLn
                                     withInt:(jint)index {
  return FreemarkerCoreBuiltInsForSequences_sortBI_startErrorMessageWithInt_withInt_(keyNamesLn, index);
}


#line 797
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)seq {
  
#line 799
  return FreemarkerCoreBuiltInsForSequences_sortBI_sortWithFreemarkerTemplateTemplateSequenceModel_withNSStringArray_(seq, nil);
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForSequences_sortBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newInconsistentSortKeyTypeExceptionWithInt:withNSString:withNSString:withInt:withFreemarkerTemplateTemplateModel:", "newInconsistentSortKeyTypeException", "Lfreemarker.template.TemplateModelException;", 0x8, NULL, NULL },
    { "sortWithFreemarkerTemplateTemplateSequenceModel:withNSStringArray:", "sort", "Lfreemarker.template.TemplateSequenceModel;", 0x8, "Lfreemarker.template.TemplateModelException;", NULL },
    { "startErrorMessageWithInt:", "startErrorMessage", "[Ljava.lang.Object;", 0x8, NULL, NULL },
    { "startErrorMessageWithInt:withInt:", "startErrorMessage", "[Ljava.lang.Object;", 0x8, NULL, NULL },
    { "calculateResultWithFreemarkerTemplateTemplateSequenceModel:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, "Lfreemarker.template.TemplateModelException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "KEY_TYPE_NOT_YET_DETECTED_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_NOT_YET_DETECTED },
    { "KEY_TYPE_STRING_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_STRING },
    { "KEY_TYPE_NUMBER_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_NUMBER },
    { "KEY_TYPE_DATE_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_DATE },
    { "KEY_TYPE_BOOLEAN_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_BOOLEAN },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForSequences$sortBI$BooleanKVPComparator;", "Lfreemarker.core.BuiltInsForSequences$sortBI$DateKVPComparator;", "Lfreemarker.core.BuiltInsForSequences$sortBI$KVP;", "Lfreemarker.core.BuiltInsForSequences$sortBI$LexicalKVPComparator;", "Lfreemarker.core.BuiltInsForSequences$sortBI$NumericalKVPComparator;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_sortBI = { 2, "sortBI", "freemarker.core", "BuiltInsForSequences", 0x8, 6, methods, 5, fields, 0, NULL, 5, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_sortBI;
}

@end


#line 605
FreemarkerTemplateTemplateModelException *FreemarkerCoreBuiltInsForSequences_sortBI_newInconsistentSortKeyTypeExceptionWithInt_withNSString_withNSString_withInt_withFreemarkerTemplateTemplateModel_(jint keyNamesLn, NSString *firstType, NSString *firstTypePlural, jint index, id<FreemarkerTemplateTemplateModel> key) {
  FreemarkerCoreBuiltInsForSequences_sortBI_initialize();
  NSString *valueInMsg;
  NSString *valuesInMsg;
  if (keyNamesLn == 0) {
    valueInMsg = @"value";
    valuesInMsg = @"values";
  }
  else {
    
#line 613
    valueInMsg = @"key value";
    valuesInMsg = @"key values";
  }
  return new_FreemarkerCore_TemplateModelException_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ FreemarkerCoreBuiltInsForSequences_sortBI_startErrorMessageWithInt_withInt_(
#line 617
  keyNamesLn, index),
#line 618
  @"All ", valuesInMsg, @" in the sequence must be ",
#line 619
  firstTypePlural, @", because the first ", valueInMsg,
#line 620
  @" was that. However, the ", valueInMsg,
#line 621
  @" of the current item isn't a ", firstType, @" but a ", new_FreemarkerCore_DelayedFTLTypeDescription_initWithFreemarkerTemplateTemplateModel_(
#line 622
  key), @"." } count:14 type:NSObject_class_()]);
}


#line 638
id<FreemarkerTemplateTemplateSequenceModel> FreemarkerCoreBuiltInsForSequences_sortBI_sortWithFreemarkerTemplateTemplateSequenceModel_withNSStringArray_(id<FreemarkerTemplateTemplateSequenceModel> seq, IOSObjectArray *keyNames) {
  FreemarkerCoreBuiltInsForSequences_sortBI_initialize();
  jint ln = [((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(seq)) size];
  if (ln == 0) return seq;
  
#line 643
  JavaUtilArrayList *res = new_JavaUtilArrayList_initWithInt_(ln);
  
#line 645
  jint keyNamesLn = keyNames == nil ? 0 : keyNames->size_;
  
#line 648
  jint keyType = FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_NOT_YET_DETECTED;
  id<JavaUtilComparator> keyComparator = nil;
  for (jint i = 0; i < ln; i++) {
    id<FreemarkerTemplateTemplateModel> item = [seq getWithInt:i];
    id<FreemarkerTemplateTemplateModel> key = item;
    for (jint keyNameI = 0; keyNameI < keyNamesLn; keyNameI++) {
      @try {
        key = [((id<FreemarkerTemplateTemplateHashModel>) nil_chk(((id<FreemarkerTemplateTemplateHashModel>) check_protocol_cast(key, @protocol(FreemarkerTemplateTemplateHashModel))))) getWithNSString:IOSObjectArray_Get(nil_chk(keyNames), keyNameI)];
      }
      @catch (
#line 656
      JavaLangClassCastException *e) {
        if (!([FreemarkerTemplateTemplateHashModel_class_() isInstance:key])) {
          @throw new_FreemarkerCore_TemplateModelException_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ FreemarkerCoreBuiltInsForSequences_sortBI_startErrorMessageWithInt_withInt_(
#line 659
          keyNamesLn, i),
#line 660
          (keyNameI == 0 ?
#line 661
          @"Sequence items must be hashes when using ?sort_by. " : JreStrcat("$$", @"The ", FreemarkerTemplateUtilityStringUtil_jQuoteWithNSString_(IOSObjectArray_Get(nil_chk(
#line 662
          keyNames), keyNameI - 1)))),
#line 663
          @" subvariable is not a hash, so ?sort_by ",
#line 664
          @"can't proceed with getting the ", new_FreemarkerCore_DelayedJQuote_initWithId_(IOSObjectArray_Get(nil_chk(
#line 665
          keyNames), keyNameI)),
#line 666
          @" subvariable." } count:6 type:NSObject_class_()]);
        }
        else {
          
#line 668
          @throw e;
        }
      }
      if (key == nil) {
        @throw new_FreemarkerCore_TemplateModelException_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ FreemarkerCoreBuiltInsForSequences_sortBI_startErrorMessageWithInt_withInt_(
#line 673
        keyNamesLn, i), JreStrcat("$$", @"The ", FreemarkerTemplateUtilityStringUtil_jQuoteWithNSString_(IOSObjectArray_Get(nil_chk(
#line 674
        keyNames), keyNameI))), @" subvariable was not found." } count:3 type:NSObject_class_()]);
      }
    }
    
#line 678
    if (keyType == FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_NOT_YET_DETECTED) {
      if ([FreemarkerTemplateTemplateScalarModel_class_() isInstance:key]) {
        keyType = FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_STRING;
        keyComparator = new_FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator_initWithJavaTextCollator_(
#line 682
        [((FreemarkerCoreEnvironment *) nil_chk(FreemarkerCoreEnvironment_getCurrentEnvironment())) getCollator]);
      }
      else
#line 683
      if ([FreemarkerTemplateTemplateNumberModel_class_() isInstance:key]) {
        keyType = FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_NUMBER;
        keyComparator = new_FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator_initWithFreemarkerCoreArithmeticEngine_(
#line 686
        [((FreemarkerCoreEnvironment *) nil_chk(FreemarkerCoreEnvironment_getCurrentEnvironment())) getArithmeticEngine]);
      }
      else if ([FreemarkerTemplateTemplateDateModel_class_() isInstance:key]) {
        keyType = FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_DATE;
        keyComparator = new_FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator_init();
      }
      else
#line 691
      if ([FreemarkerTemplateTemplateBooleanModel_class_() isInstance:key]) {
        keyType = FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_BOOLEAN;
        keyComparator = new_FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator_init();
      }
      else {
        
#line 695
        @throw new_FreemarkerCore_TemplateModelException_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ FreemarkerCoreBuiltInsForSequences_sortBI_startErrorMessageWithInt_withInt_(
#line 696
        keyNamesLn, i),
#line 697
        @"Values used for sorting must be numbers, strings, date/times or booleans." } count:2 type:NSObject_class_()]);
      }
    }
    switch (keyType) {
      case FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_STRING:
      @try {
        [res addWithId:new_FreemarkerCoreBuiltInsForSequences_sortBI_KVP_initWithId_withId_(
#line 704
        [((id<FreemarkerTemplateTemplateScalarModel>) nil_chk(((id<FreemarkerTemplateTemplateScalarModel>) check_protocol_cast(key, @protocol(FreemarkerTemplateTemplateScalarModel))))) getAsString],
#line 705
        item)];
      }
      @catch (
#line 706
      JavaLangClassCastException *e) {
        if (!([FreemarkerTemplateTemplateScalarModel_class_() isInstance:key])) {
          @throw FreemarkerCoreBuiltInsForSequences_sortBI_newInconsistentSortKeyTypeExceptionWithInt_withNSString_withNSString_withInt_withFreemarkerTemplateTemplateModel_(
#line 709
          keyNamesLn, @"string", @"strings", i, key);
        }
        else {
          
#line 711
          @throw e;
        }
      }
      break;
      
#line 716
      case FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_NUMBER:
      @try {
        [res addWithId:new_FreemarkerCoreBuiltInsForSequences_sortBI_KVP_initWithId_withId_(
#line 719
        [((id<FreemarkerTemplateTemplateNumberModel>) nil_chk(((id<FreemarkerTemplateTemplateNumberModel>) check_protocol_cast(key, @protocol(FreemarkerTemplateTemplateNumberModel))))) getAsNumber],
#line 720
        item)];
      }
      @catch (
#line 721
      JavaLangClassCastException *e) {
        if (!([FreemarkerTemplateTemplateNumberModel_class_() isInstance:key])) {
          @throw FreemarkerCoreBuiltInsForSequences_sortBI_newInconsistentSortKeyTypeExceptionWithInt_withNSString_withNSString_withInt_withFreemarkerTemplateTemplateModel_(
#line 724
          keyNamesLn, @"number", @"numbers", i, key);
        }
      }
      break;
      
#line 729
      case FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_DATE:
      @try {
        [res addWithId:new_FreemarkerCoreBuiltInsForSequences_sortBI_KVP_initWithId_withId_(
#line 732
        [((id<FreemarkerTemplateTemplateDateModel>) nil_chk(((id<FreemarkerTemplateTemplateDateModel>) check_protocol_cast(key, @protocol(FreemarkerTemplateTemplateDateModel))))) getAsDate],
#line 733
        item)];
      }
      @catch (
#line 734
      JavaLangClassCastException *e) {
        if (!([FreemarkerTemplateTemplateDateModel_class_() isInstance:key])) {
          @throw FreemarkerCoreBuiltInsForSequences_sortBI_newInconsistentSortKeyTypeExceptionWithInt_withNSString_withNSString_withInt_withFreemarkerTemplateTemplateModel_(
#line 737
          keyNamesLn, @"date/time", @"date/times", i, key);
        }
      }
      break;
      
#line 742
      case FreemarkerCoreBuiltInsForSequences_sortBI_KEY_TYPE_BOOLEAN:
      @try {
        [res addWithId:new_FreemarkerCoreBuiltInsForSequences_sortBI_KVP_initWithId_withId_(JavaLangBoolean_valueOfWithBoolean_(
#line 745
        [((id<FreemarkerTemplateTemplateBooleanModel>) nil_chk(((id<FreemarkerTemplateTemplateBooleanModel>) check_protocol_cast(key, @protocol(FreemarkerTemplateTemplateBooleanModel))))) getAsBoolean]),
#line 746
        item)];
      }
      @catch (
#line 747
      JavaLangClassCastException *e) {
        if (!([FreemarkerTemplateTemplateBooleanModel_class_() isInstance:key])) {
          @throw FreemarkerCoreBuiltInsForSequences_sortBI_newInconsistentSortKeyTypeExceptionWithInt_withNSString_withNSString_withInt_withFreemarkerTemplateTemplateModel_(
#line 750
          keyNamesLn, @"boolean", @"booleans", i, key);
        }
      }
      break;
      
#line 755
      default:
      @throw new_FreemarkerCoreBugException_initWithNSString_(@"Unexpected key type");
    }
  }
  
#line 761
  @try {
    JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(res, keyComparator);
  }
  @catch (
#line 763
  JavaLangException *exc) {
    @throw new_FreemarkerCore_TemplateModelException_initWithJavaLangThrowable_withNSObjectArray_(exc, [IOSObjectArray newArrayWithObjects:(id[]){ FreemarkerCoreBuiltInsForSequences_sortBI_startErrorMessageWithInt_(
#line 765
    keyNamesLn), JreStrcat("$@", @"Unexpected error while sorting:", exc) } count:2 type:NSObject_class_()]);
  }
  
#line 769
  for (jint i = 0; i < ln; i++) {
    (void) [res setWithInt:i withId:((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) nil_chk(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) check_class_cast([res getWithInt:i], [FreemarkerCoreBuiltInsForSequences_sortBI_KVP class]))))->value_];
  }
  
#line 773
  return new_FreemarkerTemplateTemplateModelListSequence_initWithJavaUtilList_(res);
}


#line 776
IOSObjectArray *FreemarkerCoreBuiltInsForSequences_sortBI_startErrorMessageWithInt_(jint keyNamesLn) {
  FreemarkerCoreBuiltInsForSequences_sortBI_initialize();
  
#line 777
  return [IOSObjectArray newArrayWithObjects:(id[]){ (keyNamesLn == 0 ? @"?sort" : @"?sort_by(...)"), @" failed: " } count:2 type:NSObject_class_()];
}


#line 780
IOSObjectArray *FreemarkerCoreBuiltInsForSequences_sortBI_startErrorMessageWithInt_withInt_(jint keyNamesLn, jint index) {
  FreemarkerCoreBuiltInsForSequences_sortBI_initialize();
  
#line 781
  return [IOSObjectArray newArrayWithObjects:(id[]){
#line 782
    (keyNamesLn == 0 ? @"?sort" : @"?sort_by(...)"),
#line 783
    @" failed at sequence index ", new_JavaLangInteger_initWithInt_(index),
#line 784
    (index == 0 ? @": " : @" (0-based): ") } count:4 type:NSObject_class_()];
  }

void FreemarkerCoreBuiltInsForSequences_sortBI_init(FreemarkerCoreBuiltInsForSequences_sortBI *self) {
  (void) FreemarkerCoreBuiltInForSequence_init(self);
}

FreemarkerCoreBuiltInsForSequences_sortBI *new_FreemarkerCoreBuiltInsForSequences_sortBI_init() {
  FreemarkerCoreBuiltInsForSequences_sortBI *self = [FreemarkerCoreBuiltInsForSequences_sortBI alloc];
  FreemarkerCoreBuiltInsForSequences_sortBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_sortBI)


#line 489
@implementation FreemarkerCoreBuiltInsForSequences_sort_byBI


#line 535
- (id<FreemarkerTemplateTemplateModel>)calculateResultWithFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)seq {
  return new_FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_sort_byBI_withFreemarkerTemplateTemplateSequenceModel_(self, seq);
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForSequences_sort_byBI_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateResultWithFreemarkerTemplateTemplateSequenceModel:", "calculateResult", "Lfreemarker.template.TemplateModel;", 0x0, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lfreemarker.core.BuiltInsForSequences$sort_byBI$BIMethod;"};
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_sort_byBI = { 2, "sort_byBI", "freemarker.core", "BuiltInsForSequences", 0x8, 2, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_sort_byBI;
}

@end

void FreemarkerCoreBuiltInsForSequences_sort_byBI_init(FreemarkerCoreBuiltInsForSequences_sort_byBI *self) {
  (void) FreemarkerCoreBuiltInsForSequences_sortBI_init(self);
}

FreemarkerCoreBuiltInsForSequences_sort_byBI *new_FreemarkerCoreBuiltInsForSequences_sort_byBI_init() {
  FreemarkerCoreBuiltInsForSequences_sort_byBI *self = [FreemarkerCoreBuiltInsForSequences_sort_byBI alloc];
  FreemarkerCoreBuiltInsForSequences_sort_byBI_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_sort_byBI)


#line 490
@implementation FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod


#line 493
- (instancetype)initWithFreemarkerCoreBuiltInsForSequences_sort_byBI:(FreemarkerCoreBuiltInsForSequences_sort_byBI *)outer$
                         withFreemarkerTemplateTemplateSequenceModel:(id<FreemarkerTemplateTemplateSequenceModel>)seq {
  FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_sort_byBI_withFreemarkerTemplateTemplateSequenceModel_(self, outer$, seq);
  return self;
}


#line 497
- (id)execWithJavaUtilList:(id<JavaUtilList>)args {
  
#line 502
  if ([((id<JavaUtilList>) nil_chk(args)) size] < 1) @throw FreemarkerCoreMessageUtil_newArgCntErrorWithNSString_withInt_withInt_(JreStrcat("C$", '?', this$0_->key_), [args size], 1);
  
#line 504
  IOSObjectArray *subvars;
  id obj = [args getWithInt:0];
  if ([FreemarkerTemplateTemplateScalarModel_class_() isInstance:obj]) {
    subvars = [IOSObjectArray newArrayWithObjects:(id[]){ [((id<FreemarkerTemplateTemplateScalarModel>) nil_chk(((id<FreemarkerTemplateTemplateScalarModel>) check_protocol_cast(obj, @protocol(FreemarkerTemplateTemplateScalarModel))))) getAsString] } count:1 type:NSString_class_()];
  }
  else
#line 508
  if ([FreemarkerTemplateTemplateSequenceModel_class_() isInstance:obj]) {
    id<FreemarkerTemplateTemplateSequenceModel> seq = (id<FreemarkerTemplateTemplateSequenceModel>) check_protocol_cast(obj, @protocol(FreemarkerTemplateTemplateSequenceModel));
    jint ln = [((id<FreemarkerTemplateTemplateSequenceModel>) nil_chk(seq)) size];
    subvars = [IOSObjectArray newArrayWithLength:ln type:NSString_class_()];
    for (jint i = 0; i < ln; i++) {
      id item = [seq getWithInt:i];
      @try {
        (void) IOSObjectArray_Set(subvars, i, [((id<FreemarkerTemplateTemplateScalarModel>) nil_chk(((id<FreemarkerTemplateTemplateScalarModel>) check_protocol_cast(item, @protocol(FreemarkerTemplateTemplateScalarModel))))) getAsString]);
      }
      @catch (JavaLangClassCastException *e) {
        if (!([FreemarkerTemplateTemplateScalarModel_class_() isInstance:item])) {
          @throw new_FreemarkerCore_TemplateModelException_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){
#line 520
            @"The argument to ?", this$0_->key_, @"(key), when it's a sequence, must be a sequence of strings, but the item at index ", new_JavaLangInteger_initWithInt_(
#line 521
            i),
#line 522
            @" is not a string." } count:5 type:NSObject_class_()]);
          }
        }
      }
    }
    else {
      
#line 527
      @throw new_FreemarkerCore_TemplateModelException_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){
#line 528
        @"The argument to ?", this$0_->key_, @"(key) must be a string (the name of the subvariable), or a sequence of strings (the \"path\" to the subvariable)." } count:3 type:NSObject_class_()]);
      }
      
#line 531
      return FreemarkerCoreBuiltInsForSequences_sortBI_sortWithFreemarkerTemplateTemplateSequenceModel_withNSStringArray_(seq_, subvars);
    }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreBuiltInsForSequences_sort_byBI:withFreemarkerTemplateTemplateSequenceModel:", "BIMethod", NULL, 0x0, NULL, NULL },
    { "execWithJavaUtilList:", "exec", "Ljava.lang.Object;", 0x1, "Lfreemarker.template.TemplateModelException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lfreemarker.core.BuiltInsForSequences$sort_byBI;", NULL, NULL,  },
    { "seq_", NULL, 0x0, "Lfreemarker.template.TemplateSequenceModel;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod = { 2, "BIMethod", "freemarker.core", "BuiltInsForSequences$sort_byBI", 0x0, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod;
}

@end


#line 493
void FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_sort_byBI_withFreemarkerTemplateTemplateSequenceModel_(FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod *self, FreemarkerCoreBuiltInsForSequences_sort_byBI *outer$, id<FreemarkerTemplateTemplateSequenceModel> seq) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  
#line 494
  self->seq_ = seq;
}


#line 493
FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod *new_FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_sort_byBI_withFreemarkerTemplateTemplateSequenceModel_(FreemarkerCoreBuiltInsForSequences_sort_byBI *outer$, id<FreemarkerTemplateTemplateSequenceModel> seq) {
  FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod *self = [FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod alloc];
  FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod_initWithFreemarkerCoreBuiltInsForSequences_sort_byBI_withFreemarkerTemplateTemplateSequenceModel_(self, outer$, seq);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_sort_byBI_BIMethod)


#line 542
@implementation FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator

- (jint)compareWithId:(id)arg0
               withId:(id)arg1 {
  
#line 546
  jboolean b0 = [((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) check_class_cast(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) nil_chk(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) check_class_cast(arg0, [FreemarkerCoreBuiltInsForSequences_sortBI_KVP class]))))->key_, [JavaLangBoolean class])))) booleanValue];
  jboolean b1 = [((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) check_class_cast(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) nil_chk(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) check_class_cast(arg1, [FreemarkerCoreBuiltInsForSequences_sortBI_KVP class]))))->key_, [JavaLangBoolean class])))) booleanValue];
  if (b0) {
    return b1 ? 0 : 1;
  }
  else {
    
#line 551
    return b1 ? -1 : 0;
  }
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator = { 2, "BooleanKVPComparator", "freemarker.core", "BuiltInsForSequences$sortBI", 0xa, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator;
}

@end

void FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator_init(FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator *self) {
  (void) NSObject_init(self);
}

FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator *new_FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator_init() {
  FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator *self = [FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator alloc];
  FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_sortBI_BooleanKVPComparator)


#line 555
@implementation FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator

- (jint)compareWithId:(id)arg0
               withId:(id)arg1 {
  return [((JavaUtilDate *) nil_chk(((JavaUtilDate *) check_class_cast(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) nil_chk(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) check_class_cast(arg0, [FreemarkerCoreBuiltInsForSequences_sortBI_KVP class]))))->key_, [JavaUtilDate class])))) compareToWithId:
#line 559
  (JavaUtilDate *) check_class_cast(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) nil_chk(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) check_class_cast(arg1, [FreemarkerCoreBuiltInsForSequences_sortBI_KVP class]))))->key_, [JavaUtilDate class])];
}

- (instancetype)init {
  FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator = { 2, "DateKVPComparator", "freemarker.core", "BuiltInsForSequences$sortBI", 0xa, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator;
}

@end

void FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator_init(FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator *self) {
  (void) NSObject_init(self);
}

FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator *new_FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator_init() {
  FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator *self = [FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator alloc];
  FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_sortBI_DateKVPComparator)


#line 565
@implementation FreemarkerCoreBuiltInsForSequences_sortBI_KVP


#line 569
- (instancetype)initWithId:(id)key
                    withId:(id)value {
  FreemarkerCoreBuiltInsForSequences_sortBI_KVP_initWithId_withId_(self, key, value);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withId:", "KVP", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "key_", NULL, 0x2, "Ljava.lang.Object;", NULL, NULL,  },
    { "value_", NULL, 0x2, "Ljava.lang.Object;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_sortBI_KVP = { 2, "KVP", "freemarker.core", "BuiltInsForSequences$sortBI", 0xa, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_sortBI_KVP;
}

@end


#line 569
void FreemarkerCoreBuiltInsForSequences_sortBI_KVP_initWithId_withId_(FreemarkerCoreBuiltInsForSequences_sortBI_KVP *self, id key, id value) {
  (void) NSObject_init(self);
  
#line 570
  self->key_ = key;
  self->value_ = value;
}


#line 569
FreemarkerCoreBuiltInsForSequences_sortBI_KVP *new_FreemarkerCoreBuiltInsForSequences_sortBI_KVP_initWithId_withId_(id key, id value) {
  FreemarkerCoreBuiltInsForSequences_sortBI_KVP *self = [FreemarkerCoreBuiltInsForSequences_sortBI_KVP alloc];
  FreemarkerCoreBuiltInsForSequences_sortBI_KVP_initWithId_withId_(self, key, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_sortBI_KVP)


#line 574
@implementation FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator


#line 577
- (instancetype)initWithJavaTextCollator:(JavaTextCollator *)collator {
  FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator_initWithJavaTextCollator_(self, collator);
  return self;
}


#line 581
- (jint)compareWithId:(id)arg0
               withId:(id)arg1 {
  return [((JavaTextCollator *) nil_chk(collator_)) compareWithId:
#line 583
  ((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) nil_chk(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) check_class_cast(arg0, [FreemarkerCoreBuiltInsForSequences_sortBI_KVP class]))))->key_ withId:((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) nil_chk(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) check_class_cast(arg1, [FreemarkerCoreBuiltInsForSequences_sortBI_KVP class]))))->key_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaTextCollator:", "LexicalKVPComparator", NULL, 0x0, NULL, NULL },
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "collator_", NULL, 0x2, "Ljava.text.Collator;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator = { 2, "LexicalKVPComparator", "freemarker.core", "BuiltInsForSequences$sortBI", 0xa, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator;
}

@end


#line 577
void FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator_initWithJavaTextCollator_(FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator *self, JavaTextCollator *collator) {
  (void) NSObject_init(self);
  
#line 578
  self->collator_ = collator;
}


#line 577
FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator *new_FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator_initWithJavaTextCollator_(JavaTextCollator *collator) {
  FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator *self = [FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator alloc];
  FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator_initWithJavaTextCollator_(self, collator);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_sortBI_LexicalKVPComparator)


#line 586
@implementation FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator


#line 589
- (instancetype)initWithFreemarkerCoreArithmeticEngine:(FreemarkerCoreArithmeticEngine *)ae {
  FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator_initWithFreemarkerCoreArithmeticEngine_(self, ae);
  return self;
}


#line 593
- (jint)compareWithId:(id)arg0
               withId:(id)arg1 {
  @try {
    return [((FreemarkerCoreArithmeticEngine *) nil_chk(ae_)) compareNumbersWithNSNumber:
#line 596
    (NSNumber *) check_class_cast(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) nil_chk(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) check_class_cast(arg0, [FreemarkerCoreBuiltInsForSequences_sortBI_KVP class]))))->key_, [NSNumber class]) withNSNumber:
#line 597
    (NSNumber *) check_class_cast(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) nil_chk(((FreemarkerCoreBuiltInsForSequences_sortBI_KVP *) check_class_cast(arg1, [FreemarkerCoreBuiltInsForSequences_sortBI_KVP class]))))->key_, [NSNumber class])];
  }
  @catch (
#line 598
  FreemarkerTemplateTemplateException *e) {
    @throw new_JavaLangClassCastException_initWithNSString_(JreStrcat("$@", @"Failed to compare numbers: ",
#line 600
    e));
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFreemarkerCoreArithmeticEngine:", "NumericalKVPComparator", NULL, 0x2, NULL, NULL },
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ae_", NULL, 0x2, "Lfreemarker.core.ArithmeticEngine;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator = { 2, "NumericalKVPComparator", "freemarker.core", "BuiltInsForSequences$sortBI", 0xa, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator;
}

@end


#line 589
void FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator_initWithFreemarkerCoreArithmeticEngine_(FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator *self, FreemarkerCoreArithmeticEngine *ae) {
  (void) NSObject_init(self);
  
#line 590
  self->ae_ = ae;
}


#line 589
FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator *new_FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator_initWithFreemarkerCoreArithmeticEngine_(FreemarkerCoreArithmeticEngine *ae) {
  FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator *self = [FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator alloc];
  FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator_initWithFreemarkerCoreArithmeticEngine_(self, ae);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerCoreBuiltInsForSequences_sortBI_NumericalKVPComparator)
