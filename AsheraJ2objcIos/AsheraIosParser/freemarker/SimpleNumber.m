//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/SimpleNumber.java
//


#include "J2ObjC_source.h"
#include "SimpleNumber.h"
#include "java/lang/Byte.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/SimpleNumber.java"

@interface FreemarkerTemplateSimpleNumber () {
 @public
  /**
   the value of this <tt>SimpleNumber</tt>
   */
  NSNumber *value_;
}

@end

J2OBJC_FIELD_SETTER(FreemarkerTemplateSimpleNumber, value_, NSNumber *)


#line 28
@implementation FreemarkerTemplateSimpleNumber


#line 35
- (instancetype)initWithNSNumber:(NSNumber *)value {
  FreemarkerTemplateSimpleNumber_initWithNSNumber_(self, value);
  return self;
}


#line 39
- (instancetype)initWithByte:(jbyte)val {
  FreemarkerTemplateSimpleNumber_initWithByte_(self, val);
  return self;
}


#line 43
- (instancetype)initWithShort:(jshort)val {
  FreemarkerTemplateSimpleNumber_initWithShort_(self, val);
  return self;
}


#line 47
- (instancetype)initWithInt:(jint)val {
  FreemarkerTemplateSimpleNumber_initWithInt_(self, val);
  return self;
}


#line 51
- (instancetype)initWithLong:(jlong)val {
  FreemarkerTemplateSimpleNumber_initWithLong_(self, val);
  return self;
}


#line 55
- (instancetype)initWithFloat:(jfloat)val {
  FreemarkerTemplateSimpleNumber_initWithFloat_(self, val);
  return self;
}


#line 59
- (instancetype)initWithDouble:(jdouble)val {
  FreemarkerTemplateSimpleNumber_initWithDouble_(self, val);
  return self;
}


#line 63
- (NSNumber *)getAsNumber {
  return value_;
}

- (NSString *)description {
  return [((NSNumber *) nil_chk(value_)) description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSNumber:", "SimpleNumber", NULL, 0x1, NULL, NULL },
    { "initWithByte:", "SimpleNumber", NULL, 0x1, NULL, NULL },
    { "initWithShort:", "SimpleNumber", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "SimpleNumber", NULL, 0x1, NULL, NULL },
    { "initWithLong:", "SimpleNumber", NULL, 0x1, NULL, NULL },
    { "initWithFloat:", "SimpleNumber", NULL, 0x1, NULL, NULL },
    { "initWithDouble:", "SimpleNumber", NULL, 0x1, NULL, NULL },
    { "getAsNumber", NULL, "Ljava.lang.Number;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x12, "Ljava.lang.Number;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateSimpleNumber = { 2, "SimpleNumber", "freemarker.template", NULL, 0x11, 9, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateSimpleNumber;
}

@end


#line 35
void FreemarkerTemplateSimpleNumber_initWithNSNumber_(FreemarkerTemplateSimpleNumber *self, NSNumber *value) {
  (void) NSObject_init(self);
  
#line 36
  self->value_ = value;
}


#line 35
FreemarkerTemplateSimpleNumber *new_FreemarkerTemplateSimpleNumber_initWithNSNumber_(NSNumber *value) {
  FreemarkerTemplateSimpleNumber *self = [FreemarkerTemplateSimpleNumber alloc];
  FreemarkerTemplateSimpleNumber_initWithNSNumber_(self, value);
  return self;
}


#line 39
void FreemarkerTemplateSimpleNumber_initWithByte_(FreemarkerTemplateSimpleNumber *self, jbyte val) {
  (void) NSObject_init(self);
  
#line 40
  self->value_ = new_JavaLangByte_initWithByte_(val);
}


#line 39
FreemarkerTemplateSimpleNumber *new_FreemarkerTemplateSimpleNumber_initWithByte_(jbyte val) {
  FreemarkerTemplateSimpleNumber *self = [FreemarkerTemplateSimpleNumber alloc];
  FreemarkerTemplateSimpleNumber_initWithByte_(self, val);
  return self;
}


#line 43
void FreemarkerTemplateSimpleNumber_initWithShort_(FreemarkerTemplateSimpleNumber *self, jshort val) {
  (void) NSObject_init(self);
  
#line 44
  self->value_ = new_JavaLangShort_initWithShort_(val);
}


#line 43
FreemarkerTemplateSimpleNumber *new_FreemarkerTemplateSimpleNumber_initWithShort_(jshort val) {
  FreemarkerTemplateSimpleNumber *self = [FreemarkerTemplateSimpleNumber alloc];
  FreemarkerTemplateSimpleNumber_initWithShort_(self, val);
  return self;
}


#line 47
void FreemarkerTemplateSimpleNumber_initWithInt_(FreemarkerTemplateSimpleNumber *self, jint val) {
  (void) NSObject_init(self);
  
#line 48
  self->value_ = new_JavaLangInteger_initWithInt_(val);
}


#line 47
FreemarkerTemplateSimpleNumber *new_FreemarkerTemplateSimpleNumber_initWithInt_(jint val) {
  FreemarkerTemplateSimpleNumber *self = [FreemarkerTemplateSimpleNumber alloc];
  FreemarkerTemplateSimpleNumber_initWithInt_(self, val);
  return self;
}


#line 51
void FreemarkerTemplateSimpleNumber_initWithLong_(FreemarkerTemplateSimpleNumber *self, jlong val) {
  (void) NSObject_init(self);
  
#line 52
  self->value_ = new_JavaLangLong_initWithLong_(val);
}


#line 51
FreemarkerTemplateSimpleNumber *new_FreemarkerTemplateSimpleNumber_initWithLong_(jlong val) {
  FreemarkerTemplateSimpleNumber *self = [FreemarkerTemplateSimpleNumber alloc];
  FreemarkerTemplateSimpleNumber_initWithLong_(self, val);
  return self;
}


#line 55
void FreemarkerTemplateSimpleNumber_initWithFloat_(FreemarkerTemplateSimpleNumber *self, jfloat val) {
  (void) NSObject_init(self);
  
#line 56
  self->value_ = new_JavaLangFloat_initWithFloat_(val);
}


#line 55
FreemarkerTemplateSimpleNumber *new_FreemarkerTemplateSimpleNumber_initWithFloat_(jfloat val) {
  FreemarkerTemplateSimpleNumber *self = [FreemarkerTemplateSimpleNumber alloc];
  FreemarkerTemplateSimpleNumber_initWithFloat_(self, val);
  return self;
}


#line 59
void FreemarkerTemplateSimpleNumber_initWithDouble_(FreemarkerTemplateSimpleNumber *self, jdouble val) {
  (void) NSObject_init(self);
  
#line 60
  self->value_ = new_JavaLangDouble_initWithDouble_(val);
}


#line 59
FreemarkerTemplateSimpleNumber *new_FreemarkerTemplateSimpleNumber_initWithDouble_(jdouble val) {
  FreemarkerTemplateSimpleNumber *self = [FreemarkerTemplateSimpleNumber alloc];
  FreemarkerTemplateSimpleNumber_initWithDouble_(self, val);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateSimpleNumber)
