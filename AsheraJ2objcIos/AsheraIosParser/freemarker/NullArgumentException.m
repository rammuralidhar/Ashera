//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/NullArgumentException.java
//


#include "J2ObjC_source.h"
#include "NullArgumentException.h"
#include "java/lang/IllegalArgumentException.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/freemarker/freemarker/template/utility/NullArgumentException.java"


#line 24
@implementation FreemarkerTemplateUtilityNullArgumentException

- (instancetype)initWithNSString:(NSString *)argumentName {
  FreemarkerTemplateUtilityNullArgumentException_initWithNSString_(self, argumentName);
  return self;
}


#line 33
+ (void)checkWithNSString:(NSString *)argumentName
                   withId:(id)argumentValue {
  FreemarkerTemplateUtilityNullArgumentException_checkWithNSString_withId_(argumentName, argumentValue);
}


#line 42
+ (void)checkWithId:(id)argumentValue {
  FreemarkerTemplateUtilityNullArgumentException_checkWithId_(argumentValue);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "NullArgumentException", NULL, 0x1, NULL, NULL },
    { "checkWithNSString:withId:", "check", "V", 0x9, NULL, NULL },
    { "checkWithId:", "check", "V", 0x9, NULL, NULL },
  };
  static const J2ObjcClassInfo _FreemarkerTemplateUtilityNullArgumentException = { 2, "NullArgumentException", "freemarker.template.utility", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_FreemarkerTemplateUtilityNullArgumentException;
}

@end


#line 26
void FreemarkerTemplateUtilityNullArgumentException_initWithNSString_(FreemarkerTemplateUtilityNullArgumentException *self, NSString *argumentName) {
  (void) JavaLangIllegalArgumentException_initWithNSString_(self, JreStrcat("$$$", @"The \"", argumentName, @"\" argument can't be null"));
}


#line 26
FreemarkerTemplateUtilityNullArgumentException *new_FreemarkerTemplateUtilityNullArgumentException_initWithNSString_(NSString *argumentName) {
  FreemarkerTemplateUtilityNullArgumentException *self = [FreemarkerTemplateUtilityNullArgumentException alloc];
  FreemarkerTemplateUtilityNullArgumentException_initWithNSString_(self, argumentName);
  return self;
}


#line 33
void FreemarkerTemplateUtilityNullArgumentException_checkWithNSString_withId_(NSString *argumentName, id argumentValue) {
  FreemarkerTemplateUtilityNullArgumentException_initialize();
  
#line 34
  if (argumentValue == nil) {
    @throw new_FreemarkerTemplateUtilityNullArgumentException_initWithNSString_(argumentName);
  }
}

void FreemarkerTemplateUtilityNullArgumentException_checkWithId_(id argumentValue) {
  FreemarkerTemplateUtilityNullArgumentException_initialize();
  
#line 43
  if (argumentValue == nil) {
    @throw new_FreemarkerTemplateUtilityNullArgumentException_initWithNSString_(@"Argument can't be null");
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FreemarkerTemplateUtilityNullArgumentException)
