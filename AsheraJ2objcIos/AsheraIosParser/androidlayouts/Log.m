//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/Log.java
//


#include "FastPrintWriter.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "Log.h"
#include "java/io/PrintWriter.h"
#include "java/io/StringWriter.h"
#include "java/lang/Exception.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Throwable.h"
#include "java/net/UnknownHostException.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/Log.java"

@interface RepackagedAndroidUtilLog ()

- (instancetype)init;

@end

static id<RepackagedAndroidUtilLog_TerribleFailureHandler> RepackagedAndroidUtilLog_sWtfHandler_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidUtilLog, sWtfHandler_, id<RepackagedAndroidUtilLog_TerribleFailureHandler>)
J2OBJC_STATIC_FIELD_SETTER(RepackagedAndroidUtilLog, sWtfHandler_, id<RepackagedAndroidUtilLog_TerribleFailureHandler>)

__attribute__((unused)) static void RepackagedAndroidUtilLog_init(RepackagedAndroidUtilLog *self);

__attribute__((unused)) static RepackagedAndroidUtilLog *new_RepackagedAndroidUtilLog_init() NS_RETURNS_RETAINED;

/**
 @brief Exception class used to capture a stack trace in #wtf .
 */
@interface RepackagedAndroidUtilLog_TerribleFailure : JavaLangException

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(RepackagedAndroidUtilLog_TerribleFailure)

__attribute__((unused)) static void RepackagedAndroidUtilLog_TerribleFailure_initWithNSString_withJavaLangThrowable_(RepackagedAndroidUtilLog_TerribleFailure *self, NSString *msg, JavaLangThrowable *cause);

__attribute__((unused)) static RepackagedAndroidUtilLog_TerribleFailure *new_RepackagedAndroidUtilLog_TerribleFailure_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(RepackagedAndroidUtilLog_TerribleFailure)

@interface RepackagedAndroidUtilLog_TerribleFailureHandler : NSObject
@end

@interface RepackagedAndroidUtilLog_$1 : NSObject < RepackagedAndroidUtilLog_TerribleFailureHandler >

- (void)onTerribleFailureWithNSString:(NSString *)tag
withRepackagedAndroidUtilLog_TerribleFailure:(RepackagedAndroidUtilLog_TerribleFailure *)what
                          withBoolean:(jboolean)system;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RepackagedAndroidUtilLog_$1)

__attribute__((unused)) static void RepackagedAndroidUtilLog_$1_init(RepackagedAndroidUtilLog_$1 *self);

__attribute__((unused)) static RepackagedAndroidUtilLog_$1 *new_RepackagedAndroidUtilLog_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(RepackagedAndroidUtilLog_$1)

J2OBJC_INITIALIZED_DEFN(RepackagedAndroidUtilLog)


#line 53
@implementation RepackagedAndroidUtilLog


#line 106
- (instancetype)init {
  RepackagedAndroidUtilLog_init(self);
  return self;
}


#line 115
+ (jint)vWithNSString:(NSString *)tag
         withNSString:(NSString *)msg {
  return RepackagedAndroidUtilLog_vWithNSString_withNSString_(tag, msg);
}


#line 126
+ (jint)vWithNSString:(NSString *)tag
         withNSString:(NSString *)msg
withJavaLangThrowable:(JavaLangThrowable *)tr {
  return RepackagedAndroidUtilLog_vWithNSString_withNSString_withJavaLangThrowable_(tag, msg, tr);
}


#line 136
+ (jint)dWithNSString:(NSString *)tag
         withNSString:(NSString *)msg {
  return RepackagedAndroidUtilLog_dWithNSString_withNSString_(tag, msg);
}


#line 147
+ (jint)dWithNSString:(NSString *)tag
         withNSString:(NSString *)msg
withJavaLangThrowable:(JavaLangThrowable *)tr {
  return RepackagedAndroidUtilLog_dWithNSString_withNSString_withJavaLangThrowable_(tag, msg, tr);
}


#line 157
+ (jint)iWithNSString:(NSString *)tag
         withNSString:(NSString *)msg {
  return RepackagedAndroidUtilLog_iWithNSString_withNSString_(tag, msg);
}


#line 168
+ (jint)iWithNSString:(NSString *)tag
         withNSString:(NSString *)msg
withJavaLangThrowable:(JavaLangThrowable *)tr {
  return RepackagedAndroidUtilLog_iWithNSString_withNSString_withJavaLangThrowable_(tag, msg, tr);
}


#line 178
+ (jint)wWithNSString:(NSString *)tag
         withNSString:(NSString *)msg {
  return RepackagedAndroidUtilLog_wWithNSString_withNSString_(tag, msg);
}


#line 189
+ (jint)wWithNSString:(NSString *)tag
         withNSString:(NSString *)msg
withJavaLangThrowable:(JavaLangThrowable *)tr {
  return RepackagedAndroidUtilLog_wWithNSString_withNSString_withJavaLangThrowable_(tag, msg, tr);
}


#line 211
+ (jboolean)isLoggableWithNSString:(NSString *)tag
                           withInt:(jint)level {
  return RepackagedAndroidUtilLog_isLoggableWithNSString_withInt_(tag, level);
}


#line 221
+ (jint)wWithNSString:(NSString *)tag
withJavaLangThrowable:(JavaLangThrowable *)tr {
  return RepackagedAndroidUtilLog_wWithNSString_withJavaLangThrowable_(tag, tr);
}


#line 231
+ (jint)eWithNSString:(NSString *)tag
         withNSString:(NSString *)msg {
  return RepackagedAndroidUtilLog_eWithNSString_withNSString_(tag, msg);
}


#line 242
+ (jint)eWithNSString:(NSString *)tag
         withNSString:(NSString *)msg
withJavaLangThrowable:(JavaLangThrowable *)tr {
  return RepackagedAndroidUtilLog_eWithNSString_withNSString_withJavaLangThrowable_(tag, msg, tr);
}


#line 255
+ (jint)wtfWithNSString:(NSString *)tag
           withNSString:(NSString *)msg {
  return RepackagedAndroidUtilLog_wtfWithNSString_withNSString_(tag, msg);
}


#line 264
+ (jint)wtfStackWithNSString:(NSString *)tag
                withNSString:(NSString *)msg {
  return RepackagedAndroidUtilLog_wtfStackWithNSString_withNSString_(tag, msg);
}


#line 274
+ (jint)wtfWithNSString:(NSString *)tag
  withJavaLangThrowable:(JavaLangThrowable *)tr {
  return RepackagedAndroidUtilLog_wtfWithNSString_withJavaLangThrowable_(tag, tr);
}


#line 285
+ (jint)wtfWithNSString:(NSString *)tag
           withNSString:(NSString *)msg
  withJavaLangThrowable:(JavaLangThrowable *)tr {
  return RepackagedAndroidUtilLog_wtfWithNSString_withNSString_withJavaLangThrowable_(tag, msg, tr);
}


#line 289
+ (jint)wtfWithInt:(jint)logId
      withNSString:(NSString *)tag
      withNSString:(NSString *)msg
withJavaLangThrowable:(JavaLangThrowable *)tr
       withBoolean:(jboolean)localStack
       withBoolean:(jboolean)system {
  return RepackagedAndroidUtilLog_wtfWithInt_withNSString_withNSString_withJavaLangThrowable_withBoolean_withBoolean_(logId, tag, msg, tr, localStack, system);
}


#line 301
+ (void)wtfQuietWithInt:(jint)logId
           withNSString:(NSString *)tag
           withNSString:(NSString *)msg
            withBoolean:(jboolean)system {
  RepackagedAndroidUtilLog_wtfQuietWithInt_withNSString_withNSString_withBoolean_(logId, tag, msg, system);
}


#line 313
+ (id<RepackagedAndroidUtilLog_TerribleFailureHandler>)setWtfHandlerWithRepackagedAndroidUtilLog_TerribleFailureHandler:(id<RepackagedAndroidUtilLog_TerribleFailureHandler>)handler {
  return RepackagedAndroidUtilLog_setWtfHandlerWithRepackagedAndroidUtilLog_TerribleFailureHandler_(handler);
}


#line 326
+ (NSString *)getStackTraceStringWithJavaLangThrowable:(JavaLangThrowable *)tr {
  return RepackagedAndroidUtilLog_getStackTraceStringWithJavaLangThrowable_(tr);
}


#line 356
+ (jint)printlnWithInt:(jint)priority
          withNSString:(NSString *)tag
          withNSString:(NSString *)msg {
  return RepackagedAndroidUtilLog_printlnWithInt_withNSString_withNSString_(priority, tag, msg);
}


#line 366
+ (jint)println_nativeWithInt:(jint)bufID
                      withInt:(jint)priority
                 withNSString:(NSString *)tag
                 withNSString:(NSString *)msg {
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(bufID, priority, tag, msg);
}

+ (void)initialize {
  if (self == [RepackagedAndroidUtilLog class]) {
    RepackagedAndroidUtilLog_sWtfHandler_ = new_RepackagedAndroidUtilLog_$1_init();
    J2OBJC_SET_INITIALIZED(RepackagedAndroidUtilLog)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Log", NULL, 0x2, NULL, NULL },
    { "vWithNSString:withNSString:", "v", "I", 0x9, NULL, NULL },
    { "vWithNSString:withNSString:withJavaLangThrowable:", "v", "I", 0x9, NULL, NULL },
    { "dWithNSString:withNSString:", "d", "I", 0x9, NULL, NULL },
    { "dWithNSString:withNSString:withJavaLangThrowable:", "d", "I", 0x9, NULL, NULL },
    { "iWithNSString:withNSString:", "i", "I", 0x9, NULL, NULL },
    { "iWithNSString:withNSString:withJavaLangThrowable:", "i", "I", 0x9, NULL, NULL },
    { "wWithNSString:withNSString:", "w", "I", 0x9, NULL, NULL },
    { "wWithNSString:withNSString:withJavaLangThrowable:", "w", "I", 0x9, NULL, NULL },
    { "isLoggableWithNSString:withInt:", "isLoggable", "Z", 0x9, NULL, NULL },
    { "wWithNSString:withJavaLangThrowable:", "w", "I", 0x9, NULL, NULL },
    { "eWithNSString:withNSString:", "e", "I", 0x9, NULL, NULL },
    { "eWithNSString:withNSString:withJavaLangThrowable:", "e", "I", 0x9, NULL, NULL },
    { "wtfWithNSString:withNSString:", "wtf", "I", 0x9, NULL, NULL },
    { "wtfStackWithNSString:withNSString:", "wtfStack", "I", 0x9, NULL, NULL },
    { "wtfWithNSString:withJavaLangThrowable:", "wtf", "I", 0x9, NULL, NULL },
    { "wtfWithNSString:withNSString:withJavaLangThrowable:", "wtf", "I", 0x9, NULL, NULL },
    { "wtfWithInt:withNSString:withNSString:withJavaLangThrowable:withBoolean:withBoolean:", "wtf", "I", 0x8, NULL, NULL },
    { "wtfQuietWithInt:withNSString:withNSString:withBoolean:", "wtfQuiet", "V", 0x8, NULL, NULL },
    { "setWtfHandlerWithRepackagedAndroidUtilLog_TerribleFailureHandler:", "setWtfHandler", "Lrepackaged.android.util.Log$TerribleFailureHandler;", 0x9, NULL, NULL },
    { "getStackTraceStringWithJavaLangThrowable:", "getStackTraceString", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "printlnWithInt:withNSString:withNSString:", "println", "I", 0x9, NULL, NULL },
    { "println_nativeWithInt:withInt:withNSString:withNSString:", "println_native", "I", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "VERBOSE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilLog_VERBOSE },
    { "DEBUG__", "DEBUG", 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilLog_DEBUG },
    { "INFO_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilLog_INFO },
    { "WARN_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilLog_WARN },
    { "ERROR_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilLog_ERROR },
    { "ASSERT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilLog_ASSERT },
    { "sWtfHandler_", NULL, 0xa, "Lrepackaged.android.util.Log$TerribleFailureHandler;", &RepackagedAndroidUtilLog_sWtfHandler_, NULL,  },
    { "LOG_ID_MAIN_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilLog_LOG_ID_MAIN },
    { "LOG_ID_RADIO_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilLog_LOG_ID_RADIO },
    { "LOG_ID_EVENTS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilLog_LOG_ID_EVENTS },
    { "LOG_ID_SYSTEM_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilLog_LOG_ID_SYSTEM },
    { "LOG_ID_CRASH_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilLog_LOG_ID_CRASH },
  };
  static const char *inner_classes[] = {"Lrepackaged.android.util.Log$TerribleFailure;", "Lrepackaged.android.util.Log$TerribleFailureHandler;"};
  static const J2ObjcClassInfo _RepackagedAndroidUtilLog = { 2, "Log", "repackaged.android.util", NULL, 0x11, 23, methods, 12, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_RepackagedAndroidUtilLog;
}

@end


#line 106
void RepackagedAndroidUtilLog_init(RepackagedAndroidUtilLog *self) {
  (void) NSObject_init(self);
}


#line 106
RepackagedAndroidUtilLog *new_RepackagedAndroidUtilLog_init() {
  RepackagedAndroidUtilLog *self = [RepackagedAndroidUtilLog alloc];
  RepackagedAndroidUtilLog_init(self);
  return self;
}


#line 115
jint RepackagedAndroidUtilLog_vWithNSString_withNSString_(NSString *tag, NSString *msg) {
  RepackagedAndroidUtilLog_initialize();
  
#line 116
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(RepackagedAndroidUtilLog_LOG_ID_MAIN, RepackagedAndroidUtilLog_VERBOSE, tag, msg);
}


#line 126
jint RepackagedAndroidUtilLog_vWithNSString_withNSString_withJavaLangThrowable_(NSString *tag, NSString *msg, JavaLangThrowable *tr) {
  RepackagedAndroidUtilLog_initialize();
  
#line 127
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(RepackagedAndroidUtilLog_LOG_ID_MAIN, RepackagedAndroidUtilLog_VERBOSE, tag, JreStrcat("$C$", msg, 0x000a, RepackagedAndroidUtilLog_getStackTraceStringWithJavaLangThrowable_(tr)));
}


#line 136
jint RepackagedAndroidUtilLog_dWithNSString_withNSString_(NSString *tag, NSString *msg) {
  RepackagedAndroidUtilLog_initialize();
  
#line 137
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(RepackagedAndroidUtilLog_LOG_ID_MAIN, RepackagedAndroidUtilLog_DEBUG, tag, msg);
}


#line 147
jint RepackagedAndroidUtilLog_dWithNSString_withNSString_withJavaLangThrowable_(NSString *tag, NSString *msg, JavaLangThrowable *tr) {
  RepackagedAndroidUtilLog_initialize();
  
#line 148
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(RepackagedAndroidUtilLog_LOG_ID_MAIN, RepackagedAndroidUtilLog_DEBUG, tag, JreStrcat("$C$", msg, 0x000a, RepackagedAndroidUtilLog_getStackTraceStringWithJavaLangThrowable_(tr)));
}


#line 157
jint RepackagedAndroidUtilLog_iWithNSString_withNSString_(NSString *tag, NSString *msg) {
  RepackagedAndroidUtilLog_initialize();
  
#line 158
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(RepackagedAndroidUtilLog_LOG_ID_MAIN, RepackagedAndroidUtilLog_INFO, tag, msg);
}


#line 168
jint RepackagedAndroidUtilLog_iWithNSString_withNSString_withJavaLangThrowable_(NSString *tag, NSString *msg, JavaLangThrowable *tr) {
  RepackagedAndroidUtilLog_initialize();
  
#line 169
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(RepackagedAndroidUtilLog_LOG_ID_MAIN, RepackagedAndroidUtilLog_INFO, tag, JreStrcat("$C$", msg, 0x000a, RepackagedAndroidUtilLog_getStackTraceStringWithJavaLangThrowable_(tr)));
}


#line 178
jint RepackagedAndroidUtilLog_wWithNSString_withNSString_(NSString *tag, NSString *msg) {
  RepackagedAndroidUtilLog_initialize();
  
#line 179
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(RepackagedAndroidUtilLog_LOG_ID_MAIN, RepackagedAndroidUtilLog_WARN, tag, msg);
}


#line 189
jint RepackagedAndroidUtilLog_wWithNSString_withNSString_withJavaLangThrowable_(NSString *tag, NSString *msg, JavaLangThrowable *tr) {
  RepackagedAndroidUtilLog_initialize();
  
#line 190
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(RepackagedAndroidUtilLog_LOG_ID_MAIN, RepackagedAndroidUtilLog_WARN, tag, JreStrcat("$C$", msg, 0x000a, RepackagedAndroidUtilLog_getStackTraceStringWithJavaLangThrowable_(tr)));
}


#line 211
jboolean RepackagedAndroidUtilLog_isLoggableWithNSString_withInt_(NSString *tag, jint level) {
  RepackagedAndroidUtilLog_initialize();
  
#line 212
  return NO;
}


#line 221
jint RepackagedAndroidUtilLog_wWithNSString_withJavaLangThrowable_(NSString *tag, JavaLangThrowable *tr) {
  RepackagedAndroidUtilLog_initialize();
  
#line 222
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(RepackagedAndroidUtilLog_LOG_ID_MAIN, RepackagedAndroidUtilLog_WARN, tag, RepackagedAndroidUtilLog_getStackTraceStringWithJavaLangThrowable_(tr));
}


#line 231
jint RepackagedAndroidUtilLog_eWithNSString_withNSString_(NSString *tag, NSString *msg) {
  RepackagedAndroidUtilLog_initialize();
  
#line 232
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(RepackagedAndroidUtilLog_LOG_ID_MAIN, RepackagedAndroidUtilLog_ERROR, tag, msg);
}


#line 242
jint RepackagedAndroidUtilLog_eWithNSString_withNSString_withJavaLangThrowable_(NSString *tag, NSString *msg, JavaLangThrowable *tr) {
  RepackagedAndroidUtilLog_initialize();
  
#line 243
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(RepackagedAndroidUtilLog_LOG_ID_MAIN, RepackagedAndroidUtilLog_ERROR, tag, JreStrcat("$C$", msg, 0x000a, RepackagedAndroidUtilLog_getStackTraceStringWithJavaLangThrowable_(tr)));
}


#line 255
jint RepackagedAndroidUtilLog_wtfWithNSString_withNSString_(NSString *tag, NSString *msg) {
  RepackagedAndroidUtilLog_initialize();
  
#line 256
  return RepackagedAndroidUtilLog_wtfWithInt_withNSString_withNSString_withJavaLangThrowable_withBoolean_withBoolean_(RepackagedAndroidUtilLog_LOG_ID_MAIN, tag, msg, nil, NO, NO);
}


#line 264
jint RepackagedAndroidUtilLog_wtfStackWithNSString_withNSString_(NSString *tag, NSString *msg) {
  RepackagedAndroidUtilLog_initialize();
  
#line 265
  return RepackagedAndroidUtilLog_wtfWithInt_withNSString_withNSString_withJavaLangThrowable_withBoolean_withBoolean_(RepackagedAndroidUtilLog_LOG_ID_MAIN, tag, msg, nil, YES, NO);
}


#line 274
jint RepackagedAndroidUtilLog_wtfWithNSString_withJavaLangThrowable_(NSString *tag, JavaLangThrowable *tr) {
  RepackagedAndroidUtilLog_initialize();
  
#line 275
  return RepackagedAndroidUtilLog_wtfWithInt_withNSString_withNSString_withJavaLangThrowable_withBoolean_withBoolean_(RepackagedAndroidUtilLog_LOG_ID_MAIN, tag, [((JavaLangThrowable *) nil_chk(tr)) getMessage], tr, NO, NO);
}


#line 285
jint RepackagedAndroidUtilLog_wtfWithNSString_withNSString_withJavaLangThrowable_(NSString *tag, NSString *msg, JavaLangThrowable *tr) {
  RepackagedAndroidUtilLog_initialize();
  
#line 286
  return RepackagedAndroidUtilLog_wtfWithInt_withNSString_withNSString_withJavaLangThrowable_withBoolean_withBoolean_(RepackagedAndroidUtilLog_LOG_ID_MAIN, tag, msg, tr, NO, NO);
}


#line 289
jint RepackagedAndroidUtilLog_wtfWithInt_withNSString_withNSString_withJavaLangThrowable_withBoolean_withBoolean_(jint logId, NSString *tag, NSString *msg, JavaLangThrowable *tr, jboolean localStack, jboolean system) {
  RepackagedAndroidUtilLog_initialize();
  RepackagedAndroidUtilLog_TerribleFailure *what = new_RepackagedAndroidUtilLog_TerribleFailure_initWithNSString_withJavaLangThrowable_(msg, tr);
  
#line 295
  jint bytes = RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(logId, RepackagedAndroidUtilLog_ERROR, tag, JreStrcat("$C$", msg, 0x000a, RepackagedAndroidUtilLog_getStackTraceStringWithJavaLangThrowable_(
#line 296
  localStack ? what : tr)));
  [((id<RepackagedAndroidUtilLog_TerribleFailureHandler>) nil_chk(RepackagedAndroidUtilLog_sWtfHandler_)) onTerribleFailureWithNSString:tag withRepackagedAndroidUtilLog_TerribleFailure:what withBoolean:system];
  return bytes;
}

void RepackagedAndroidUtilLog_wtfQuietWithInt_withNSString_withNSString_withBoolean_(jint logId, NSString *tag, NSString *msg, jboolean system) {
  RepackagedAndroidUtilLog_initialize();
  
#line 302
  RepackagedAndroidUtilLog_TerribleFailure *what = new_RepackagedAndroidUtilLog_TerribleFailure_initWithNSString_withJavaLangThrowable_(msg, nil);
  [((id<RepackagedAndroidUtilLog_TerribleFailureHandler>) nil_chk(RepackagedAndroidUtilLog_sWtfHandler_)) onTerribleFailureWithNSString:tag withRepackagedAndroidUtilLog_TerribleFailure:what withBoolean:system];
}


#line 313
id<RepackagedAndroidUtilLog_TerribleFailureHandler> RepackagedAndroidUtilLog_setWtfHandlerWithRepackagedAndroidUtilLog_TerribleFailureHandler_(id<RepackagedAndroidUtilLog_TerribleFailureHandler> handler) {
  RepackagedAndroidUtilLog_initialize();
  
#line 314
  if (handler == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"handler == null");
  }
  id<RepackagedAndroidUtilLog_TerribleFailureHandler> oldHandler = RepackagedAndroidUtilLog_sWtfHandler_;
  RepackagedAndroidUtilLog_sWtfHandler_ = handler;
  return oldHandler;
}


#line 326
NSString *RepackagedAndroidUtilLog_getStackTraceStringWithJavaLangThrowable_(JavaLangThrowable *tr) {
  RepackagedAndroidUtilLog_initialize();
  
#line 327
  if (tr == nil) {
    return @"";
  }
  
#line 333
  JavaLangThrowable *t = tr;
  while (t != nil) {
    if ([t isKindOfClass:[JavaNetUnknownHostException class]]) {
      return @"";
    }
    t = [((JavaLangThrowable *) nil_chk(t)) getCause];
  }
  
#line 341
  JavaIoStringWriter *sw = new_JavaIoStringWriter_init();
  JavaIoPrintWriter *pw = new_RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_withBoolean_withInt_(sw, NO, 256);
  [((JavaLangThrowable *) nil_chk(tr)) printStackTraceWithJavaIoPrintWriter:pw];
  [pw flush];
  return [sw description];
}


#line 356
jint RepackagedAndroidUtilLog_printlnWithInt_withNSString_withNSString_(jint priority, NSString *tag, NSString *msg) {
  RepackagedAndroidUtilLog_initialize();
  
#line 357
  return RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(RepackagedAndroidUtilLog_LOG_ID_MAIN, priority, tag, msg);
}


#line 366
jint RepackagedAndroidUtilLog_println_nativeWithInt_withInt_withNSString_withNSString_(jint bufID, jint priority, NSString *tag, NSString *msg) {
  RepackagedAndroidUtilLog_initialize();
  return 1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilLog)


#line 88
@implementation RepackagedAndroidUtilLog_TerribleFailure


#line 89
- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  RepackagedAndroidUtilLog_TerribleFailure_initWithNSString_withJavaLangThrowable_(self, msg, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withJavaLangThrowable:", "TerribleFailure", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilLog_TerribleFailure = { 2, "TerribleFailure", "repackaged.android.util", "Log", 0xa, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidUtilLog_TerribleFailure;
}

@end


#line 89
void RepackagedAndroidUtilLog_TerribleFailure_initWithNSString_withJavaLangThrowable_(RepackagedAndroidUtilLog_TerribleFailure *self, NSString *msg, JavaLangThrowable *cause) {
  (void) JavaLangException_initWithNSString_withJavaLangThrowable_(self,
#line 89
  msg, cause);
}


#line 89
RepackagedAndroidUtilLog_TerribleFailure *new_RepackagedAndroidUtilLog_TerribleFailure_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) {
  RepackagedAndroidUtilLog_TerribleFailure *self = [RepackagedAndroidUtilLog_TerribleFailure alloc];
  RepackagedAndroidUtilLog_TerribleFailure_initWithNSString_withJavaLangThrowable_(self, msg, cause);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilLog_TerribleFailure)

@implementation RepackagedAndroidUtilLog_TerribleFailureHandler

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onTerribleFailureWithNSString:withRepackagedAndroidUtilLog_TerribleFailure:withBoolean:", "onTerribleFailure", "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilLog_TerribleFailureHandler = { 2, "TerribleFailureHandler", "repackaged.android.util", "Log", 0x609, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidUtilLog_TerribleFailureHandler;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilLog_TerribleFailureHandler)

@implementation RepackagedAndroidUtilLog_$1


#line 102
- (void)onTerribleFailureWithNSString:(NSString *)tag
withRepackagedAndroidUtilLog_TerribleFailure:(RepackagedAndroidUtilLog_TerribleFailure *)what
                          withBoolean:(jboolean)system {
}

- (instancetype)init {
  RepackagedAndroidUtilLog_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onTerribleFailureWithNSString:withRepackagedAndroidUtilLog_TerribleFailure:withBoolean:", "onTerribleFailure", "V", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilLog_$1 = { 2, "", "repackaged.android.util", "Log", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidUtilLog_$1;
}

@end

void RepackagedAndroidUtilLog_$1_init(RepackagedAndroidUtilLog_$1 *self) {
  (void) NSObject_init(self);
}

RepackagedAndroidUtilLog_$1 *new_RepackagedAndroidUtilLog_$1_init() {
  RepackagedAndroidUtilLog_$1 *self = [RepackagedAndroidUtilLog_$1 alloc];
  RepackagedAndroidUtilLog_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilLog_$1)
