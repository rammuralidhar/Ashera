//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/com/google/android/util/AbstractMessageParser.java
//


#include "AbstractMessageParser.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/com/google/android/util/AbstractMessageParser.java"

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser () {
 @public
  NSString *text_;
  jint nextChar_;
  jint nextClass_;
  JavaUtilArrayList *parts_;
  JavaUtilArrayList *tokens_;
  JavaUtilHashMap *formatStart_;
  jboolean parseSmilies_;
  jboolean parseAcronyms_;
  jboolean parseFormatting_;
  jboolean parseUrls_;
  jboolean parseMeText_;
  jboolean parseMusic_;
}

/**
 @brief Builds the parts list.
 @param meText any meText parsed from the message
 */
- (void)buildPartsWithNSString:(NSString *)meText;

/**
 @brief Returns the last part in the list.
 */
- (RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *)lastPart;

/**
 @brief Looks for a music track (\u266B is first character, everything else is track info).
 */
- (jboolean)parseMusicTrack;

/**
 @brief Consumes all of the text in the next word .
 */
- (void)parseText;

/**
 @brief Looks for smileys (e.g., ":)") in the text.
 The set of known smileys is loaded from a file into a trie at server start.
 */
- (jboolean)parseSmiley;

/**
 @brief Looks for acronyms (e.g., "lol") in the text.
 */
- (jboolean)parseAcronym;

/**
 @brief Determines if this is an allowable domain character.
 */
- (jboolean)isDomainCharWithChar:(jchar)c;

/**
 @brief Determines if the given string is a valid domain.
 */
- (jboolean)isValidDomainWithNSString:(NSString *)domain;

/**
 @brief Looks for a URL in two possible forms:  either a proper URL with a known scheme or a domain name optionally followed by a path, query, or query.
 */
- (jboolean)parseURL;

/**
 @brief Adds the appropriate token for the given URL.
 This might be a simple link or it might be a recognized media type.
 */
- (void)addURLTokenWithNSString:(NSString *)url
                   withNSString:(NSString *)text;

/**
 @brief Deal with formatting characters.
 Parsing is as follows: - Treat all contiguous strings of formatting characters as one block. (This method processes one block.) - Only a single instance of a particular format character within a block is used to determine whether to turn on/off that type of formatting; other instances simply print the character itself. - If the format is to be turned on, we use the _first_ instance; if it is to be turned off, we use the _last_ instance (by appending the format.) Example: **string** turns into <b>*string*</b>
 */
- (jboolean)parseFormatting;

/**
 @brief Determines whether the given index could be a possible word break.
 */
- (jboolean)isWordBreakWithInt:(jint)index;

/**
 @brief Determines whether the given index could be a possible smiley break.
 */
- (jboolean)isSmileyBreakWithInt:(jint)index;

/**
 @brief Verifies that the character before the given index is end of line, whitespace, or punctuation.
 */
- (jboolean)isURLBreakWithInt:(jint)index;

/**
 @brief Returns the class for the character at the given index.
 */
- (jint)getCharClassWithInt:(jint)index;

/**
 @brief Returns true if <code>c1</code> could be the last character of a smiley and <code>c2</code> could be the first character of a different smiley, if #isWordBreak would not already recognize that this is possible.
 */
+ (jboolean)isSmileyBreakWithChar:(jchar)c1
                         withChar:(jchar)c2;

/**
 @brief Determines whether the given character is punctuation.
 */
+ (jboolean)isPunctuationWithChar:(jchar)ch;

/**
 @brief Determines whether the given character is the beginning or end of a section with special formatting.
 */
+ (jboolean)isFormatCharWithChar:(jchar)ch;

/**
 @brief Adds the given token to the parsed output.
 */
- (void)addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token:(RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *)token;

/**
 @brief Determines whether the given string is in the given trie.
 */
+ (jboolean)matchesWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode:(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)root
                                                                       withNSString:(NSString *)str;

/**
 @brief Returns the longest substring of the given string, starting at the given index, that exists in the trie.
 */
+ (RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode:(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)root
                                                                                       withRepackagedComGoogleAndroidUtilAbstractMessageParser:(RepackagedComGoogleAndroidUtilAbstractMessageParser *)p
                                                                                                                                       withInt:(jint)start;

/**
 @brief Returns the longest substring of the given string, starting at the given index, that exists in the trie, with a special tokenizing case for smileys if specified.
 */
+ (RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode:(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)root
                                                                                       withRepackagedComGoogleAndroidUtilAbstractMessageParser:(RepackagedComGoogleAndroidUtilAbstractMessageParser *)p
                                                                                                                                       withInt:(jint)start
                                                                                                                                   withBoolean:(jboolean)smiley;

@end

J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser, text_, NSString *)
J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser, parts_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser, tokens_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser, formatStart_, JavaUtilHashMap *)

__attribute__((unused)) static NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_getRawText(RepackagedComGoogleAndroidUtilAbstractMessageParser *self);

__attribute__((unused)) static void RepackagedComGoogleAndroidUtilAbstractMessageParser_buildPartsWithNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, NSString *meText);

__attribute__((unused)) static RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *RepackagedComGoogleAndroidUtilAbstractMessageParser_lastPart(RepackagedComGoogleAndroidUtilAbstractMessageParser *self);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_parseMusicTrack(RepackagedComGoogleAndroidUtilAbstractMessageParser *self);

__attribute__((unused)) static void RepackagedComGoogleAndroidUtilAbstractMessageParser_parseText(RepackagedComGoogleAndroidUtilAbstractMessageParser *self);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_parseSmiley(RepackagedComGoogleAndroidUtilAbstractMessageParser *self);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_parseAcronym(RepackagedComGoogleAndroidUtilAbstractMessageParser *self);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isDomainCharWithChar_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, jchar c);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isValidDomainWithNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, NSString *domain);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_parseURL(RepackagedComGoogleAndroidUtilAbstractMessageParser *self);

__attribute__((unused)) static void RepackagedComGoogleAndroidUtilAbstractMessageParser_addURLTokenWithNSString_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, NSString *url, NSString *text);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_parseFormatting(RepackagedComGoogleAndroidUtilAbstractMessageParser *self);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isWordBreakWithInt_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, jint index);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isSmileyBreakWithInt_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, jint index);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isURLBreakWithInt_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, jint index);

__attribute__((unused)) static jint RepackagedComGoogleAndroidUtilAbstractMessageParser_getCharClassWithInt_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, jint index);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isSmileyBreakWithChar_withChar_(jchar c1, jchar c2);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isPunctuationWithChar_(jchar ch);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isFormatCharWithChar_(jchar ch);

__attribute__((unused)) static void RepackagedComGoogleAndroidUtilAbstractMessageParser_addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *token);

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_matchesWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *root, NSString *str);

__attribute__((unused)) static RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *RepackagedComGoogleAndroidUtilAbstractMessageParser_longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withRepackagedComGoogleAndroidUtilAbstractMessageParser_withInt_(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *root, RepackagedComGoogleAndroidUtilAbstractMessageParser *p, jint start);

__attribute__((unused)) static RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *RepackagedComGoogleAndroidUtilAbstractMessageParser_longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withRepackagedComGoogleAndroidUtilAbstractMessageParser_withInt_withBoolean_(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *root, RepackagedComGoogleAndroidUtilAbstractMessageParser *p, jint start, jboolean smiley);

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_Resources : NSObject
@end

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum () {
 @public
  NSString *stringRep_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum, stringRep_, NSString *)

__attribute__((unused)) static void RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *self, NSString *stringRep, NSString *__name, jint __ordinal);

__attribute__((unused)) static RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(NSString *stringRep, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_Html () {
 @public
  NSString *html_;
}

+ (NSString *)trimLeadingWhitespaceWithNSString:(NSString *)text;

@end

J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_Html, html_, NSString *)

__attribute__((unused)) static NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_trimLeadingWhitespaceWithNSString_(NSString *text);

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack () {
 @public
  NSString *track_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack, track_, NSString *)

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_Link () {
 @public
  NSString *url_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_Link, url_, NSString *)

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_Video () {
 @public
  NSString *docid_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_Video, docid_, NSString *)

static JavaUtilRegexPattern *RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_URL_PATTERN_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_Video, URL_PATTERN_, JavaUtilRegexPattern *)

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo () {
 @public
  NSString *docid_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo, docid_, NSString *)

static JavaUtilRegexPattern *RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_URL_PATTERN_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo, URL_PATTERN_, JavaUtilRegexPattern *)

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo () {
 @public
  NSString *user_;
  NSString *album_;
  NSString *photo_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo, user_, NSString *)
J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo, album_, NSString *)
J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo, photo_, NSString *)

static JavaUtilRegexPattern *RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_URL_PATTERN_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo, URL_PATTERN_, JavaUtilRegexPattern *)

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto () {
 @public
  NSString *user_;
  NSString *photo_;
  NSString *grouping_;
  NSString *groupingId_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto, user_, NSString *)
J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto, photo_, NSString *)
J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto, grouping_, NSString *)
J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto, groupingId_, NSString *)

static JavaUtilRegexPattern *RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_URL_PATTERN_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto, URL_PATTERN_, JavaUtilRegexPattern *)

static JavaUtilRegexPattern *RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_GROUPING_PATTERN_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto, GROUPING_PATTERN_, JavaUtilRegexPattern *)

static NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_SETS_ = 
#line 1027
@"sets";
J2OBJC_STATIC_FIELD_GETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto, SETS_, NSString *)

static NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_TAGS_ = 
#line 1028
@"tags";
J2OBJC_STATIC_FIELD_GETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto, TAGS_, NSString *)

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym () {
 @public
  NSString *value_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym, value_, NSString *)

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_Format () {
 @public
  jchar ch_;
  jboolean start_;
  jboolean matched_;
}

- (NSString *)getFormatStartWithChar:(jchar)ch;

- (NSString *)getFormatEndWithChar:(jchar)ch;

@end

__attribute__((unused)) static NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_getFormatStartWithChar_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Format *self, jchar ch);

__attribute__((unused)) static NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_getFormatEndWithChar_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Format *self, jchar ch);

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode () {
 @public
  JavaUtilHashMap *children_;
  NSString *text_;
  NSString *value_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode, children_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode, text_, NSString *)
J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode, value_, NSString *)

__attribute__((unused)) static jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_exists(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *self);

__attribute__((unused)) static NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_getText(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *self);

__attribute__((unused)) static NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_getValue(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *self);

@interface RepackagedComGoogleAndroidUtilAbstractMessageParser_Part () {
 @public
  NSString *meText_;
  JavaUtilArrayList *tokens_;
}

- (NSString *)getPartType;

@end

J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_Part, meText_, NSString *)
J2OBJC_FIELD_SETTER(RepackagedComGoogleAndroidUtilAbstractMessageParser_Part, tokens_, JavaUtilArrayList *)

__attribute__((unused)) static NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Part_getPartType(RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *self);

NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_musicNote_ = 
#line 67
@"\u266b ";


#line 37
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser


#line 64
- (id<RepackagedComGoogleAndroidUtilAbstractMessageParser_Resources>)getResources {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 88
- (instancetype)initWithNSString:(NSString *)text {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_initWithNSString_(self, text);
  return self;
}


#line 98
- (instancetype)initWithNSString:(NSString *)text
                     withBoolean:(jboolean)parseSmilies
                     withBoolean:(jboolean)parseAcronyms
                     withBoolean:(jboolean)parseFormatting
                     withBoolean:(jboolean)parseUrls
                     withBoolean:(jboolean)parseMusic
                     withBoolean:(jboolean)parseMeText {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_initWithNSString_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_(self, text, parseSmilies, parseAcronyms, parseFormatting, parseUrls, parseMusic, parseMeText);
  return self;
}


#line 116
- (NSString *)getRawText {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_getRawText(self);
}


#line 119
- (jint)getPartCount {
  
#line 119
  return [((JavaUtilArrayList *) nil_chk(parts_)) size];
}


#line 122
- (RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *)getPartWithInt:(jint)index {
  
#line 122
  return [((JavaUtilArrayList *) nil_chk(parts_)) getWithInt:index];
}


#line 125
- (id<JavaUtilList>)getParts {
  
#line 125
  return parts_;
}


#line 128
- (void)parse {
  
#line 131
  if (RepackagedComGoogleAndroidUtilAbstractMessageParser_parseMusicTrack(self)) {
    RepackagedComGoogleAndroidUtilAbstractMessageParser_buildPartsWithNSString_(self, nil);
    return;
  }
  
#line 137
  NSString *meText = nil;
  if (parseMeText_ && [((NSString *) nil_chk(text_)) hasPrefix:@"/me"] && (((jint) [text_ length]) > 3) && JavaLangCharacter_isWhitespaceWithChar_(
#line 139
  [text_ charAtWithInt:3])) {
    meText = [text_ substring:0 endIndex:4];
    text_ = [text_ substring:4];
  }
  
#line 145
  jboolean wasSmiley = NO;
  while (nextChar_ < ((jint) [((NSString *) nil_chk(text_)) length])) {
    if (!RepackagedComGoogleAndroidUtilAbstractMessageParser_isWordBreakWithInt_(self, nextChar_)) {
      if (!wasSmiley || !RepackagedComGoogleAndroidUtilAbstractMessageParser_isSmileyBreakWithInt_(self, nextChar_)) {
        @throw new_JavaLangAssertionError_initWithId_(@"last chunk did not end at word break");
      }
    }
    
#line 153
    if (RepackagedComGoogleAndroidUtilAbstractMessageParser_parseSmiley(self)) {
      wasSmiley = YES;
    }
    else {
      
#line 156
      wasSmiley = NO;
      
#line 158
      if (!RepackagedComGoogleAndroidUtilAbstractMessageParser_parseAcronym(self) && !RepackagedComGoogleAndroidUtilAbstractMessageParser_parseURL(self) && !RepackagedComGoogleAndroidUtilAbstractMessageParser_parseFormatting(self)) {
        RepackagedComGoogleAndroidUtilAbstractMessageParser_parseText(self);
      }
    }
  }
  
#line 165
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(tokens_)) size]; ++i) {
    if ([((RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *) nil_chk([tokens_ getWithInt:i])) isMedia]) {
      if ((i > 0) && ([[tokens_ getWithInt:i - 1] isKindOfClass:[RepackagedComGoogleAndroidUtilAbstractMessageParser_Html class]])) {
        [((RepackagedComGoogleAndroidUtilAbstractMessageParser_Html *) nil_chk(((RepackagedComGoogleAndroidUtilAbstractMessageParser_Html *) check_class_cast([tokens_ getWithInt:i - 1], [RepackagedComGoogleAndroidUtilAbstractMessageParser_Html class])))) trimLeadingWhitespace];
      }
      if ((i + 1 < [tokens_ size]) && ([[tokens_ getWithInt:i + 1] isKindOfClass:[RepackagedComGoogleAndroidUtilAbstractMessageParser_Html class]])) {
        [((RepackagedComGoogleAndroidUtilAbstractMessageParser_Html *) nil_chk(((RepackagedComGoogleAndroidUtilAbstractMessageParser_Html *) check_class_cast([tokens_ getWithInt:i + 1], [RepackagedComGoogleAndroidUtilAbstractMessageParser_Html class])))) trimTrailingWhitespace];
      }
    }
  }
  
#line 177
  for (jint i = 0; i < [tokens_ size]; ++i) {
    if ([((RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *) nil_chk([tokens_ getWithInt:i])) isHtml] &&
#line 179
    (((jint) [((NSString *) nil_chk([((RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *) nil_chk([tokens_ getWithInt:i])) toHtmlWithBoolean:YES])) length]) == 0)) {
      (void) [tokens_ removeWithInt:i];
      --i;
    }
  }
  
#line 185
  RepackagedComGoogleAndroidUtilAbstractMessageParser_buildPartsWithNSString_(self, meText);
}


#line 195
+ (RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *)tokenForUrlWithNSString:(NSString *)url
                                                                          withNSString:(NSString *)text {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_tokenForUrlWithNSString_withNSString_(url, text);
}


#line 233
- (void)buildPartsWithNSString:(NSString *)meText {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_buildPartsWithNSString_(self, meText);
}


#line 249
- (RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *)lastPart {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_lastPart(self);
}


#line 255
- (jboolean)parseMusicTrack {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_parseMusicTrack(self);
}


#line 266
- (void)parseText {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_parseText(self);
}


#line 289
- (jboolean)parseSmiley {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_parseSmiley(self);
}


#line 312
- (jboolean)parseAcronym {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_parseAcronym(self);
}


#line 327
- (jboolean)isDomainCharWithChar:(jchar)c {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_isDomainCharWithChar_(self, c);
}


#line 332
- (jboolean)isValidDomainWithNSString:(NSString *)domain {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_isValidDomainWithNSString_(self, domain);
}


#line 344
- (jboolean)parseURL {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_parseURL(self);
}


#line 464
- (void)addURLTokenWithNSString:(NSString *)url
                   withNSString:(NSString *)text {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_addURLTokenWithNSString_withNSString_(self, url, text);
}


#line 484
- (jboolean)parseFormatting {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_parseFormatting(self);
}


#line 541
- (jboolean)isWordBreakWithInt:(jint)index {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_isWordBreakWithInt_(self, index);
}


#line 546
- (jboolean)isSmileyBreakWithInt:(jint)index {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_isSmileyBreakWithInt_(self, index);
}


#line 560
- (jboolean)isURLBreakWithInt:(jint)index {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_isURLBreakWithInt_(self, index);
}


#line 575
- (jint)getCharClassWithInt:(jint)index {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_getCharClassWithInt_(self, index);
}


#line 603
+ (jboolean)isSmileyBreakWithChar:(jchar)c1
                         withChar:(jchar)c2 {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_isSmileyBreakWithChar_withChar_(c1, c2);
}


#line 628
+ (jboolean)isPunctuationWithChar:(jchar)ch {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_isPunctuationWithChar_(ch);
}


#line 643
+ (jboolean)isFormatCharWithChar:(jchar)ch {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_isFormatCharWithChar_(ch);
}


#line 1235
- (void)addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token:(RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *)token {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_(self, token);
}


#line 1240
- (NSString *)toHtml {
  JavaLangStringBuilder *html = new_JavaLangStringBuilder_init();
  
#line 1243
  for (RepackagedComGoogleAndroidUtilAbstractMessageParser_Part * __strong part in nil_chk(parts_)) {
    jboolean caps = NO;
    
#line 1246
    (void) [html appendWithNSString:@"<p>"];
    for (RepackagedComGoogleAndroidUtilAbstractMessageParser_Token * __strong token in nil_chk([((RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *) nil_chk(part)) getTokens])) {
      if ([((RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *) nil_chk(token)) isHtml]) {
        (void) [html appendWithNSString:[token toHtmlWithBoolean:caps]];
      }
      else {
        {
          
#line 1306
          RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo *p;
          
#line 1251
          switch ([[token getType] ordinal]) {
            case RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_Type_LINK:
            (void) [html appendWithNSString:@"<a href=\""];
            (void) [html appendWithNSString:[((RepackagedComGoogleAndroidUtilAbstractMessageParser_Link *) check_class_cast(token, [RepackagedComGoogleAndroidUtilAbstractMessageParser_Link class])) getURL]];
            (void) [html appendWithNSString:@"\">"];
            (void) [html appendWithNSString:[token getRawText]];
            (void) [html appendWithNSString:@"</a>"];
            break;
            
#line 1260
            case RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_Type_SMILEY:
            
#line 1262
            (void) [html appendWithNSString:[token getRawText]];
            break;
            
#line 1265
            case RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_Type_ACRONYM:
            (void) [html appendWithNSString:[token getRawText]];
            break;
            
#line 1269
            case RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_Type_MUSIC:
            
#line 1271
            (void) [html appendWithNSString:[((RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack *) check_class_cast(token, [RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack class])) getTrack]];
            break;
            
#line 1274
            case RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_Type_GOOGLE_VIDEO:
            
#line 1276
            (void) [html appendWithNSString:@"<a href=\""];
            (void) [html appendWithNSString:RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_getURLWithNSString_([((RepackagedComGoogleAndroidUtilAbstractMessageParser_Video *) check_class_cast(token, [RepackagedComGoogleAndroidUtilAbstractMessageParser_Video class])) getDocID])];
            (void) [html appendWithNSString:@"\">"];
            (void) [html appendWithNSString:[token getRawText]];
            (void) [html appendWithNSString:@"</a>"];
            break;
            
#line 1283
            case RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_Type_YOUTUBE_VIDEO:
            
#line 1285
            (void) [html appendWithNSString:@"<a href=\""];
            (void) [html appendWithNSString:RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_getURLWithNSString_(
#line 1287
            [((RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo *) check_class_cast(token, [RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo class])) getDocID])];
            (void) [html appendWithNSString:@"\">"];
            (void) [html appendWithNSString:[token getRawText]];
            (void) [html appendWithNSString:@"</a>"];
            break;
            
#line 1293
            case RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_Type_PHOTO:
            {
              (void) [html appendWithNSString:@"<a href=\""];
              (void) [html appendWithNSString:RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_getAlbumURLWithNSString_withNSString_(
#line 1297
              [((RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo *) check_class_cast(token, [RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo class])) getUser], [((RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo *) check_class_cast(token, [RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo class])) getAlbum])];
              (void) [html appendWithNSString:@"\">"];
              (void) [html appendWithNSString:[token getRawText]];
              (void) [html appendWithNSString:@"</a>"];
              break;
            }
            
#line 1304
            case RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_Type_FLICKR:
            
#line 1306
            p = (RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo *) check_class_cast(token, [RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo class]);
            (void) [html appendWithNSString:@"<a href=\""];
            (void) [html appendWithNSString:[((RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto *) check_class_cast(token, [RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto class])) getUrl]];
            (void) [html appendWithNSString:@"\">"];
            (void) [html appendWithNSString:[token getRawText]];
            (void) [html appendWithNSString:@"</a>"];
            break;
            
#line 1314
            default:
            @throw new_JavaLangAssertionError_initWithId_(JreStrcat("$@", @"unknown token type: ", [token getType]));
          }
        }
      }
      if ([token controlCaps]) {
        caps = [token setCaps];
      }
    }
    (void) [html appendWithNSString:@"</p>\n"];
  }
  
#line 1326
  return [html description];
}


#line 1330
+ (NSString *)reverseWithNSString:(NSString *)str {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_reverseWithNSString_(str);
}


#line 1381
+ (jboolean)matchesWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode:(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)root
                                                                       withNSString:(NSString *)str {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_matchesWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withNSString_(root, str);
}


#line 1398
+ (RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode:(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)root
                                                                                       withRepackagedComGoogleAndroidUtilAbstractMessageParser:(RepackagedComGoogleAndroidUtilAbstractMessageParser *)p
                                                                                                                                       withInt:(jint)start {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withRepackagedComGoogleAndroidUtilAbstractMessageParser_withInt_(root, p, start);
}


#line 1408
+ (RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode:(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)root
                                                                                       withRepackagedComGoogleAndroidUtilAbstractMessageParser:(RepackagedComGoogleAndroidUtilAbstractMessageParser *)p
                                                                                                                                       withInt:(jint)start
                                                                                                                                   withBoolean:(jboolean)smiley {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withRepackagedComGoogleAndroidUtilAbstractMessageParser_withInt_withBoolean_(root, p, start, smiley);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getResources", NULL, "Lrepackaged.com.google.android.util.AbstractMessageParser$Resources;", 0x404, NULL, NULL },
    { "initWithNSString:", "AbstractMessageParser", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withBoolean:withBoolean:withBoolean:withBoolean:withBoolean:withBoolean:", "AbstractMessageParser", NULL, 0x1, NULL, NULL },
    { "getRawText", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getPartCount", NULL, "I", 0x11, NULL, NULL },
    { "getPartWithInt:", "getPart", "Lrepackaged.com.google.android.util.AbstractMessageParser$Part;", 0x11, NULL, NULL },
    { "getParts", NULL, "Ljava.util.List;", 0x11, NULL, NULL },
    { "parse", NULL, "V", 0x1, NULL, NULL },
    { "tokenForUrlWithNSString:withNSString:", "tokenForUrl", "Lrepackaged.com.google.android.util.AbstractMessageParser$Token;", 0x9, NULL, NULL },
    { "buildPartsWithNSString:", "buildParts", "V", 0x2, NULL, NULL },
    { "lastPart", NULL, "Lrepackaged.com.google.android.util.AbstractMessageParser$Part;", 0x2, NULL, NULL },
    { "parseMusicTrack", NULL, "Z", 0x2, NULL, NULL },
    { "parseText", NULL, "V", 0x2, NULL, NULL },
    { "parseSmiley", NULL, "Z", 0x2, NULL, NULL },
    { "parseAcronym", NULL, "Z", 0x2, NULL, NULL },
    { "isDomainCharWithChar:", "isDomainChar", "Z", 0x2, NULL, NULL },
    { "isValidDomainWithNSString:", "isValidDomain", "Z", 0x2, NULL, NULL },
    { "parseURL", NULL, "Z", 0x2, NULL, NULL },
    { "addURLTokenWithNSString:withNSString:", "addURLToken", "V", 0x2, NULL, NULL },
    { "parseFormatting", NULL, "Z", 0x2, NULL, NULL },
    { "isWordBreakWithInt:", "isWordBreak", "Z", 0x2, NULL, NULL },
    { "isSmileyBreakWithInt:", "isSmileyBreak", "Z", 0x2, NULL, NULL },
    { "isURLBreakWithInt:", "isURLBreak", "Z", 0x2, NULL, NULL },
    { "getCharClassWithInt:", "getCharClass", "I", 0x2, NULL, NULL },
    { "isSmileyBreakWithChar:withChar:", "isSmileyBreak", "Z", 0xa, NULL, NULL },
    { "isPunctuationWithChar:", "isPunctuation", "Z", 0xa, NULL, NULL },
    { "isFormatCharWithChar:", "isFormatChar", "Z", 0xa, NULL, NULL },
    { "addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token:", "addToken", "V", 0x2, NULL, NULL },
    { "toHtml", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "reverseWithNSString:", "reverse", "Ljava.lang.String;", 0xc, NULL, NULL },
    { "matchesWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode:withNSString:", "matches", "Z", 0xa, NULL, NULL },
    { "longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode:withRepackagedComGoogleAndroidUtilAbstractMessageParser:withInt:", "longestMatch", "Lrepackaged.com.google.android.util.AbstractMessageParser$TrieNode;", 0xa, NULL, NULL },
    { "longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode:withRepackagedComGoogleAndroidUtilAbstractMessageParser:withInt:withBoolean:", "longestMatch", "Lrepackaged.com.google.android.util.AbstractMessageParser$TrieNode;", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "musicNote_", NULL, 0x19, "Ljava.lang.String;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_musicNote_, NULL,  },
    { "text_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "nextChar_", NULL, 0x2, "I", NULL, NULL,  },
    { "nextClass_", NULL, 0x2, "I", NULL, NULL,  },
    { "parts_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrepackaged/com/google/android/util/AbstractMessageParser$Part;>;",  },
    { "tokens_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrepackaged/com/google/android/util/AbstractMessageParser$Token;>;",  },
    { "formatStart_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/Character;Lrepackaged/com/google/android/util/AbstractMessageParser$Format;>;",  },
    { "parseSmilies_", NULL, 0x2, "Z", NULL, NULL,  },
    { "parseAcronyms_", NULL, 0x2, "Z", NULL, NULL,  },
    { "parseFormatting_", NULL, 0x2, "Z", NULL, NULL,  },
    { "parseUrls_", NULL, 0x2, "Z", NULL, NULL,  },
    { "parseMeText_", NULL, 0x2, "Z", NULL, NULL,  },
    { "parseMusic_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lrepackaged.com.google.android.util.AbstractMessageParser$Resources;", "Lrepackaged.com.google.android.util.AbstractMessageParser$Token;", "Lrepackaged.com.google.android.util.AbstractMessageParser$Html;", "Lrepackaged.com.google.android.util.AbstractMessageParser$MusicTrack;", "Lrepackaged.com.google.android.util.AbstractMessageParser$Link;", "Lrepackaged.com.google.android.util.AbstractMessageParser$Video;", "Lrepackaged.com.google.android.util.AbstractMessageParser$YouTubeVideo;", "Lrepackaged.com.google.android.util.AbstractMessageParser$Photo;", "Lrepackaged.com.google.android.util.AbstractMessageParser$FlickrPhoto;", "Lrepackaged.com.google.android.util.AbstractMessageParser$Smiley;", "Lrepackaged.com.google.android.util.AbstractMessageParser$Acronym;", "Lrepackaged.com.google.android.util.AbstractMessageParser$Format;", "Lrepackaged.com.google.android.util.AbstractMessageParser$TrieNode;", "Lrepackaged.com.google.android.util.AbstractMessageParser$Part;"};
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser = { 2, "AbstractMessageParser", "repackaged.com.google.android.util", NULL, 0x401, 33, methods, 13, fields, 0, NULL, 14, inner_classes, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser;
}

@end


#line 88
void RepackagedComGoogleAndroidUtilAbstractMessageParser_initWithNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, NSString *text) {
  (void) RepackagedComGoogleAndroidUtilAbstractMessageParser_initWithNSString_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_(self, text, YES, YES, YES, YES, YES, YES);
}


#line 98
void RepackagedComGoogleAndroidUtilAbstractMessageParser_initWithNSString_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, NSString *text, jboolean parseSmilies, jboolean parseAcronyms, jboolean parseFormatting, jboolean parseUrls, jboolean parseMusic, jboolean parseMeText) {
  (void) NSObject_init(self);
  
#line 101
  self->text_ = text;
  self->nextChar_ = 0;
  self->nextClass_ = 10;
  self->parts_ = new_JavaUtilArrayList_init();
  self->tokens_ = new_JavaUtilArrayList_init();
  self->formatStart_ = new_JavaUtilHashMap_init();
  self->parseSmilies_ = parseSmilies;
  self->parseAcronyms_ = parseAcronyms;
  self->parseFormatting_ = parseFormatting;
  self->parseUrls_ = parseUrls;
  self->parseMusic_ = parseMusic;
  self->parseMeText_ = parseMeText;
}

NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_getRawText(RepackagedComGoogleAndroidUtilAbstractMessageParser *self) {
  
#line 116
  return self->text_;
}


#line 195
RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *RepackagedComGoogleAndroidUtilAbstractMessageParser_tokenForUrlWithNSString_withNSString_(NSString *url, NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_initialize();
  
#line 196
  if (url == nil) {
    return nil;
  }
  
#line 201
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Video *video = RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_matchURLWithNSString_withNSString_(url, text);
  if (video != nil) {
    return video;
  }
  
#line 207
  RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo *ytVideo = RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_matchURLWithNSString_withNSString_(url, text);
  if (ytVideo != nil) {
    return ytVideo;
  }
  
#line 213
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo *photo = RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_matchURLWithNSString_withNSString_(url, text);
  if (photo != nil) {
    return photo;
  }
  
#line 219
  RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto *flickrPhoto = RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_matchURLWithNSString_withNSString_(url, text);
  if (flickrPhoto != nil) {
    return flickrPhoto;
  }
  
#line 225
  return new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Link_initWithNSString_withNSString_(url, text);
}


#line 233
void RepackagedComGoogleAndroidUtilAbstractMessageParser_buildPartsWithNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, NSString *meText) {
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(self->tokens_)) size]; ++i) {
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *token = [self->tokens_ getWithInt:i];
    if ([((RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *) nil_chk(token)) isMedia] || ([((JavaUtilArrayList *) nil_chk(self->parts_)) size] == 0) || [((RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_lastPart(self))) isMedia]) {
      [((JavaUtilArrayList *) nil_chk(self->parts_)) addWithId:new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Part_init()];
    }
    [((RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_lastPart(self))) addWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token:token];
  }
  
#line 243
  if ([((JavaUtilArrayList *) nil_chk(self->parts_)) size] > 0) {
    [((RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *) nil_chk([self->parts_ getWithInt:0])) setMeTextWithNSString:meText];
  }
}


#line 249
RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *RepackagedComGoogleAndroidUtilAbstractMessageParser_lastPart(RepackagedComGoogleAndroidUtilAbstractMessageParser *self) {
  
#line 249
  return [self->parts_ getWithInt:[((JavaUtilArrayList *) nil_chk(self->parts_)) size] - 1];
}

jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_parseMusicTrack(RepackagedComGoogleAndroidUtilAbstractMessageParser *self) {
  
#line 257
  if (self->parseMusic_ && [((NSString *) nil_chk(self->text_)) hasPrefix:RepackagedComGoogleAndroidUtilAbstractMessageParser_musicNote_]) {
    RepackagedComGoogleAndroidUtilAbstractMessageParser_addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_(self, new_RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack_initWithNSString_([self->text_ substring:((jint) [((NSString *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_musicNote_)) length])]));
    self->nextChar_ = ((jint) [self->text_ length]);
    return YES;
  }
  return NO;
}

void RepackagedComGoogleAndroidUtilAbstractMessageParser_parseText(RepackagedComGoogleAndroidUtilAbstractMessageParser *self) {
  JavaLangStringBuilder *buf = new_JavaLangStringBuilder_init();
  jint start = self->nextChar_;
  do {
    jchar ch = [((NSString *) nil_chk(self->text_)) charAtWithInt:self->nextChar_++];
    switch (ch) {
      case '<':
      
#line 272
      (void) [buf appendWithNSString:@"&lt;"];
      
#line 272
      break;
      case '>':
      
#line 273
      (void) [buf appendWithNSString:@"&gt;"];
      
#line 273
      break;
      case '&':
      
#line 274
      (void) [buf appendWithNSString:@"&amp;"];
      
#line 274
      break;
      case '"':
      
#line 275
      (void) [buf appendWithNSString:@"&quot;"];
      
#line 275
      break;
      case '\'':
      
#line 276
      (void) [buf appendWithNSString:@"&apos;"];
      
#line 276
      break;
      case 0x000a:
      
#line 277
      (void) [buf appendWithNSString:@"<br>"];
      
#line 277
      break;
      default:
      
#line 278
      (void) [buf appendWithChar:ch];
      
#line 278
      break;
    }
  }
  while (
#line 280
  !RepackagedComGoogleAndroidUtilAbstractMessageParser_isWordBreakWithInt_(self, self->nextChar_));
  
#line 282
  RepackagedComGoogleAndroidUtilAbstractMessageParser_addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_(self, new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_initWithNSString_withNSString_([((NSString *) nil_chk(self->text_)) substring:start endIndex:self->nextChar_], [buf description]));
}


#line 289
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_parseSmiley(RepackagedComGoogleAndroidUtilAbstractMessageParser *self) {
  if (!self->parseSmilies_) {
    return NO;
  }
  RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *match = RepackagedComGoogleAndroidUtilAbstractMessageParser_longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withRepackagedComGoogleAndroidUtilAbstractMessageParser_withInt_withBoolean_([((id<RepackagedComGoogleAndroidUtilAbstractMessageParser_Resources>) nil_chk([self getResources])) getSmileys], self, self->nextChar_,
#line 294
  YES);
  if (match == nil) {
    return NO;
  }
  else {
    
#line 298
    jint previousCharClass = RepackagedComGoogleAndroidUtilAbstractMessageParser_getCharClassWithInt_(self, self->nextChar_ - 1);
    jint nextCharClass = RepackagedComGoogleAndroidUtilAbstractMessageParser_getCharClassWithInt_(self, self->nextChar_ + ((jint) [((NSString *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_getText(match))) length]));
    if ((previousCharClass == 2 || previousCharClass == 3) &&
#line 301
    (nextCharClass == 2 || nextCharClass == 3)) {
      return NO;
    }
    RepackagedComGoogleAndroidUtilAbstractMessageParser_addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_(self, new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley_initWithNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_getText(match)));
    self->nextChar_ += ((jint) [((NSString *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_getText(match))) length]);
    return YES;
  }
}


#line 312
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_parseAcronym(RepackagedComGoogleAndroidUtilAbstractMessageParser *self) {
  if (!self->parseAcronyms_) {
    return NO;
  }
  RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *match = RepackagedComGoogleAndroidUtilAbstractMessageParser_longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withRepackagedComGoogleAndroidUtilAbstractMessageParser_withInt_([((id<RepackagedComGoogleAndroidUtilAbstractMessageParser_Resources>) nil_chk([self getResources])) getAcronyms], self, self->nextChar_);
  if (match == nil) {
    return NO;
  }
  else {
    
#line 320
    RepackagedComGoogleAndroidUtilAbstractMessageParser_addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_(self, new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym_initWithNSString_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_getText(match), RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_getValue(match)));
    self->nextChar_ += ((jint) [((NSString *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_getText(match))) length]);
    return YES;
  }
}


#line 327
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isDomainCharWithChar_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, jchar c) {
  return c == '-' || JavaLangCharacter_isLetterWithChar_(c) || JavaLangCharacter_isDigitWithChar_(c);
}


#line 332
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isValidDomainWithNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, NSString *domain) {
  
#line 334
  if (RepackagedComGoogleAndroidUtilAbstractMessageParser_matchesWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withNSString_([((id<RepackagedComGoogleAndroidUtilAbstractMessageParser_Resources>) nil_chk([self getResources])) getDomainSuffixes], RepackagedComGoogleAndroidUtilAbstractMessageParser_reverseWithNSString_(domain))) {
    return YES;
  }
  return NO;
}


#line 344
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_parseURL(RepackagedComGoogleAndroidUtilAbstractMessageParser *self) {
  
#line 346
  if (!self->parseUrls_ || !RepackagedComGoogleAndroidUtilAbstractMessageParser_isURLBreakWithInt_(self, self->nextChar_)) {
    return NO;
  }
  
#line 350
  jint start = self->nextChar_;
  
#line 353
  jint index = start;
  while ((index < ((jint) [((NSString *) nil_chk(self->text_)) length])) && RepackagedComGoogleAndroidUtilAbstractMessageParser_isDomainCharWithChar_(self, [self->text_ charAtWithInt:index])) {
    index += 1;
  }
  
#line 358
  NSString *url = @"";
  jboolean done = NO;
  
#line 361
  if (index == ((jint) [self->text_ length])) {
    return NO;
  }
  else
#line 363
  if ([self->text_ charAtWithInt:index] == ':') {
    
#line 365
    NSString *scheme = [self->text_ substring:self->nextChar_ endIndex:index];
    if (![((id<JavaUtilSet>) nil_chk([((id<RepackagedComGoogleAndroidUtilAbstractMessageParser_Resources>) nil_chk([self getResources])) getSchemes])) containsWithId:scheme]) {
      return NO;
    }
  }
  else
#line 369
  if ([self->text_ charAtWithInt:index] == '.') {
    
#line 371
    while (index < ((jint) [self->text_ length])) {
      jchar ch = [self->text_ charAtWithInt:index];
      if ((ch != '.') && !RepackagedComGoogleAndroidUtilAbstractMessageParser_isDomainCharWithChar_(self, ch)) {
        break;
      }
      else {
        
#line 376
        index += 1;
      }
    }
    
#line 382
    NSString *domain = [self->text_ substring:self->nextChar_ endIndex:index];
    if (!RepackagedComGoogleAndroidUtilAbstractMessageParser_isValidDomainWithNSString_(self, domain)) {
      return NO;
    }
    
#line 389
    if ((index + 1 < ((jint) [self->text_ length])) && ([self->text_ charAtWithInt:index] == ':')) {
      jchar ch = [self->text_ charAtWithInt:index + 1];
      if (JavaLangCharacter_isDigitWithChar_(ch)) {
        index += 1;
        while ((index < ((jint) [self->text_ length])) && JavaLangCharacter_isDigitWithChar_(
#line 394
        [self->text_ charAtWithInt:index])) {
          index += 1;
        }
      }
    }
    
#line 406
    if (index == ((jint) [self->text_ length])) {
      done = YES;
    }
    else {
      
#line 409
      jchar ch = [self->text_ charAtWithInt:index];
      if (ch == '?') {
        
#line 413
        if (index + 1 == ((jint) [self->text_ length])) {
          done = YES;
        }
        else {
          
#line 416
          jchar ch2 = [self->text_ charAtWithInt:index + 1];
          if (JavaLangCharacter_isWhitespaceWithChar_(ch2) || RepackagedComGoogleAndroidUtilAbstractMessageParser_isPunctuationWithChar_(ch2)) {
            done = YES;
          }
        }
      }
      else
#line 421
      if (RepackagedComGoogleAndroidUtilAbstractMessageParser_isPunctuationWithChar_(ch)) {
        done = YES;
      }
      else
#line 423
      if (JavaLangCharacter_isWhitespaceWithChar_(ch)) {
        done = YES;
      }
      else
#line 425
      if ((ch == '/') || (ch == '#')) {
      }
      else {
        
#line 429
        return NO;
      }
    }
    
#line 436
    url = @"http://";
  }
  else {
    
#line 438
    return NO;
  }
  
#line 443
  if (!done) {
    while ((index < ((jint) [self->text_ length])) &&
#line 445
    !JavaLangCharacter_isWhitespaceWithChar_([self->text_ charAtWithInt:index])) {
      index += 1;
    }
  }
  
#line 450
  NSString *urlText = [self->text_ substring:start endIndex:index];
  url = JreStrcat("$$", url, urlText);
  
#line 454
  RepackagedComGoogleAndroidUtilAbstractMessageParser_addURLTokenWithNSString_withNSString_(self, url, urlText);
  
#line 456
  self->nextChar_ = index;
  return YES;
}


#line 464
void RepackagedComGoogleAndroidUtilAbstractMessageParser_addURLTokenWithNSString_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, NSString *url, NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_(self, RepackagedComGoogleAndroidUtilAbstractMessageParser_tokenForUrlWithNSString_withNSString_(url, text));
}


#line 484
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_parseFormatting(RepackagedComGoogleAndroidUtilAbstractMessageParser *self) {
  if (!self->parseFormatting_) {
    return NO;
  }
  jint endChar = self->nextChar_;
  while ((endChar < ((jint) [((NSString *) nil_chk(self->text_)) length])) && RepackagedComGoogleAndroidUtilAbstractMessageParser_isFormatCharWithChar_([self->text_ charAtWithInt:endChar])) {
    endChar += 1;
  }
  
#line 493
  if ((endChar == self->nextChar_) || !RepackagedComGoogleAndroidUtilAbstractMessageParser_isWordBreakWithInt_(self, endChar)) {
    return NO;
  }
  
#line 500
  JavaUtilLinkedHashMap *seenCharacters = new_JavaUtilLinkedHashMap_init();
  
#line 503
  for (jint index = self->nextChar_; index < endChar; ++index) {
    jchar ch = [self->text_ charAtWithInt:index];
    JavaLangCharacter *key = JavaLangCharacter_valueOfWithChar_(ch);
    if ([seenCharacters containsKeyWithId:key]) {
      
#line 509
      RepackagedComGoogleAndroidUtilAbstractMessageParser_addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_(self, new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_initWithChar_withBoolean_(ch, NO));
    }
    else {
      
#line 511
      RepackagedComGoogleAndroidUtilAbstractMessageParser_Format *start = [((JavaUtilHashMap *) nil_chk(self->formatStart_)) getWithId:key];
      if (start != nil) {
        
#line 514
        [start setMatchedWithBoolean:YES];
        (void) [self->formatStart_ removeWithId:key];
        (void) [seenCharacters putWithId:key withId:JavaLangBoolean_get_TRUE__()];
      }
      else {
        start = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_initWithChar_withBoolean_(ch, YES);
        (void) [self->formatStart_ putWithId:key withId:start];
        RepackagedComGoogleAndroidUtilAbstractMessageParser_addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_(self, start);
        (void) [seenCharacters putWithId:key withId:JavaLangBoolean_get_FALSE__()];
      }
    }
  }
  
#line 528
  for (JavaLangCharacter * __strong key in nil_chk([seenCharacters keySet])) {
    if ([seenCharacters getWithId:key] == JavaLangBoolean_get_TRUE__()) {
      RepackagedComGoogleAndroidUtilAbstractMessageParser_Format *end = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_initWithChar_withBoolean_([((JavaLangCharacter *) nil_chk(key)) charValue], NO);
      [end setMatchedWithBoolean:YES];
      RepackagedComGoogleAndroidUtilAbstractMessageParser_addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_(self, end);
    }
  }
  
#line 536
  self->nextChar_ = endChar;
  return YES;
}


#line 541
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isWordBreakWithInt_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, jint index) {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_getCharClassWithInt_(self, index - 1) != RepackagedComGoogleAndroidUtilAbstractMessageParser_getCharClassWithInt_(self, index);
}


#line 546
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isSmileyBreakWithInt_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, jint index) {
  if (index > 0 && index < ((jint) [((NSString *) nil_chk(self->text_)) length])) {
    if (RepackagedComGoogleAndroidUtilAbstractMessageParser_isSmileyBreakWithChar_withChar_([self->text_ charAtWithInt:index - 1], [self->text_ charAtWithInt:index])) {
      return YES;
    }
  }
  
#line 553
  return NO;
}


#line 560
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isURLBreakWithInt_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, jint index) {
  switch (RepackagedComGoogleAndroidUtilAbstractMessageParser_getCharClassWithInt_(self, index - 1)) {
    case 2:
    case 3:
    case 4:
    return NO;
    
#line 567
    case 0:
    case 1:
    default:
    return YES;
  }
}

jint RepackagedComGoogleAndroidUtilAbstractMessageParser_getCharClassWithInt_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, jint index) {
  if ((index < 0) || (((jint) [((NSString *) nil_chk(self->text_)) length]) <= index)) {
    return 0;
  }
  
#line 580
  jchar ch = [((NSString *) nil_chk(self->text_)) charAtWithInt:index];
  if (JavaLangCharacter_isWhitespaceWithChar_(ch)) {
    return 1;
  }
  else
#line 583
  if (JavaLangCharacter_isLetterWithChar_(ch)) {
    return 2;
  }
  else
#line 585
  if (JavaLangCharacter_isDigitWithChar_(ch)) {
    return 3;
  }
  else
#line 587
  if (RepackagedComGoogleAndroidUtilAbstractMessageParser_isPunctuationWithChar_(ch)) {
    
#line 591
    return ++self->nextClass_;
  }
  else {
    
#line 593
    return 4;
  }
}


#line 603
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isSmileyBreakWithChar_withChar_(jchar c1, jchar c2) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_initialize();
  
#line 604
  switch (c1) {
    
#line 608
    case '$':
    
#line 608
    case '&':
    
#line 608
    case '*':
    
#line 608
    case '+':
    
#line 608
    case '-':
    case '/':
    
#line 609
    case '<':
    
#line 609
    case '=':
    
#line 609
    case '>':
    
#line 609
    case '@':
    case '[':
    
#line 610
    case '\\':
    
#line 610
    case ']':
    
#line 610
    case '^':
    
#line 610
    case '|':
    case '}':
    
#line 611
    case '~':
    switch (c2) {
      
#line 617
      case '#':
      
#line 617
      case '$':
      
#line 617
      case '%':
      
#line 617
      case '*':
      
#line 617
      case '/':
      case '<':
      
#line 618
      case '=':
      
#line 618
      case '>':
      
#line 618
      case '@':
      
#line 618
      case '[':
      case '\\':
      
#line 619
      case '^':
      
#line 619
      case '~':
      return YES;
    }
  }
  
#line 624
  return NO;
}


#line 628
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isPunctuationWithChar_(jchar ch) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_initialize();
  
#line 629
  switch (ch) {
    case '.':
    
#line 630
    case ',':
    
#line 630
    case '"':
    
#line 630
    case ':':
    
#line 630
    case ';':
    case '?':
    
#line 631
    case '!':
    
#line 631
    case '(':
    
#line 631
    case ')':
    return YES;
    
#line 634
    default:
    return NO;
  }
}


#line 643
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_isFormatCharWithChar_(jchar ch) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_initialize();
  
#line 644
  switch (ch) {
    case '*':
    
#line 645
    case '_':
    
#line 645
    case '^':
    return YES;
    
#line 648
    default:
    return NO;
  }
}


#line 1235
void RepackagedComGoogleAndroidUtilAbstractMessageParser_addTokenWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_(RepackagedComGoogleAndroidUtilAbstractMessageParser *self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *token) {
  [((JavaUtilArrayList *) nil_chk(self->tokens_)) addWithId:token];
}


#line 1330
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_reverseWithNSString_(NSString *str) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_initialize();
  
#line 1331
  JavaLangStringBuilder *buf = new_JavaLangStringBuilder_init();
  for (jint i = ((jint) [((NSString *) nil_chk(str)) length]) - 1; i >= 0; --i) {
    (void) [buf appendWithChar:[str charAtWithInt:i]];
  }
  return [buf description];
}


#line 1381
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_matchesWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *root, NSString *str) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_initialize();
  
#line 1382
  jint index = 0;
  while (index < ((jint) [((NSString *) nil_chk(str)) length])) {
    root = [((RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *) nil_chk(root)) getChildWithChar:[str charAtWithInt:index++]];
    if (root == nil) {
      break;
    }
    else
#line 1387
    if (RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_exists(root)) {
      return YES;
    }
  }
  return NO;
}


#line 1398
RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *RepackagedComGoogleAndroidUtilAbstractMessageParser_longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withRepackagedComGoogleAndroidUtilAbstractMessageParser_withInt_(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *root, RepackagedComGoogleAndroidUtilAbstractMessageParser *p, jint start) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_initialize();
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withRepackagedComGoogleAndroidUtilAbstractMessageParser_withInt_withBoolean_(root, p, start, NO);
}


#line 1408
RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *RepackagedComGoogleAndroidUtilAbstractMessageParser_longestMatchWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withRepackagedComGoogleAndroidUtilAbstractMessageParser_withInt_withBoolean_(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *root, RepackagedComGoogleAndroidUtilAbstractMessageParser *p, jint start, jboolean smiley) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_initialize();
  jint index = start;
  RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *bestMatch = nil;
  while (index < ((jint) [((NSString *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_getRawText(nil_chk(p)))) length])) {
    root = [((RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *) nil_chk(root)) getChildWithChar:[((NSString *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_getRawText(p))) charAtWithInt:index++]];
    if (root == nil) {
      break;
    }
    else
#line 1416
    if (RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_exists(root)) {
      if (RepackagedComGoogleAndroidUtilAbstractMessageParser_isWordBreakWithInt_(p, index)) {
        bestMatch = root;
      }
      else
#line 1419
      if (smiley && RepackagedComGoogleAndroidUtilAbstractMessageParser_isSmileyBreakWithInt_(p, index)) {
        bestMatch = root;
      }
    }
  }
  return bestMatch;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser)


#line 43
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_Resources

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getSchemes", NULL, "Ljava.util.Set;", 0x401, NULL, NULL },
    { "getDomainSuffixes", NULL, "Lrepackaged.com.google.android.util.AbstractMessageParser$TrieNode;", 0x401, NULL, NULL },
    { "getSmileys", NULL, "Lrepackaged.com.google.android.util.AbstractMessageParser$TrieNode;", 0x401, NULL, NULL },
    { "getAcronyms", NULL, "Lrepackaged.com.google.android.util.AbstractMessageParser$TrieNode;", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_Resources = { 2, "Resources", "repackaged.com.google.android.util", "AbstractMessageParser", 0x609, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_Resources;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_Resources)


#line 654
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_Token


#line 686
- (instancetype)initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum:(RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *)type
                                                                              withNSString:(NSString *)text {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_withNSString_(self, type, text);
  return self;
}

- (RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *)getType {
  
#line 692
  return type_;
}


#line 700
- (id<JavaUtilList>)getInfo {
  id<JavaUtilList> info = new_JavaUtilArrayList_init();
  [info addWithId:[((RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *) nil_chk([self getType])) description]];
  return info;
}


#line 707
- (NSString *)getRawText {
  
#line 707
  return text_;
}


#line 709
- (jboolean)isMedia {
  
#line 709
  return NO;
}


#line 710
- (jboolean)isHtml {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 711
- (jboolean)isArray {
  
#line 711
  return ![self isHtml];
}


#line 713
- (NSString *)toHtmlWithBoolean:(jboolean)caps {
  
#line 713
  @throw new_JavaLangAssertionError_initWithId_(@"not html");
}


#line 716
- (jboolean)controlCaps {
  
#line 716
  return NO;
}


#line 717
- (jboolean)setCaps {
  
#line 717
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum:withNSString:", "Token", NULL, 0x4, NULL, NULL },
    { "getType", NULL, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;", 0x1, NULL, NULL },
    { "getInfo", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "getRawText", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isMedia", NULL, "Z", 0x1, NULL, NULL },
    { "isHtml", NULL, "Z", 0x401, NULL, NULL },
    { "isArray", NULL, "Z", 0x1, NULL, NULL },
    { "toHtmlWithBoolean:", "toHtml", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "controlCaps", NULL, "Z", 0x1, NULL, NULL },
    { "setCaps", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "type_", NULL, 0x4, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;", NULL, NULL,  },
    { "text_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;"};
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_Token = { 2, "Token", "repackaged.com.google.android.util", "AbstractMessageParser", 0x409, 10, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token;
}

@end


#line 686
void RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *type, NSString *text) {
  (void) NSObject_init(self);
  
#line 687
  self->type_ = type;
  self->text_ = text;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_Token)

J2OBJC_INITIALIZED_DEFN(RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum)

RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_values_[10];


#line 655
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum


#line 673
- (instancetype)initWithNSString:(NSString *)stringRep
                    withNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(self, stringRep, __name, __ordinal);
  return self;
}


#line 678
- (NSString *)description {
  return self->stringRep_;
}

IOSObjectArray *RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_values() {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initialize();
  return [IOSObjectArray arrayWithObjects:RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_values_ count:10 type:RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_class_()];
}

+ (IOSObjectArray *)values {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_values();
}

+ (RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *)valueOfWithNSString:(NSString *)name {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_valueOfWithNSString_(name);
}

RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_valueOfWithNSString_(NSString *name) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initialize();
  for (int i = 0; i < 10; i++) {
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *e = RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum class]) {
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_HTML = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(
#line 657
    @"html", @"HTML", 0);
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_FORMAT = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(
#line 658
    @"format", @"FORMAT", 1);
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_LINK = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(
#line 659
    @"l", @"LINK", 2);
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_SMILEY = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(
#line 660
    @"e", @"SMILEY", 3);
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_ACRONYM = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(
#line 661
    @"a", @"ACRONYM", 4);
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_MUSIC = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(
#line 662
    @"m", @"MUSIC", 5);
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_GOOGLE_VIDEO = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(
#line 663
    @"v", @"GOOGLE_VIDEO", 6);
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_YOUTUBE_VIDEO = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(
#line 664
    @"yt", @"YOUTUBE_VIDEO", 7);
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_PHOTO = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(
#line 665
    @"p", @"PHOTO", 8);
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_FLICKR = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(
#line 666
    @"f", @"FLICKR", 9);
    J2OBJC_SET_INITIALIZED(RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HTML", "HTML", 0x4019, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_HTML, NULL,  },
    { "FORMAT", "FORMAT", 0x4019, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_FORMAT, NULL,  },
    { "LINK", "LINK", 0x4019, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_LINK, NULL,  },
    { "SMILEY", "SMILEY", 0x4019, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_SMILEY, NULL,  },
    { "ACRONYM", "ACRONYM", 0x4019, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_ACRONYM, NULL,  },
    { "MUSIC", "MUSIC", 0x4019, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_MUSIC, NULL,  },
    { "GOOGLE_VIDEO", "GOOGLE_VIDEO", 0x4019, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_GOOGLE_VIDEO, NULL,  },
    { "YOUTUBE_VIDEO", "YOUTUBE_VIDEO", 0x4019, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_YOUTUBE_VIDEO, NULL,  },
    { "PHOTO", "PHOTO", 0x4019, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_PHOTO, NULL,  },
    { "FLICKR", "FLICKR", 0x4019, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_FLICKR, NULL,  },
    { "stringRep_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lrepackaged.com.google.android.util.AbstractMessageParser$Token$Type;"};
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum = { 2, "Type", "repackaged.com.google.android.util", "AbstractMessageParser$Token", 0x4019, 1, methods, 11, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lrepackaged/com/google/android/util/AbstractMessageParser$Token$Type;>;" };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum;
}

@end


#line 673
void RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *self, NSString *stringRep, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  
#line 674
  self->stringRep_ = stringRep;
}


#line 673
RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(NSString *stringRep, NSString *__name, jint __ordinal) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_initWithNSString_withNSString_withInt_(self, stringRep, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum)


#line 721
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_Html


#line 724
- (instancetype)initWithNSString:(NSString *)text
                    withNSString:(NSString *)html {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_initWithNSString_withNSString_(self, text, html);
  return self;
}


#line 729
- (jboolean)isHtml {
  
#line 729
  return YES;
}


#line 730
- (NSString *)toHtmlWithBoolean:(jboolean)caps {
  return caps ? [((NSString *) nil_chk(html_)) uppercaseString] : html_;
}


#line 736
- (id<JavaUtilList>)getInfo {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)trimLeadingWhitespace {
  text_ = RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_trimLeadingWhitespaceWithNSString_(text_);
  html_ = RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_trimLeadingWhitespaceWithNSString_(html_);
}

- (void)trimTrailingWhitespace {
  text_ = RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_trimTrailingWhitespaceWithNSString_(text_);
  html_ = RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_trimTrailingWhitespaceWithNSString_(html_);
}

+ (NSString *)trimLeadingWhitespaceWithNSString:(NSString *)text {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_trimLeadingWhitespaceWithNSString_(text);
}


#line 759
+ (NSString *)trimTrailingWhitespaceWithNSString:(NSString *)text {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_trimTrailingWhitespaceWithNSString_(text);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "Html", NULL, 0x1, NULL, NULL },
    { "isHtml", NULL, "Z", 0x1, NULL, NULL },
    { "toHtmlWithBoolean:", "toHtml", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getInfo", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "trimLeadingWhitespace", NULL, "V", 0x1, NULL, NULL },
    { "trimTrailingWhitespace", NULL, "V", 0x1, NULL, NULL },
    { "trimLeadingWhitespaceWithNSString:", "trimLeadingWhitespace", "Ljava.lang.String;", 0xa, NULL, NULL },
    { "trimTrailingWhitespaceWithNSString:", "trimTrailingWhitespace", "Ljava.lang.String;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "html_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_Html = { 2, "Html", "repackaged.com.google.android.util", "AbstractMessageParser", 0x9, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_Html;
}

@end


#line 724
void RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_initWithNSString_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Html *self, NSString *text, NSString *html) {
  (void) RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_withNSString_(self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_get_HTML(), text);
  self->html_ = html;
}


#line 724
RepackagedComGoogleAndroidUtilAbstractMessageParser_Html *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_initWithNSString_withNSString_(NSString *text, NSString *html) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Html *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_Html alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_initWithNSString_withNSString_(self, text, html);
  return self;
}


#line 750
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_trimLeadingWhitespaceWithNSString_(NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_initialize();
  
#line 751
  jint index = 0;
  while ((index < ((jint) [((NSString *) nil_chk(text)) length])) && JavaLangCharacter_isWhitespaceWithChar_(
#line 753
  [text charAtWithInt:index])) {
    ++index;
  }
  return [text substring:index];
}


#line 759
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_trimTrailingWhitespaceWithNSString_(NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Html_initialize();
  
#line 760
  jint index = ((jint) [((NSString *) nil_chk(text)) length]);
  while ((index > 0) && JavaLangCharacter_isWhitespaceWithChar_([text charAtWithInt:index - 1])) {
    --index;
  }
  return [text substring:0 endIndex:index];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_Html)


#line 769
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack


#line 772
- (instancetype)initWithNSString:(NSString *)track {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack_initWithNSString_(self, track);
  return self;
}

- (NSString *)getTrack {
  
#line 777
  return track_;
}


#line 779
- (jboolean)isHtml {
  
#line 779
  return NO;
}


#line 781
- (id<JavaUtilList>)getInfo {
  id<JavaUtilList> info = [super getInfo];
  [((id<JavaUtilList>) nil_chk(info)) addWithId:[self getTrack]];
  return info;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "MusicTrack", NULL, 0x1, NULL, NULL },
    { "getTrack", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isHtml", NULL, "Z", 0x1, NULL, NULL },
    { "getInfo", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "track_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack = { 2, "MusicTrack", "repackaged.com.google.android.util", "AbstractMessageParser", 0x9, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack;
}

@end


#line 772
void RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack_initWithNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack *self, NSString *track) {
  (void) RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_withNSString_(self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_get_MUSIC(), track);
  self->track_ = track;
}


#line 772
RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack_initWithNSString_(NSString *track) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack_initWithNSString_(self, track);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_MusicTrack)


#line 789
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_Link


#line 792
- (instancetype)initWithNSString:(NSString *)url
                    withNSString:(NSString *)text {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Link_initWithNSString_withNSString_(self, url, text);
  return self;
}


#line 797
- (NSString *)getURL {
  
#line 797
  return url_;
}


#line 799
- (jboolean)isHtml {
  
#line 799
  return NO;
}


#line 801
- (id<JavaUtilList>)getInfo {
  id<JavaUtilList> info = [super getInfo];
  [((id<JavaUtilList>) nil_chk(info)) addWithId:[self getURL]];
  [info addWithId:[self getRawText]];
  return info;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "Link", NULL, 0x1, NULL, NULL },
    { "getURL", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isHtml", NULL, "Z", 0x1, NULL, NULL },
    { "getInfo", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "url_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_Link = { 2, "Link", "repackaged.com.google.android.util", "AbstractMessageParser", 0x9, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_Link;
}

@end


#line 792
void RepackagedComGoogleAndroidUtilAbstractMessageParser_Link_initWithNSString_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Link *self, NSString *url, NSString *text) {
  (void) RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_withNSString_(self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_get_LINK(), text);
  self->url_ = url;
}


#line 792
RepackagedComGoogleAndroidUtilAbstractMessageParser_Link *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Link_initWithNSString_withNSString_(NSString *url, NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Link *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_Link alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Link_initWithNSString_withNSString_(self, url, text);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_Link)

J2OBJC_INITIALIZED_DEFN(RepackagedComGoogleAndroidUtilAbstractMessageParser_Video)


#line 810
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_Video


#line 818
- (instancetype)initWithNSString:(NSString *)docid
                    withNSString:(NSString *)text {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_initWithNSString_withNSString_(self, docid, text);
  return self;
}


#line 823
- (NSString *)getDocID {
  
#line 823
  return docid_;
}


#line 825
- (jboolean)isHtml {
  
#line 825
  return NO;
}


#line 826
- (jboolean)isMedia {
  
#line 826
  return YES;
}


#line 829
+ (RepackagedComGoogleAndroidUtilAbstractMessageParser_Video *)matchURLWithNSString:(NSString *)url
                                                                       withNSString:(NSString *)text {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_matchURLWithNSString_withNSString_(url, text);
}


#line 838
- (id<JavaUtilList>)getInfo {
  id<JavaUtilList> info = [super getInfo];
  [((id<JavaUtilList>) nil_chk(info)) addWithId:RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_getRssUrlWithNSString_(docid_)];
  [info addWithId:RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_getURLWithNSString_(docid_)];
  return info;
}


#line 846
+ (NSString *)getRssUrlWithNSString:(NSString *)docid {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_getRssUrlWithNSString_(docid);
}


#line 852
+ (NSString *)getURLWithNSString:(NSString *)docid {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_getURLWithNSString_(docid);
}


#line 857
+ (NSString *)getURLWithNSString:(NSString *)docid
                    withNSString:(NSString *)extraParams {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_getURLWithNSString_withNSString_(docid, extraParams);
}

+ (void)initialize {
  if (self == [RepackagedComGoogleAndroidUtilAbstractMessageParser_Video class]) {
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_URL_PATTERN_ = JavaUtilRegexPattern_compileWithNSString_(@"(?i)http://video\\.google\\.[a-z0-9]+(?:\\.[a-z0-9]+)?/videoplay\\?.*?\\bdocid=(-?\\d+).*");
    J2OBJC_SET_INITIALIZED(RepackagedComGoogleAndroidUtilAbstractMessageParser_Video)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "Video", NULL, 0x1, NULL, NULL },
    { "getDocID", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isHtml", NULL, "Z", 0x1, NULL, NULL },
    { "isMedia", NULL, "Z", 0x1, NULL, NULL },
    { "matchURLWithNSString:withNSString:", "matchURL", "Lrepackaged.com.google.android.util.AbstractMessageParser$Video;", 0x9, NULL, NULL },
    { "getInfo", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "getRssUrlWithNSString:", "getRssUrl", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getURLWithNSString:", "getURL", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getURLWithNSString:withNSString:", "getURL", "Ljava.lang.String;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "URL_PATTERN_", NULL, 0x1a, "Ljava.util.regex.Pattern;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_URL_PATTERN_, NULL,  },
    { "docid_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_Video = { 2, "Video", "repackaged.com.google.android.util", "AbstractMessageParser", 0x9, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_Video;
}

@end


#line 818
void RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_initWithNSString_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Video *self, NSString *docid, NSString *text) {
  (void) RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_withNSString_(self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_get_GOOGLE_VIDEO(), text);
  self->docid_ = docid;
}


#line 818
RepackagedComGoogleAndroidUtilAbstractMessageParser_Video *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_initWithNSString_withNSString_(NSString *docid, NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Video *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_Video alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_initWithNSString_withNSString_(self, docid, text);
  return self;
}


#line 829
RepackagedComGoogleAndroidUtilAbstractMessageParser_Video *RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_matchURLWithNSString_withNSString_(NSString *url, NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_initialize();
  
#line 830
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_URL_PATTERN_)) matcherWithJavaLangCharSequence:url];
  if ([((JavaUtilRegexMatcher *) nil_chk(m)) matches]) {
    return new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_initWithNSString_withNSString_([m groupWithInt:1], text);
  }
  else {
    
#line 834
    return nil;
  }
}


#line 846
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_getRssUrlWithNSString_(NSString *docid) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_initialize();
  
#line 847
  return JreStrcat("$$", @"http://video.google.com/videofeed?type=docid&output=rss&sourceid=gtalk&docid=",
#line 848
  docid);
}


#line 852
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_getURLWithNSString_(NSString *docid) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_initialize();
  
#line 853
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_getURLWithNSString_withNSString_(docid, nil);
}


#line 857
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_getURLWithNSString_withNSString_(NSString *docid, NSString *extraParams) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Video_initialize();
  
#line 858
  if (extraParams == nil) {
    extraParams = @"";
  }
  else
#line 860
  if (((jint) [extraParams length]) > 0) {
    extraParams = JreStrcat("$C", extraParams, '&');
  }
  return JreStrcat("$$$$", @"http://video.google.com/videoplay?", extraParams, @"docid=",
#line 864
  docid);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_Video)

J2OBJC_INITIALIZED_DEFN(RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo)


#line 869
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo


#line 877
- (instancetype)initWithNSString:(NSString *)docid
                    withNSString:(NSString *)text {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_initWithNSString_withNSString_(self, docid, text);
  return self;
}


#line 882
- (NSString *)getDocID {
  
#line 882
  return docid_;
}


#line 884
- (jboolean)isHtml {
  
#line 884
  return NO;
}


#line 885
- (jboolean)isMedia {
  
#line 885
  return YES;
}


#line 888
+ (RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo *)matchURLWithNSString:(NSString *)url
                                                                              withNSString:(NSString *)text {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_matchURLWithNSString_withNSString_(url, text);
}


#line 897
- (id<JavaUtilList>)getInfo {
  id<JavaUtilList> info = [super getInfo];
  [((id<JavaUtilList>) nil_chk(info)) addWithId:RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_getRssUrlWithNSString_(docid_)];
  [info addWithId:RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_getURLWithNSString_(docid_)];
  return info;
}


#line 905
+ (NSString *)getRssUrlWithNSString:(NSString *)docid {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_getRssUrlWithNSString_(docid);
}


#line 910
+ (NSString *)getURLWithNSString:(NSString *)docid {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_getURLWithNSString_(docid);
}


#line 915
+ (NSString *)getURLWithNSString:(NSString *)docid
                    withNSString:(NSString *)extraParams {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_getURLWithNSString_withNSString_(docid, extraParams);
}


#line 929
+ (NSString *)getPrefixedURLWithBoolean:(jboolean)http
                           withNSString:(NSString *)prefix
                           withNSString:(NSString *)docid
                           withNSString:(NSString *)extraParams {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_getPrefixedURLWithBoolean_withNSString_withNSString_withNSString_(http, prefix, docid, extraParams);
}

+ (void)initialize {
  if (self == [RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo class]) {
    RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_URL_PATTERN_ = JavaUtilRegexPattern_compileWithNSString_(@"(?i)http://(?:[a-z0-9]+\\.)?youtube\\.[a-z0-9]+(?:\\.[a-z0-9]+)?/watch\\?.*\\bv=([-_a-zA-Z0-9=]+).*");
    J2OBJC_SET_INITIALIZED(RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "YouTubeVideo", NULL, 0x1, NULL, NULL },
    { "getDocID", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isHtml", NULL, "Z", 0x1, NULL, NULL },
    { "isMedia", NULL, "Z", 0x1, NULL, NULL },
    { "matchURLWithNSString:withNSString:", "matchURL", "Lrepackaged.com.google.android.util.AbstractMessageParser$YouTubeVideo;", 0x9, NULL, NULL },
    { "getInfo", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "getRssUrlWithNSString:", "getRssUrl", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getURLWithNSString:", "getURL", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getURLWithNSString:withNSString:", "getURL", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getPrefixedURLWithBoolean:withNSString:withNSString:withNSString:", "getPrefixedURL", "Ljava.lang.String;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "URL_PATTERN_", NULL, 0x1a, "Ljava.util.regex.Pattern;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_URL_PATTERN_, NULL,  },
    { "docid_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo = { 2, "YouTubeVideo", "repackaged.com.google.android.util", "AbstractMessageParser", 0x9, 10, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo;
}

@end


#line 877
void RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_initWithNSString_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo *self, NSString *docid, NSString *text) {
  (void) RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_withNSString_(self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_get_YOUTUBE_VIDEO(), text);
  self->docid_ = docid;
}


#line 877
RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_initWithNSString_withNSString_(NSString *docid, NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_initWithNSString_withNSString_(self, docid, text);
  return self;
}


#line 888
RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo *RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_matchURLWithNSString_withNSString_(NSString *url, NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_initialize();
  
#line 889
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_URL_PATTERN_)) matcherWithJavaLangCharSequence:url];
  if ([((JavaUtilRegexMatcher *) nil_chk(m)) matches]) {
    return new_RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_initWithNSString_withNSString_([m groupWithInt:1], text);
  }
  else {
    
#line 893
    return nil;
  }
}


#line 905
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_getRssUrlWithNSString_(NSString *docid) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_initialize();
  
#line 906
  return JreStrcat("$$", @"http://youtube.com/watch?v=", docid);
}


#line 910
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_getURLWithNSString_(NSString *docid) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_initialize();
  
#line 911
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_getURLWithNSString_withNSString_(docid, nil);
}


#line 915
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_getURLWithNSString_withNSString_(NSString *docid, NSString *extraParams) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_initialize();
  
#line 916
  if (extraParams == nil) {
    extraParams = @"";
  }
  else
#line 918
  if (((jint) [extraParams length]) > 0) {
    extraParams = JreStrcat("$C", extraParams, '&');
  }
  return JreStrcat("$$$$", @"http://youtube.com/watch?", extraParams, @"v=", docid);
}


#line 929
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_getPrefixedURLWithBoolean_withNSString_withNSString_withNSString_(jboolean http, NSString *prefix, NSString *docid, NSString *extraParams) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo_initialize();
  NSString *protocol = @"";
  
#line 933
  if (http) {
    protocol = @"http://";
  }
  
#line 937
  if (prefix == nil) {
    prefix = @"";
  }
  
#line 941
  if (extraParams == nil) {
    extraParams = @"";
  }
  else
#line 943
  if (((jint) [extraParams length]) > 0) {
    extraParams = JreStrcat("$C", extraParams, '&');
  }
  
#line 947
  return JreStrcat("$$$$$$", protocol, prefix, @"youtube.com/watch?", extraParams, @"v=",
#line 948
  docid);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_YouTubeVideo)

J2OBJC_INITIALIZED_DEFN(RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo)


#line 953
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo


#line 964
- (instancetype)initWithNSString:(NSString *)user
                    withNSString:(NSString *)album
                    withNSString:(NSString *)photo
                    withNSString:(NSString *)text {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_initWithNSString_withNSString_withNSString_withNSString_(self, user, album, photo, text);
  return self;
}


#line 971
- (NSString *)getUser {
  
#line 971
  return user_;
}


#line 972
- (NSString *)getAlbum {
  
#line 972
  return album_;
}


#line 973
- (NSString *)getPhoto {
  
#line 973
  return photo_;
}


#line 975
- (jboolean)isHtml {
  
#line 975
  return NO;
}


#line 976
- (jboolean)isMedia {
  
#line 976
  return YES;
}


#line 979
+ (RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo *)matchURLWithNSString:(NSString *)url
                                                                       withNSString:(NSString *)text {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_matchURLWithNSString_withNSString_(url, text);
}


#line 988
- (id<JavaUtilList>)getInfo {
  id<JavaUtilList> info = [super getInfo];
  [((id<JavaUtilList>) nil_chk(info)) addWithId:RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_getRssUrlWithNSString_([self getUser])];
  [info addWithId:RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_getAlbumURLWithNSString_withNSString_([self getUser], [self getAlbum])];
  if ([self getPhoto] != nil) {
    [info addWithId:RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_getPhotoURLWithNSString_withNSString_withNSString_([self getUser], [self getAlbum], [self getPhoto])];
  }
  else {
    
#line 995
    [info addWithId:nil];
  }
  return info;
}


#line 1001
+ (NSString *)getRssUrlWithNSString:(NSString *)user {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_getRssUrlWithNSString_(user);
}


#line 1007
+ (NSString *)getAlbumURLWithNSString:(NSString *)user
                         withNSString:(NSString *)album {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_getAlbumURLWithNSString_withNSString_(user, album);
}

+ (NSString *)getPhotoURLWithNSString:(NSString *)user
                         withNSString:(NSString *)album
                         withNSString:(NSString *)photo {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_getPhotoURLWithNSString_withNSString_withNSString_(user, album, photo);
}

+ (void)initialize {
  if (self == [RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo class]) {
    RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_URL_PATTERN_ = JavaUtilRegexPattern_compileWithNSString_(
#line 958
    @"http://picasaweb.google.com/([^/?#&]+)/+((?!searchbrowse)[^/?#&]+)(?:/|/photo)?(?:\\?[^#]*)?(?:#(.*))?");
    J2OBJC_SET_INITIALIZED(RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withNSString:withNSString:", "Photo", NULL, 0x1, NULL, NULL },
    { "getUser", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAlbum", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPhoto", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isHtml", NULL, "Z", 0x1, NULL, NULL },
    { "isMedia", NULL, "Z", 0x1, NULL, NULL },
    { "matchURLWithNSString:withNSString:", "matchURL", "Lrepackaged.com.google.android.util.AbstractMessageParser$Photo;", 0x9, NULL, NULL },
    { "getInfo", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "getRssUrlWithNSString:", "getRssUrl", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getAlbumURLWithNSString:withNSString:", "getAlbumURL", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getPhotoURLWithNSString:withNSString:withNSString:", "getPhotoURL", "Ljava.lang.String;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "URL_PATTERN_", NULL, 0x1a, "Ljava.util.regex.Pattern;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_URL_PATTERN_, NULL,  },
    { "user_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "album_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "photo_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo = { 2, "Photo", "repackaged.com.google.android.util", "AbstractMessageParser", 0x9, 11, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo;
}

@end


#line 964
void RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_initWithNSString_withNSString_withNSString_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo *self, NSString *user, NSString *album, NSString *photo, NSString *text) {
  (void) RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_withNSString_(self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_get_PHOTO(), text);
  self->user_ = user;
  self->album_ = album;
  self->photo_ = photo;
}


#line 964
RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_initWithNSString_withNSString_withNSString_withNSString_(NSString *user, NSString *album, NSString *photo, NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_initWithNSString_withNSString_withNSString_withNSString_(self, user, album, photo, text);
  return self;
}


#line 979
RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo *RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_matchURLWithNSString_withNSString_(NSString *url, NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_initialize();
  
#line 980
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_URL_PATTERN_)) matcherWithJavaLangCharSequence:url];
  if ([((JavaUtilRegexMatcher *) nil_chk(m)) matches]) {
    return new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_initWithNSString_withNSString_withNSString_withNSString_([m groupWithInt:1], [m groupWithInt:2], [m groupWithInt:3], text);
  }
  else {
    
#line 984
    return nil;
  }
}


#line 1001
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_getRssUrlWithNSString_(NSString *user) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_initialize();
  
#line 1002
  return JreStrcat("$$$", @"http://picasaweb.google.com/data/feed/api/user/", user, @"?category=album&alt=rss");
}


#line 1007
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_getAlbumURLWithNSString_withNSString_(NSString *user, NSString *album) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_initialize();
  
#line 1008
  return JreStrcat("$$C$", @"http://picasaweb.google.com/", user, '/', album);
}


#line 1012
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_getPhotoURLWithNSString_withNSString_withNSString_(NSString *user, NSString *album, NSString *photo) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo_initialize();
  
#line 1013
  return JreStrcat("$$C$$$", @"http://picasaweb.google.com/", user, '/', album, @"/photo#",
#line 1014
  photo);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_Photo)

J2OBJC_INITIALIZED_DEFN(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto)


#line 1019
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto


#line 1035
- (instancetype)initWithNSString:(NSString *)user
                    withNSString:(NSString *)photo
                    withNSString:(NSString *)grouping
                    withNSString:(NSString *)groupingId
                    withNSString:(NSString *)text {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initWithNSString_withNSString_withNSString_withNSString_withNSString_(self, user, photo, grouping, groupingId, text);
  return self;
}


#line 1054
- (NSString *)getUser {
  
#line 1054
  return user_;
}


#line 1055
- (NSString *)getPhoto {
  
#line 1055
  return photo_;
}


#line 1056
- (NSString *)getGrouping {
  
#line 1056
  return grouping_;
}


#line 1057
- (NSString *)getGroupingId {
  
#line 1057
  return groupingId_;
}


#line 1059
- (jboolean)isHtml {
  
#line 1059
  return NO;
}


#line 1060
- (jboolean)isMedia {
  
#line 1060
  return YES;
}

+ (RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto *)matchURLWithNSString:(NSString *)url
                                                                             withNSString:(NSString *)text {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_matchURLWithNSString_withNSString_(url, text);
}


#line 1080
- (id<JavaUtilList>)getInfo {
  id<JavaUtilList> info = [super getInfo];
  [((id<JavaUtilList>) nil_chk(info)) addWithId:[self getUrl]];
  [info addWithId:[self getUser] != nil ? [self getUser] : @""];
  [info addWithId:[self getPhoto] != nil ? [self getPhoto] : @""];
  [info addWithId:[self getGrouping] != nil ? [self getGrouping] : @""];
  [info addWithId:[self getGroupingId] != nil ? [self getGroupingId] : @""];
  return info;
}

- (NSString *)getUrl {
  if ([((NSString *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_SETS_)) isEqual:grouping_]) {
    return RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getUserSetsURLWithNSString_withNSString_(user_, groupingId_);
  }
  else
#line 1093
  if ([((NSString *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_TAGS_)) isEqual:grouping_]) {
    if (user_ != nil) {
      return RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getUserTagsURLWithNSString_withNSString_(user_, groupingId_);
    }
    else {
      
#line 1097
      return RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getTagsURLWithNSString_(groupingId_);
    }
  }
  else
#line 1099
  if (photo_ != nil) {
    return RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getPhotoURLWithNSString_withNSString_(user_, photo_);
  }
  else {
    
#line 1102
    return RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getUserURLWithNSString_(user_);
  }
}


#line 1107
+ (NSString *)getRssUrlWithNSString:(NSString *)user {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getRssUrlWithNSString_(user);
}


#line 1112
+ (NSString *)getTagsURLWithNSString:(NSString *)tag {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getTagsURLWithNSString_(tag);
}


#line 1117
+ (NSString *)getUserURLWithNSString:(NSString *)user {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getUserURLWithNSString_(user);
}


#line 1122
+ (NSString *)getPhotoURLWithNSString:(NSString *)user
                         withNSString:(NSString *)photo {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getPhotoURLWithNSString_withNSString_(user, photo);
}

+ (NSString *)getUserTagsURLWithNSString:(NSString *)user
                            withNSString:(NSString *)tagId {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getUserTagsURLWithNSString_withNSString_(user, tagId);
}

+ (NSString *)getUserSetsURLWithNSString:(NSString *)user
                            withNSString:(NSString *)setId {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getUserSetsURLWithNSString_withNSString_(user, setId);
}

+ (void)initialize {
  if (self == [RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto class]) {
    RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_URL_PATTERN_ = JavaUtilRegexPattern_compileWithNSString_(
#line 1022
    @"http://(?:www.)?flickr.com/photos/([^/?#&]+)/?([^/?#&]+)?/?.*");
    RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_GROUPING_PATTERN_ = JavaUtilRegexPattern_compileWithNSString_(@"http://(?:www.)?flickr.com/photos/([^/?#&]+)/(tags|sets)/([^/?#&]+)/?");
    J2OBJC_SET_INITIALIZED(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withNSString:withNSString:withNSString:", "FlickrPhoto", NULL, 0x1, NULL, NULL },
    { "getUser", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPhoto", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getGrouping", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getGroupingId", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isHtml", NULL, "Z", 0x1, NULL, NULL },
    { "isMedia", NULL, "Z", 0x1, NULL, NULL },
    { "matchURLWithNSString:withNSString:", "matchURL", "Lrepackaged.com.google.android.util.AbstractMessageParser$FlickrPhoto;", 0x9, NULL, NULL },
    { "getInfo", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "getUrl", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getRssUrlWithNSString:", "getRssUrl", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getTagsURLWithNSString:", "getTagsURL", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getUserURLWithNSString:", "getUserURL", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getPhotoURLWithNSString:withNSString:", "getPhotoURL", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getUserTagsURLWithNSString:withNSString:", "getUserTagsURL", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getUserSetsURLWithNSString:withNSString:", "getUserSetsURL", "Ljava.lang.String;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "URL_PATTERN_", NULL, 0x1a, "Ljava.util.regex.Pattern;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_URL_PATTERN_, NULL,  },
    { "GROUPING_PATTERN_", NULL, 0x1a, "Ljava.util.regex.Pattern;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_GROUPING_PATTERN_, NULL,  },
    { "SETS_", NULL, 0x1a, "Ljava.lang.String;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_SETS_, NULL,  },
    { "TAGS_", NULL, 0x1a, "Ljava.lang.String;", &RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_TAGS_, NULL,  },
    { "user_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "photo_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "grouping_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "groupingId_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto = { 2, "FlickrPhoto", "repackaged.com.google.android.util", "AbstractMessageParser", 0x9, 16, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto;
}

@end


#line 1035
void RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initWithNSString_withNSString_withNSString_withNSString_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto *self, NSString *user, NSString *photo, NSString *grouping, NSString *groupingId, NSString *text) {
  (void) RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_withNSString_(self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_get_FLICKR(),
#line 1037
  text);
  
#line 1040
  if (![((NSString *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_TAGS_)) isEqual:user]) {
    self->user_ = user;
    
#line 1043
    self->photo_ = (![@"show" isEqual:photo] ? photo : nil);
    self->grouping_ = grouping;
    self->groupingId_ = groupingId;
  }
  else {
    
#line 1047
    self->user_ = nil;
    self->photo_ = nil;
    self->grouping_ = RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_TAGS_;
    self->groupingId_ = photo;
  }
}


#line 1035
RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initWithNSString_withNSString_withNSString_withNSString_withNSString_(NSString *user, NSString *photo, NSString *grouping, NSString *groupingId, NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initWithNSString_withNSString_withNSString_withNSString_withNSString_(self, user, photo, grouping, groupingId, text);
  return self;
}


#line 1066
RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto *RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_matchURLWithNSString_withNSString_(NSString *url, NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initialize();
  
#line 1067
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_GROUPING_PATTERN_)) matcherWithJavaLangCharSequence:url];
  if ([((JavaUtilRegexMatcher *) nil_chk(m)) matches]) {
    return new_RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initWithNSString_withNSString_withNSString_withNSString_withNSString_([m groupWithInt:1], nil, [m groupWithInt:2], [m groupWithInt:3], text);
  }
  
#line 1072
  m = [((JavaUtilRegexPattern *) nil_chk(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_URL_PATTERN_)) matcherWithJavaLangCharSequence:url];
  if ([((JavaUtilRegexMatcher *) nil_chk(m)) matches]) {
    return new_RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initWithNSString_withNSString_withNSString_withNSString_withNSString_([m groupWithInt:1], [m groupWithInt:2], nil, nil, text);
  }
  else {
    
#line 1076
    return nil;
  }
}


#line 1107
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getRssUrlWithNSString_(NSString *user) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initialize();
  
#line 1108
  return nil;
}


#line 1112
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getTagsURLWithNSString_(NSString *tag) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initialize();
  
#line 1113
  return JreStrcat("$$", @"http://flickr.com/photos/tags/", tag);
}


#line 1117
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getUserURLWithNSString_(NSString *user) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initialize();
  
#line 1118
  return JreStrcat("$$", @"http://flickr.com/photos/", user);
}


#line 1122
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getPhotoURLWithNSString_withNSString_(NSString *user, NSString *photo) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initialize();
  
#line 1123
  return JreStrcat("$$C$", @"http://flickr.com/photos/", user, '/', photo);
}


#line 1127
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getUserTagsURLWithNSString_withNSString_(NSString *user, NSString *tagId) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initialize();
  
#line 1128
  return JreStrcat("$$$$", @"http://flickr.com/photos/", user, @"/tags/", tagId);
}


#line 1132
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_getUserSetsURLWithNSString_withNSString_(NSString *user, NSString *setId) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto_initialize();
  
#line 1133
  return JreStrcat("$$$$", @"http://flickr.com/photos/", user, @"/sets/", setId);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_FlickrPhoto)


#line 1138
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley


#line 1141
- (instancetype)initWithNSString:(NSString *)text {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley_initWithNSString_(self, text);
  return self;
}


#line 1145
- (jboolean)isHtml {
  
#line 1145
  return NO;
}


#line 1147
- (id<JavaUtilList>)getInfo {
  id<JavaUtilList> info = [super getInfo];
  [((id<JavaUtilList>) nil_chk(info)) addWithId:[self getRawText]];
  return info;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "Smiley", NULL, 0x1, NULL, NULL },
    { "isHtml", NULL, "Z", 0x1, NULL, NULL },
    { "getInfo", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley = { 2, "Smiley", "repackaged.com.google.android.util", "AbstractMessageParser", 0x9, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley;
}

@end


#line 1141
void RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley_initWithNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley *self, NSString *text) {
  (void) RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_withNSString_(self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_get_SMILEY(), text);
}


#line 1141
RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley_initWithNSString_(NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley_initWithNSString_(self, text);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_Smiley)


#line 1155
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym


#line 1159
- (instancetype)initWithNSString:(NSString *)text
                    withNSString:(NSString *)value {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym_initWithNSString_withNSString_(self, text, value);
  return self;
}


#line 1164
- (NSString *)getValue {
  
#line 1164
  return value_;
}


#line 1166
- (jboolean)isHtml {
  
#line 1166
  return NO;
}


#line 1168
- (id<JavaUtilList>)getInfo {
  id<JavaUtilList> info = [super getInfo];
  [((id<JavaUtilList>) nil_chk(info)) addWithId:[self getRawText]];
  [info addWithId:[self getValue]];
  return info;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "Acronym", NULL, 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isHtml", NULL, "Z", 0x1, NULL, NULL },
    { "getInfo", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym = { 2, "Acronym", "repackaged.com.google.android.util", "AbstractMessageParser", 0x9, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym;
}

@end


#line 1159
void RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym_initWithNSString_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym *self, NSString *text, NSString *value) {
  (void) RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_withNSString_(self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_get_ACRONYM(), text);
  self->value_ = value;
}


#line 1159
RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym_initWithNSString_withNSString_(NSString *text, NSString *value) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym_initWithNSString_withNSString_(self, text, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_Acronym)


#line 1177
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_Format


#line 1182
- (instancetype)initWithChar:(jchar)ch
                 withBoolean:(jboolean)start {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_initWithChar_withBoolean_(self, ch, start);
  return self;
}

- (void)setMatchedWithBoolean:(jboolean)matched {
  
#line 1188
  self->matched_ = matched;
}


#line 1190
- (jboolean)isHtml {
  
#line 1190
  return YES;
}


#line 1192
- (NSString *)toHtmlWithBoolean:(jboolean)caps {
  
#line 1195
  if (matched_) {
    return start_ ? RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_getFormatStartWithChar_(self, ch_) : RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_getFormatEndWithChar_(self, ch_);
  }
  else {
    return (ch_ == '"') ? @"&quot;" : NSString_valueOfChar_(ch_);
  }
}


#line 1206
- (id<JavaUtilList>)getInfo {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)controlCaps {
  
#line 1210
  return ch_ == '^';
}


#line 1211
- (jboolean)setCaps {
  
#line 1211
  return start_;
}


#line 1213
- (NSString *)getFormatStartWithChar:(jchar)ch {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_getFormatStartWithChar_(self, ch);
}


#line 1223
- (NSString *)getFormatEndWithChar:(jchar)ch {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_getFormatEndWithChar_(self, ch);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithChar:withBoolean:", "Format", NULL, 0x1, NULL, NULL },
    { "setMatchedWithBoolean:", "setMatched", "V", 0x1, NULL, NULL },
    { "isHtml", NULL, "Z", 0x1, NULL, NULL },
    { "toHtmlWithBoolean:", "toHtml", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getInfo", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "controlCaps", NULL, "Z", 0x1, NULL, NULL },
    { "setCaps", NULL, "Z", 0x1, NULL, NULL },
    { "getFormatStartWithChar:", "getFormatStart", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "getFormatEndWithChar:", "getFormatEnd", "Ljava.lang.String;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ch_", NULL, 0x2, "C", NULL, NULL,  },
    { "start_", NULL, 0x2, "Z", NULL, NULL,  },
    { "matched_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_Format = { 2, "Format", "repackaged.com.google.android.util", "AbstractMessageParser", 0x9, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_Format;
}

@end


#line 1182
void RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_initWithChar_withBoolean_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Format *self, jchar ch, jboolean start) {
  (void) RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_initWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_withNSString_(self, RepackagedComGoogleAndroidUtilAbstractMessageParser_Token_TypeEnum_get_FORMAT(), NSString_valueOfChar_(ch));
  self->ch_ = ch;
  self->start_ = start;
}


#line 1182
RepackagedComGoogleAndroidUtilAbstractMessageParser_Format *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_initWithChar_withBoolean_(jchar ch, jboolean start) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Format *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_Format alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_initWithChar_withBoolean_(self, ch, start);
  return self;
}


#line 1213
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_getFormatStartWithChar_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Format *self, jchar ch) {
  switch (ch) {
    case '*':
    
#line 1215
    return @"<b>";
    case '_':
    
#line 1216
    return @"<i>";
    case '^':
    
#line 1217
    return @"<b><font color=\"#005FFF\">";
    case '"':
    
#line 1218
    return @"<font color=\"#999999\">\u201c";
    default:
    
#line 1219
    @throw new_JavaLangAssertionError_initWithId_(JreStrcat("$CC", @"unknown format '", ch, '\''));
  }
}


#line 1223
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Format_getFormatEndWithChar_(RepackagedComGoogleAndroidUtilAbstractMessageParser_Format *self, jchar ch) {
  switch (ch) {
    case '*':
    
#line 1225
    return @"</b>";
    case '_':
    
#line 1226
    return @"</i>";
    case '^':
    
#line 1227
    return @"</font></b>";
    case '"':
    
#line 1228
    return @"\u201d</font>";
    default:
    
#line 1229
    @throw new_JavaLangAssertionError_initWithId_(JreStrcat("$CC", @"unknown format '", ch, '\''));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_Format)


#line 1338
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode


#line 1344
- (instancetype)init {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_init(self);
  return self;
}


#line 1345
- (instancetype)initWithNSString:(NSString *)text {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_initWithNSString_(self, text);
  return self;
}


#line 1349
- (jboolean)exists {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_exists(self);
}


#line 1350
- (NSString *)getText {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_getText(self);
}


#line 1351
- (NSString *)getValue {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_getValue(self);
}


#line 1352
- (void)setValueWithNSString:(NSString *)value {
  
#line 1352
  self->value_ = value;
}


#line 1354
- (RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)getChildWithChar:(jchar)ch {
  return [((JavaUtilHashMap *) nil_chk(children_)) getWithId:JavaLangCharacter_valueOfWithChar_(ch)];
}

- (RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)getOrCreateChildWithChar:(jchar)ch {
  JavaLangCharacter *key = JavaLangCharacter_valueOfWithChar_(ch);
  RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *node = [((JavaUtilHashMap *) nil_chk(children_)) getWithId:key];
  if (node == nil) {
    node = new_RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_initWithNSString_(JreStrcat("$$", text_, NSString_valueOfChar_(ch)));
    (void) [children_ putWithId:key withId:node];
  }
  return node;
}


#line 1369
+ (void)addToTrieWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode:(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *)root
                                                                     withNSString:(NSString *)str
                                                                     withNSString:(NSString *)value {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_addToTrieWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withNSString_withNSString_(root, str, value);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "TrieNode", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "TrieNode", NULL, 0x1, NULL, NULL },
    { "exists", NULL, "Z", 0x11, NULL, NULL },
    { "getText", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "setValueWithNSString:", "setValue", "V", 0x1, NULL, NULL },
    { "getChildWithChar:", "getChild", "Lrepackaged.com.google.android.util.AbstractMessageParser$TrieNode;", 0x1, NULL, NULL },
    { "getOrCreateChildWithChar:", "getOrCreateChild", "Lrepackaged.com.google.android.util.AbstractMessageParser$TrieNode;", 0x1, NULL, NULL },
    { "addToTrieWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode:withNSString:withNSString:", "addToTrie", "V", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "children_", NULL, 0x12, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/Character;Lrepackaged/com/google/android/util/AbstractMessageParser$TrieNode;>;",  },
    { "text_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "value_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode = { 2, "TrieNode", "repackaged.com.google.android.util", "AbstractMessageParser", 0x9, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode;
}

@end


#line 1344
void RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_init(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *self) {
  (void) RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_initWithNSString_(self,
#line 1344
  @"");
}


#line 1344
RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_init() {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_init(self);
  return self;
}


#line 1345
void RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_initWithNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *self, NSString *text) {
  (void) NSObject_init(self);
  self->children_ = new_JavaUtilHashMap_init();
  
#line 1346
  self->text_ = text;
}


#line 1345
RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_initWithNSString_(NSString *text) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_initWithNSString_(self, text);
  return self;
}


#line 1349
jboolean RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_exists(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *self) {
  
#line 1349
  return self->value_ != nil;
}


#line 1350
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_getText(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *self) {
  
#line 1350
  return self->text_;
}


#line 1351
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_getValue(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *self) {
  
#line 1351
  return self->value_;
}


#line 1369
void RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_addToTrieWithRepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_withNSString_withNSString_(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *root, NSString *str, NSString *value) {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode_initialize();
  
#line 1370
  jint index = 0;
  while (index < ((jint) [((NSString *) nil_chk(str)) length])) {
    root = [((RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *) nil_chk(root)) getOrCreateChildWithChar:[str charAtWithInt:index++]];
  }
  [((RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode *) nil_chk(root)) setValueWithNSString:value];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_TrieNode)


#line 1429
@implementation RepackagedComGoogleAndroidUtilAbstractMessageParser_Part


#line 1433
- (instancetype)init {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Part_init(self);
  return self;
}


#line 1437
- (NSString *)getTypeWithBoolean:(jboolean)isSend {
  return JreStrcat("$$", (isSend ? @"s" : @"r"), RepackagedComGoogleAndroidUtilAbstractMessageParser_Part_getPartType(self));
}

- (NSString *)getPartType {
  return RepackagedComGoogleAndroidUtilAbstractMessageParser_Part_getPartType(self);
}


#line 1451
- (jboolean)isMedia {
  return ([((JavaUtilArrayList *) nil_chk(tokens_)) size] == 1) && [((RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *) nil_chk([tokens_ getWithInt:0])) isMedia];
}


#line 1462
- (RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *)getMediaToken {
  if ([self isMedia]) {
    return [((JavaUtilArrayList *) nil_chk(tokens_)) getWithInt:0];
  }
  return nil;
}


#line 1470
- (void)addWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token:(RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *)token {
  if ([self isMedia]) {
    @throw new_JavaLangAssertionError_initWithId_(@"media ");
  }
  [((JavaUtilArrayList *) nil_chk(tokens_)) addWithId:token];
}

- (void)setMeTextWithNSString:(NSString *)meText {
  self->meText_ = meText;
}


#line 1482
- (NSString *)getRawText {
  JavaLangStringBuilder *buf = new_JavaLangStringBuilder_init();
  if (meText_ != nil) {
    (void) [buf appendWithNSString:meText_];
  }
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(tokens_)) size]; ++i) {
    (void) [buf appendWithNSString:[((RepackagedComGoogleAndroidUtilAbstractMessageParser_Token *) nil_chk([tokens_ getWithInt:i])) getRawText]];
  }
  return [buf description];
}


#line 1494
- (JavaUtilArrayList *)getTokens {
  
#line 1494
  return tokens_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Part", NULL, 0x1, NULL, NULL },
    { "getTypeWithBoolean:", "getType", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPartType", NULL, "Ljava.lang.String;", 0x2, NULL, NULL },
    { "isMedia", NULL, "Z", 0x1, NULL, NULL },
    { "getMediaToken", NULL, "Lrepackaged.com.google.android.util.AbstractMessageParser$Token;", 0x1, NULL, NULL },
    { "addWithRepackagedComGoogleAndroidUtilAbstractMessageParser_Token:", "add", "V", 0x1, NULL, NULL },
    { "setMeTextWithNSString:", "setMeText", "V", 0x1, NULL, NULL },
    { "getRawText", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getTokens", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "meText_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "tokens_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrepackaged/com/google/android/util/AbstractMessageParser$Token;>;",  },
  };
  static const J2ObjcClassInfo _RepackagedComGoogleAndroidUtilAbstractMessageParser_Part = { 2, "Part", "repackaged.com.google.android.util", "AbstractMessageParser", 0x9, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComGoogleAndroidUtilAbstractMessageParser_Part;
}

@end


#line 1433
void RepackagedComGoogleAndroidUtilAbstractMessageParser_Part_init(RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *self) {
  (void) NSObject_init(self);
  
#line 1434
  self->tokens_ = new_JavaUtilArrayList_init();
}


#line 1433
RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *new_RepackagedComGoogleAndroidUtilAbstractMessageParser_Part_init() {
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *self = [RepackagedComGoogleAndroidUtilAbstractMessageParser_Part alloc];
  RepackagedComGoogleAndroidUtilAbstractMessageParser_Part_init(self);
  return self;
}


#line 1441
NSString *RepackagedComGoogleAndroidUtilAbstractMessageParser_Part_getPartType(RepackagedComGoogleAndroidUtilAbstractMessageParser_Part *self) {
  if ([self isMedia]) {
    return @"d";
  }
  else
#line 1444
  if (self->meText_ != nil) {
    return @"m";
  }
  else {
    
#line 1447
    return @"";
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComGoogleAndroidUtilAbstractMessageParser_Part)
