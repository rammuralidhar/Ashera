//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/Base64OutputStream.java
//


#include "Base64.h"
#include "Base64DataException.h"
#include "Base64OutputStream.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/FilterOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/Base64OutputStream.java"

@interface RepackagedAndroidUtilBase64OutputStream () {
 @public
  RepackagedAndroidUtilBase64_Coder *coder_;
  jint flags_;
  IOSByteArray *buffer_;
  jint bpos_;
}

/**
 @brief Flush any buffered data from calls to write(int).
 Needed before doing a write(byte[], int, int) or a close().
 */
- (void)flushBuffer;

/**
 @brief Write the given bytes to the encoder/decoder.
 @param finish true if this is the last batch of input, to cause encoder/decoder state to be finalized.
 */
- (void)internalWriteWithByteArray:(IOSByteArray *)b
                           withInt:(jint)off
                           withInt:(jint)len
                       withBoolean:(jboolean)finish;

/**
 @brief If b.length is at least len, return b.
 Otherwise return a new byte array of length len.
 */
- (IOSByteArray *)embiggenWithByteArray:(IOSByteArray *)b
                                withInt:(jint)len;

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidUtilBase64OutputStream, coder_, RepackagedAndroidUtilBase64_Coder *)
J2OBJC_FIELD_SETTER(RepackagedAndroidUtilBase64OutputStream, buffer_, IOSByteArray *)

static IOSByteArray *RepackagedAndroidUtilBase64OutputStream_EMPTY_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidUtilBase64OutputStream, EMPTY_, IOSByteArray *)
J2OBJC_STATIC_FIELD_SETTER(RepackagedAndroidUtilBase64OutputStream, EMPTY_, IOSByteArray *)

__attribute__((unused)) static void RepackagedAndroidUtilBase64OutputStream_flushBuffer(RepackagedAndroidUtilBase64OutputStream *self);

__attribute__((unused)) static void RepackagedAndroidUtilBase64OutputStream_internalWriteWithByteArray_withInt_withInt_withBoolean_(RepackagedAndroidUtilBase64OutputStream *self, IOSByteArray *b, jint off, jint len, jboolean finish);

__attribute__((unused)) static IOSByteArray *RepackagedAndroidUtilBase64OutputStream_embiggenWithByteArray_withInt_(RepackagedAndroidUtilBase64OutputStream *self, IOSByteArray *b, jint len);

J2OBJC_INITIALIZED_DEFN(RepackagedAndroidUtilBase64OutputStream)


#line 27
@implementation RepackagedAndroidUtilBase64OutputStream


#line 44
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                   withInt:(jint)flags {
  RepackagedAndroidUtilBase64OutputStream_initWithJavaIoOutputStream_withInt_(self, outArg, flags);
  return self;
}


#line 60
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                   withInt:(jint)flags
                               withBoolean:(jboolean)encode {
  RepackagedAndroidUtilBase64OutputStream_initWithJavaIoOutputStream_withInt_withBoolean_(self, outArg, flags, encode);
  return self;
}


#line 70
- (void)writeWithInt:(jint)b {
  
#line 76
  if (buffer_ == nil) {
    buffer_ = [IOSByteArray newArrayWithLength:1024];
  }
  if (bpos_ >= ((IOSByteArray *) nil_chk(buffer_))->size_) {
    
#line 81
    RepackagedAndroidUtilBase64OutputStream_internalWriteWithByteArray_withInt_withInt_withBoolean_(self, buffer_, 0, bpos_, NO);
    bpos_ = 0;
  }
  *IOSByteArray_GetRef(buffer_, bpos_++) = (jbyte) b;
}


#line 91
- (void)flushBuffer {
  RepackagedAndroidUtilBase64OutputStream_flushBuffer(self);
}


#line 98
- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)off
                   withInt:(jint)len {
  if (len <= 0) return;
  RepackagedAndroidUtilBase64OutputStream_flushBuffer(self);
  RepackagedAndroidUtilBase64OutputStream_internalWriteWithByteArray_withInt_withInt_withBoolean_(self, b, off, len, NO);
}


#line 104
- (void)close {
  JavaIoIOException *thrown = nil;
  @try {
    RepackagedAndroidUtilBase64OutputStream_flushBuffer(self);
    RepackagedAndroidUtilBase64OutputStream_internalWriteWithByteArray_withInt_withInt_withBoolean_(self, RepackagedAndroidUtilBase64OutputStream_EMPTY_, 0, 0, YES);
  }
  @catch (
#line 109
  JavaIoIOException *e) {
    thrown = e;
  }
  
#line 113
  @try {
    if ((flags_ & RepackagedAndroidUtilBase64_NO_CLOSE) == 0) {
      [((JavaIoOutputStream *) nil_chk(out_)) close];
    }
    else {
      
#line 117
      [((JavaIoOutputStream *) nil_chk(out_)) flush];
    }
  }
  @catch (
#line 119
  JavaIoIOException *e) {
    if (thrown != nil) {
      thrown = e;
    }
  }
  
#line 125
  if (thrown != nil) {
    @throw thrown;
  }
}


#line 136
- (void)internalWriteWithByteArray:(IOSByteArray *)b
                           withInt:(jint)off
                           withInt:(jint)len
                       withBoolean:(jboolean)finish {
  RepackagedAndroidUtilBase64OutputStream_internalWriteWithByteArray_withInt_withInt_withBoolean_(self, b, off, len, finish);
}


#line 148
- (IOSByteArray *)embiggenWithByteArray:(IOSByteArray *)b
                                withInt:(jint)len {
  return RepackagedAndroidUtilBase64OutputStream_embiggenWithByteArray_withInt_(self, b, len);
}

+ (void)initialize {
  if (self == [RepackagedAndroidUtilBase64OutputStream class]) {
    RepackagedAndroidUtilBase64OutputStream_EMPTY_ = [IOSByteArray newArrayWithLength:
#line 34
    0];
    J2OBJC_SET_INITIALIZED(RepackagedAndroidUtilBase64OutputStream)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoOutputStream:withInt:", "Base64OutputStream", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoOutputStream:withInt:withBoolean:", "Base64OutputStream", NULL, 0x1, NULL, NULL },
    { "writeWithInt:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "flushBuffer", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
    { "writeWithByteArray:withInt:withInt:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "internalWriteWithByteArray:withInt:withInt:withBoolean:", "internalWrite", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "embiggenWithByteArray:withInt:", "embiggen", "[B", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "coder_", NULL, 0x12, "Lrepackaged.android.util.Base64$Coder;", NULL, NULL,  },
    { "flags_", NULL, 0x12, "I", NULL, NULL,  },
    { "buffer_", NULL, 0x2, "[B", NULL, NULL,  },
    { "bpos_", NULL, 0x2, "I", NULL, NULL,  },
    { "EMPTY_", NULL, 0xa, "[B", &RepackagedAndroidUtilBase64OutputStream_EMPTY_, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilBase64OutputStream = { 2, "Base64OutputStream", "repackaged.android.util", NULL, 0x1, 8, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidUtilBase64OutputStream;
}

@end


#line 44
void RepackagedAndroidUtilBase64OutputStream_initWithJavaIoOutputStream_withInt_(RepackagedAndroidUtilBase64OutputStream *self, JavaIoOutputStream *outArg, jint flags) {
  (void) RepackagedAndroidUtilBase64OutputStream_initWithJavaIoOutputStream_withInt_withBoolean_(self, outArg, flags, YES);
}


#line 44
RepackagedAndroidUtilBase64OutputStream *new_RepackagedAndroidUtilBase64OutputStream_initWithJavaIoOutputStream_withInt_(JavaIoOutputStream *outArg, jint flags) {
  RepackagedAndroidUtilBase64OutputStream *self = [RepackagedAndroidUtilBase64OutputStream alloc];
  RepackagedAndroidUtilBase64OutputStream_initWithJavaIoOutputStream_withInt_(self, outArg, flags);
  return self;
}


#line 60
void RepackagedAndroidUtilBase64OutputStream_initWithJavaIoOutputStream_withInt_withBoolean_(RepackagedAndroidUtilBase64OutputStream *self, JavaIoOutputStream *outArg, jint flags, jboolean encode) {
  (void) JavaIoFilterOutputStream_initWithJavaIoOutputStream_(self, outArg);
  self->buffer_ =
#line 31
  nil;
  self->bpos_ = 0;
  
#line 62
  self->flags_ = flags;
  if (encode) {
    self->coder_ = new_RepackagedAndroidUtilBase64_Encoder_initWithInt_withByteArray_(flags, nil);
  }
  else {
    
#line 66
    self->coder_ = new_RepackagedAndroidUtilBase64_Decoder_initWithInt_withByteArray_(flags, nil);
  }
}


#line 60
RepackagedAndroidUtilBase64OutputStream *new_RepackagedAndroidUtilBase64OutputStream_initWithJavaIoOutputStream_withInt_withBoolean_(JavaIoOutputStream *outArg, jint flags, jboolean encode) {
  RepackagedAndroidUtilBase64OutputStream *self = [RepackagedAndroidUtilBase64OutputStream alloc];
  RepackagedAndroidUtilBase64OutputStream_initWithJavaIoOutputStream_withInt_withBoolean_(self, outArg, flags, encode);
  return self;
}


#line 91
void RepackagedAndroidUtilBase64OutputStream_flushBuffer(RepackagedAndroidUtilBase64OutputStream *self) {
  if (self->bpos_ > 0) {
    RepackagedAndroidUtilBase64OutputStream_internalWriteWithByteArray_withInt_withInt_withBoolean_(self, self->buffer_, 0, self->bpos_, NO);
    self->bpos_ = 0;
  }
}


#line 136
void RepackagedAndroidUtilBase64OutputStream_internalWriteWithByteArray_withInt_withInt_withBoolean_(RepackagedAndroidUtilBase64OutputStream *self, IOSByteArray *b, jint off, jint len, jboolean finish) {
  ((RepackagedAndroidUtilBase64_Coder *) nil_chk(self->coder_))->output_ = RepackagedAndroidUtilBase64OutputStream_embiggenWithByteArray_withInt_(self, self->coder_->output_, [self->coder_ maxOutputSizeWithInt:len]);
  if (![self->coder_ processWithByteArray:b withInt:off withInt:len withBoolean:finish]) {
    @throw new_RepackagedAndroidUtilBase64DataException_initWithNSString_(@"bad base-64");
  }
  [((JavaIoOutputStream *) nil_chk(self->out_)) writeWithByteArray:self->coder_->output_ withInt:0 withInt:self->coder_->op_];
}


#line 148
IOSByteArray *RepackagedAndroidUtilBase64OutputStream_embiggenWithByteArray_withInt_(RepackagedAndroidUtilBase64OutputStream *self, IOSByteArray *b, jint len) {
  if (b == nil || b->size_ < len) {
    return [IOSByteArray newArrayWithLength:len];
  }
  else {
    
#line 152
    return b;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilBase64OutputStream)
