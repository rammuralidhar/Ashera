//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/graphics/RectF.java
//


#include "FastMath.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "Rect.h"
#include "RectF.h"
#include "java/io/PrintWriter.h"
#include "java/lang/Float.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/graphics/RectF.java"


#line 30
@implementation RepackagedAndroidGraphicsRectF


#line 39
- (instancetype)init {
  RepackagedAndroidGraphicsRectF_init(self);
  return self;
}


#line 51
- (instancetype)initWithFloat:(jfloat)left
                    withFloat:(jfloat)top
                    withFloat:(jfloat)right
                    withFloat:(jfloat)bottom {
  RepackagedAndroidGraphicsRectF_initWithFloat_withFloat_withFloat_withFloat_(self, left, top, right, bottom);
  return self;
}


#line 65
- (instancetype)initWithRepackagedAndroidGraphicsRectF:(RepackagedAndroidGraphicsRectF *)r {
  RepackagedAndroidGraphicsRectF_initWithRepackagedAndroidGraphicsRectF_(self, r);
  return self;
}


#line 76
- (instancetype)initWithRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)r {
  RepackagedAndroidGraphicsRectF_initWithRepackagedAndroidGraphicsRect_(self, r);
  return self;
}


#line 88
- (jboolean)isEqual:(id)o {
  if (self == o) return YES;
  if (o == nil || [self getClass] != [o getClass]) return NO;
  
#line 92
  RepackagedAndroidGraphicsRectF *r = (RepackagedAndroidGraphicsRectF *) check_class_cast(o, [RepackagedAndroidGraphicsRectF class]);
  return left_ == ((RepackagedAndroidGraphicsRectF *) nil_chk(r))->left_ && top_ == r->top_ && right_ == r->right_ && bottom_ == r->bottom_;
}

- (NSUInteger)hash {
  jint result = (left_ != +0.0f ? JavaLangFloat_floatToIntBitsWithFloat_(left_) : 0);
  result = 31 * result + (top_ != +0.0f ? JavaLangFloat_floatToIntBitsWithFloat_(top_) : 0);
  result = 31 * result + (right_ != +0.0f ? JavaLangFloat_floatToIntBitsWithFloat_(right_) : 0);
  result = 31 * result + (bottom_ != +0.0f ? JavaLangFloat_floatToIntBitsWithFloat_(bottom_) : 0);
  return result;
}

- (NSString *)description {
  return JreStrcat("$F$F$F$FC", @"RectF(", left_, @", ", top_, @", ",
#line 107
  right_, @", ", bottom_, ')');
}


#line 113
- (NSString *)toShortString {
  return [self toShortStringWithJavaLangStringBuilder:new_JavaLangStringBuilder_initWithInt_(32)];
}


#line 121
- (NSString *)toShortStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  [((JavaLangStringBuilder *) nil_chk(sb)) setLengthWithInt:0];
  (void) [sb appendWithChar:'['];
  
#line 123
  (void) [sb appendWithFloat:left_];
  
#line 123
  (void) [sb appendWithChar:','];
  (void) [sb appendWithFloat:top_];
  
#line 124
  (void) [sb appendWithNSString:@"]["];
  
#line 124
  (void) [sb appendWithFloat:right_];
  (void) [sb appendWithChar:','];
  
#line 125
  (void) [sb appendWithFloat:bottom_];
  
#line 125
  (void) [sb appendWithChar:']'];
  return [sb description];
}


#line 133
- (void)printShortStringWithJavaIoPrintWriter:(JavaIoPrintWriter *)pw {
  [((JavaIoPrintWriter *) nil_chk(pw)) printWithChar:'['];
  
#line 134
  [pw printWithFloat:left_];
  
#line 134
  [pw printWithChar:','];
  [pw printWithFloat:top_];
  
#line 135
  [pw printWithNSString:@"]["];
  
#line 135
  [pw printWithFloat:right_];
  [pw printWithChar:','];
  
#line 136
  [pw printWithFloat:bottom_];
  
#line 136
  [pw printWithChar:']'];
}


#line 142
- (jboolean)isEmpty {
  return left_ >= right_ || top_ >= bottom_;
}


#line 150
- (jfloat)width {
  return right_ - left_;
}


#line 158
- (jfloat)height {
  return bottom_ - top_;
}


#line 166
- (jfloat)centerX {
  return (left_ + right_) * 0.5f;
}


#line 174
- (jfloat)centerY {
  return (top_ + bottom_) * 0.5f;
}


#line 181
- (void)setEmpty {
  left_ = right_ = top_ = bottom_ = 0;
}


#line 195
- (void)setWithFloat:(jfloat)left
           withFloat:(jfloat)top
           withFloat:(jfloat)right
           withFloat:(jfloat)bottom {
  self->left_ = left;
  self->top_ = top;
  self->right_ = right;
  self->bottom_ = bottom;
}


#line 208
- (void)setWithRepackagedAndroidGraphicsRectF:(RepackagedAndroidGraphicsRectF *)src {
  self->left_ = ((RepackagedAndroidGraphicsRectF *) nil_chk(src))->left_;
  self->top_ = src->top_;
  self->right_ = src->right_;
  self->bottom_ = src->bottom_;
}


#line 221
- (void)setWithRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)src {
  self->left_ = ((RepackagedAndroidGraphicsRect *) nil_chk(src))->left_;
  self->top_ = src->top_;
  self->right_ = src->right_;
  self->bottom_ = src->bottom_;
}


#line 235
- (void)offsetWithFloat:(jfloat)dx
              withFloat:(jfloat)dy {
  left_ += dx;
  top_ += dy;
  right_ += dx;
  bottom_ += dy;
}


#line 249
- (void)offsetToWithFloat:(jfloat)newLeft
                withFloat:(jfloat)newTop {
  right_ += newLeft - left_;
  bottom_ += newTop - top_;
  left_ = newLeft;
  top_ = newTop;
}


#line 265
- (void)insetWithFloat:(jfloat)dx
             withFloat:(jfloat)dy {
  left_ += dx;
  top_ += dy;
  right_ -= dx;
  bottom_ -= dy;
}


#line 283
- (jboolean)containsWithFloat:(jfloat)x
                    withFloat:(jfloat)y {
  return left_ < right_ && top_ < bottom_ &&
#line 285
  x >= left_ && x < right_ && y >= top_ && y < bottom_;
}


#line 300
- (jboolean)containsWithFloat:(jfloat)left
                    withFloat:(jfloat)top
                    withFloat:(jfloat)right
                    withFloat:(jfloat)bottom {
  
#line 302
  return self->left_ < self->right_ && self->top_ < self->bottom_ &&
#line 304
  self->left_ <= left && self->top_ <= top &&
#line 305
  self->right_ >= right && self->bottom_ >= bottom;
}


#line 316
- (jboolean)containsWithRepackagedAndroidGraphicsRectF:(RepackagedAndroidGraphicsRectF *)r {
  
#line 318
  return self->left_ < self->right_ && self->top_ < self->bottom_ &&
#line 320
  left_ <= ((RepackagedAndroidGraphicsRectF *) nil_chk(r))->left_ && top_ <= r->top_ &&
#line 321
  right_ >= r->right_ && bottom_ >= r->bottom_;
}


#line 342
- (jboolean)intersectWithFloat:(jfloat)left
                     withFloat:(jfloat)top
                     withFloat:(jfloat)right
                     withFloat:(jfloat)bottom {
  if (self->left_ < right && left < self->right_ &&
#line 344
  self->top_ < bottom && top < self->bottom_) {
    if (self->left_ < left) {
      self->left_ = left;
    }
    if (self->top_ < top) {
      self->top_ = top;
    }
    if (self->right_ > right) {
      self->right_ = right;
    }
    if (self->bottom_ > bottom) {
      self->bottom_ = bottom;
    }
    return YES;
  }
  return NO;
}


#line 373
- (jboolean)intersectWithRepackagedAndroidGraphicsRectF:(RepackagedAndroidGraphicsRectF *)r {
  return [self intersectWithFloat:((RepackagedAndroidGraphicsRectF *) nil_chk(r))->left_ withFloat:r->top_ withFloat:r->right_ withFloat:r->bottom_];
}


#line 389
- (jboolean)setIntersectWithRepackagedAndroidGraphicsRectF:(RepackagedAndroidGraphicsRectF *)a
                        withRepackagedAndroidGraphicsRectF:(RepackagedAndroidGraphicsRectF *)b {
  if (((RepackagedAndroidGraphicsRectF *) nil_chk(a))->left_ < ((RepackagedAndroidGraphicsRectF *) nil_chk(b))->right_ && b->left_ < a->right_ &&
#line 391
  a->top_ < b->bottom_ && b->top_ < a->bottom_) {
    left_ = JavaLangMath_maxWithFloat_withFloat_(a->left_, b->left_);
    top_ = JavaLangMath_maxWithFloat_withFloat_(a->top_, b->top_);
    right_ = JavaLangMath_minWithFloat_withFloat_(a->right_, b->right_);
    bottom_ = JavaLangMath_minWithFloat_withFloat_(a->bottom_, b->bottom_);
    return YES;
  }
  return NO;
}


#line 415
- (jboolean)intersectsWithFloat:(jfloat)left
                      withFloat:(jfloat)top
                      withFloat:(jfloat)right
                      withFloat:(jfloat)bottom {
  
#line 417
  return self->left_ < right && left < self->right_ &&
#line 418
  self->top_ < bottom && top < self->bottom_;
}


#line 431
+ (jboolean)intersectsWithRepackagedAndroidGraphicsRectF:(RepackagedAndroidGraphicsRectF *)a
                      withRepackagedAndroidGraphicsRectF:(RepackagedAndroidGraphicsRectF *)b {
  return RepackagedAndroidGraphicsRectF_intersectsWithRepackagedAndroidGraphicsRectF_withRepackagedAndroidGraphicsRectF_(a, b);
}


#line 440
- (void)roundWithRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)dst {
  [((RepackagedAndroidGraphicsRect *) nil_chk(dst)) setWithInt:RepackagedComAndroidInternalUtilFastMath_roundWithFloat_(left_) withInt:RepackagedComAndroidInternalUtilFastMath_roundWithFloat_(top_) withInt:RepackagedComAndroidInternalUtilFastMath_roundWithFloat_(
#line 442
  right_) withInt:RepackagedComAndroidInternalUtilFastMath_roundWithFloat_(bottom_)];
}


#line 449
- (void)roundOutWithRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)dst {
  [((RepackagedAndroidGraphicsRect *) nil_chk(dst)) setWithInt:J2ObjCFpToInt(JavaLangMath_floorWithDouble_(left_)) withInt:J2ObjCFpToInt(JavaLangMath_floorWithDouble_(top_)) withInt:J2ObjCFpToInt(JavaLangMath_ceilWithDouble_(
#line 451
  right_)) withInt:J2ObjCFpToInt(JavaLangMath_ceilWithDouble_(bottom_))];
}


#line 464
- (void)union__WithFloat:(jfloat)left
               withFloat:(jfloat)top
               withFloat:(jfloat)right
               withFloat:(jfloat)bottom {
  if ((left < right) && (top < bottom)) {
    if ((self->left_ < self->right_) && (self->top_ < self->bottom_)) {
      if (self->left_ > left)
#line 468
      self->left_ = left;
      if (self->top_ > top)
#line 470
      self->top_ = top;
      if (self->right_ < right)
#line 472
      self->right_ = right;
      if (self->bottom_ < bottom)
#line 474
      self->bottom_ = bottom;
    }
    else {
      
#line 476
      self->left_ = left;
      self->top_ = top;
      self->right_ = right;
      self->bottom_ = bottom;
    }
  }
}


#line 491
- (void)union__WithRepackagedAndroidGraphicsRectF:(RepackagedAndroidGraphicsRectF *)r {
  [self union__WithFloat:((RepackagedAndroidGraphicsRectF *) nil_chk(r))->left_ withFloat:r->top_ withFloat:r->right_ withFloat:r->bottom_];
}


#line 502
- (void)union__WithFloat:(jfloat)x
               withFloat:(jfloat)y {
  if (x < left_) {
    left_ = x;
  }
  else
#line 505
  if (x > right_) {
    right_ = x;
  }
  if (y < top_) {
    top_ = y;
  }
  else
#line 510
  if (y > bottom_) {
    bottom_ = y;
  }
}

- (void)sort {
  if (left_ > right_) {
    jfloat temp = left_;
    left_ = right_;
    right_ = temp;
  }
  if (top_ > bottom_) {
    jfloat temp = top_;
    top_ = bottom_;
    bottom_ = temp;
  }
}


#line 538
- (jint)describeContents {
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "RectF", NULL, 0x1, NULL, NULL },
    { "initWithFloat:withFloat:withFloat:withFloat:", "RectF", NULL, 0x1, NULL, NULL },
    { "initWithRepackagedAndroidGraphicsRectF:", "RectF", NULL, 0x1, NULL, NULL },
    { "initWithRepackagedAndroidGraphicsRect:", "RectF", NULL, 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toShortString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toShortStringWithJavaLangStringBuilder:", "toShortString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "printShortStringWithJavaIoPrintWriter:", "printShortString", "V", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x11, NULL, NULL },
    { "width", NULL, "F", 0x11, NULL, NULL },
    { "height", NULL, "F", 0x11, NULL, NULL },
    { "centerX", NULL, "F", 0x11, NULL, NULL },
    { "centerY", NULL, "F", 0x11, NULL, NULL },
    { "setEmpty", NULL, "V", 0x1, NULL, NULL },
    { "setWithFloat:withFloat:withFloat:withFloat:", "set", "V", 0x1, NULL, NULL },
    { "setWithRepackagedAndroidGraphicsRectF:", "set", "V", 0x1, NULL, NULL },
    { "setWithRepackagedAndroidGraphicsRect:", "set", "V", 0x1, NULL, NULL },
    { "offsetWithFloat:withFloat:", "offset", "V", 0x1, NULL, NULL },
    { "offsetToWithFloat:withFloat:", "offsetTo", "V", 0x1, NULL, NULL },
    { "insetWithFloat:withFloat:", "inset", "V", 0x1, NULL, NULL },
    { "containsWithFloat:withFloat:", "contains", "Z", 0x1, NULL, NULL },
    { "containsWithFloat:withFloat:withFloat:withFloat:", "contains", "Z", 0x1, NULL, NULL },
    { "containsWithRepackagedAndroidGraphicsRectF:", "contains", "Z", 0x1, NULL, NULL },
    { "intersectWithFloat:withFloat:withFloat:withFloat:", "intersect", "Z", 0x1, NULL, NULL },
    { "intersectWithRepackagedAndroidGraphicsRectF:", "intersect", "Z", 0x1, NULL, NULL },
    { "setIntersectWithRepackagedAndroidGraphicsRectF:withRepackagedAndroidGraphicsRectF:", "setIntersect", "Z", 0x1, NULL, NULL },
    { "intersectsWithFloat:withFloat:withFloat:withFloat:", "intersects", "Z", 0x1, NULL, NULL },
    { "intersectsWithRepackagedAndroidGraphicsRectF:withRepackagedAndroidGraphicsRectF:", "intersects", "Z", 0x9, NULL, NULL },
    { "roundWithRepackagedAndroidGraphicsRect:", "round", "V", 0x1, NULL, NULL },
    { "roundOutWithRepackagedAndroidGraphicsRect:", "roundOut", "V", 0x1, NULL, NULL },
    { "union__WithFloat:withFloat:withFloat:withFloat:", "union", "V", 0x1, NULL, NULL },
    { "union__WithRepackagedAndroidGraphicsRectF:", "union", "V", 0x1, NULL, NULL },
    { "union__WithFloat:withFloat:", "union", "V", 0x1, NULL, NULL },
    { "sort", NULL, "V", 0x1, NULL, NULL },
    { "describeContents", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "left_", NULL, 0x1, "F", NULL, NULL,  },
    { "top_", NULL, 0x1, "F", NULL, NULL,  },
    { "right_", NULL, 0x1, "F", NULL, NULL,  },
    { "bottom_", NULL, 0x1, "F", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidGraphicsRectF = { 2, "RectF", "repackaged.android.graphics", NULL, 0x1, 37, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidGraphicsRectF;
}

@end


#line 39
void RepackagedAndroidGraphicsRectF_init(RepackagedAndroidGraphicsRectF *self) {
  (void) NSObject_init(self);
}


#line 39
RepackagedAndroidGraphicsRectF *new_RepackagedAndroidGraphicsRectF_init() {
  RepackagedAndroidGraphicsRectF *self = [RepackagedAndroidGraphicsRectF alloc];
  RepackagedAndroidGraphicsRectF_init(self);
  return self;
}


#line 51
void RepackagedAndroidGraphicsRectF_initWithFloat_withFloat_withFloat_withFloat_(RepackagedAndroidGraphicsRectF *self, jfloat left, jfloat top, jfloat right, jfloat bottom) {
  (void) NSObject_init(self);
  
#line 52
  self->left_ = left;
  self->top_ = top;
  self->right_ = right;
  self->bottom_ = bottom;
}


#line 51
RepackagedAndroidGraphicsRectF *new_RepackagedAndroidGraphicsRectF_initWithFloat_withFloat_withFloat_withFloat_(jfloat left, jfloat top, jfloat right, jfloat bottom) {
  RepackagedAndroidGraphicsRectF *self = [RepackagedAndroidGraphicsRectF alloc];
  RepackagedAndroidGraphicsRectF_initWithFloat_withFloat_withFloat_withFloat_(self, left, top, right, bottom);
  return self;
}


#line 65
void RepackagedAndroidGraphicsRectF_initWithRepackagedAndroidGraphicsRectF_(RepackagedAndroidGraphicsRectF *self, RepackagedAndroidGraphicsRectF *r) {
  (void) NSObject_init(self);
  
#line 66
  if (r == nil) {
    self->left_ = self->top_ = self->right_ = self->bottom_ = 0.0f;
  }
  else {
    
#line 69
    self->left_ = r->left_;
    self->top_ = r->top_;
    self->right_ = r->right_;
    self->bottom_ = r->bottom_;
  }
}


#line 65
RepackagedAndroidGraphicsRectF *new_RepackagedAndroidGraphicsRectF_initWithRepackagedAndroidGraphicsRectF_(RepackagedAndroidGraphicsRectF *r) {
  RepackagedAndroidGraphicsRectF *self = [RepackagedAndroidGraphicsRectF alloc];
  RepackagedAndroidGraphicsRectF_initWithRepackagedAndroidGraphicsRectF_(self, r);
  return self;
}


#line 76
void RepackagedAndroidGraphicsRectF_initWithRepackagedAndroidGraphicsRect_(RepackagedAndroidGraphicsRectF *self, RepackagedAndroidGraphicsRect *r) {
  (void) NSObject_init(self);
  
#line 77
  if (r == nil) {
    self->left_ = self->top_ = self->right_ = self->bottom_ = 0.0f;
  }
  else {
    
#line 80
    self->left_ = r->left_;
    self->top_ = r->top_;
    self->right_ = r->right_;
    self->bottom_ = r->bottom_;
  }
}


#line 76
RepackagedAndroidGraphicsRectF *new_RepackagedAndroidGraphicsRectF_initWithRepackagedAndroidGraphicsRect_(RepackagedAndroidGraphicsRect *r) {
  RepackagedAndroidGraphicsRectF *self = [RepackagedAndroidGraphicsRectF alloc];
  RepackagedAndroidGraphicsRectF_initWithRepackagedAndroidGraphicsRect_(self, r);
  return self;
}


#line 431
jboolean RepackagedAndroidGraphicsRectF_intersectsWithRepackagedAndroidGraphicsRectF_withRepackagedAndroidGraphicsRectF_(RepackagedAndroidGraphicsRectF *a, RepackagedAndroidGraphicsRectF *b) {
  RepackagedAndroidGraphicsRectF_initialize();
  
#line 432
  return ((RepackagedAndroidGraphicsRectF *) nil_chk(a))->left_ < ((RepackagedAndroidGraphicsRectF *) nil_chk(b))->right_ && b->left_ < a->right_ &&
#line 433
  a->top_ < b->bottom_ && b->top_ < a->bottom_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidGraphicsRectF)
