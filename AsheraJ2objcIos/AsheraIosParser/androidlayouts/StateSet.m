//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/StateSet.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "R.h"
#include "StateSet.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/StateSet.java"

static IOSObjectArray *RepackagedAndroidUtilStateSet_VIEW_STATE_SETS_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidUtilStateSet, VIEW_STATE_SETS_, IOSObjectArray *)

J2OBJC_INITIALIZED_DEFN(RepackagedAndroidUtilStateSet)

IOSIntArray *RepackagedAndroidUtilStateSet_VIEW_STATE_IDS_;
IOSIntArray *RepackagedAndroidUtilStateSet_WILD_CARD_;
IOSIntArray *RepackagedAndroidUtilStateSet_NOTHING_;


#line 38
@implementation RepackagedAndroidUtilStateSet


#line 112
+ (IOSIntArray *)getWithInt:(jint)mask {
  return RepackagedAndroidUtilStateSet_getWithInt_(mask);
}


#line 120
- (instancetype)init {
  RepackagedAndroidUtilStateSet_init(self);
  return self;
}


#line 137
+ (jboolean)isWildCardWithIntArray:(IOSIntArray *)stateSetOrSpec {
  return RepackagedAndroidUtilStateSet_isWildCardWithIntArray_(stateSetOrSpec);
}


#line 148
+ (jboolean)stateSetMatchesWithIntArray:(IOSIntArray *)stateSpec
                           withIntArray:(IOSIntArray *)stateSet {
  return RepackagedAndroidUtilStateSet_stateSetMatchesWithIntArray_withIntArray_(stateSpec, stateSet);
}


#line 208
+ (jboolean)stateSetMatchesWithIntArray:(IOSIntArray *)stateSpec
                                withInt:(jint)state {
  return RepackagedAndroidUtilStateSet_stateSetMatchesWithIntArray_withInt_(stateSpec, state);
}


#line 231
+ (IOSIntArray *)trimStateSetWithIntArray:(IOSIntArray *)states
                                  withInt:(jint)newSize {
  return RepackagedAndroidUtilStateSet_trimStateSetWithIntArray_withInt_(states, newSize);
}


#line 241
+ (NSString *)dumpWithIntArray:(IOSIntArray *)states {
  return RepackagedAndroidUtilStateSet_dumpWithIntArray_(states);
}

+ (void)initialize {
  if (self == [RepackagedAndroidUtilStateSet class]) {
    RepackagedAndroidUtilStateSet_VIEW_STATE_IDS_ = [IOSIntArray newArrayWithInts:(jint[]){
#line 67
      RepackagedComAndroidInternalR_attr_state_window_focused, RepackagedAndroidUtilStateSet_VIEW_STATE_WINDOW_FOCUSED,
#line 68
      RepackagedComAndroidInternalR_attr_state_selected, RepackagedAndroidUtilStateSet_VIEW_STATE_SELECTED,
#line 69
      RepackagedComAndroidInternalR_attr_state_focused, RepackagedAndroidUtilStateSet_VIEW_STATE_FOCUSED,
#line 70
      RepackagedComAndroidInternalR_attr_state_enabled, RepackagedAndroidUtilStateSet_VIEW_STATE_ENABLED,
#line 71
      RepackagedComAndroidInternalR_attr_state_pressed, RepackagedAndroidUtilStateSet_VIEW_STATE_PRESSED, RepackagedComAndroidInternalR_attr_get_state_activated_(),
#line 72
      RepackagedAndroidUtilStateSet_VIEW_STATE_ACTIVATED, RepackagedComAndroidInternalR_attr_get_state_accelerated_(),
#line 73
      RepackagedAndroidUtilStateSet_VIEW_STATE_ACCELERATED, RepackagedComAndroidInternalR_attr_get_state_hovered_(),
#line 74
      RepackagedAndroidUtilStateSet_VIEW_STATE_HOVERED, RepackagedComAndroidInternalR_attr_get_state_drag_can_accept_(),
#line 75
      RepackagedAndroidUtilStateSet_VIEW_STATE_DRAG_CAN_ACCEPT, RepackagedComAndroidInternalR_attr_get_state_drag_hovered_(),
#line 76
      RepackagedAndroidUtilStateSet_VIEW_STATE_DRAG_HOVERED } count:20];
      {
        
#line 80
        if ((RepackagedAndroidUtilStateSet_VIEW_STATE_IDS_->size_ / 2) != ((IOSIntArray *) nil_chk(RepackagedComAndroidInternalR_styleable_get_ViewDrawableStates_()))->size_) {
          @throw new_JavaLangIllegalStateException_initWithNSString_(
#line 82
          @"VIEW_STATE_IDs array length does not match ViewDrawableStates style array");
        }
        
#line 85
        IOSIntArray *orderedIds = [IOSIntArray newArrayWithLength:RepackagedAndroidUtilStateSet_VIEW_STATE_IDS_->size_];
        for (jint i = 0; i < RepackagedComAndroidInternalR_styleable_get_ViewDrawableStates_()->size_; i++) {
          jint viewState = IOSIntArray_Get(RepackagedComAndroidInternalR_styleable_get_ViewDrawableStates_(), i);
          for (jint j = 0; j < RepackagedAndroidUtilStateSet_VIEW_STATE_IDS_->size_; j += 2) {
            if (IOSIntArray_Get(RepackagedAndroidUtilStateSet_VIEW_STATE_IDS_, j) == viewState) {
              *IOSIntArray_GetRef(orderedIds, i * 2) = viewState;
              *IOSIntArray_GetRef(orderedIds, i * 2 + 1) = IOSIntArray_Get(RepackagedAndroidUtilStateSet_VIEW_STATE_IDS_, j + 1);
            }
          }
        }
        
#line 96
        jint NUM_BITS = RepackagedAndroidUtilStateSet_VIEW_STATE_IDS_->size_ / 2;
        RepackagedAndroidUtilStateSet_VIEW_STATE_SETS_ = [IOSObjectArray newArrayWithLength:LShift32(1, NUM_BITS) type:IOSClass_intArray(1)];
        for (jint i = 0; i < RepackagedAndroidUtilStateSet_VIEW_STATE_SETS_->size_; i++) {
          jint numBits = JavaLangInteger_bitCountWithInt_(i);
          IOSIntArray *set = [IOSIntArray newArrayWithLength:numBits];
          jint pos = 0;
          for (jint j = 0; j < orderedIds->size_; j += 2) {
            if ((i & IOSIntArray_Get(orderedIds, j + 1)) != 0) {
              *IOSIntArray_GetRef(set, pos++) = IOSIntArray_Get(orderedIds, j);
            }
          }
          (void) IOSObjectArray_Set(RepackagedAndroidUtilStateSet_VIEW_STATE_SETS_, i, set);
        }
      }
      RepackagedAndroidUtilStateSet_WILD_CARD_ = [IOSIntArray newArrayWithLength:
#line 125
      0];
      RepackagedAndroidUtilStateSet_NOTHING_ = [IOSIntArray newArrayWithInts:(jint[]){
#line 130
        0 } count:1];
        J2OBJC_SET_INITIALIZED(RepackagedAndroidUtilStateSet)
      }
    }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getWithInt:", "get", "[I", 0x9, NULL, NULL },
    { "init", "StateSet", NULL, 0x1, NULL, NULL },
    { "isWildCardWithIntArray:", "isWildCard", "Z", 0x9, NULL, NULL },
    { "stateSetMatchesWithIntArray:withIntArray:", "stateSetMatches", "Z", 0x9, NULL, NULL },
    { "stateSetMatchesWithIntArray:withInt:", "stateSetMatches", "Z", 0x9, NULL, NULL },
    { "trimStateSetWithIntArray:withInt:", "trimStateSet", "[I", 0x9, NULL, NULL },
    { "dumpWithIntArray:", "dump", "Ljava.lang.String;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "VIEW_STATE_SETS_", NULL, 0x1a, "[[I", &RepackagedAndroidUtilStateSet_VIEW_STATE_SETS_, NULL,  },
    { "VIEW_STATE_WINDOW_FOCUSED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilStateSet_VIEW_STATE_WINDOW_FOCUSED },
    { "VIEW_STATE_SELECTED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilStateSet_VIEW_STATE_SELECTED },
    { "VIEW_STATE_FOCUSED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilStateSet_VIEW_STATE_FOCUSED },
    { "VIEW_STATE_ENABLED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilStateSet_VIEW_STATE_ENABLED },
    { "VIEW_STATE_PRESSED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilStateSet_VIEW_STATE_PRESSED },
    { "VIEW_STATE_ACTIVATED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilStateSet_VIEW_STATE_ACTIVATED },
    { "VIEW_STATE_ACCELERATED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilStateSet_VIEW_STATE_ACCELERATED },
    { "VIEW_STATE_HOVERED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilStateSet_VIEW_STATE_HOVERED },
    { "VIEW_STATE_DRAG_CAN_ACCEPT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilStateSet_VIEW_STATE_DRAG_CAN_ACCEPT },
    { "VIEW_STATE_DRAG_HOVERED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidUtilStateSet_VIEW_STATE_DRAG_HOVERED },
    { "VIEW_STATE_IDS_", NULL, 0x18, "[I", &RepackagedAndroidUtilStateSet_VIEW_STATE_IDS_, NULL,  },
    { "WILD_CARD_", NULL, 0x19, "[I", &RepackagedAndroidUtilStateSet_WILD_CARD_, NULL,  },
    { "NOTHING_", NULL, 0x19, "[I", &RepackagedAndroidUtilStateSet_NOTHING_, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilStateSet = { 2, "StateSet", "repackaged.android.util", NULL, 0x1, 7, methods, 14, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidUtilStateSet;
}

@end


#line 112
IOSIntArray *RepackagedAndroidUtilStateSet_getWithInt_(jint mask) {
  RepackagedAndroidUtilStateSet_initialize();
  
#line 113
  if (mask >= ((IOSObjectArray *) nil_chk(RepackagedAndroidUtilStateSet_VIEW_STATE_SETS_))->size_) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Invalid state set mask");
  }
  return IOSObjectArray_Get(RepackagedAndroidUtilStateSet_VIEW_STATE_SETS_, mask);
}


#line 120
void RepackagedAndroidUtilStateSet_init(RepackagedAndroidUtilStateSet *self) {
  (void) NSObject_init(self);
}


#line 120
RepackagedAndroidUtilStateSet *new_RepackagedAndroidUtilStateSet_init() {
  RepackagedAndroidUtilStateSet *self = [RepackagedAndroidUtilStateSet alloc];
  RepackagedAndroidUtilStateSet_init(self);
  return self;
}


#line 137
jboolean RepackagedAndroidUtilStateSet_isWildCardWithIntArray_(IOSIntArray *stateSetOrSpec) {
  RepackagedAndroidUtilStateSet_initialize();
  
#line 138
  return ((IOSIntArray *) nil_chk(stateSetOrSpec))->size_ == 0 || IOSIntArray_Get(stateSetOrSpec, 0) == 0;
}


#line 148
jboolean RepackagedAndroidUtilStateSet_stateSetMatchesWithIntArray_withIntArray_(IOSIntArray *stateSpec, IOSIntArray *stateSet) {
  RepackagedAndroidUtilStateSet_initialize();
  
#line 149
  if (stateSet == nil) {
    return (stateSpec == nil || RepackagedAndroidUtilStateSet_isWildCardWithIntArray_(stateSpec));
  }
  jint stateSpecSize = ((IOSIntArray *) nil_chk(stateSpec))->size_;
  jint stateSetSize = ((IOSIntArray *) nil_chk(stateSet))->size_;
  for (jint i = 0; i < stateSpecSize; i++) {
    jint stateSpecState = IOSIntArray_Get(stateSpec, i);
    if (stateSpecState == 0) {
      
#line 158
      return YES;
    }
    jboolean mustMatch;
    if (stateSpecState > 0) {
      mustMatch = YES;
    }
    else {
      mustMatch = NO;
      stateSpecState = -stateSpecState;
    }
    jboolean found = NO;
    for (jint j = 0; j < stateSetSize; j++) {
      jint state = IOSIntArray_Get(stateSet, j);
      if (state == 0) {
        
#line 173
        if (mustMatch) {
          
#line 175
          return NO;
        }
        else {
          break;
        }
      }
      if (state == stateSpecState) {
        if (mustMatch) {
          found = YES;
          
#line 185
          break;
        }
        else {
          return NO;
        }
      }
    }
    if (mustMatch && !found) {
      
#line 195
      return NO;
    }
  }
  return YES;
}

jboolean RepackagedAndroidUtilStateSet_stateSetMatchesWithIntArray_withInt_(IOSIntArray *stateSpec, jint state) {
  RepackagedAndroidUtilStateSet_initialize();
  
#line 209
  jint stateSpecSize = ((IOSIntArray *) nil_chk(stateSpec))->size_;
  for (jint i = 0; i < stateSpecSize; i++) {
    jint stateSpecState = IOSIntArray_Get(stateSpec, i);
    if (stateSpecState == 0) {
      
#line 214
      return YES;
    }
    if (stateSpecState > 0) {
      if (state != stateSpecState) {
        return NO;
      }
    }
    else {
      if (state == -stateSpecState) {
        
#line 224
        return NO;
      }
    }
  }
  return YES;
}


#line 231
IOSIntArray *RepackagedAndroidUtilStateSet_trimStateSetWithIntArray_withInt_(IOSIntArray *states, jint newSize) {
  RepackagedAndroidUtilStateSet_initialize();
  
#line 232
  if (((IOSIntArray *) nil_chk(states))->size_ == newSize) {
    return states;
  }
  
#line 236
  IOSIntArray *trimmedStates = [IOSIntArray newArrayWithLength:newSize];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(states, 0, trimmedStates, 0, newSize);
  return trimmedStates;
}


#line 241
NSString *RepackagedAndroidUtilStateSet_dumpWithIntArray_(IOSIntArray *states) {
  RepackagedAndroidUtilStateSet_initialize();
  
#line 242
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  
#line 244
  jint count = ((IOSIntArray *) nil_chk(states))->size_;
  for (jint i = 0; i < count; i++) {
    
#line 247
    switch (IOSIntArray_Get(states, i)) {
      case RepackagedComAndroidInternalR_attr_state_window_focused:
      (void) [sb appendWithNSString:@"W "];
      break;
      case RepackagedComAndroidInternalR_attr_state_pressed:
      (void) [sb appendWithNSString:@"P "];
      break;
      case RepackagedComAndroidInternalR_attr_state_selected:
      (void) [sb appendWithNSString:@"S "];
      break;
      case RepackagedComAndroidInternalR_attr_state_focused:
      (void) [sb appendWithNSString:@"F "];
      break;
      case RepackagedComAndroidInternalR_attr_state_enabled:
      (void) [sb appendWithNSString:@"E "];
      break;
    }
  }
  
#line 266
  return [sb description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilStateSet)
