//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/view/ViewGroup.java
//


#include "AccessibilityEvent.h"
#include "AccessibilityNodeInfo.h"
#include "AccessibilityNodeProvider.h"
#include "ActionMode.h"
#include "Animation.h"
#include "AnimationUtils.h"
#include "ApplicationInfo.h"
#include "AttributeSet.h"
#include "Bitmap.h"
#include "Build.h"
#include "Bundle.h"
#include "Canvas.h"
#include "Color.h"
#include "Configuration.h"
#include "Context.h"
#include "DisplayMetrics.h"
#include "DragEvent.h"
#include "Drawable.h"
#include "FocusFinder.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "InputDevice.h"
#include "InputEventConsistencyVerifier.h"
#include "Insets.h"
#include "Intent.h"
#include "J2ObjC_source.h"
#include "KeyEvent.h"
#include "LayoutAnimationController.h"
#include "LayoutTransition.h"
#include "Log.h"
#include "Matrix.h"
#include "Menu.h"
#include "MenuInflater.h"
#include "MotionEvent.h"
#include "PackageManager.h"
#include "Paint.h"
#include "Point.h"
#include "PointF.h"
#include "Pools.h"
#include "Predicate.h"
#include "R.h"
#include "Rect.h"
#include "RectF.h"
#include "Region.h"
#include "RenderNode.h"
#include "Resources.h"
#include "SparseArray.h"
#include "SparseBooleanArray.h"
#include "SystemClock.h"
#include "Transformation.h"
#include "TypedArray.h"
#include "View.h"
#include "ViewDebug.h"
#include "ViewGroup.h"
#include "ViewGroupOverlay.h"
#include "ViewHierarchyEncoder.h"
#include "ViewOutlineProvider.h"
#include "ViewOverlay.h"
#include "ViewParent.h"
#include "ViewRootImpl.h"
#include "ViewStructure.h"
#include "WindowInsets.h"
#include "java/lang/AbstractMethodError.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/Runnable.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@class RepackagedAndroidViewViewGroup_HoverTarget;
@class RepackagedAndroidViewViewGroup_TouchTarget;

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/view/ViewGroup.java"

#define RepackagedAndroidViewViewGroup_DBG NO
#define RepackagedAndroidViewViewGroup_FLAG_CLIP_TO_PADDING 2
#define RepackagedAndroidViewViewGroup_FLAG_RUN_ANIMATION 8
#define RepackagedAndroidViewViewGroup_FLAG_PADDING_NOT_NULL 32
#define RepackagedAndroidViewViewGroup_FLAG_ANIMATION_CACHE 64
#define RepackagedAndroidViewViewGroup_FLAG_NOTIFY_ANIMATION_LISTENER 512
#define RepackagedAndroidViewViewGroup_FLAG_ADD_STATES_FROM_CHILDREN 8192
#define RepackagedAndroidViewViewGroup_FLAG_ALWAYS_DRAWN_WITH_CACHE 16384
#define RepackagedAndroidViewViewGroup_FLAG_CHILDREN_DRAWN_WITH_CACHE 32768
#define RepackagedAndroidViewViewGroup_FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE 65536
#define RepackagedAndroidViewViewGroup_FLAG_MASK_FOCUSABILITY 393216
#define RepackagedAndroidViewViewGroup_FLAG_SPLIT_MOTION_EVENTS 2097152
#define RepackagedAndroidViewViewGroup_FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW 4194304
#define RepackagedAndroidViewViewGroup_FLAG_LAYOUT_MODE_WAS_EXPLICITLY_SET 8388608
#define RepackagedAndroidViewViewGroup_FLAG_START_ACTION_MODE_FOR_CHILD_IS_TYPED 134217728
#define RepackagedAndroidViewViewGroup_FLAG_START_ACTION_MODE_FOR_CHILD_IS_NOT_TYPED 268435456
#define RepackagedAndroidViewViewGroup_LAYOUT_MODE_UNDEFINED -1
#define RepackagedAndroidViewViewGroup_CHILD_LEFT_INDEX 0
#define RepackagedAndroidViewViewGroup_CHILD_TOP_INDEX 1
#define RepackagedAndroidViewViewGroup_ARRAY_INITIAL_CAPACITY 12
#define RepackagedAndroidViewViewGroup_ARRAY_CAPACITY_INCREMENT 12

@interface RepackagedAndroidViewViewGroup () {
 @public
  RepackagedAndroidViewView *mFocused_;
  /**
   @brief A Transformation used when drawing children, to apply on the child being drawn.
   */
  RepackagedAndroidViewAnimationTransformation *mChildTransformation_;
  RepackagedAndroidViewView *mCurrentDragView_;
  RepackagedAndroidViewDragEvent *mCurrentDrag_;
  JavaUtilHashSet *mDragNotifiedChildren_;
  jboolean mChildAcceptsDrag_;
  RepackagedAndroidGraphicsPointF *mLocalPoint_;
  IOSFloatArray *mTempPoint_;
  RepackagedAndroidViewAnimationLayoutAnimationController *mLayoutAnimationController_;
  RepackagedAndroidViewAnimationAnimation_AnimationListener *mAnimationListener_;
  RepackagedAndroidViewViewGroup_TouchTarget *mFirstTouchTarget_;
  jlong mLastTouchDownTime_;
  jint mLastTouchDownIndex_;
  jfloat mLastTouchDownX_;
  jfloat mLastTouchDownY_;
  RepackagedAndroidViewViewGroup_HoverTarget *mFirstHoverTarget_;
  jboolean mHoveredSelf_;
  /**
   @brief Either #LAYOUT_MODE_CLIP_BOUNDS or #LAYOUT_MODE_OPTICAL_BOUNDS .
   */
  jint mLayoutMode_;
  IOSObjectArray *mChildren_;
  jint mChildrenCount_;
  jboolean mLayoutCalledWhileSuppressed_;
  RepackagedAndroidAnimationLayoutTransition *mTransition_;
  JavaUtilArrayList *mTransitioningViews_;
  JavaUtilArrayList *mVisibilityChangingChildren_;
  JavaUtilArrayList *mPreSortedChildren_;
  jint mChildCountWithTransientState_;
  /**
   @brief Currently registered axes for nested scrolling.
   Flag set consisting of #SCROLL_AXIS_HORIZONTAL  #SCROLL_AXIS_VERTICAL or #SCROLL_AXIS_NONE for null.
   */
  jint mNestedScrollAxes_;
  id<JavaUtilList> mTransientIndices_;
  id<JavaUtilList> mTransientViews_;
  RepackagedAndroidAnimationLayoutTransition_TransitionListener *mLayoutTransitionListener_;
}

- (jboolean)debugDraw;

- (void)initViewGroup OBJC_METHOD_FAMILY_NONE;

- (void)initFromAttributesWithRepackagedAndroidContentContext:(id<RepackagedAndroidContentContext>)context
                        withRepackagedAndroidUtilAttributeSet:(id<RepackagedAndroidUtilAttributeSet>)attrs
                                                      withInt:(jint)defStyleAttr
                                                      withInt:(jint)defStyleRes OBJC_METHOD_FAMILY_NONE;

- (RepackagedAndroidGraphicsPointF *)getLocalPoint;

- (void)exitHoverTargets;

- (void)cancelHoverTargetWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view;

+ (RepackagedAndroidViewMotionEvent *)obtainMotionEventNoHistoryOrSelfWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event;

/**
 @brief Dispatches a generic pointer event to a child, taking into account transformations that apply to the child.
 @param event The event to send.
 @param child The view to send the event to.
 @return <code>true</code> if the child handled the event.
 */
- (jboolean)dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event
                                                         withRepackagedAndroidViewView:(RepackagedAndroidViewView *)child;

/**
 @brief Finds the child which has accessibility focus.
 @return The child that has focus.
 */
- (RepackagedAndroidViewView *)findChildWithAccessibilityFocus;

/**
 @brief Resets all touch state in preparation for a new cycle.
 */
- (void)resetTouchState;

/**
 @brief Resets the cancel next up flag.
 Returns true if the flag was previously set.
 */
+ (jboolean)resetCancelNextUpFlagWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view;

/**
 @brief Clears all touch targets.
 */
- (void)clearTouchTargets;

/**
 @brief Cancels and clears all touch targets.
 */
- (void)cancelAndClearTouchTargetsWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event;

/**
 @brief Gets the touch target for specified child view.
 Returns null if not found.
 */
- (RepackagedAndroidViewViewGroup_TouchTarget *)getTouchTargetWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child;

/**
 @brief Adds a touch target for specified child to the beginning of the list.
 Assumes the target child is not already present.
 */
- (RepackagedAndroidViewViewGroup_TouchTarget *)addTouchTargetWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                                                    withInt:(jint)pointerIdBits;

/**
 @brief Removes the pointer ids from consideration.
 */
- (void)removePointersFromTouchTargetsWithInt:(jint)pointerIdBits;

- (void)cancelTouchTargetWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view;

/**
 @brief Returns true if a child view can receive pointer events.
 */
+ (jboolean)canViewReceivePointerEventsWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child;

- (IOSFloatArray *)getTempPoint;

/**
 @brief Transforms a motion event into the coordinate space of a particular child view, filters out irrelevant pointer ids, and overrides its action if necessary.
 If child is null, assumes the MotionEvent will be sent to this ViewGroup instead.
 */
- (jboolean)dispatchTransformedTouchEventWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event
                                                                  withBoolean:(jboolean)cancel
                                                withRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                                      withInt:(jint)desiredPointerIdBits;

+ (void)fillRectWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas
                 withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint
                                            withInt:(jint)x1
                                            withInt:(jint)y1
                                            withInt:(jint)x2
                                            withInt:(jint)y2;

+ (jint)signWithInt:(jint)x;

+ (void)drawCornerWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)c
                   withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint
                                              withInt:(jint)x1
                                              withInt:(jint)y1
                                              withInt:(jint)dx
                                              withInt:(jint)dy
                                              withInt:(jint)lw;

- (jint)dipsToPixelsWithInt:(jint)dips;

+ (void)drawRectCornersWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas
                                                   withInt:(jint)x1
                                                   withInt:(jint)y1
                                                   withInt:(jint)x2
                                                   withInt:(jint)y2
                        withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint
                                                   withInt:(jint)lineLength
                                                   withInt:(jint)lineWidth;

+ (void)fillDifferenceWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas
                                                  withInt:(jint)x2
                                                  withInt:(jint)y2
                                                  withInt:(jint)x3
                                                  withInt:(jint)y3
                                                  withInt:(jint)dx1
                                                  withInt:(jint)dy1
                                                  withInt:(jint)dx2
                                                  withInt:(jint)dy2
                       withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint;

- (jboolean)hasChildWithZ;

- (void)notifyAnimationListener;

- (void)recreateChildDisplayListWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child;

- (void)clearCachedLayoutMode;

- (void)addViewInnerWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                          withInt:(jint)index
  withRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)params
                                      withBoolean:(jboolean)preventRequestLayout;

- (void)addInArrayWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                        withInt:(jint)index;

- (void)removeFromArrayWithInt:(jint)index;

- (void)removeFromArrayWithInt:(jint)start
                       withInt:(jint)count;

- (void)bindLayoutAnimationWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child;

- (jboolean)removeViewInternalWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view;

- (void)removeViewInternalWithInt:(jint)index
    withRepackagedAndroidViewView:(RepackagedAndroidViewView *)view;

- (void)removeViewsInternalWithInt:(jint)start
                           withInt:(jint)count;

- (jboolean)hasBooleanFlagWithInt:(jint)flag;

- (void)setBooleanFlagWithInt:(jint)flag
                  withBoolean:(jboolean)value;

- (void)setLayoutModeWithInt:(jint)layoutMode
                 withBoolean:(jboolean)explicitly;

/**
 @brief Add a view which is removed from mChildren but still needs animation
 @param v View to add
 */
- (void)addDisappearingViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)v;

+ (RepackagedAndroidGraphicsPaint *)getDebugPaint;

+ (void)drawRectWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas
                 withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint
                                            withInt:(jint)x1
                                            withInt:(jint)y1
                                            withInt:(jint)x2
                                            withInt:(jint)y2;

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mFocused_, RepackagedAndroidViewView *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mChildTransformation_, RepackagedAndroidViewAnimationTransformation *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mCurrentDragView_, RepackagedAndroidViewView *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mCurrentDrag_, RepackagedAndroidViewDragEvent *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mDragNotifiedChildren_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mLocalPoint_, RepackagedAndroidGraphicsPointF *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mTempPoint_, IOSFloatArray *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mLayoutAnimationController_, RepackagedAndroidViewAnimationLayoutAnimationController *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mAnimationListener_, RepackagedAndroidViewAnimationAnimation_AnimationListener *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mFirstTouchTarget_, RepackagedAndroidViewViewGroup_TouchTarget *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mFirstHoverTarget_, RepackagedAndroidViewViewGroup_HoverTarget *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mChildren_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mTransition_, RepackagedAndroidAnimationLayoutTransition *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mTransitioningViews_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mVisibilityChangingChildren_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mPreSortedChildren_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mTransientIndices_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mTransientViews_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup, mLayoutTransitionListener_, RepackagedAndroidAnimationLayoutTransition_TransitionListener *)

static NSString *RepackagedAndroidViewViewGroup_TAG_ = 
#line 112
@"ViewGroup";
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, TAG_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, DBG, jboolean)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_CLIP_TO_PADDING, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_RUN_ANIMATION, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_PADDING_NOT_NULL, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_ANIMATION_CACHE, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_NOTIFY_ANIMATION_LISTENER, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_ADD_STATES_FROM_CHILDREN, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_ALWAYS_DRAWN_WITH_CACHE, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_CHILDREN_DRAWN_WITH_CACHE, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_MASK_FOCUSABILITY, jint)

static IOSIntArray *RepackagedAndroidViewViewGroup_DESCENDANT_FOCUSABILITY_FLAGS_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, DESCENDANT_FOCUSABILITY_FLAGS_, IOSIntArray *)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_SPLIT_MOTION_EVENTS, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_LAYOUT_MODE_WAS_EXPLICITLY_SET, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_START_ACTION_MODE_FOR_CHILD_IS_TYPED, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, FLAG_START_ACTION_MODE_FOR_CHILD_IS_NOT_TYPED, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, LAYOUT_MODE_UNDEFINED, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, CHILD_LEFT_INDEX, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, CHILD_TOP_INDEX, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, ARRAY_INITIAL_CAPACITY, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, ARRAY_CAPACITY_INCREMENT, jint)

static RepackagedAndroidGraphicsPaint *RepackagedAndroidViewViewGroup_sDebugPaint_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, sDebugPaint_, RepackagedAndroidGraphicsPaint *)
J2OBJC_STATIC_FIELD_SETTER(RepackagedAndroidViewViewGroup, sDebugPaint_, RepackagedAndroidGraphicsPaint *)

static IOSFloatArray *RepackagedAndroidViewViewGroup_sDebugLines_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, sDebugLines_, IOSFloatArray *)
J2OBJC_STATIC_FIELD_SETTER(RepackagedAndroidViewViewGroup, sDebugLines_, IOSFloatArray *)

static RepackagedAndroidViewActionMode *RepackagedAndroidViewViewGroup_SENTINEL_ACTION_MODE_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup, SENTINEL_ACTION_MODE_, RepackagedAndroidViewActionMode *)

__attribute__((unused)) static jboolean RepackagedAndroidViewViewGroup_debugDraw(RepackagedAndroidViewViewGroup *self);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_initViewGroup(RepackagedAndroidViewViewGroup *self);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_initFromAttributesWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_withInt_withInt_(RepackagedAndroidViewViewGroup *self, id<RepackagedAndroidContentContext> context, id<RepackagedAndroidUtilAttributeSet> attrs, jint defStyleAttr, jint defStyleRes);

__attribute__((unused)) static RepackagedAndroidGraphicsPointF *RepackagedAndroidViewViewGroup_getLocalPoint(RepackagedAndroidViewViewGroup *self);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_exitHoverTargets(RepackagedAndroidViewViewGroup *self);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_cancelHoverTargetWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *view);

__attribute__((unused)) static RepackagedAndroidViewMotionEvent *RepackagedAndroidViewViewGroup_obtainMotionEventNoHistoryOrSelfWithRepackagedAndroidViewMotionEvent_(RepackagedAndroidViewMotionEvent *event);

__attribute__((unused)) static jboolean RepackagedAndroidViewViewGroup_dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent_withRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewMotionEvent *event, RepackagedAndroidViewView *child);

__attribute__((unused)) static RepackagedAndroidViewView *RepackagedAndroidViewViewGroup_findChildWithAccessibilityFocus(RepackagedAndroidViewViewGroup *self);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_resetTouchState(RepackagedAndroidViewViewGroup *self);

__attribute__((unused)) static jboolean RepackagedAndroidViewViewGroup_resetCancelNextUpFlagWithRepackagedAndroidViewView_(RepackagedAndroidViewView *view);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_clearTouchTargets(RepackagedAndroidViewViewGroup *self);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_cancelAndClearTouchTargetsWithRepackagedAndroidViewMotionEvent_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewMotionEvent *event);

__attribute__((unused)) static RepackagedAndroidViewViewGroup_TouchTarget *RepackagedAndroidViewViewGroup_getTouchTargetWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *child);

__attribute__((unused)) static RepackagedAndroidViewViewGroup_TouchTarget *RepackagedAndroidViewViewGroup_addTouchTargetWithRepackagedAndroidViewView_withInt_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *child, jint pointerIdBits);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_removePointersFromTouchTargetsWithInt_(RepackagedAndroidViewViewGroup *self, jint pointerIdBits);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_cancelTouchTargetWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *view);

__attribute__((unused)) static jboolean RepackagedAndroidViewViewGroup_canViewReceivePointerEventsWithRepackagedAndroidViewView_(RepackagedAndroidViewView *child);

__attribute__((unused)) static IOSFloatArray *RepackagedAndroidViewViewGroup_getTempPoint(RepackagedAndroidViewViewGroup *self);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_fillRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(RepackagedAndroidGraphicsCanvas *canvas, RepackagedAndroidGraphicsPaint *paint, jint x1, jint y1, jint x2, jint y2);

__attribute__((unused)) static jint RepackagedAndroidViewViewGroup_signWithInt_(jint x);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_drawCornerWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_withInt_(RepackagedAndroidGraphicsCanvas *c, RepackagedAndroidGraphicsPaint *paint, jint x1, jint y1, jint dx, jint dy, jint lw);

__attribute__((unused)) static jint RepackagedAndroidViewViewGroup_dipsToPixelsWithInt_(RepackagedAndroidViewViewGroup *self, jint dips);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_drawRectCornersWithRepackagedAndroidGraphicsCanvas_withInt_withInt_withInt_withInt_withRepackagedAndroidGraphicsPaint_withInt_withInt_(RepackagedAndroidGraphicsCanvas *canvas, jint x1, jint y1, jint x2, jint y2, RepackagedAndroidGraphicsPaint *paint, jint lineLength, jint lineWidth);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_fillDifferenceWithRepackagedAndroidGraphicsCanvas_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withRepackagedAndroidGraphicsPaint_(RepackagedAndroidGraphicsCanvas *canvas, jint x2, jint y2, jint x3, jint y3, jint dx1, jint dy1, jint dx2, jint dy2, RepackagedAndroidGraphicsPaint *paint);

__attribute__((unused)) static jboolean RepackagedAndroidViewViewGroup_hasChildWithZ(RepackagedAndroidViewViewGroup *self);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_notifyAnimationListener(RepackagedAndroidViewViewGroup *self);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_recreateChildDisplayListWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *child);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_clearCachedLayoutMode(RepackagedAndroidViewViewGroup *self);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_addViewInnerWithRepackagedAndroidViewView_withInt_withRepackagedAndroidViewViewGroup_LayoutParams_withBoolean_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *child, jint index, RepackagedAndroidViewViewGroup_LayoutParams *params, jboolean preventRequestLayout);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_addInArrayWithRepackagedAndroidViewView_withInt_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *child, jint index);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_removeFromArrayWithInt_(RepackagedAndroidViewViewGroup *self, jint index);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_removeFromArrayWithInt_withInt_(RepackagedAndroidViewViewGroup *self, jint start, jint count);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_bindLayoutAnimationWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *child);

__attribute__((unused)) static jboolean RepackagedAndroidViewViewGroup_removeViewInternalWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *view);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_removeViewInternalWithInt_withRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, jint index, RepackagedAndroidViewView *view);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_removeViewsInternalWithInt_withInt_(RepackagedAndroidViewViewGroup *self, jint start, jint count);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_offsetDescendantRectToMyCoordsWithRepackagedAndroidViewView_withRepackagedAndroidGraphicsRect_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *descendant, RepackagedAndroidGraphicsRect *rect);

__attribute__((unused)) static jboolean RepackagedAndroidViewViewGroup_hasBooleanFlagWithInt_(RepackagedAndroidViewViewGroup *self, jint flag);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_setBooleanFlagWithInt_withBoolean_(RepackagedAndroidViewViewGroup *self, jint flag, jboolean value);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_setLayoutModeWithInt_withBoolean_(RepackagedAndroidViewViewGroup *self, jint layoutMode, jboolean explicitly);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_addDisappearingViewWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *v);

__attribute__((unused)) static RepackagedAndroidGraphicsPaint *RepackagedAndroidViewViewGroup_getDebugPaint();

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_drawRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(RepackagedAndroidGraphicsCanvas *canvas, RepackagedAndroidGraphicsPaint *paint, jint x1, jint y1, jint x2, jint y2);

@interface RepackagedAndroidViewViewGroup_OnHierarchyChangeListener : NSObject
@end

#define RepackagedAndroidViewViewGroup_MarginLayoutParams_LAYOUT_DIRECTION_MASK 3
#define RepackagedAndroidViewViewGroup_MarginLayoutParams_LEFT_MARGIN_UNDEFINED_MASK 4
#define RepackagedAndroidViewViewGroup_MarginLayoutParams_RIGHT_MARGIN_UNDEFINED_MASK 8
#define RepackagedAndroidViewViewGroup_MarginLayoutParams_RTL_COMPATIBILITY_MODE_MASK 16
#define RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK 32
#define RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RESOLVED 0
#define RepackagedAndroidViewViewGroup_MarginLayoutParams_UNDEFINED_MARGIN ((jint) 0x80000000)

@interface RepackagedAndroidViewViewGroup_MarginLayoutParams () {
 @public
  /**
   @brief The start margin in pixels of the child.
   Margin values should be positive. Call ViewGroup#setLayoutParams(LayoutParams) after reassigning a new value to this field.
   */
  jint startMargin_;
  /**
   @brief The end margin in pixels of the child.
   Margin values should be positive. Call ViewGroup#setLayoutParams(LayoutParams) after reassigning a new value to this field.
   */
  jint endMargin_;
}

- (void)doResolveMargins;

@end

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_MarginLayoutParams, LAYOUT_DIRECTION_MASK, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_MarginLayoutParams, LEFT_MARGIN_UNDEFINED_MASK, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_MarginLayoutParams, RIGHT_MARGIN_UNDEFINED_MASK, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_MarginLayoutParams, RTL_COMPATIBILITY_MODE_MASK, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_MarginLayoutParams, NEED_RESOLUTION_MASK, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_MarginLayoutParams, DEFAULT_MARGIN_RESOLVED, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_MarginLayoutParams, UNDEFINED_MARGIN, jint)

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_MarginLayoutParams_doResolveMargins(RepackagedAndroidViewViewGroup_MarginLayoutParams *self);

#define RepackagedAndroidViewViewGroup_TouchTarget_MAX_RECYCLED 32
#define RepackagedAndroidViewViewGroup_TouchTarget_ALL_POINTER_IDS -1

@interface RepackagedAndroidViewViewGroup_TouchTarget : NSObject {
 @public
  RepackagedAndroidViewView *child_;
  jint pointerIdBits_;
  RepackagedAndroidViewViewGroup_TouchTarget *next_;
}

- (instancetype)init;

+ (RepackagedAndroidViewViewGroup_TouchTarget *)obtainWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                                            withInt:(jint)pointerIdBits;

- (void)recycle;

@end

J2OBJC_STATIC_INIT(RepackagedAndroidViewViewGroup_TouchTarget)

J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup_TouchTarget, child_, RepackagedAndroidViewView *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup_TouchTarget, next_, RepackagedAndroidViewViewGroup_TouchTarget *)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_TouchTarget, MAX_RECYCLED, jint)

static id RepackagedAndroidViewViewGroup_TouchTarget_sRecycleLock_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_TouchTarget, sRecycleLock_, id)

static RepackagedAndroidViewViewGroup_TouchTarget *RepackagedAndroidViewViewGroup_TouchTarget_sRecycleBin_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_TouchTarget, sRecycleBin_, RepackagedAndroidViewViewGroup_TouchTarget *)
J2OBJC_STATIC_FIELD_SETTER(RepackagedAndroidViewViewGroup_TouchTarget, sRecycleBin_, RepackagedAndroidViewViewGroup_TouchTarget *)

static jint RepackagedAndroidViewViewGroup_TouchTarget_sRecycledCount_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_TouchTarget, sRecycledCount_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(RepackagedAndroidViewViewGroup_TouchTarget, sRecycledCount_, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_TouchTarget, ALL_POINTER_IDS, jint)

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_TouchTarget_init(RepackagedAndroidViewViewGroup_TouchTarget *self);

__attribute__((unused)) static RepackagedAndroidViewViewGroup_TouchTarget *new_RepackagedAndroidViewViewGroup_TouchTarget_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RepackagedAndroidViewViewGroup_TouchTarget *RepackagedAndroidViewViewGroup_TouchTarget_obtainWithRepackagedAndroidViewView_withInt_(RepackagedAndroidViewView *child, jint pointerIdBits);

J2OBJC_TYPE_LITERAL_HEADER(RepackagedAndroidViewViewGroup_TouchTarget)

#define RepackagedAndroidViewViewGroup_HoverTarget_MAX_RECYCLED 32

@interface RepackagedAndroidViewViewGroup_HoverTarget : NSObject {
 @public
  RepackagedAndroidViewView *child_;
  RepackagedAndroidViewViewGroup_HoverTarget *next_;
}

- (instancetype)init;

+ (RepackagedAndroidViewViewGroup_HoverTarget *)obtainWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child;

- (void)recycle;

@end

J2OBJC_STATIC_INIT(RepackagedAndroidViewViewGroup_HoverTarget)

J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup_HoverTarget, child_, RepackagedAndroidViewView *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup_HoverTarget, next_, RepackagedAndroidViewViewGroup_HoverTarget *)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_HoverTarget, MAX_RECYCLED, jint)

static id RepackagedAndroidViewViewGroup_HoverTarget_sRecycleLock_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_HoverTarget, sRecycleLock_, id)

static RepackagedAndroidViewViewGroup_HoverTarget *RepackagedAndroidViewViewGroup_HoverTarget_sRecycleBin_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_HoverTarget, sRecycleBin_, RepackagedAndroidViewViewGroup_HoverTarget *)
J2OBJC_STATIC_FIELD_SETTER(RepackagedAndroidViewViewGroup_HoverTarget, sRecycleBin_, RepackagedAndroidViewViewGroup_HoverTarget *)

static jint RepackagedAndroidViewViewGroup_HoverTarget_sRecycledCount_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_HoverTarget, sRecycledCount_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(RepackagedAndroidViewViewGroup_HoverTarget, sRecycledCount_, jint)

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_HoverTarget_init(RepackagedAndroidViewViewGroup_HoverTarget *self);

__attribute__((unused)) static RepackagedAndroidViewViewGroup_HoverTarget *new_RepackagedAndroidViewViewGroup_HoverTarget_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RepackagedAndroidViewViewGroup_HoverTarget *RepackagedAndroidViewViewGroup_HoverTarget_obtainWithRepackagedAndroidViewView_(RepackagedAndroidViewView *child);

J2OBJC_TYPE_LITERAL_HEADER(RepackagedAndroidViewViewGroup_HoverTarget)

#define RepackagedAndroidViewViewGroup_ChildListForAccessibility_MAX_POOL_SIZE 32

@interface RepackagedAndroidViewViewGroup_ChildListForAccessibility () {
 @public
  JavaUtilArrayList *mChildren_;
  JavaUtilArrayList *mHolders_;
}

- (void)init__WithRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)parent
                                     withBoolean:(jboolean)sort OBJC_METHOD_FAMILY_NONE;

- (void)sortWithJavaUtilArrayList:(JavaUtilArrayList *)holders;

- (void)clear;

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup_ChildListForAccessibility, mChildren_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup_ChildListForAccessibility, mHolders_, JavaUtilArrayList *)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_ChildListForAccessibility, MAX_POOL_SIZE, jint)

static RepackagedAndroidUtilPools_SynchronizedPool *RepackagedAndroidViewViewGroup_ChildListForAccessibility_sPool_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_ChildListForAccessibility, sPool_, RepackagedAndroidUtilPools_SynchronizedPool *)

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_ChildListForAccessibility_init__WithRepackagedAndroidViewViewGroup_withBoolean_(RepackagedAndroidViewViewGroup_ChildListForAccessibility *self, RepackagedAndroidViewViewGroup *parent, jboolean sort);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_ChildListForAccessibility_sortWithJavaUtilArrayList_(RepackagedAndroidViewViewGroup_ChildListForAccessibility *self, JavaUtilArrayList *holders);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_ChildListForAccessibility_clear(RepackagedAndroidViewViewGroup_ChildListForAccessibility *self);

#define RepackagedAndroidViewViewGroup_ViewLocationHolder_MAX_POOL_SIZE 32

@interface RepackagedAndroidViewViewGroup_ViewLocationHolder () {
 @public
  RepackagedAndroidGraphicsRect *mLocation_;
  jint mLayoutDirection_;
}

- (void)init__WithRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)root
                   withRepackagedAndroidViewView:(RepackagedAndroidViewView *)view OBJC_METHOD_FAMILY_NONE;

- (void)clear;

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup_ViewLocationHolder, mLocation_, RepackagedAndroidGraphicsRect *)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_ViewLocationHolder, MAX_POOL_SIZE, jint)

static RepackagedAndroidUtilPools_SynchronizedPool *RepackagedAndroidViewViewGroup_ViewLocationHolder_sPool_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_ViewLocationHolder, sPool_, RepackagedAndroidUtilPools_SynchronizedPool *)

static jint RepackagedAndroidViewViewGroup_ViewLocationHolder_sComparisonStrategy_ = 1;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewViewGroup_ViewLocationHolder, sComparisonStrategy_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(RepackagedAndroidViewViewGroup_ViewLocationHolder, sComparisonStrategy_, jint)

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_ViewLocationHolder_init__WithRepackagedAndroidViewViewGroup_withRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup_ViewLocationHolder *self, RepackagedAndroidViewViewGroup *root, RepackagedAndroidViewView *view);

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_ViewLocationHolder_clear(RepackagedAndroidViewViewGroup_ViewLocationHolder *self);

@interface RepackagedAndroidViewViewGroup_$1 : RepackagedAndroidViewActionMode

- (void)setTitleWithJavaLangCharSequence:(id<JavaLangCharSequence>)title;

- (void)setTitleWithInt:(jint)resId;

- (void)setSubtitleWithJavaLangCharSequence:(id<JavaLangCharSequence>)subtitle;

- (void)setSubtitleWithInt:(jint)resId;

- (void)setCustomViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view;

- (void)invalidate;

- (void)finish;

- (RepackagedAndroidViewMenu *)getMenu;

- (id<JavaLangCharSequence>)getTitle;

- (id<JavaLangCharSequence>)getSubtitle;

- (RepackagedAndroidViewView *)getCustomView;

- (RepackagedAndroidViewMenuInflater *)getMenuInflater;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RepackagedAndroidViewViewGroup_$1)

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_$1_init(RepackagedAndroidViewViewGroup_$1 *self);

__attribute__((unused)) static RepackagedAndroidViewViewGroup_$1 *new_RepackagedAndroidViewViewGroup_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(RepackagedAndroidViewViewGroup_$1)

@interface RepackagedAndroidViewViewGroup_$3 : NSObject < JavaLangRunnable > {
 @public
  RepackagedAndroidViewViewGroup *this$0_;
}

- (void)run;

- (instancetype)initWithRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RepackagedAndroidViewViewGroup_$3)

J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup_$3, this$0_, RepackagedAndroidViewViewGroup *)

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_$3_initWithRepackagedAndroidViewViewGroup_(RepackagedAndroidViewViewGroup_$3 *self, RepackagedAndroidViewViewGroup *outer$);

__attribute__((unused)) static RepackagedAndroidViewViewGroup_$3 *new_RepackagedAndroidViewViewGroup_$3_initWithRepackagedAndroidViewViewGroup_(RepackagedAndroidViewViewGroup *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(RepackagedAndroidViewViewGroup_$3)

@interface RepackagedAndroidViewViewGroup_$4 : NSObject < JavaLangRunnable > {
 @public
  RepackagedAndroidViewViewGroup *this$0_;
}

- (void)run;

- (instancetype)initWithRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RepackagedAndroidViewViewGroup_$4)

J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup_$4, this$0_, RepackagedAndroidViewViewGroup *)

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_$4_initWithRepackagedAndroidViewViewGroup_(RepackagedAndroidViewViewGroup_$4 *self, RepackagedAndroidViewViewGroup *outer$);

__attribute__((unused)) static RepackagedAndroidViewViewGroup_$4 *new_RepackagedAndroidViewViewGroup_$4_initWithRepackagedAndroidViewViewGroup_(RepackagedAndroidViewViewGroup *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(RepackagedAndroidViewViewGroup_$4)

@interface RepackagedAndroidViewViewGroup_$2 : RepackagedAndroidAnimationLayoutTransition_TransitionListener {
 @public
  RepackagedAndroidViewViewGroup *this$0_;
}

- (void)startTransitionWithRepackagedAndroidAnimationLayoutTransition:(RepackagedAndroidAnimationLayoutTransition *)transition
                                   withRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)container
                                        withRepackagedAndroidViewView:(RepackagedAndroidViewView *)view
                                                              withInt:(jint)transitionType;

- (void)endTransitionWithRepackagedAndroidAnimationLayoutTransition:(RepackagedAndroidAnimationLayoutTransition *)transition
                                 withRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)container
                                      withRepackagedAndroidViewView:(RepackagedAndroidViewView *)view
                                                            withInt:(jint)transitionType;

- (instancetype)initWithRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RepackagedAndroidViewViewGroup_$2)

J2OBJC_FIELD_SETTER(RepackagedAndroidViewViewGroup_$2, this$0_, RepackagedAndroidViewViewGroup *)

__attribute__((unused)) static void RepackagedAndroidViewViewGroup_$2_initWithRepackagedAndroidViewViewGroup_(RepackagedAndroidViewViewGroup_$2 *self, RepackagedAndroidViewViewGroup *outer$);

__attribute__((unused)) static RepackagedAndroidViewViewGroup_$2 *new_RepackagedAndroidViewViewGroup_$2_initWithRepackagedAndroidViewViewGroup_(RepackagedAndroidViewViewGroup *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(RepackagedAndroidViewViewGroup_$2)

J2OBJC_INITIALIZED_DEFN(RepackagedAndroidViewViewGroup)

jboolean RepackagedAndroidViewViewGroup_DEBUG_DRAW_ = 
#line 116
NO;
jint RepackagedAndroidViewViewGroup_LAYOUT_MODE_DEFAULT_ = 0;


#line 111
@implementation RepackagedAndroidViewViewGroup


#line 559
- (instancetype)initWithRepackagedAndroidContentContext:(id<RepackagedAndroidContentContext>)context {
  RepackagedAndroidViewViewGroup_initWithRepackagedAndroidContentContext_(self, context);
  return self;
}


#line 563
- (instancetype)initWithRepackagedAndroidContentContext:(id<RepackagedAndroidContentContext>)context
                  withRepackagedAndroidUtilAttributeSet:(id<RepackagedAndroidUtilAttributeSet>)attrs {
  RepackagedAndroidViewViewGroup_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_(self, context, attrs);
  return self;
}


#line 567
- (instancetype)initWithRepackagedAndroidContentContext:(id<RepackagedAndroidContentContext>)context
                  withRepackagedAndroidUtilAttributeSet:(id<RepackagedAndroidUtilAttributeSet>)attrs
                                                withInt:(jint)defStyleAttr {
  RepackagedAndroidViewViewGroup_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_withInt_(self, context, attrs, defStyleAttr);
  return self;
}


#line 571
- (instancetype)initWithRepackagedAndroidContentContext:(id<RepackagedAndroidContentContext>)context
                  withRepackagedAndroidUtilAttributeSet:(id<RepackagedAndroidUtilAttributeSet>)attrs
                                                withInt:(jint)defStyleAttr
                                                withInt:(jint)defStyleRes {
  RepackagedAndroidViewViewGroup_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_withInt_withInt_(self, context, attrs, defStyleAttr, defStyleRes);
  return self;
}


#line 577
- (jboolean)debugDraw {
  return RepackagedAndroidViewViewGroup_debugDraw(self);
}

- (void)initViewGroup {
  RepackagedAndroidViewViewGroup_initViewGroup(self);
}


#line 604
- (void)initFromAttributesWithRepackagedAndroidContentContext:(id<RepackagedAndroidContentContext>)context
                        withRepackagedAndroidUtilAttributeSet:(id<RepackagedAndroidUtilAttributeSet>)attrs
                                                      withInt:(jint)defStyleAttr
                                                      withInt:(jint)defStyleRes {
  RepackagedAndroidViewViewGroup_initFromAttributesWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_withInt_withInt_(self, context, attrs, defStyleAttr, defStyleRes);
}


#line 678
- (jint)getDescendantFocusability {
  return mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_MASK_FOCUSABILITY;
}


#line 690
- (void)setDescendantFocusabilityWithInt:(jint)focusability {
  switch (focusability) {
    case RepackagedAndroidViewViewGroup_FOCUS_BEFORE_DESCENDANTS:
    case RepackagedAndroidViewViewGroup_FOCUS_AFTER_DESCENDANTS:
    case RepackagedAndroidViewViewGroup_FOCUS_BLOCK_DESCENDANTS:
    break;
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"must be one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS");
  }
  
#line 700
  mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_MASK_FOCUSABILITY;
  mGroupFlags_ |= (focusability & RepackagedAndroidViewViewGroup_FLAG_MASK_FOCUSABILITY);
}


#line 708
- (void)handleFocusGainInternalWithInt:(jint)direction
     withRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)previouslyFocusedRect {
  if (mFocused_ != nil) {
    [mFocused_ unFocusWithRepackagedAndroidViewView:self];
    mFocused_ = nil;
  }
  [super handleFocusGainInternalWithInt:direction withRepackagedAndroidGraphicsRect:previouslyFocusedRect];
}


#line 719
- (void)requestChildFocusWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                         withRepackagedAndroidViewView:(RepackagedAndroidViewView *)focused {
  
#line 723
  if ([self getDescendantFocusability] == RepackagedAndroidViewViewGroup_FOCUS_BLOCK_DESCENDANTS) {
    return;
  }
  
#line 728
  [super unFocusWithRepackagedAndroidViewView:focused];
  
#line 731
  if (mFocused_ != child) {
    if (mFocused_ != nil) {
      [mFocused_ unFocusWithRepackagedAndroidViewView:focused];
    }
    
#line 736
    mFocused_ = child;
  }
  if (mParent_ != nil) {
    [mParent_ requestChildFocusWithRepackagedAndroidViewView:self withRepackagedAndroidViewView:focused];
  }
}


#line 746
- (void)focusableViewAvailableWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)v {
  if (mParent_ != nil &&
#line 750
  ([self getDescendantFocusability] != RepackagedAndroidViewViewGroup_FOCUS_BLOCK_DESCENDANTS) &&
#line 751
  ([self isFocusableInTouchMode] || ![self shouldBlockFocusForTouchscreen]) &&
#line 759
  !([self isFocused] && [self getDescendantFocusability] != RepackagedAndroidViewViewGroup_FOCUS_AFTER_DESCENDANTS)) {
    [mParent_ focusableViewAvailableWithRepackagedAndroidViewView:v];
  }
}


#line 767
- (jboolean)showContextMenuForChildWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)originalView {
  return mParent_ != nil && [mParent_ showContextMenuForChildWithRepackagedAndroidViewView:originalView];
}


#line 775
- (RepackagedAndroidViewActionMode *)startActionModeForChildWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)originalView
                                             withRepackagedAndroidViewActionMode_Callback:(id<RepackagedAndroidViewActionMode_Callback>)callback {
  if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_START_ACTION_MODE_FOR_CHILD_IS_TYPED) == 0) {
    
#line 778
    @try {
      mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_START_ACTION_MODE_FOR_CHILD_IS_NOT_TYPED;
      return [self startActionModeForChildWithRepackagedAndroidViewView:originalView withRepackagedAndroidViewActionMode_Callback:callback withInt:RepackagedAndroidViewActionMode_get_TYPE_PRIMARY_()];
    }
    @finally {
      
#line 782
      mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_START_ACTION_MODE_FOR_CHILD_IS_NOT_TYPED;
    }
  }
  else {
    return RepackagedAndroidViewViewGroup_SENTINEL_ACTION_MODE_;
  }
}


#line 794
- (RepackagedAndroidViewActionMode *)startActionModeForChildWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)originalView
                                             withRepackagedAndroidViewActionMode_Callback:(id<RepackagedAndroidViewActionMode_Callback>)callback
                                                                                  withInt:(jint)type {
  
#line 796
  if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_START_ACTION_MODE_FOR_CHILD_IS_NOT_TYPED) == 0 &&
#line 797
  type == RepackagedAndroidViewActionMode_get_TYPE_PRIMARY_()) {
    RepackagedAndroidViewActionMode *mode;
    @try {
      mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_START_ACTION_MODE_FOR_CHILD_IS_TYPED;
      mode = [self startActionModeForChildWithRepackagedAndroidViewView:originalView withRepackagedAndroidViewActionMode_Callback:callback];
    }
    @finally {
      
#line 803
      mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_START_ACTION_MODE_FOR_CHILD_IS_TYPED;
    }
    if (mode != RepackagedAndroidViewViewGroup_SENTINEL_ACTION_MODE_) {
      return mode;
    }
  }
  if (mParent_ != nil) {
    @try {
      return [mParent_ startActionModeForChildWithRepackagedAndroidViewView:originalView withRepackagedAndroidViewActionMode_Callback:callback withInt:type];
    }
    @catch (
#line 812
    JavaLangAbstractMethodError *ame) {
      
#line 814
      return [mParent_ startActionModeForChildWithRepackagedAndroidViewView:originalView withRepackagedAndroidViewActionMode_Callback:callback];
    }
  }
  return nil;
}


#line 824
- (jboolean)dispatchActivityResultWithNSString:(NSString *)who
                                       withInt:(jint)requestCode
                                       withInt:(jint)resultCode
            withRepackagedAndroidContentIntent:(id<RepackagedAndroidContentIntent>)data {
  
#line 826
  if ([super dispatchActivityResultWithNSString:who withInt:requestCode withInt:resultCode withRepackagedAndroidContentIntent:data]) {
    return YES;
  }
  jint childCount = [self getChildCount];
  for (jint i = 0; i < childCount; i++) {
    RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
    if ([((RepackagedAndroidViewView *) nil_chk(child)) dispatchActivityResultWithNSString:who withInt:requestCode withInt:resultCode withRepackagedAndroidContentIntent:data]) {
      return YES;
    }
  }
  return NO;
}


#line 847
- (RepackagedAndroidViewView *)focusSearchWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)focused
                                                                withInt:(jint)direction {
  if ([self isRootNamespace]) {
    
#line 852
    return [((RepackagedAndroidViewFocusFinder *) nil_chk(RepackagedAndroidViewFocusFinder_getInstance())) findNextFocusWithRepackagedAndroidViewViewGroup:self withRepackagedAndroidViewView:focused withInt:direction];
  }
  else
#line 853
  if (mParent_ != nil) {
    return [mParent_ focusSearchWithRepackagedAndroidViewView:focused withInt:direction];
  }
  return nil;
}

- (jboolean)requestChildRectangleOnScreenWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                     withRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)rectangle
                                                           withBoolean:(jboolean)immediate {
  return NO;
}


#line 870
- (jboolean)requestSendAccessibilityEventWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
              withRepackagedAndroidViewAccessibilityAccessibilityEvent:(RepackagedAndroidViewAccessibilityAccessibilityEvent *)event {
  id<RepackagedAndroidViewViewParent> parent = mParent_;
  if (parent == nil) {
    return NO;
  }
  jboolean propagate = [self onRequestSendAccessibilityEventWithRepackagedAndroidViewView:child withRepackagedAndroidViewAccessibilityAccessibilityEvent:event];
  if (!propagate) {
    return NO;
  }
  return [((id<RepackagedAndroidViewViewParent>) nil_chk(parent)) requestSendAccessibilityEventWithRepackagedAndroidViewView:self withRepackagedAndroidViewAccessibilityAccessibilityEvent:event];
}


#line 898
- (jboolean)onRequestSendAccessibilityEventWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                withRepackagedAndroidViewAccessibilityAccessibilityEvent:(RepackagedAndroidViewAccessibilityAccessibilityEvent *)event {
  if (mAccessibilityDelegate_ != nil) {
    return [mAccessibilityDelegate_ onRequestSendAccessibilityEventWithRepackagedAndroidViewViewGroup:self withRepackagedAndroidViewView:child withRepackagedAndroidViewAccessibilityAccessibilityEvent:event];
  }
  else {
    
#line 902
    return [self onRequestSendAccessibilityEventInternalWithRepackagedAndroidViewView:child withRepackagedAndroidViewAccessibilityAccessibilityEvent:event];
  }
}


#line 913
- (jboolean)onRequestSendAccessibilityEventInternalWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                        withRepackagedAndroidViewAccessibilityAccessibilityEvent:(RepackagedAndroidViewAccessibilityAccessibilityEvent *)event {
  return YES;
}


#line 920
- (void)childHasTransientStateChangedWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                       withBoolean:(jboolean)childHasTransientState {
  jboolean oldHasTransientState = [self hasTransientState];
  if (childHasTransientState) {
    mChildCountWithTransientState_++;
  }
  else {
    
#line 925
    mChildCountWithTransientState_--;
  }
  
#line 928
  jboolean newHasTransientState = [self hasTransientState];
  if (mParent_ != nil && oldHasTransientState != newHasTransientState) {
    @try {
      [mParent_ childHasTransientStateChangedWithRepackagedAndroidViewView:self withBoolean:newHasTransientState];
    }
    @catch (
#line 932
    JavaLangAbstractMethodError *e) {
      RepackagedAndroidUtilLog_eWithNSString_withNSString_withJavaLangThrowable_(RepackagedAndroidViewViewGroup_TAG_, JreStrcat("$$", [[mParent_ getClass] getSimpleName], @" does not fully implement ViewParent"),
#line 934
      e);
    }
  }
}


#line 940
- (jboolean)hasTransientState {
  return mChildCountWithTransientState_ > 0 || [super hasTransientState];
}


#line 948
- (jboolean)dispatchUnhandledMoveWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)focused
                                                       withInt:(jint)direction {
  return mFocused_ != nil &&
#line 950
  [mFocused_ dispatchUnhandledMoveWithRepackagedAndroidViewView:focused withInt:direction];
}


#line 956
- (void)clearChildFocusWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  
#line 961
  mFocused_ = nil;
  if (mParent_ != nil) {
    [mParent_ clearChildFocusWithRepackagedAndroidViewView:self];
  }
}


#line 971
- (void)clearFocus {
  
#line 975
  if (mFocused_ == nil) {
    [super clearFocus];
  }
  else {
    
#line 978
    RepackagedAndroidViewView *focused = mFocused_;
    mFocused_ = nil;
    [focused clearFocus];
  }
}


#line 988
- (void)unFocusWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)focused {
  
#line 992
  if (mFocused_ == nil) {
    [super unFocusWithRepackagedAndroidViewView:focused];
  }
  else {
    
#line 995
    [mFocused_ unFocusWithRepackagedAndroidViewView:focused];
    mFocused_ = nil;
  }
}


#line 1006
- (RepackagedAndroidViewView *)getFocusedChild {
  return mFocused_;
}

- (RepackagedAndroidViewView *)getDeepestFocusedChild {
  RepackagedAndroidViewView *v = self;
  while (v != nil) {
    if ([v isFocused]) {
      return v;
    }
    v = [v isKindOfClass:[RepackagedAndroidViewViewGroup class]] ? [((RepackagedAndroidViewViewGroup *) check_class_cast(v, [RepackagedAndroidViewViewGroup class])) getFocusedChild] : nil;
  }
  return nil;
}


#line 1027
- (jboolean)hasFocus {
  return (mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_FOCUSED) != 0 || mFocused_ != nil;
}


#line 1037
- (RepackagedAndroidViewView *)findFocus {
  
#line 1043
  if ([self isFocused]) {
    return self;
  }
  
#line 1047
  if (mFocused_ != nil) {
    return [mFocused_ findFocus];
  }
  return nil;
}


#line 1057
- (jboolean)hasFocusable {
  if ((mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) != RepackagedAndroidViewView_VISIBLE) {
    return NO;
  }
  
#line 1062
  if ([self isFocusable]) {
    return YES;
  }
  
#line 1066
  jint descendantFocusability = [self getDescendantFocusability];
  if (descendantFocusability != RepackagedAndroidViewViewGroup_FOCUS_BLOCK_DESCENDANTS) {
    jint count = mChildrenCount_;
    IOSObjectArray *children = mChildren_;
    
#line 1071
    for (jint i = 0; i < count; i++) {
      RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
      if ([((RepackagedAndroidViewView *) nil_chk(child)) hasFocusable]) {
        return YES;
      }
    }
  }
  
#line 1079
  return NO;
}

- (void)addFocusablesWithJavaUtilArrayList:(JavaUtilArrayList *)views
                                   withInt:(jint)direction
                                   withInt:(jint)focusableMode {
  jint focusableCount = [((JavaUtilArrayList *) nil_chk(views)) size];
  
#line 1089
  jint descendantFocusability = [self getDescendantFocusability];
  
#line 1091
  if (descendantFocusability != RepackagedAndroidViewViewGroup_FOCUS_BLOCK_DESCENDANTS) {
    if ([self shouldBlockFocusForTouchscreen]) {
      focusableMode |= RepackagedAndroidViewView_FOCUSABLES_TOUCH_MODE;
    }
    
#line 1096
    jint count = mChildrenCount_;
    IOSObjectArray *children = mChildren_;
    
#line 1099
    for (jint i = 0; i < count; i++) {
      RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
      if ((((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE) {
        [child addFocusablesWithJavaUtilArrayList:views withInt:direction withInt:focusableMode];
      }
    }
  }
  
#line 1111
  if ((descendantFocusability != RepackagedAndroidViewViewGroup_FOCUS_AFTER_DESCENDANTS ||
#line 1113
  (focusableCount == [views size])) &&
#line 1114
  ([self isFocusableInTouchMode] || ![self shouldBlockFocusForTouchscreen])) {
    [super addFocusablesWithJavaUtilArrayList:views withInt:direction withInt:focusableMode];
  }
}


#line 1126
- (void)setTouchscreenBlocksFocusWithBoolean:(jboolean)touchscreenBlocksFocus {
  if (touchscreenBlocksFocus) {
    mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_TOUCHSCREEN_BLOCKS_FOCUS;
    if ([self hasFocus]) {
      RepackagedAndroidViewView *focusedChild = [self getDeepestFocusedChild];
      if (![((RepackagedAndroidViewView *) nil_chk(focusedChild)) isFocusableInTouchMode]) {
        RepackagedAndroidViewView *newFocus = [self focusSearchWithInt:RepackagedAndroidViewView_FOCUS_FORWARD];
        if (newFocus != nil) {
          [newFocus requestFocus];
        }
      }
    }
  }
  else {
    
#line 1139
    mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_TOUCHSCREEN_BLOCKS_FOCUS;
  }
}

- (jboolean)getTouchscreenBlocksFocus {
  return (mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_TOUCHSCREEN_BLOCKS_FOCUS) != 0;
}

- (jboolean)shouldBlockFocusForTouchscreen {
  return [self getTouchscreenBlocksFocus] &&
#line 1152
  [((RepackagedAndroidContentPmPackageManager *) nil_chk([((id<RepackagedAndroidContentContext>) nil_chk(mContext_)) getPackageManager])) hasSystemFeatureWithNSString:RepackagedAndroidContentPmPackageManager_get_FEATURE_TOUCHSCREEN_()];
}

- (void)findViewsWithTextWithJavaUtilArrayList:(JavaUtilArrayList *)outViews
                      withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                       withInt:(jint)flags {
  [super findViewsWithTextWithJavaUtilArrayList:outViews withJavaLangCharSequence:text withInt:flags];
  jint childrenCount = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < childrenCount; i++) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    if ((((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE &&
#line 1163
    (child->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_IS_ROOT_NAMESPACE) == 0) {
      [child findViewsWithTextWithJavaUtilArrayList:outViews withJavaLangCharSequence:text withInt:flags];
    }
  }
}


#line 1171
- (RepackagedAndroidViewView *)findViewByAccessibilityIdTraversalWithInt:(jint)accessibilityId {
  RepackagedAndroidViewView *foundView = [super findViewByAccessibilityIdTraversalWithInt:accessibilityId];
  if (foundView != nil) {
    return foundView;
  }
  
#line 1177
  if ([self getAccessibilityNodeProvider] != nil) {
    return nil;
  }
  
#line 1181
  jint childrenCount = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < childrenCount; i++) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    foundView = [((RepackagedAndroidViewView *) nil_chk(child)) findViewByAccessibilityIdTraversalWithInt:accessibilityId];
    if (foundView != nil) {
      return foundView;
    }
  }
  
#line 1191
  return nil;
}


#line 1198
- (void)dispatchWindowFocusChangedWithBoolean:(jboolean)hasFocus {
  [super dispatchWindowFocusChangedWithBoolean:hasFocus];
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) dispatchWindowFocusChangedWithBoolean:hasFocus];
  }
}


#line 1211
- (void)addTouchablesWithJavaUtilArrayList:(JavaUtilArrayList *)views {
  [super addTouchablesWithJavaUtilArrayList:views];
  
#line 1214
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  
#line 1217
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    if ((((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE) {
      [child addTouchablesWithJavaUtilArrayList:views];
    }
  }
}


#line 1229
- (void)makeOptionalFitsSystemWindows {
  [super makeOptionalFitsSystemWindows];
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) makeOptionalFitsSystemWindows];
  }
}


#line 1242
- (void)dispatchDisplayHintWithInt:(jint)hint {
  [super dispatchDisplayHintWithInt:hint];
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) dispatchDisplayHintWithInt:hint];
  }
}


#line 1260
- (void)onChildVisibilityChangedWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                      withInt:(jint)oldVisibility
                                                      withInt:(jint)newVisibility {
  if (mTransition_ != nil) {
    if (newVisibility == RepackagedAndroidViewView_VISIBLE) {
      [mTransition_ showChildWithRepackagedAndroidViewViewGroup:self withRepackagedAndroidViewView:child withInt:oldVisibility];
    }
    else {
      
#line 1265
      [mTransition_ hideChildWithRepackagedAndroidViewViewGroup:self withRepackagedAndroidViewView:child withInt:newVisibility];
      if (mTransitioningViews_ != nil && [mTransitioningViews_ containsWithId:child]) {
        
#line 1269
        if (mVisibilityChangingChildren_ == nil) {
          mVisibilityChangingChildren_ = new_JavaUtilArrayList_init();
        }
        [((JavaUtilArrayList *) nil_chk(mVisibilityChangingChildren_)) addWithId:child];
        RepackagedAndroidViewViewGroup_addDisappearingViewWithRepackagedAndroidViewView_(self, child);
      }
    }
  }
  
#line 1279
  if (mCurrentDrag_ != nil) {
    if (newVisibility == RepackagedAndroidViewView_VISIBLE) {
      [self notifyChildOfDragWithRepackagedAndroidViewView:child];
    }
  }
}


#line 1290
- (void)dispatchVisibilityChangedWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)changedView
                                                       withInt:(jint)visibility {
  [super dispatchVisibilityChangedWithRepackagedAndroidViewView:changedView withInt:visibility];
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) dispatchVisibilityChangedWithRepackagedAndroidViewView:changedView withInt:visibility];
  }
}


#line 1303
- (void)dispatchWindowVisibilityChangedWithInt:(jint)visibility {
  [super dispatchWindowVisibilityChangedWithInt:visibility];
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) dispatchWindowVisibilityChangedWithInt:visibility];
  }
}


#line 1316
- (void)dispatchConfigurationChangedWithRepackagedAndroidContentResConfiguration:(id<RepackagedAndroidContentResConfiguration>)newConfig {
  [super dispatchConfigurationChangedWithRepackagedAndroidContentResConfiguration:newConfig];
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) dispatchConfigurationChangedWithRepackagedAndroidContentResConfiguration:newConfig];
  }
}


#line 1328
- (void)recomputeViewAttributesWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  if (mAttachInfo_ != nil && !mAttachInfo_->mRecomputeGlobalAttributes_) {
    id<RepackagedAndroidViewViewParent> parent = mParent_;
    if (parent != nil) [parent recomputeViewAttributesWithRepackagedAndroidViewView:self];
  }
}


#line 1336
- (void)dispatchCollectViewAttributesWithRepackagedAndroidViewView_AttachInfo:(RepackagedAndroidViewView_AttachInfo *)attachInfo
                                                                      withInt:(jint)visibility {
  if ((visibility & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE) {
    [super dispatchCollectViewAttributesWithRepackagedAndroidViewView_AttachInfo:attachInfo withInt:visibility];
    jint count = mChildrenCount_;
    IOSObjectArray *children = mChildren_;
    for (jint i = 0; i < count; i++) {
      RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
      [child dispatchCollectViewAttributesWithRepackagedAndroidViewView_AttachInfo:attachInfo withInt:
#line 1344
      visibility | (((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK)];
    }
  }
}


#line 1352
- (void)bringChildToFrontWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  jint index = [self indexOfChildWithRepackagedAndroidViewView:child];
  if (index >= 0) {
    RepackagedAndroidViewViewGroup_removeFromArrayWithInt_(self, index);
    RepackagedAndroidViewViewGroup_addInArrayWithRepackagedAndroidViewView_withInt_(self, child, mChildrenCount_);
    ((RepackagedAndroidViewView *) nil_chk(child))->mParent_ = self;
    [self requestLayout];
    [self invalidate];
  }
}

- (RepackagedAndroidGraphicsPointF *)getLocalPoint {
  return RepackagedAndroidViewViewGroup_getLocalPoint(self);
}


#line 1373
- (jboolean)dispatchDragEventWithRepackagedAndroidViewDragEvent:(RepackagedAndroidViewDragEvent *)event {
  jboolean retval = NO;
  jfloat tx = ((RepackagedAndroidViewDragEvent *) nil_chk(event))->mX_;
  jfloat ty = event->mY_;
  
#line 1378
  RepackagedAndroidViewViewRootImpl *root = [self getViewRootImpl];
  
#line 1381
  RepackagedAndroidGraphicsPointF *localPoint = RepackagedAndroidViewViewGroup_getLocalPoint(self);
  
#line 1383
  switch (event->mAction_) {
    case RepackagedAndroidViewDragEvent_ACTION_DRAG_STARTED:
    {
      mCurrentDragView_ = nil;
      
#line 1389
      mCurrentDrag_ = RepackagedAndroidViewDragEvent_obtainWithRepackagedAndroidViewDragEvent_(event);
      if (mDragNotifiedChildren_ == nil) {
        mDragNotifiedChildren_ = new_JavaUtilHashSet_init();
      }
      else {
        
#line 1393
        [mDragNotifiedChildren_ clear];
      }
      
#line 1397
      mChildAcceptsDrag_ = NO;
      jint count = mChildrenCount_;
      IOSObjectArray *children = mChildren_;
      for (jint i = 0; i < count; i++) {
        RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
        ((RepackagedAndroidViewView *) nil_chk(child))->mPrivateFlags2_ &= ~RepackagedAndroidViewView_DRAG_MASK;
        if ([child getVisibility] == RepackagedAndroidViewView_VISIBLE) {
          jboolean handled = [self notifyChildOfDragWithRepackagedAndroidViewView:IOSObjectArray_Get(children, i)];
          if (handled) {
            mChildAcceptsDrag_ = YES;
          }
        }
      }
      
#line 1412
      if (mChildAcceptsDrag_) {
        retval = YES;
      }
    }
    
#line 1415
    break;
    
#line 1417
    case RepackagedAndroidViewDragEvent_ACTION_DRAG_ENDED:
    {
      if (mDragNotifiedChildren_ != nil) {
        for (RepackagedAndroidViewView * __strong child in mDragNotifiedChildren_) {
          
#line 1422
          [((RepackagedAndroidViewView *) nil_chk(child)) dispatchDragEventWithRepackagedAndroidViewDragEvent:event];
          child->mPrivateFlags2_ &= ~RepackagedAndroidViewView_DRAG_MASK;
          [child refreshDrawableState];
        }
        
#line 1427
        [mDragNotifiedChildren_ clear];
        if (mCurrentDrag_ != nil) {
          [mCurrentDrag_ recycle];
          mCurrentDrag_ = nil;
        }
      }
      
#line 1436
      if (mChildAcceptsDrag_) {
        retval = YES;
      }
    }
    
#line 1439
    break;
    
#line 1441
    case RepackagedAndroidViewDragEvent_ACTION_DRAG_LOCATION:
    {
      RepackagedAndroidViewView *target = [self findFrontmostDroppableChildAtWithFloat:event->mX_ withFloat:event->mY_ withRepackagedAndroidGraphicsPointF:localPoint];
      
#line 1451
      if (mCurrentDragView_ != target) {
        [((RepackagedAndroidViewViewRootImpl *) nil_chk(root)) setDragFocusWithRepackagedAndroidViewView:target];
        
#line 1454
        jint action = event->mAction_;
        
#line 1456
        if (mCurrentDragView_ != nil) {
          RepackagedAndroidViewView *view = mCurrentDragView_;
          event->mAction_ = RepackagedAndroidViewDragEvent_ACTION_DRAG_EXITED;
          [view dispatchDragEventWithRepackagedAndroidViewDragEvent:event];
          view->mPrivateFlags2_ &= ~RepackagedAndroidViewView_PFLAG2_DRAG_HOVERED;
          [view refreshDrawableState];
        }
        mCurrentDragView_ = target;
        
#line 1466
        if (target != nil) {
          event->mAction_ = RepackagedAndroidViewDragEvent_ACTION_DRAG_ENTERED;
          [target dispatchDragEventWithRepackagedAndroidViewDragEvent:event];
          target->mPrivateFlags2_ |= RepackagedAndroidViewView_PFLAG2_DRAG_HOVERED;
          [target refreshDrawableState];
        }
        event->mAction_ = action;
      }
      
#line 1476
      if (target != nil) {
        event->mX_ = ((RepackagedAndroidGraphicsPointF *) nil_chk(localPoint))->x_;
        event->mY_ = localPoint->y_;
        
#line 1480
        retval = [target dispatchDragEventWithRepackagedAndroidViewDragEvent:event];
        
#line 1482
        event->mX_ = tx;
        event->mY_ = ty;
      }
    }
    
#line 1485
    break;
    
#line 1499
    case RepackagedAndroidViewDragEvent_ACTION_DRAG_EXITED:
    {
      
#line 1500
      if (mCurrentDragView_ != nil) {
        RepackagedAndroidViewView *view = mCurrentDragView_;
        [view dispatchDragEventWithRepackagedAndroidViewDragEvent:event];
        view->mPrivateFlags2_ &= ~RepackagedAndroidViewView_PFLAG2_DRAG_HOVERED;
        [view refreshDrawableState];
        
#line 1506
        mCurrentDragView_ = nil;
      }
    }
    
#line 1508
    break;
    
#line 1510
    case RepackagedAndroidViewDragEvent_ACTION_DROP:
    {
      RepackagedAndroidViewView *target = [self findFrontmostDroppableChildAtWithFloat:event->mX_ withFloat:event->mY_ withRepackagedAndroidGraphicsPointF:localPoint];
      if (target != nil) {
        
#line 1515
        event->mX_ = ((RepackagedAndroidGraphicsPointF *) nil_chk(localPoint))->x_;
        event->mY_ = localPoint->y_;
        retval = [target dispatchDragEventWithRepackagedAndroidViewDragEvent:event];
        event->mX_ = tx;
        event->mY_ = ty;
      }
      else {
      }
    }
    
#line 1525
    break;
  }
  
#line 1529
  if (!retval) {
    
#line 1531
    retval = [super dispatchDragEventWithRepackagedAndroidViewDragEvent:event];
  }
  return retval;
}


#line 1538
- (RepackagedAndroidViewView *)findFrontmostDroppableChildAtWithFloat:(jfloat)x
                                                            withFloat:(jfloat)y
                                  withRepackagedAndroidGraphicsPointF:(RepackagedAndroidGraphicsPointF *)outLocalPoint {
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = count - 1; i >= 0; i--) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    if (![((RepackagedAndroidViewView *) nil_chk(child)) canAcceptDrag]) {
      continue;
    }
    
#line 1547
    if ([self isTransformedTouchPointInViewWithFloat:x withFloat:y withRepackagedAndroidViewView:child withRepackagedAndroidGraphicsPointF:outLocalPoint]) {
      return child;
    }
  }
  return nil;
}


#line 1554
- (jboolean)notifyChildOfDragWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  
#line 1559
  jboolean canAccept = NO;
  if (![((JavaUtilHashSet *) nil_chk(mDragNotifiedChildren_)) containsWithId:child]) {
    [mDragNotifiedChildren_ addWithId:child];
    canAccept = [((RepackagedAndroidViewView *) nil_chk(child)) dispatchDragEventWithRepackagedAndroidViewDragEvent:mCurrentDrag_];
    if (canAccept && ![child canAcceptDrag]) {
      child->mPrivateFlags2_ |= RepackagedAndroidViewView_PFLAG2_DRAG_CAN_ACCEPT;
      [child refreshDrawableState];
    }
  }
  return canAccept;
}


#line 1572
- (void)dispatchWindowSystemUiVisiblityChangedWithInt:(jint)visible {
  [super dispatchWindowSystemUiVisiblityChangedWithInt:visible];
  
#line 1575
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    [((RepackagedAndroidViewView *) nil_chk(child)) dispatchWindowSystemUiVisiblityChangedWithInt:visible];
  }
}

- (void)dispatchSystemUiVisibilityChangedWithInt:(jint)visible {
  [super dispatchSystemUiVisibilityChangedWithInt:visible];
  
#line 1587
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    [((RepackagedAndroidViewView *) nil_chk(child)) dispatchSystemUiVisibilityChangedWithInt:visible];
  }
}

- (jboolean)updateLocalSystemUiVisibilityWithInt:(jint)localValue
                                         withInt:(jint)localChanges {
  jboolean changed = [super updateLocalSystemUiVisibilityWithInt:localValue withInt:localChanges];
  
#line 1599
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    changed |= [((RepackagedAndroidViewView *) nil_chk(child)) updateLocalSystemUiVisibilityWithInt:localValue withInt:localChanges];
  }
  return changed;
}


#line 1612
- (jboolean)dispatchKeyEventPreImeWithRepackagedAndroidViewKeyEvent:(RepackagedAndroidViewKeyEvent *)event {
  if ((mPrivateFlags_ & (RepackagedAndroidViewView_PFLAG_FOCUSED | RepackagedAndroidViewView_PFLAG_HAS_BOUNDS)) ==
#line 1614
  (RepackagedAndroidViewView_PFLAG_FOCUSED | RepackagedAndroidViewView_PFLAG_HAS_BOUNDS)) {
    return [super dispatchKeyEventPreImeWithRepackagedAndroidViewKeyEvent:event];
  }
  else
#line 1616
  if (mFocused_ != nil && (mFocused_->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_HAS_BOUNDS) ==
#line 1617
  RepackagedAndroidViewView_PFLAG_HAS_BOUNDS) {
    return [mFocused_ dispatchKeyEventPreImeWithRepackagedAndroidViewKeyEvent:event];
  }
  return NO;
}


#line 1627
- (jboolean)dispatchKeyEventWithRepackagedAndroidViewKeyEvent:(RepackagedAndroidViewKeyEvent *)event {
  if (mInputEventConsistencyVerifier_ != nil) {
    [mInputEventConsistencyVerifier_ onKeyEventWithRepackagedAndroidViewKeyEvent:event withInt:1];
  }
  
#line 1632
  if ((mPrivateFlags_ & (RepackagedAndroidViewView_PFLAG_FOCUSED | RepackagedAndroidViewView_PFLAG_HAS_BOUNDS)) ==
#line 1633
  (RepackagedAndroidViewView_PFLAG_FOCUSED | RepackagedAndroidViewView_PFLAG_HAS_BOUNDS)) {
    if ([super dispatchKeyEventWithRepackagedAndroidViewKeyEvent:event]) {
      return YES;
    }
  }
  else
#line 1637
  if (mFocused_ != nil && (mFocused_->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_HAS_BOUNDS) ==
#line 1638
  RepackagedAndroidViewView_PFLAG_HAS_BOUNDS) {
    if ([mFocused_ dispatchKeyEventWithRepackagedAndroidViewKeyEvent:event]) {
      return YES;
    }
  }
  
#line 1644
  if (mInputEventConsistencyVerifier_ != nil) {
    [mInputEventConsistencyVerifier_ onUnhandledEventWithRepackagedAndroidViewKeyEvent:event withInt:1];
  }
  return NO;
}


#line 1654
- (jboolean)dispatchKeyShortcutEventWithRepackagedAndroidViewKeyEvent:(RepackagedAndroidViewKeyEvent *)event {
  if ((mPrivateFlags_ & (RepackagedAndroidViewView_PFLAG_FOCUSED | RepackagedAndroidViewView_PFLAG_HAS_BOUNDS)) ==
#line 1656
  (RepackagedAndroidViewView_PFLAG_FOCUSED | RepackagedAndroidViewView_PFLAG_HAS_BOUNDS)) {
    return [super dispatchKeyShortcutEventWithRepackagedAndroidViewKeyEvent:event];
  }
  else
#line 1658
  if (mFocused_ != nil && (mFocused_->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_HAS_BOUNDS) ==
#line 1659
  RepackagedAndroidViewView_PFLAG_HAS_BOUNDS) {
    return [mFocused_ dispatchKeyShortcutEventWithRepackagedAndroidViewKeyEvent:event];
  }
  return NO;
}


#line 1669
- (jboolean)dispatchTrackballEventWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event {
  if (mInputEventConsistencyVerifier_ != nil) {
    [mInputEventConsistencyVerifier_ onTrackballEventWithRepackagedAndroidViewMotionEvent:event withInt:1];
  }
  
#line 1674
  if ((mPrivateFlags_ & (RepackagedAndroidViewView_PFLAG_FOCUSED | RepackagedAndroidViewView_PFLAG_HAS_BOUNDS)) ==
#line 1675
  (RepackagedAndroidViewView_PFLAG_FOCUSED | RepackagedAndroidViewView_PFLAG_HAS_BOUNDS)) {
    if ([super dispatchTrackballEventWithRepackagedAndroidViewMotionEvent:event]) {
      return YES;
    }
  }
  else
#line 1679
  if (mFocused_ != nil && (mFocused_->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_HAS_BOUNDS) ==
#line 1680
  RepackagedAndroidViewView_PFLAG_HAS_BOUNDS) {
    if ([mFocused_ dispatchTrackballEventWithRepackagedAndroidViewMotionEvent:event]) {
      return YES;
    }
  }
  
#line 1686
  if (mInputEventConsistencyVerifier_ != nil) {
    [mInputEventConsistencyVerifier_ onUnhandledEventWithRepackagedAndroidViewMotionEvent:event withInt:1];
  }
  return NO;
}


#line 1697
- (jboolean)dispatchHoverEventWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event {
  jint action = [((RepackagedAndroidViewMotionEvent *) nil_chk(event)) getAction];
  
#line 1701
  jboolean interceptHover = [self onInterceptHoverEventWithRepackagedAndroidViewMotionEvent:event];
  [event setActionWithInt:action];
  
#line 1704
  RepackagedAndroidViewMotionEvent *eventNoHistory = event;
  jboolean handled = NO;
  
#line 1709
  RepackagedAndroidViewViewGroup_HoverTarget *firstOldHoverTarget = mFirstHoverTarget_;
  mFirstHoverTarget_ = nil;
  if (!interceptHover && action != RepackagedAndroidViewMotionEvent_ACTION_HOVER_EXIT) {
    jfloat x = [event getX];
    jfloat y = [event getY];
    jint childrenCount = mChildrenCount_;
    if (childrenCount != 0) {
      JavaUtilArrayList *preorderedList = [self buildOrderedChildList];
      jboolean customOrder = preorderedList == nil &&
#line 1718
      [self isChildrenDrawingOrderEnabled];
      IOSObjectArray *children = mChildren_;
      RepackagedAndroidViewViewGroup_HoverTarget *lastHoverTarget = nil;
      for (jint i = childrenCount - 1; i >= 0; i--) {
        jint childIndex = customOrder ? [self getChildDrawingOrderWithInt:childrenCount withInt:i] : i;
        RepackagedAndroidViewView *child = (preorderedList == nil) ? IOSObjectArray_Get(nil_chk(
#line 1724
        children), childIndex) : [preorderedList getWithInt:childIndex];
        if (!RepackagedAndroidViewViewGroup_canViewReceivePointerEventsWithRepackagedAndroidViewView_(child) ||
#line 1726
        ![self isTransformedTouchPointInViewWithFloat:x withFloat:y withRepackagedAndroidViewView:child withRepackagedAndroidGraphicsPointF:nil]) {
          continue;
        }
        
#line 1732
        RepackagedAndroidViewViewGroup_HoverTarget *hoverTarget = firstOldHoverTarget;
        jboolean wasHovered;
        for (RepackagedAndroidViewViewGroup_HoverTarget *predecessor = nil; ; ) {
          if (hoverTarget == nil) {
            hoverTarget = RepackagedAndroidViewViewGroup_HoverTarget_obtainWithRepackagedAndroidViewView_(child);
            wasHovered = NO;
            break;
          }
          
#line 1741
          if (((RepackagedAndroidViewViewGroup_HoverTarget *) nil_chk(hoverTarget))->child_ == child) {
            if (predecessor != nil) {
              predecessor->next_ = hoverTarget->next_;
            }
            else {
              
#line 1745
              firstOldHoverTarget = hoverTarget->next_;
            }
            hoverTarget->next_ = nil;
            wasHovered = YES;
            break;
          }
          
#line 1752
          predecessor = hoverTarget;
          hoverTarget = hoverTarget->next_;
        }
        
#line 1757
        if (lastHoverTarget != nil) {
          lastHoverTarget->next_ = hoverTarget;
        }
        else {
          
#line 1760
          mFirstHoverTarget_ = hoverTarget;
        }
        lastHoverTarget = hoverTarget;
        
#line 1765
        if (action == RepackagedAndroidViewMotionEvent_ACTION_HOVER_ENTER) {
          if (!wasHovered) {
            
#line 1768
            handled |= RepackagedAndroidViewViewGroup_dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent_withRepackagedAndroidViewView_(self,
#line 1769
            event, child);
          }
        }
        else
#line 1771
        if (action == RepackagedAndroidViewMotionEvent_ACTION_HOVER_MOVE) {
          if (!wasHovered) {
            
#line 1774
            eventNoHistory = RepackagedAndroidViewViewGroup_obtainMotionEventNoHistoryOrSelfWithRepackagedAndroidViewMotionEvent_(eventNoHistory);
            [((RepackagedAndroidViewMotionEvent *) nil_chk(eventNoHistory)) setActionWithInt:RepackagedAndroidViewMotionEvent_ACTION_HOVER_ENTER];
            handled |= RepackagedAndroidViewViewGroup_dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent_withRepackagedAndroidViewView_(self,
#line 1777
            eventNoHistory, child);
            [eventNoHistory setActionWithInt:action];
            
#line 1780
            handled |= RepackagedAndroidViewViewGroup_dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent_withRepackagedAndroidViewView_(self,
#line 1781
            eventNoHistory, child);
          }
          else {
            handled |= RepackagedAndroidViewViewGroup_dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent_withRepackagedAndroidViewView_(self, event, child);
          }
        }
        if (handled) {
          break;
        }
      }
      if (preorderedList != nil) [preorderedList clear];
    }
  }
  
#line 1796
  while (firstOldHoverTarget != nil) {
    RepackagedAndroidViewView *child = ((RepackagedAndroidViewViewGroup_HoverTarget *) nil_chk(firstOldHoverTarget))->child_;
    
#line 1800
    if (action == RepackagedAndroidViewMotionEvent_ACTION_HOVER_EXIT) {
      
#line 1802
      handled |= RepackagedAndroidViewViewGroup_dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent_withRepackagedAndroidViewView_(self,
#line 1803
      event, child);
    }
    else {
      
#line 1807
      if (action == RepackagedAndroidViewMotionEvent_ACTION_HOVER_MOVE) {
        RepackagedAndroidViewViewGroup_dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent_withRepackagedAndroidViewView_(self,
#line 1809
        event, child);
      }
      eventNoHistory = RepackagedAndroidViewViewGroup_obtainMotionEventNoHistoryOrSelfWithRepackagedAndroidViewMotionEvent_(eventNoHistory);
      [((RepackagedAndroidViewMotionEvent *) nil_chk(eventNoHistory)) setActionWithInt:RepackagedAndroidViewMotionEvent_ACTION_HOVER_EXIT];
      RepackagedAndroidViewViewGroup_dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent_withRepackagedAndroidViewView_(self,
#line 1814
      eventNoHistory, child);
      [eventNoHistory setActionWithInt:action];
    }
    
#line 1818
    RepackagedAndroidViewViewGroup_HoverTarget *nextOldHoverTarget = firstOldHoverTarget->next_;
    [firstOldHoverTarget recycle];
    firstOldHoverTarget = nextOldHoverTarget;
  }
  
#line 1824
  jboolean newHoveredSelf = !handled;
  if (newHoveredSelf == mHoveredSelf_) {
    if (newHoveredSelf) {
      
#line 1828
      handled |= [super dispatchHoverEventWithRepackagedAndroidViewMotionEvent:event];
    }
  }
  else {
    
#line 1831
    if (mHoveredSelf_) {
      
#line 1833
      if (action == RepackagedAndroidViewMotionEvent_ACTION_HOVER_EXIT) {
        
#line 1835
        handled |= [super dispatchHoverEventWithRepackagedAndroidViewMotionEvent:event];
      }
      else {
        
#line 1839
        if (action == RepackagedAndroidViewMotionEvent_ACTION_HOVER_MOVE) {
          [super dispatchHoverEventWithRepackagedAndroidViewMotionEvent:event];
        }
        eventNoHistory = RepackagedAndroidViewViewGroup_obtainMotionEventNoHistoryOrSelfWithRepackagedAndroidViewMotionEvent_(eventNoHistory);
        [((RepackagedAndroidViewMotionEvent *) nil_chk(eventNoHistory)) setActionWithInt:RepackagedAndroidViewMotionEvent_ACTION_HOVER_EXIT];
        [super dispatchHoverEventWithRepackagedAndroidViewMotionEvent:eventNoHistory];
        [eventNoHistory setActionWithInt:action];
      }
      mHoveredSelf_ = NO;
    }
    
#line 1850
    if (newHoveredSelf) {
      
#line 1852
      if (action == RepackagedAndroidViewMotionEvent_ACTION_HOVER_ENTER) {
        
#line 1854
        handled |= [super dispatchHoverEventWithRepackagedAndroidViewMotionEvent:event];
        mHoveredSelf_ = YES;
      }
      else
#line 1856
      if (action == RepackagedAndroidViewMotionEvent_ACTION_HOVER_MOVE) {
        
#line 1858
        eventNoHistory = RepackagedAndroidViewViewGroup_obtainMotionEventNoHistoryOrSelfWithRepackagedAndroidViewMotionEvent_(eventNoHistory);
        [((RepackagedAndroidViewMotionEvent *) nil_chk(eventNoHistory)) setActionWithInt:RepackagedAndroidViewMotionEvent_ACTION_HOVER_ENTER];
        handled |= [super dispatchHoverEventWithRepackagedAndroidViewMotionEvent:eventNoHistory];
        [eventNoHistory setActionWithInt:action];
        
#line 1863
        handled |= [super dispatchHoverEventWithRepackagedAndroidViewMotionEvent:eventNoHistory];
        mHoveredSelf_ = YES;
      }
    }
  }
  
#line 1870
  if (eventNoHistory != event) {
    [((RepackagedAndroidViewMotionEvent *) nil_chk(eventNoHistory)) recycle];
  }
  
#line 1875
  return handled;
}


#line 1878
- (void)exitHoverTargets {
  RepackagedAndroidViewViewGroup_exitHoverTargets(self);
}


#line 1889
- (void)cancelHoverTargetWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  RepackagedAndroidViewViewGroup_cancelHoverTargetWithRepackagedAndroidViewView_(self, view);
}


#line 1917
- (jboolean)hasHoveredChild {
  return mFirstHoverTarget_ != nil;
}


#line 1922
- (void)addChildrenForAccessibilityWithJavaUtilArrayList:(JavaUtilArrayList *)outChildren {
  if ([self getAccessibilityNodeProvider] != nil) {
    return;
  }
  RepackagedAndroidViewViewGroup_ChildListForAccessibility *children = RepackagedAndroidViewViewGroup_ChildListForAccessibility_obtainWithRepackagedAndroidViewViewGroup_withBoolean_(self, YES);
  @try {
    jint childrenCount = [((RepackagedAndroidViewViewGroup_ChildListForAccessibility *) nil_chk(children)) getChildCount];
    for (jint i = 0; i < childrenCount; i++) {
      RepackagedAndroidViewView *child = [children getChildAtWithInt:i];
      if ((((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE) {
        if ([child includeForAccessibility]) {
          [((JavaUtilArrayList *) nil_chk(outChildren)) addWithId:child];
        }
        else {
          
#line 1935
          [child addChildrenForAccessibilityWithJavaUtilArrayList:outChildren];
        }
      }
    }
  }
  @finally {
    
#line 1940
    [((RepackagedAndroidViewViewGroup_ChildListForAccessibility *) nil_chk(children)) recycle];
  }
}


#line 1982
- (jboolean)onInterceptHoverEventWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event {
  return NO;
}

+ (RepackagedAndroidViewMotionEvent *)obtainMotionEventNoHistoryOrSelfWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event {
  return RepackagedAndroidViewViewGroup_obtainMotionEventNoHistoryOrSelfWithRepackagedAndroidViewMotionEvent_(event);
}


#line 1997
- (jboolean)dispatchGenericPointerEventWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event {
  
#line 1999
  jint childrenCount = mChildrenCount_;
  if (childrenCount != 0) {
    jfloat x = [((RepackagedAndroidViewMotionEvent *) nil_chk(event)) getX];
    jfloat y = [event getY];
    
#line 2004
    JavaUtilArrayList *preorderedList = [self buildOrderedChildList];
    jboolean customOrder = preorderedList == nil &&
#line 2006
    [self isChildrenDrawingOrderEnabled];
    IOSObjectArray *children = mChildren_;
    for (jint i = childrenCount - 1; i >= 0; i--) {
      jint childIndex = customOrder ? [self getChildDrawingOrderWithInt:childrenCount withInt:i] : i;
      RepackagedAndroidViewView *child = (preorderedList == nil) ? IOSObjectArray_Get(nil_chk(
#line 2011
      children), childIndex) : [preorderedList getWithInt:childIndex];
      if (!RepackagedAndroidViewViewGroup_canViewReceivePointerEventsWithRepackagedAndroidViewView_(child) ||
#line 2013
      ![self isTransformedTouchPointInViewWithFloat:x withFloat:y withRepackagedAndroidViewView:child withRepackagedAndroidGraphicsPointF:nil]) {
        continue;
      }
      
#line 2017
      if (RepackagedAndroidViewViewGroup_dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent_withRepackagedAndroidViewView_(self, event, child)) {
        if (preorderedList != nil) [preorderedList clear];
        return YES;
      }
    }
    if (preorderedList != nil) [preorderedList clear];
  }
  
#line 2026
  return [super dispatchGenericPointerEventWithRepackagedAndroidViewMotionEvent:event];
}


#line 2033
- (jboolean)dispatchGenericFocusedEventWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event {
  
#line 2035
  if ((mPrivateFlags_ & (RepackagedAndroidViewView_PFLAG_FOCUSED | RepackagedAndroidViewView_PFLAG_HAS_BOUNDS)) ==
#line 2036
  (RepackagedAndroidViewView_PFLAG_FOCUSED | RepackagedAndroidViewView_PFLAG_HAS_BOUNDS)) {
    return [super dispatchGenericFocusedEventWithRepackagedAndroidViewMotionEvent:event];
  }
  else
#line 2038
  if (mFocused_ != nil && (mFocused_->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_HAS_BOUNDS) ==
#line 2039
  RepackagedAndroidViewView_PFLAG_HAS_BOUNDS) {
    return [mFocused_ dispatchGenericMotionEventWithRepackagedAndroidViewMotionEvent:event];
  }
  return NO;
}


#line 2053
- (jboolean)dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event
                                                         withRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  return RepackagedAndroidViewViewGroup_dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent_withRepackagedAndroidViewView_(self, event, child);
}


#line 2076
- (jboolean)dispatchTouchEventWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)ev {
  if (mInputEventConsistencyVerifier_ != nil) {
    [mInputEventConsistencyVerifier_ onTouchEventWithRepackagedAndroidViewMotionEvent:ev withInt:1];
  }
  
#line 2083
  if ([((RepackagedAndroidViewMotionEvent *) nil_chk(ev)) isTargetAccessibilityFocus] && [self isAccessibilityFocusedViewOrHost]) {
    [ev setTargetAccessibilityFocusWithBoolean:NO];
  }
  
#line 2087
  jboolean handled = NO;
  if ([self onFilterTouchEventForSecurityWithRepackagedAndroidViewMotionEvent:ev]) {
    jint action = [ev getAction];
    jint actionMasked = action & RepackagedAndroidViewMotionEvent_ACTION_MASK;
    
#line 2093
    if (actionMasked == RepackagedAndroidViewMotionEvent_ACTION_DOWN) {
      
#line 2097
      RepackagedAndroidViewViewGroup_cancelAndClearTouchTargetsWithRepackagedAndroidViewMotionEvent_(self, ev);
      RepackagedAndroidViewViewGroup_resetTouchState(self);
    }
    
#line 2102
    jboolean intercepted;
    if (actionMasked == RepackagedAndroidViewMotionEvent_ACTION_DOWN ||
#line 2104
    mFirstTouchTarget_ != nil) {
      jboolean disallowIntercept = (mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_DISALLOW_INTERCEPT) != 0;
      if (!disallowIntercept) {
        intercepted = [self onInterceptTouchEventWithRepackagedAndroidViewMotionEvent:ev];
        [ev setActionWithInt:action];
      }
      else {
        
#line 2110
        intercepted = NO;
      }
    }
    else {
      
#line 2115
      intercepted = YES;
    }
    
#line 2120
    if (intercepted || mFirstTouchTarget_ != nil) {
      [ev setTargetAccessibilityFocusWithBoolean:NO];
    }
    
#line 2125
    jboolean canceled = RepackagedAndroidViewViewGroup_resetCancelNextUpFlagWithRepackagedAndroidViewView_(self) ||
#line 2126
    actionMasked == RepackagedAndroidViewMotionEvent_ACTION_CANCEL;
    
#line 2129
    jboolean split = (mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_SPLIT_MOTION_EVENTS) != 0;
    RepackagedAndroidViewViewGroup_TouchTarget *newTouchTarget = nil;
    jboolean alreadyDispatchedToNewTouchTarget = NO;
    if (!canceled && !intercepted) {
      
#line 2139
      RepackagedAndroidViewView *childWithAccessibilityFocus = [ev isTargetAccessibilityFocus] ? RepackagedAndroidViewViewGroup_findChildWithAccessibilityFocus(self) :
#line 2140
      nil;
      
#line 2142
      if (actionMasked == RepackagedAndroidViewMotionEvent_ACTION_DOWN ||
#line 2143
      (split && actionMasked == RepackagedAndroidViewMotionEvent_ACTION_POINTER_DOWN) ||
#line 2144
      actionMasked == RepackagedAndroidViewMotionEvent_ACTION_HOVER_MOVE) {
        jint actionIndex = [ev getActionIndex];
        jint idBitsToAssign = split ? LShift32(1, [ev getPointerIdWithInt:actionIndex]) :
#line 2147
        RepackagedAndroidViewViewGroup_TouchTarget_ALL_POINTER_IDS;
        
#line 2151
        RepackagedAndroidViewViewGroup_removePointersFromTouchTargetsWithInt_(self, idBitsToAssign);
        
#line 2153
        jint childrenCount = mChildrenCount_;
        if (newTouchTarget == nil && childrenCount != 0) {
          jfloat x = [ev getXWithInt:actionIndex];
          jfloat y = [ev getYWithInt:actionIndex];
          
#line 2159
          JavaUtilArrayList *preorderedList = [self buildOrderedChildList];
          jboolean customOrder = preorderedList == nil &&
#line 2161
          [self isChildrenDrawingOrderEnabled];
          IOSObjectArray *children = mChildren_;
          for (jint i = childrenCount - 1; i >= 0; i--) {
            jint childIndex = customOrder ?
#line 2165
            [self getChildDrawingOrderWithInt:childrenCount withInt:i] : i;
            RepackagedAndroidViewView *child = (preorderedList == nil) ? IOSObjectArray_Get(nil_chk(
#line 2167
            children), childIndex) : [preorderedList getWithInt:childIndex];
            
#line 2173
            if (childWithAccessibilityFocus != nil) {
              if (childWithAccessibilityFocus != child) {
                continue;
              }
              childWithAccessibilityFocus = nil;
              i = childrenCount - 1;
            }
            
#line 2181
            if (!RepackagedAndroidViewViewGroup_canViewReceivePointerEventsWithRepackagedAndroidViewView_(child) ||
#line 2182
            ![self isTransformedTouchPointInViewWithFloat:x withFloat:y withRepackagedAndroidViewView:child withRepackagedAndroidGraphicsPointF:nil]) {
              [ev setTargetAccessibilityFocusWithBoolean:NO];
              continue;
            }
            
#line 2187
            newTouchTarget = RepackagedAndroidViewViewGroup_getTouchTargetWithRepackagedAndroidViewView_(self, child);
            if (newTouchTarget != nil) {
              
#line 2191
              newTouchTarget->pointerIdBits_ |= idBitsToAssign;
              break;
            }
            
#line 2195
            RepackagedAndroidViewViewGroup_resetCancelNextUpFlagWithRepackagedAndroidViewView_(child);
            if ([self dispatchTransformedTouchEventWithRepackagedAndroidViewMotionEvent:ev withBoolean:NO withRepackagedAndroidViewView:child withInt:idBitsToAssign]) {
              
#line 2198
              mLastTouchDownTime_ = [ev getDownTime];
              if (preorderedList != nil) {
                
#line 2201
                for (jint j = 0; j < childrenCount; j++) {
                  if (IOSObjectArray_Get(nil_chk(children), childIndex) == IOSObjectArray_Get(nil_chk(mChildren_), j)) {
                    mLastTouchDownIndex_ = j;
                    break;
                  }
                }
              }
              else {
                
#line 2208
                mLastTouchDownIndex_ = childIndex;
              }
              mLastTouchDownX_ = [ev getX];
              mLastTouchDownY_ = [ev getY];
              newTouchTarget = RepackagedAndroidViewViewGroup_addTouchTargetWithRepackagedAndroidViewView_withInt_(self, child, idBitsToAssign);
              alreadyDispatchedToNewTouchTarget = YES;
              break;
            }
            
#line 2219
            [ev setTargetAccessibilityFocusWithBoolean:NO];
          }
          if (preorderedList != nil) [preorderedList clear];
        }
        
#line 2224
        if (newTouchTarget == nil && mFirstTouchTarget_ != nil) {
          
#line 2227
          newTouchTarget = mFirstTouchTarget_;
          while (newTouchTarget->next_ != nil) {
            newTouchTarget = newTouchTarget->next_;
          }
          ((RepackagedAndroidViewViewGroup_TouchTarget *) nil_chk(newTouchTarget))->pointerIdBits_ |= idBitsToAssign;
        }
      }
    }
    
#line 2237
    if (mFirstTouchTarget_ == nil) {
      
#line 2239
      handled = [self dispatchTransformedTouchEventWithRepackagedAndroidViewMotionEvent:ev withBoolean:canceled withRepackagedAndroidViewView:nil withInt:
#line 2240
      RepackagedAndroidViewViewGroup_TouchTarget_ALL_POINTER_IDS];
    }
    else {
      
#line 2244
      RepackagedAndroidViewViewGroup_TouchTarget *predecessor = nil;
      RepackagedAndroidViewViewGroup_TouchTarget *target = mFirstTouchTarget_;
      while (target != nil) {
        RepackagedAndroidViewViewGroup_TouchTarget *next = target->next_;
        if (alreadyDispatchedToNewTouchTarget && target == newTouchTarget) {
          handled = YES;
        }
        else {
          
#line 2251
          jboolean cancelChild = RepackagedAndroidViewViewGroup_resetCancelNextUpFlagWithRepackagedAndroidViewView_(target->child_) ||
#line 2252
          intercepted;
          if ([self dispatchTransformedTouchEventWithRepackagedAndroidViewMotionEvent:ev withBoolean:cancelChild withRepackagedAndroidViewView:
#line 2254
          target->child_ withInt:target->pointerIdBits_]) {
            handled = YES;
          }
          if (cancelChild) {
            if (predecessor == nil) {
              mFirstTouchTarget_ = next;
            }
            else {
              
#line 2261
              predecessor->next_ = next;
            }
            [target recycle];
            target = next;
            continue;
          }
        }
        predecessor = target;
        target = next;
      }
    }
    
#line 2274
    if (canceled ||
#line 2275
    actionMasked == RepackagedAndroidViewMotionEvent_ACTION_UP ||
#line 2276
    actionMasked == RepackagedAndroidViewMotionEvent_ACTION_HOVER_MOVE) {
      RepackagedAndroidViewViewGroup_resetTouchState(self);
    }
    else
#line 2278
    if (split && actionMasked == RepackagedAndroidViewMotionEvent_ACTION_POINTER_UP) {
      jint actionIndex = [ev getActionIndex];
      jint idBitsToRemove = LShift32(1, [ev getPointerIdWithInt:actionIndex]);
      RepackagedAndroidViewViewGroup_removePointersFromTouchTargetsWithInt_(self, idBitsToRemove);
    }
  }
  
#line 2285
  if (!handled && mInputEventConsistencyVerifier_ != nil) {
    [mInputEventConsistencyVerifier_ onUnhandledEventWithRepackagedAndroidViewMotionEvent:ev withInt:1];
  }
  return handled;
}


#line 2296
- (RepackagedAndroidViewView *)findChildWithAccessibilityFocus {
  return RepackagedAndroidViewViewGroup_findChildWithAccessibilityFocus(self);
}


#line 2322
- (void)resetTouchState {
  RepackagedAndroidViewViewGroup_resetTouchState(self);
}


#line 2333
+ (jboolean)resetCancelNextUpFlagWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  return RepackagedAndroidViewViewGroup_resetCancelNextUpFlagWithRepackagedAndroidViewView_(view);
}


#line 2344
- (void)clearTouchTargets {
  RepackagedAndroidViewViewGroup_clearTouchTargets(self);
}


#line 2359
- (void)cancelAndClearTouchTargetsWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event {
  RepackagedAndroidViewViewGroup_cancelAndClearTouchTargetsWithRepackagedAndroidViewMotionEvent_(self, event);
}


#line 2386
- (RepackagedAndroidViewViewGroup_TouchTarget *)getTouchTargetWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  return RepackagedAndroidViewViewGroup_getTouchTargetWithRepackagedAndroidViewView_(self, child);
}


#line 2399
- (RepackagedAndroidViewViewGroup_TouchTarget *)addTouchTargetWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                                                    withInt:(jint)pointerIdBits {
  return RepackagedAndroidViewViewGroup_addTouchTargetWithRepackagedAndroidViewView_withInt_(self, child, pointerIdBits);
}


#line 2409
- (void)removePointersFromTouchTargetsWithInt:(jint)pointerIdBits {
  RepackagedAndroidViewViewGroup_removePointersFromTouchTargetsWithInt_(self, pointerIdBits);
}


#line 2432
- (void)cancelTouchTargetWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  RepackagedAndroidViewViewGroup_cancelTouchTargetWithRepackagedAndroidViewView_(self, view);
}


#line 2462
+ (jboolean)canViewReceivePointerEventsWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  return RepackagedAndroidViewViewGroup_canViewReceivePointerEventsWithRepackagedAndroidViewView_(child);
}


#line 2467
- (IOSFloatArray *)getTempPoint {
  return RepackagedAndroidViewViewGroup_getTempPoint(self);
}


#line 2480
- (jboolean)isTransformedTouchPointInViewWithFloat:(jfloat)x
                                         withFloat:(jfloat)y
                     withRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
               withRepackagedAndroidGraphicsPointF:(RepackagedAndroidGraphicsPointF *)outLocalPoint {
  
#line 2482
  IOSFloatArray *point = RepackagedAndroidViewViewGroup_getTempPoint(self);
  *IOSFloatArray_GetRef(nil_chk(point), 0) = x;
  *IOSFloatArray_GetRef(point, 1) = y;
  [self transformPointToViewLocalWithFloatArray:point withRepackagedAndroidViewView:child];
  jboolean isInView = [((RepackagedAndroidViewView *) nil_chk(child)) pointInViewWithFloat:IOSFloatArray_Get(point, 0) withFloat:IOSFloatArray_Get(point, 1)];
  if (isInView && outLocalPoint != nil) {
    [outLocalPoint setWithFloat:IOSFloatArray_Get(point, 0) withFloat:IOSFloatArray_Get(point, 1)];
  }
  return isInView;
}


#line 2496
- (void)transformPointToViewLocalWithFloatArray:(IOSFloatArray *)point
                  withRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  *IOSFloatArray_GetRef(nil_chk(point), 0) += mScrollX_ - ((RepackagedAndroidViewView *) nil_chk(child))->mLeft_;
  *IOSFloatArray_GetRef(point, 1) += mScrollY_ - child->mTop_;
  
#line 2500
  if (![child hasIdentityMatrix]) {
    [((RepackagedAndroidGraphicsMatrix *) nil_chk([child getInverseMatrix])) mapPointsWithFloatArray:point];
  }
}


#line 2510
- (jboolean)dispatchTransformedTouchEventWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)event
                                                                  withBoolean:(jboolean)cancel
                                                withRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                                      withInt:(jint)desiredPointerIdBits {
  
#line 2512
  jboolean handled;
  
#line 2516
  jint oldAction = [((RepackagedAndroidViewMotionEvent *) nil_chk(event)) getAction];
  if (cancel || oldAction == RepackagedAndroidViewMotionEvent_ACTION_CANCEL) {
    [event setActionWithInt:RepackagedAndroidViewMotionEvent_ACTION_CANCEL];
    if (child == nil) {
      handled = [super dispatchTouchEventWithRepackagedAndroidViewMotionEvent:event];
    }
    else {
      
#line 2522
      handled = [child dispatchTouchEventWithRepackagedAndroidViewMotionEvent:event];
    }
    [event setActionWithInt:oldAction];
    return handled;
  }
  
#line 2529
  jint oldPointerIdBits = [event getPointerIdBits];
  jint newPointerIdBits = oldPointerIdBits & desiredPointerIdBits;
  
#line 2534
  if (newPointerIdBits == 0) {
    return NO;
  }
  
#line 2542
  RepackagedAndroidViewMotionEvent *transformedEvent;
  if (newPointerIdBits == oldPointerIdBits) {
    if (child == nil || [child hasIdentityMatrix]) {
      if (child == nil) {
        handled = [super dispatchTouchEventWithRepackagedAndroidViewMotionEvent:event];
      }
      else {
        
#line 2548
        jfloat offsetX = mScrollX_ - child->mLeft_;
        jfloat offsetY = mScrollY_ - child->mTop_;
        [event offsetLocationWithFloat:offsetX withFloat:offsetY];
        
#line 2552
        handled = [child dispatchTouchEventWithRepackagedAndroidViewMotionEvent:event];
        
#line 2554
        [event offsetLocationWithFloat:-offsetX withFloat:-offsetY];
      }
      return handled;
    }
    transformedEvent = RepackagedAndroidViewMotionEvent_obtainWithRepackagedAndroidViewMotionEvent_(event);
  }
  else {
    
#line 2560
    transformedEvent = [event splitWithInt:newPointerIdBits];
  }
  
#line 2564
  if (child == nil) {
    handled = [super dispatchTouchEventWithRepackagedAndroidViewMotionEvent:transformedEvent];
  }
  else {
    
#line 2567
    jfloat offsetX = mScrollX_ - child->mLeft_;
    jfloat offsetY = mScrollY_ - child->mTop_;
    [((RepackagedAndroidViewMotionEvent *) nil_chk(transformedEvent)) offsetLocationWithFloat:offsetX withFloat:offsetY];
    if (![child hasIdentityMatrix]) {
      [transformedEvent transformWithRepackagedAndroidGraphicsMatrix:[child getInverseMatrix]];
    }
    
#line 2574
    handled = [child dispatchTouchEventWithRepackagedAndroidViewMotionEvent:transformedEvent];
  }
  
#line 2578
  [((RepackagedAndroidViewMotionEvent *) nil_chk(transformedEvent)) recycle];
  return handled;
}


#line 2597
- (void)setMotionEventSplittingEnabledWithBoolean:(jboolean)split {
  
#line 2601
  if (split) {
    mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_SPLIT_MOTION_EVENTS;
  }
  else {
    
#line 2604
    mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_SPLIT_MOTION_EVENTS;
  }
}


#line 2612
- (jboolean)isMotionEventSplittingEnabled {
  return (mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_SPLIT_MOTION_EVENTS) == RepackagedAndroidViewViewGroup_FLAG_SPLIT_MOTION_EVENTS;
}


#line 2628
- (jboolean)isTransitionGroup {
  if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_IS_TRANSITION_GROUP_SET) != 0) {
    return ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_IS_TRANSITION_GROUP) != 0);
  }
  else {
    
#line 2632
    RepackagedAndroidViewViewOutlineProvider *outlineProvider = [self getOutlineProvider];
    return [self getBackground] != nil || [self getTransitionName] != nil ||
#line 2634
    (outlineProvider != nil && outlineProvider != RepackagedAndroidViewViewOutlineProvider_get_BACKGROUND_());
  }
}


#line 2648
- (void)setTransitionGroupWithBoolean:(jboolean)isTransitionGroup {
  mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_IS_TRANSITION_GROUP_SET;
  if (isTransitionGroup) {
    mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_IS_TRANSITION_GROUP;
  }
  else {
    
#line 2653
    mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_IS_TRANSITION_GROUP;
  }
}

- (void)requestDisallowInterceptTouchEventWithBoolean:(jboolean)disallowIntercept {
  
#line 2662
  if (disallowIntercept == ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_DISALLOW_INTERCEPT) != 0)) {
    
#line 2664
    return;
  }
  
#line 2667
  if (disallowIntercept) {
    mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_DISALLOW_INTERCEPT;
  }
  else {
    
#line 2670
    mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_DISALLOW_INTERCEPT;
  }
  
#line 2674
  if (mParent_ != nil) {
    [mParent_ requestDisallowInterceptTouchEventWithBoolean:disallowIntercept];
  }
}


#line 2716
- (jboolean)onInterceptTouchEventWithRepackagedAndroidViewMotionEvent:(RepackagedAndroidViewMotionEvent *)ev {
  return NO;
}


#line 2735
- (jboolean)requestFocusWithInt:(jint)direction
withRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)previouslyFocusedRect {
  
#line 2740
  jint descendantFocusability = [self getDescendantFocusability];
  
#line 2742
  switch (descendantFocusability) {
    case RepackagedAndroidViewViewGroup_FOCUS_BLOCK_DESCENDANTS:
    return [super requestFocusWithInt:direction withRepackagedAndroidGraphicsRect:previouslyFocusedRect];
    case RepackagedAndroidViewViewGroup_FOCUS_BEFORE_DESCENDANTS:
    {
      
#line 2746
      jboolean took = [super requestFocusWithInt:direction withRepackagedAndroidGraphicsRect:previouslyFocusedRect];
      return took ? took : [self onRequestFocusInDescendantsWithInt:direction withRepackagedAndroidGraphicsRect:previouslyFocusedRect];
    }
    case RepackagedAndroidViewViewGroup_FOCUS_AFTER_DESCENDANTS:
    {
      
#line 2750
      jboolean took = [self onRequestFocusInDescendantsWithInt:direction withRepackagedAndroidGraphicsRect:previouslyFocusedRect];
      return took ? took : [super requestFocusWithInt:direction withRepackagedAndroidGraphicsRect:previouslyFocusedRect];
    }
    default:
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"descendant focusability must be one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS but is ",
#line 2756
    descendantFocusability));
  }
}


#line 2772
- (jboolean)onRequestFocusInDescendantsWithInt:(jint)direction
             withRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)previouslyFocusedRect {
  
#line 2774
  jint index;
  jint increment;
  jint end;
  jint count = mChildrenCount_;
  if ((direction & RepackagedAndroidViewView_FOCUS_FORWARD) != 0) {
    index = 0;
    increment = 1;
    end = count;
  }
  else {
    
#line 2783
    index = count - 1;
    increment = -1;
    end = -1;
  }
  IOSObjectArray *children = mChildren_;
  for (jint i = index; i != end; i += increment) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    if ((((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE) {
      if ([child requestFocusWithInt:direction withRepackagedAndroidGraphicsRect:previouslyFocusedRect]) {
        return YES;
      }
    }
  }
  return NO;
}


#line 2805
- (void)dispatchStartTemporaryDetach {
  [super dispatchStartTemporaryDetach];
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) dispatchStartTemporaryDetach];
  }
}


#line 2820
- (void)dispatchFinishTemporaryDetach {
  [super dispatchFinishTemporaryDetach];
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) dispatchFinishTemporaryDetach];
  }
}


#line 2833
- (void)dispatchAttachedToWindowWithRepackagedAndroidViewView_AttachInfo:(RepackagedAndroidViewView_AttachInfo *)info
                                                                 withInt:(jint)visibility {
  mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW;
  [super dispatchAttachedToWindowWithRepackagedAndroidViewView_AttachInfo:info withInt:visibility];
  mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW;
  
#line 2838
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    [child dispatchAttachedToWindowWithRepackagedAndroidViewView_AttachInfo:info withInt:
#line 2843
    [self combineVisibilityWithInt:visibility withInt:[((RepackagedAndroidViewView *) nil_chk(child)) getVisibility]]];
  }
  jint transientCount = mTransientIndices_ == nil ? 0 : [mTransientIndices_ size];
  for (jint i = 0; i < transientCount; ++i) {
    RepackagedAndroidViewView *view = [((id<JavaUtilList>) nil_chk(mTransientViews_)) getWithInt:i];
    [view dispatchAttachedToWindowWithRepackagedAndroidViewView_AttachInfo:info withInt:
#line 2849
    [self combineVisibilityWithInt:visibility withInt:[((RepackagedAndroidViewView *) nil_chk(view)) getVisibility]]];
  }
}


#line 2854
- (void)dispatchScreenStateChangedWithInt:(jint)screenState {
  [super dispatchScreenStateChangedWithInt:screenState];
  
#line 2857
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) dispatchScreenStateChangedWithInt:screenState];
  }
}


#line 2866
- (jboolean)dispatchPopulateAccessibilityEventInternalWithRepackagedAndroidViewAccessibilityAccessibilityEvent:(RepackagedAndroidViewAccessibilityAccessibilityEvent *)event {
  jboolean handled = NO;
  if ([self includeForAccessibility]) {
    handled = [super dispatchPopulateAccessibilityEventInternalWithRepackagedAndroidViewAccessibilityAccessibilityEvent:event];
    if (handled) {
      return handled;
    }
  }
  
#line 2875
  RepackagedAndroidViewViewGroup_ChildListForAccessibility *children = RepackagedAndroidViewViewGroup_ChildListForAccessibility_obtainWithRepackagedAndroidViewViewGroup_withBoolean_(self, YES);
  @try {
    jint childCount = [((RepackagedAndroidViewViewGroup_ChildListForAccessibility *) nil_chk(children)) getChildCount];
    for (jint i = 0; i < childCount; i++) {
      RepackagedAndroidViewView *child = [children getChildAtWithInt:i];
      if ((((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE) {
        handled = [child dispatchPopulateAccessibilityEventWithRepackagedAndroidViewAccessibilityAccessibilityEvent:event];
        if (handled) {
          return handled;
        }
      }
    }
  }
  @finally {
    
#line 2888
    [((RepackagedAndroidViewViewGroup_ChildListForAccessibility *) nil_chk(children)) recycle];
  }
  return NO;
}


#line 2898
- (void)dispatchProvideStructureWithRepackagedAndroidViewViewStructure:(RepackagedAndroidViewViewStructure *)structure {
  [super dispatchProvideStructureWithRepackagedAndroidViewViewStructure:structure];
  if (![self isAssistBlocked]) {
    if ([((RepackagedAndroidViewViewStructure *) nil_chk(structure)) getChildCount] == 0) {
      jint childrenCount = [self getChildCount];
      if (childrenCount > 0) {
        [structure setChildCountWithInt:childrenCount];
        JavaUtilArrayList *preorderedList = [self buildOrderedChildList];
        jboolean customOrder = preorderedList == nil &&
#line 2907
        [self isChildrenDrawingOrderEnabled];
        IOSObjectArray *children = mChildren_;
        for (jint i = 0; i < childrenCount; i++) {
          jint childIndex;
          @try {
            childIndex = customOrder ? [self getChildDrawingOrderWithInt:childrenCount withInt:i] : i;
          }
          @catch (
#line 2913
          JavaLangIndexOutOfBoundsException *e) {
            childIndex = i;
            if (((RepackagedAndroidContentPmApplicationInfo *) nil_chk([((id<RepackagedAndroidContentContext>) nil_chk(mContext_)) getApplicationInfo]))->targetSdkVersion_ <
#line 2916
            RepackagedAndroidOsBuild_VERSION_CODES_M) {
              RepackagedAndroidUtilLog_wWithNSString_withNSString_withJavaLangThrowable_(RepackagedAndroidViewViewGroup_TAG_, JreStrcat("$I$I", @"Bad getChildDrawingOrder while collecting assist @ ",
#line 2918
              i, @" of ", childrenCount), e);
              
#line 2922
              customOrder = NO;
              if (i > 0) {
                
#line 2930
                IOSIntArray *permutation = [IOSIntArray newArrayWithLength:childrenCount];
                RepackagedAndroidUtilSparseBooleanArray *usedIndices = new_RepackagedAndroidUtilSparseBooleanArray_init();
                
#line 2933
                for (jint j = 0; j < i; j++) {
                  *IOSIntArray_GetRef(permutation, j) = [self getChildDrawingOrderWithInt:childrenCount withInt:j];
                  [usedIndices putWithInt:IOSIntArray_Get(permutation, j) withBoolean:YES];
                }
                
#line 2939
                jint nextIndex = 0;
                for (jint j = i; j < childrenCount; j++) {
                  while ([usedIndices getWithInt:nextIndex withBoolean:NO]) {
                    nextIndex++;
                  }
                  *IOSIntArray_GetRef(permutation, j) = nextIndex;
                  nextIndex++;
                }
                
#line 2948
                preorderedList = new_JavaUtilArrayList_initWithInt_(childrenCount);
                for (jint j = 0; j < childrenCount; j++) {
                  [preorderedList addWithId:IOSObjectArray_Get(nil_chk(children), IOSIntArray_Get(permutation, j))];
                }
              }
            }
            else {
              
#line 2954
              @throw e;
            }
          }
          RepackagedAndroidViewView *child = (preorderedList == nil) ? IOSObjectArray_Get(nil_chk(
#line 2958
          children), childIndex) : [preorderedList getWithInt:childIndex];
          RepackagedAndroidViewViewStructure *cstructure = [structure newChildWithInt:i];
          [child dispatchProvideStructureWithRepackagedAndroidViewViewStructure:cstructure];
        }
      }
    }
  }
}


#line 2969
- (void)onInitializeAccessibilityNodeInfoInternalWithRepackagedAndroidViewAccessibilityAccessibilityNodeInfo:(RepackagedAndroidViewAccessibilityAccessibilityNodeInfo *)info {
  [super onInitializeAccessibilityNodeInfoInternalWithRepackagedAndroidViewAccessibilityAccessibilityNodeInfo:info];
  if ([self getAccessibilityNodeProvider] != nil) {
    return;
  }
  if (mAttachInfo_ != nil) {
    JavaUtilArrayList *childrenForAccessibility = mAttachInfo_->mTempArrayList_;
    [((JavaUtilArrayList *) nil_chk(childrenForAccessibility)) clear];
    [self addChildrenForAccessibilityWithJavaUtilArrayList:childrenForAccessibility];
    jint childrenForAccessibilityCount = [childrenForAccessibility size];
    for (jint i = 0; i < childrenForAccessibilityCount; i++) {
      RepackagedAndroidViewView *child = [childrenForAccessibility getWithInt:i];
      [((RepackagedAndroidViewAccessibilityAccessibilityNodeInfo *) nil_chk(info)) addChildUncheckedWithRepackagedAndroidViewView:child];
    }
    [childrenForAccessibility clear];
  }
}


#line 2988
- (id<JavaLangCharSequence>)getAccessibilityClassName {
  return [RepackagedAndroidViewViewGroup_class_() getName];
}


#line 2993
- (void)notifySubtreeAccessibilityStateChangedWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                              withRepackagedAndroidViewView:(RepackagedAndroidViewView *)source
                                                                    withInt:(jint)changeType {
  
#line 2996
  if ([self getAccessibilityLiveRegion] != RepackagedAndroidViewView_ACCESSIBILITY_LIVE_REGION_NONE) {
    [self notifyViewAccessibilityStateChangedIfNeededWithInt:changeType];
  }
  else
#line 2998
  if (mParent_ != nil) {
    @try {
      [mParent_ notifySubtreeAccessibilityStateChangedWithRepackagedAndroidViewView:self withRepackagedAndroidViewView:source withInt:changeType];
    }
    @catch (
#line 3001
    JavaLangAbstractMethodError *e) {
      RepackagedAndroidUtilLog_eWithNSString_withNSString_withJavaLangThrowable_(RepackagedAndroidViewView_get_VIEW_LOG_TAG_(), JreStrcat("$$", [[mParent_ getClass] getSimpleName], @" does not fully implement ViewParent"),
#line 3003
      e);
    }
  }
}


#line 3009
- (void)resetSubtreeAccessibilityStateChanged {
  [super resetSubtreeAccessibilityStateChanged];
  IOSObjectArray *children = mChildren_;
  jint childCount = mChildrenCount_;
  for (jint i = 0; i < childCount; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) resetSubtreeAccessibilityStateChanged];
  }
}


#line 3030
- (jboolean)onNestedPrePerformAccessibilityActionWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)target
                                                                       withInt:(jint)action
                                                 withRepackagedAndroidOsBundle:(RepackagedAndroidOsBundle *)args {
  return NO;
}


#line 3038
- (void)dispatchDetachedFromWindow {
  
#line 3044
  RepackagedAndroidViewViewGroup_cancelAndClearTouchTargetsWithRepackagedAndroidViewMotionEvent_(self, nil);
  
#line 3047
  RepackagedAndroidViewViewGroup_exitHoverTargets(self);
  
#line 3050
  mLayoutCalledWhileSuppressed_ = NO;
  
#line 3053
  mDragNotifiedChildren_ = nil;
  if (mCurrentDrag_ != nil) {
    [mCurrentDrag_ recycle];
    mCurrentDrag_ = nil;
  }
  
#line 3059
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) dispatchDetachedFromWindow];
  }
  [self clearDisappearingChildren];
  jint transientCount = mTransientViews_ == nil ? 0 : [((id<JavaUtilList>) nil_chk(mTransientIndices_)) size];
  for (jint i = 0; i < transientCount; ++i) {
    RepackagedAndroidViewView *view = [((id<JavaUtilList>) nil_chk(mTransientViews_)) getWithInt:i];
    [((RepackagedAndroidViewView *) nil_chk(view)) dispatchDetachedFromWindow];
  }
  [super dispatchDetachedFromWindow];
}


#line 3077
- (void)internalSetPaddingWithInt:(jint)left
                          withInt:(jint)top
                          withInt:(jint)right
                          withInt:(jint)bottom {
  [super internalSetPaddingWithInt:left withInt:top withInt:right withInt:bottom];
  
#line 3080
  if ((mPaddingLeft_ | mPaddingTop_ | mPaddingRight_ | mPaddingBottom_) != 0) {
    mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_PADDING_NOT_NULL;
  }
  else {
    
#line 3083
    mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_PADDING_NOT_NULL;
  }
}


#line 3091
- (void)dispatchSaveInstanceStateWithRepackagedAndroidUtilSparseArray:(RepackagedAndroidUtilSparseArray *)container {
  [super dispatchSaveInstanceStateWithRepackagedAndroidUtilSparseArray:container];
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *c = IOSObjectArray_Get(nil_chk(children), i);
    if ((((RepackagedAndroidViewView *) nil_chk(c))->mViewFlags_ & RepackagedAndroidViewView_PARENT_SAVE_DISABLED_MASK) != RepackagedAndroidViewView_PARENT_SAVE_DISABLED) {
      [c dispatchSaveInstanceStateWithRepackagedAndroidUtilSparseArray:container];
    }
  }
}


#line 3111
- (void)dispatchFreezeSelfOnlyWithRepackagedAndroidUtilSparseArray:(RepackagedAndroidUtilSparseArray *)container {
  [super dispatchSaveInstanceStateWithRepackagedAndroidUtilSparseArray:container];
}


#line 3119
- (void)dispatchRestoreInstanceStateWithRepackagedAndroidUtilSparseArray:(RepackagedAndroidUtilSparseArray *)container {
  [super dispatchRestoreInstanceStateWithRepackagedAndroidUtilSparseArray:container];
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *c = IOSObjectArray_Get(nil_chk(children), i);
    if ((((RepackagedAndroidViewView *) nil_chk(c))->mViewFlags_ & RepackagedAndroidViewView_PARENT_SAVE_DISABLED_MASK) != RepackagedAndroidViewView_PARENT_SAVE_DISABLED) {
      [c dispatchRestoreInstanceStateWithRepackagedAndroidUtilSparseArray:container];
    }
  }
}


#line 3139
- (void)dispatchThawSelfOnlyWithRepackagedAndroidUtilSparseArray:(RepackagedAndroidUtilSparseArray *)container {
  [super dispatchRestoreInstanceStateWithRepackagedAndroidUtilSparseArray:container];
}


#line 3148
- (void)setChildrenDrawingCacheEnabledWithBoolean:(jboolean)enabled {
  if (enabled || (mPersistentDrawingCache_ & RepackagedAndroidViewViewGroup_PERSISTENT_ALL_CACHES) != RepackagedAndroidViewViewGroup_PERSISTENT_ALL_CACHES) {
    IOSObjectArray *children = mChildren_;
    jint count = mChildrenCount_;
    for (jint i = 0; i < count; i++) {
      [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) setDrawingCacheEnabledWithBoolean:enabled];
    }
  }
}


#line 3159
- (RepackagedAndroidGraphicsBitmap *)createSnapshotWithRepackagedAndroidGraphicsBitmap_Config:(RepackagedAndroidGraphicsBitmap_Config *)quality
                                                                                      withInt:(jint)backgroundColor
                                                                                  withBoolean:(jboolean)skipChildren {
  jint count = mChildrenCount_;
  IOSIntArray *visibilities = nil;
  
#line 3163
  if (skipChildren) {
    visibilities = [IOSIntArray newArrayWithLength:count];
    for (jint i = 0; i < count; i++) {
      RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
      *IOSIntArray_GetRef(visibilities, i) = [((RepackagedAndroidViewView *) nil_chk(child)) getVisibility];
      if (IOSIntArray_Get(visibilities, i) == RepackagedAndroidViewView_VISIBLE) {
        [child setVisibilityWithInt:RepackagedAndroidViewView_INVISIBLE];
      }
    }
  }
  
#line 3174
  RepackagedAndroidGraphicsBitmap *b = [super createSnapshotWithRepackagedAndroidGraphicsBitmap_Config:quality withInt:backgroundColor withBoolean:skipChildren];
  
#line 3176
  if (skipChildren) {
    for (jint i = 0; i < count; i++) {
      [((RepackagedAndroidViewView *) nil_chk([self getChildAtWithInt:i])) setVisibilityWithInt:IOSIntArray_Get(nil_chk(visibilities), i)];
    }
  }
  
#line 3182
  return b;
}


#line 3186
- (jboolean)isLayoutModeOptical {
  return mLayoutMode_ == RepackagedAndroidViewViewGroup_LAYOUT_MODE_OPTICAL_BOUNDS;
}

- (RepackagedAndroidGraphicsInsets *)computeOpticalInsets {
  if ([self isLayoutModeOptical]) {
    jint left = 0;
    jint top = 0;
    jint right = 0;
    jint bottom = 0;
    for (jint i = 0; i < mChildrenCount_; i++) {
      RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
      if ([((RepackagedAndroidViewView *) nil_chk(child)) getVisibility] == RepackagedAndroidViewView_VISIBLE) {
        RepackagedAndroidGraphicsInsets *insets = [child getOpticalInsets];
        left = JavaLangMath_maxWithInt_withInt_(left, ((RepackagedAndroidGraphicsInsets *) nil_chk(insets))->left_);
        top = JavaLangMath_maxWithInt_withInt_(top, insets->top_);
        right = JavaLangMath_maxWithInt_withInt_(right, insets->right_);
        bottom = JavaLangMath_maxWithInt_withInt_(bottom, insets->bottom_);
      }
    }
    return RepackagedAndroidGraphicsInsets_ofWithInt_withInt_withInt_withInt_(left, top, right, bottom);
  }
  else {
    
#line 3208
    return RepackagedAndroidGraphicsInsets_get_NONE_();
  }
}


#line 3212
+ (void)fillRectWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas
                 withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint
                                            withInt:(jint)x1
                                            withInt:(jint)y1
                                            withInt:(jint)x2
                                            withInt:(jint)y2 {
  RepackagedAndroidViewViewGroup_fillRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(canvas, paint, x1, y1, x2, y2);
}


#line 3224
+ (jint)signWithInt:(jint)x {
  return RepackagedAndroidViewViewGroup_signWithInt_(x);
}

+ (void)drawCornerWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)c
                   withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint
                                              withInt:(jint)x1
                                              withInt:(jint)y1
                                              withInt:(jint)dx
                                              withInt:(jint)dy
                                              withInt:(jint)lw {
  RepackagedAndroidViewViewGroup_drawCornerWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_withInt_(c, paint, x1, y1, dx, dy, lw);
}


#line 3233
- (jint)dipsToPixelsWithInt:(jint)dips {
  return RepackagedAndroidViewViewGroup_dipsToPixelsWithInt_(self, dips);
}


#line 3238
+ (void)drawRectCornersWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas
                                                   withInt:(jint)x1
                                                   withInt:(jint)y1
                                                   withInt:(jint)x2
                                                   withInt:(jint)y2
                        withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint
                                                   withInt:(jint)lineLength
                                                   withInt:(jint)lineWidth {
  RepackagedAndroidViewViewGroup_drawRectCornersWithRepackagedAndroidGraphicsCanvas_withInt_withInt_withInt_withInt_withRepackagedAndroidGraphicsPaint_withInt_withInt_(canvas, x1, y1, x2, y2, paint, lineLength, lineWidth);
}


#line 3246
+ (void)fillDifferenceWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas
                                                  withInt:(jint)x2
                                                  withInt:(jint)y2
                                                  withInt:(jint)x3
                                                  withInt:(jint)y3
                                                  withInt:(jint)dx1
                                                  withInt:(jint)dy1
                                                  withInt:(jint)dx2
                                                  withInt:(jint)dy2
                       withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint {
  RepackagedAndroidViewViewGroup_fillDifferenceWithRepackagedAndroidGraphicsCanvas_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withRepackagedAndroidGraphicsPaint_(canvas, x2, y2, x3, y3, dx1, dy1, dx2, dy2, paint);
}


#line 3264
- (void)onDebugDrawMarginsWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas
                           withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint {
  for (jint i = 0; i < [self getChildCount]; i++) {
    RepackagedAndroidViewView *c = [self getChildAtWithInt:i];
    [((RepackagedAndroidViewViewGroup_LayoutParams *) nil_chk([((RepackagedAndroidViewView *) nil_chk(c)) getLayoutParams])) onDebugDrawWithRepackagedAndroidViewView:c withRepackagedAndroidGraphicsCanvas:canvas withRepackagedAndroidGraphicsPaint:paint];
  }
}


#line 3274
- (void)onDebugDrawWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas {
  RepackagedAndroidGraphicsPaint *paint = RepackagedAndroidViewViewGroup_getDebugPaint();
  {
    
#line 3279
    [((RepackagedAndroidGraphicsPaint *) nil_chk(paint)) setColorWithInt:RepackagedAndroidGraphicsColor_RED];
    [paint setStyleWithRepackagedAndroidGraphicsPaint_StyleEnum:RepackagedAndroidGraphicsPaint_StyleEnum_get_STROKE()];
    
#line 3282
    for (jint i = 0; i < [self getChildCount]; i++) {
      RepackagedAndroidViewView *c = [self getChildAtWithInt:i];
      if ([((RepackagedAndroidViewView *) nil_chk(c)) getVisibility] != RepackagedAndroidViewView_GONE) {
        RepackagedAndroidGraphicsInsets *insets = [c getOpticalInsets];
        
#line 3287
        RepackagedAndroidViewViewGroup_drawRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(canvas, paint,
#line 3288
        [c getLeft] + ((RepackagedAndroidGraphicsInsets *) nil_chk(insets))->left_,
#line 3289
        [c getTop] + insets->top_,
#line 3290
        [c getRight] - insets->right_ - 1,
#line 3291
        [c getBottom] - insets->bottom_ - 1);
      }
    }
  }
  {
    
#line 3298
    [paint setColorWithInt:RepackagedAndroidGraphicsColor_argbWithInt_withInt_withInt_withInt_(63, 255, 0, 255)];
    [paint setStyleWithRepackagedAndroidGraphicsPaint_StyleEnum:RepackagedAndroidGraphicsPaint_StyleEnum_get_FILL()];
    
#line 3301
    [self onDebugDrawMarginsWithRepackagedAndroidGraphicsCanvas:canvas withRepackagedAndroidGraphicsPaint:paint];
  }
  {
    
#line 3306
    [paint setColorWithInt:RepackagedAndroidGraphicsColor_rgbWithInt_withInt_withInt_(63, 127, 255)];
    [paint setStyleWithRepackagedAndroidGraphicsPaint_StyleEnum:RepackagedAndroidGraphicsPaint_StyleEnum_get_FILL()];
    
#line 3309
    jint lineLength = RepackagedAndroidViewViewGroup_dipsToPixelsWithInt_(self, 8);
    jint lineWidth = RepackagedAndroidViewViewGroup_dipsToPixelsWithInt_(self, 1);
    for (jint i = 0; i < [self getChildCount]; i++) {
      RepackagedAndroidViewView *c = [self getChildAtWithInt:i];
      if ([((RepackagedAndroidViewView *) nil_chk(c)) getVisibility] != RepackagedAndroidViewView_GONE) {
        RepackagedAndroidViewViewGroup_drawRectCornersWithRepackagedAndroidGraphicsCanvas_withInt_withInt_withInt_withInt_withRepackagedAndroidGraphicsPaint_withInt_withInt_(canvas, [c getLeft], [c getTop], [c getRight], [c getBottom],
#line 3315
        paint, lineLength, lineWidth);
      }
    }
  }
}


#line 3325
- (void)dispatchDrawWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas {
  jboolean usingRenderNodeProperties = [((RepackagedAndroidGraphicsCanvas *) nil_chk(canvas)) isRecordingForWithRepackagedAndroidViewRenderNode:mRenderNode_];
  jint childrenCount = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  jint flags = mGroupFlags_;
  
#line 3331
  if ((flags & RepackagedAndroidViewViewGroup_FLAG_RUN_ANIMATION) != 0 && [self canAnimate]) {
    jboolean buildCache = ![self isHardwareAccelerated];
    for (jint i = 0; i < childrenCount; i++) {
      RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
      if ((((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE) {
        RepackagedAndroidViewViewGroup_LayoutParams *params = [child getLayoutParams];
        [self attachLayoutAnimationParametersWithRepackagedAndroidViewView:child withRepackagedAndroidViewViewGroup_LayoutParams:params withInt:i withInt:childrenCount];
        RepackagedAndroidViewViewGroup_bindLayoutAnimationWithRepackagedAndroidViewView_(self, child);
      }
    }
    
#line 3342
    RepackagedAndroidViewAnimationLayoutAnimationController *controller = mLayoutAnimationController_;
    if ([((RepackagedAndroidViewAnimationLayoutAnimationController *) nil_chk(controller)) willOverlap]) {
      mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_OPTIMIZE_INVALIDATE;
    }
    
#line 3347
    [controller start];
    
#line 3349
    mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_RUN_ANIMATION;
    mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_ANIMATION_DONE;
    
#line 3352
    if (mAnimationListener_ != nil) {
      [mAnimationListener_ onAnimationStartWithId:[controller getAnimation]];
    }
  }
  
#line 3357
  jint clipSaveCount = 0;
  jboolean clipToPadding = (flags & RepackagedAndroidViewViewGroup_CLIP_TO_PADDING_MASK) == RepackagedAndroidViewViewGroup_CLIP_TO_PADDING_MASK;
  if (clipToPadding) {
    clipSaveCount = [canvas save];
    [canvas clipRectWithInt:mScrollX_ + mPaddingLeft_ withInt:mScrollY_ + mPaddingTop_ withInt:
#line 3362
    mScrollX_ + mRight_ - mLeft_ - mPaddingRight_ withInt:
#line 3363
    mScrollY_ + mBottom_ - mTop_ - mPaddingBottom_];
  }
  
#line 3367
  mPrivateFlags_ &= ~RepackagedAndroidViewView_PFLAG_DRAW_ANIMATION;
  mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_INVALIDATE_REQUIRED;
  
#line 3370
  jboolean more = NO;
  jlong drawingTime = [self getDrawingTime];
  
#line 3373
  if (usingRenderNodeProperties) [canvas insertReorderBarrier];
  jint transientCount = mTransientIndices_ == nil ? 0 : [mTransientIndices_ size];
  jint transientIndex = transientCount != 0 ? 0 : -1;
  
#line 3378
  JavaUtilArrayList *preorderedList = usingRenderNodeProperties ?
#line 3379
  nil : [self buildOrderedChildList];
  jboolean customOrder = preorderedList == nil &&
#line 3381
  [self isChildrenDrawingOrderEnabled];
  for (jint i = 0; i < childrenCount; i++) {
    while (transientIndex >= 0 && [((JavaLangInteger *) nil_chk([((id<JavaUtilList>) nil_chk(mTransientIndices_)) getWithInt:transientIndex])) intValue] == i) {
      RepackagedAndroidViewView *transientChild = [((id<JavaUtilList>) nil_chk(mTransientViews_)) getWithInt:transientIndex];
      if ((((RepackagedAndroidViewView *) nil_chk(transientChild))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE ||
#line 3386
      [transientChild getAnimation] != nil) {
        more |= [self drawChildWithRepackagedAndroidGraphicsCanvas:canvas withRepackagedAndroidViewView:transientChild withLong:drawingTime];
      }
      transientIndex++;
      if (transientIndex >= transientCount) {
        transientIndex = -1;
      }
    }
    jint childIndex = customOrder ? [self getChildDrawingOrderWithInt:childrenCount withInt:i] : i;
    RepackagedAndroidViewView *child = (preorderedList == nil) ? IOSObjectArray_Get(nil_chk(
#line 3396
    children), childIndex) : [preorderedList getWithInt:childIndex];
    if ((child->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE || [child getAnimation] != nil) {
      more |= [self drawChildWithRepackagedAndroidGraphicsCanvas:canvas withRepackagedAndroidViewView:child withLong:drawingTime];
    }
  }
  while (transientIndex >= 0) {
    
#line 3403
    RepackagedAndroidViewView *transientChild = [((id<JavaUtilList>) nil_chk(mTransientViews_)) getWithInt:transientIndex];
    if ((((RepackagedAndroidViewView *) nil_chk(transientChild))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE ||
#line 3405
    [transientChild getAnimation] != nil) {
      more |= [self drawChildWithRepackagedAndroidGraphicsCanvas:canvas withRepackagedAndroidViewView:transientChild withLong:drawingTime];
    }
    transientIndex++;
    if (transientIndex >= transientCount) {
      break;
    }
  }
  if (preorderedList != nil) [preorderedList clear];
  
#line 3416
  if (mDisappearingChildren_ != nil) {
    JavaUtilArrayList *disappearingChildren = mDisappearingChildren_;
    jint disappearingCount = [disappearingChildren size] - 1;
    
#line 3420
    for (jint i = disappearingCount; i >= 0; i--) {
      RepackagedAndroidViewView *child = [disappearingChildren getWithInt:i];
      more |= [self drawChildWithRepackagedAndroidGraphicsCanvas:canvas withRepackagedAndroidViewView:child withLong:drawingTime];
    }
  }
  if (usingRenderNodeProperties) [canvas insertInorderBarrier];
  
#line 3427
  if (RepackagedAndroidViewViewGroup_debugDraw(self)) {
    [self onDebugDrawWithRepackagedAndroidGraphicsCanvas:canvas];
  }
  
#line 3431
  if (clipToPadding) {
    [canvas restoreToCountWithInt:clipSaveCount];
  }
  
#line 3436
  flags = mGroupFlags_;
  
#line 3438
  if ((flags & RepackagedAndroidViewViewGroup_FLAG_INVALIDATE_REQUIRED) == RepackagedAndroidViewViewGroup_FLAG_INVALIDATE_REQUIRED) {
    [self invalidateWithBoolean:YES];
  }
  
#line 3442
  if ((flags & RepackagedAndroidViewViewGroup_FLAG_ANIMATION_DONE) == 0 && (flags & RepackagedAndroidViewViewGroup_FLAG_NOTIFY_ANIMATION_LISTENER) == 0 &&
#line 3443
  [((RepackagedAndroidViewAnimationLayoutAnimationController *) nil_chk(mLayoutAnimationController_)) isDone] && !more) {
    
#line 3447
    mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_NOTIFY_ANIMATION_LISTENER;
    id<JavaLangRunnable> end = new_RepackagedAndroidViewViewGroup_$3_initWithRepackagedAndroidViewViewGroup_(self);
    
#line 3453
    [self postWithJavaLangRunnable:end];
  }
}


#line 3474
- (RepackagedAndroidViewViewGroupOverlay *)getOverlay {
  if (mOverlay_ == nil) {
    mOverlay_ = new_RepackagedAndroidViewViewGroupOverlay_initWithRepackagedAndroidContentContext_withRepackagedAndroidViewView_(mContext_, self);
  }
  return (RepackagedAndroidViewViewGroupOverlay *) check_class_cast(mOverlay_, [RepackagedAndroidViewViewGroupOverlay class]);
}


#line 3495
- (jint)getChildDrawingOrderWithInt:(jint)childCount
                            withInt:(jint)i {
  return i;
}


#line 3499
- (jboolean)hasChildWithZ {
  return RepackagedAndroidViewViewGroup_hasChildWithZ(self);
}


#line 3514
- (JavaUtilArrayList *)buildOrderedChildList {
  jint count = mChildrenCount_;
  if (count <= 1 || !RepackagedAndroidViewViewGroup_hasChildWithZ(self)) return nil;
  
#line 3518
  if (mPreSortedChildren_ == nil) {
    mPreSortedChildren_ = new_JavaUtilArrayList_initWithInt_(count);
  }
  else {
    
#line 3521
    [mPreSortedChildren_ ensureCapacityWithInt:count];
  }
  
#line 3524
  jboolean useCustomOrder = [self isChildrenDrawingOrderEnabled];
  for (jint i = 0; i < mChildrenCount_; i++) {
    
#line 3527
    jint childIndex = useCustomOrder ? [self getChildDrawingOrderWithInt:mChildrenCount_ withInt:i] : i;
    RepackagedAndroidViewView *nextChild = IOSObjectArray_Get(nil_chk(mChildren_), childIndex);
    jfloat currentZ = [((RepackagedAndroidViewView *) nil_chk(nextChild)) getZ];
    
#line 3532
    jint insertIndex = i;
    while (insertIndex > 0 && [((RepackagedAndroidViewView *) nil_chk([((JavaUtilArrayList *) nil_chk(mPreSortedChildren_)) getWithInt:insertIndex - 1])) getZ] > currentZ) {
      insertIndex--;
    }
    [((JavaUtilArrayList *) nil_chk(mPreSortedChildren_)) addWithInt:insertIndex withId:nextChild];
  }
  return mPreSortedChildren_;
}


#line 3541
- (void)notifyAnimationListener {
  RepackagedAndroidViewViewGroup_notifyAnimationListener(self);
}


#line 3566
- (void)dispatchGetDisplayList {
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    if (((((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE || [child getAnimation] != nil)) {
      RepackagedAndroidViewViewGroup_recreateChildDisplayListWithRepackagedAndroidViewView_(self, child);
    }
  }
  if (mOverlay_ != nil) {
    RepackagedAndroidViewView *overlayView = [mOverlay_ getOverlayView];
    RepackagedAndroidViewViewGroup_recreateChildDisplayListWithRepackagedAndroidViewView_(self, overlayView);
  }
  if (mDisappearingChildren_ != nil) {
    JavaUtilArrayList *disappearingChildren = mDisappearingChildren_;
    jint disappearingCount = [disappearingChildren size];
    for (jint i = 0; i < disappearingCount; ++i) {
      RepackagedAndroidViewView *child = [disappearingChildren getWithInt:i];
      RepackagedAndroidViewViewGroup_recreateChildDisplayListWithRepackagedAndroidViewView_(self, child);
    }
  }
}

- (void)recreateChildDisplayListWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  RepackagedAndroidViewViewGroup_recreateChildDisplayListWithRepackagedAndroidViewView_(self, child);
}


#line 3607
- (jboolean)drawChildWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas
                           withRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                withLong:(jlong)drawingTime {
  return [((RepackagedAndroidViewView *) nil_chk(child)) drawWithRepackagedAndroidGraphicsCanvas:canvas withRepackagedAndroidViewViewGroup:self withLong:drawingTime];
}


#line 3612
- (void)getScrollIndicatorBoundsWithRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)outArg {
  [super getScrollIndicatorBoundsWithRepackagedAndroidGraphicsRect:outArg];
  
#line 3617
  jboolean clipToPadding = (mGroupFlags_ & RepackagedAndroidViewViewGroup_CLIP_TO_PADDING_MASK) == RepackagedAndroidViewViewGroup_CLIP_TO_PADDING_MASK;
  if (clipToPadding) {
    ((RepackagedAndroidGraphicsRect *) nil_chk(outArg))->left_ += mPaddingLeft_;
    outArg->right_ -= mPaddingRight_;
    outArg->top_ += mPaddingTop_;
    outArg->bottom_ -= mPaddingBottom_;
  }
}


#line 3635
- (jboolean)getClipChildren {
  return ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN) != 0);
}


#line 3647
- (void)setClipChildrenWithBoolean:(jboolean)clipChildren {
  jboolean previousValue = (mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN) == RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN;
  if (clipChildren != previousValue) {
    RepackagedAndroidViewViewGroup_setBooleanFlagWithInt_withBoolean_(self, RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN, clipChildren);
    for (jint i = 0; i < mChildrenCount_; ++i) {
      RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
      if (((RepackagedAndroidViewView *) nil_chk(child))->mRenderNode_ != nil) {
        [child->mRenderNode_ setClipToBoundsWithBoolean:clipChildren];
      }
    }
    [self invalidateWithBoolean:YES];
  }
}


#line 3672
- (void)setClipToPaddingWithBoolean:(jboolean)clipToPadding {
  if (RepackagedAndroidViewViewGroup_hasBooleanFlagWithInt_(self, RepackagedAndroidViewViewGroup_FLAG_CLIP_TO_PADDING) != clipToPadding) {
    RepackagedAndroidViewViewGroup_setBooleanFlagWithInt_withBoolean_(self, RepackagedAndroidViewViewGroup_FLAG_CLIP_TO_PADDING, clipToPadding);
    [self invalidateWithBoolean:YES];
  }
}


#line 3692
- (jboolean)getClipToPadding {
  return RepackagedAndroidViewViewGroup_hasBooleanFlagWithInt_(self, RepackagedAndroidViewViewGroup_FLAG_CLIP_TO_PADDING);
}


#line 3700
- (void)dispatchSetSelectedWithBoolean:(jboolean)selected {
  IOSObjectArray *children = mChildren_;
  jint count = mChildrenCount_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) setSelectedWithBoolean:selected];
  }
}


#line 3712
- (void)dispatchSetActivatedWithBoolean:(jboolean)activated {
  IOSObjectArray *children = mChildren_;
  jint count = mChildrenCount_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) setActivatedWithBoolean:activated];
  }
}


#line 3721
- (void)dispatchSetPressedWithBoolean:(jboolean)pressed {
  IOSObjectArray *children = mChildren_;
  jint count = mChildrenCount_;
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    
#line 3729
    if (!pressed || (![((RepackagedAndroidViewView *) nil_chk(child)) isClickable] && ![child isLongClickable])) {
      [((RepackagedAndroidViewView *) nil_chk(child)) setPressedWithBoolean:pressed];
    }
  }
}


#line 3750
- (void)dispatchDrawableHotspotChangedWithFloat:(jfloat)x
                                      withFloat:(jfloat)y {
  jint count = mChildrenCount_;
  if (count == 0) {
    return;
  }
  
#line 3756
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    
#line 3761
    jboolean nonActionable = ![((RepackagedAndroidViewView *) nil_chk(child)) isClickable] && ![child isLongClickable];
    jboolean duplicatesState = (child->mViewFlags_ & RepackagedAndroidViewView_DUPLICATE_PARENT_STATE) != 0;
    if (nonActionable || duplicatesState) {
      IOSFloatArray *point = RepackagedAndroidViewViewGroup_getTempPoint(self);
      *IOSFloatArray_GetRef(nil_chk(point), 0) = x;
      *IOSFloatArray_GetRef(point, 1) = y;
      [self transformPointToViewLocalWithFloatArray:point withRepackagedAndroidViewView:child];
      [child drawableHotspotChangedWithFloat:IOSFloatArray_Get(point, 0) withFloat:IOSFloatArray_Get(point, 1)];
    }
  }
}


#line 3774
- (void)dispatchCancelPendingInputEvents {
  [super dispatchCancelPendingInputEvents];
  
#line 3777
  IOSObjectArray *children = mChildren_;
  jint count = mChildrenCount_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) dispatchCancelPendingInputEvents];
  }
}


#line 3798
- (void)setStaticTransformationsEnabledWithBoolean:(jboolean)enabled {
  RepackagedAndroidViewViewGroup_setBooleanFlagWithInt_withBoolean_(self, RepackagedAndroidViewViewGroup_FLAG_SUPPORT_STATIC_TRANSFORMATIONS, enabled);
}


#line 3814
- (jboolean)getChildStaticTransformationWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                     withRepackagedAndroidViewAnimationTransformation:(RepackagedAndroidViewAnimationTransformation *)t {
  return NO;
}


#line 3818
- (RepackagedAndroidViewAnimationTransformation *)getChildTransformation {
  if (mChildTransformation_ == nil) {
    mChildTransformation_ = new_RepackagedAndroidViewAnimationTransformation_init();
  }
  return mChildTransformation_;
}


#line 3829
- (RepackagedAndroidViewView *)findViewTraversalWithInt:(jint)id_ {
  if (id_ == mID_) {
    return self;
  }
  
#line 3834
  IOSObjectArray *where = mChildren_;
  jint len = mChildrenCount_;
  
#line 3837
  for (jint i = 0; i < len; i++) {
    RepackagedAndroidViewView *v = IOSObjectArray_Get(nil_chk(where), i);
    
#line 3840
    if ((((RepackagedAndroidViewView *) nil_chk(v))->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_IS_ROOT_NAMESPACE) == 0) {
      v = [v findViewByIdWithInt:id_];
      
#line 3843
      if (v != nil) {
        return v;
      }
    }
  }
  
#line 3849
  return nil;
}


#line 3856
- (RepackagedAndroidViewView *)findViewWithTagTraversalWithId:(id)tag {
  if (tag != nil && [tag isEqual:mTag_]) {
    return self;
  }
  
#line 3861
  IOSObjectArray *where = mChildren_;
  jint len = mChildrenCount_;
  
#line 3864
  for (jint i = 0; i < len; i++) {
    RepackagedAndroidViewView *v = IOSObjectArray_Get(nil_chk(where), i);
    
#line 3867
    if ((((RepackagedAndroidViewView *) nil_chk(v))->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_IS_ROOT_NAMESPACE) == 0) {
      v = [v findViewWithTagWithId:tag];
      
#line 3870
      if (v != nil) {
        return v;
      }
    }
  }
  
#line 3876
  return nil;
}


#line 3883
- (RepackagedAndroidViewView *)findViewByPredicateTraversalWithRepackagedComAndroidInternalUtilPredicate:(id<RepackagedComAndroidInternalUtilPredicate>)predicate
                                                                           withRepackagedAndroidViewView:(RepackagedAndroidViewView *)childToSkip {
  if ([((id<RepackagedComAndroidInternalUtilPredicate>) nil_chk(predicate)) applyWithId:self]) {
    return self;
  }
  
#line 3888
  IOSObjectArray *where = mChildren_;
  jint len = mChildrenCount_;
  
#line 3891
  for (jint i = 0; i < len; i++) {
    RepackagedAndroidViewView *v = IOSObjectArray_Get(nil_chk(where), i);
    
#line 3894
    if (v != childToSkip && (((RepackagedAndroidViewView *) nil_chk(v))->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_IS_ROOT_NAMESPACE) == 0) {
      v = [v findViewByPredicateWithRepackagedComAndroidInternalUtilPredicate:predicate];
      
#line 3897
      if (v != nil) {
        return v;
      }
    }
  }
  
#line 3903
  return nil;
}


#line 3943
- (void)addTransientViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view
                                              withInt:(jint)index {
  if (index < 0) {
    return;
  }
  if (mTransientIndices_ == nil) {
    mTransientIndices_ = new_JavaUtilArrayList_init();
    mTransientViews_ = new_JavaUtilArrayList_init();
  }
  jint oldSize = [((id<JavaUtilList>) nil_chk(mTransientIndices_)) size];
  if (oldSize > 0) {
    jint insertionIndex;
    for (insertionIndex = 0; insertionIndex < oldSize; ++insertionIndex) {
      if (index < [((JavaLangInteger *) nil_chk([mTransientIndices_ getWithInt:insertionIndex])) intValue]) {
        break;
      }
    }
    [mTransientIndices_ addWithInt:insertionIndex withId:JavaLangInteger_valueOfWithInt_(index)];
    [((id<JavaUtilList>) nil_chk(mTransientViews_)) addWithInt:insertionIndex withId:view];
  }
  else {
    
#line 3962
    [mTransientIndices_ addWithId:JavaLangInteger_valueOfWithInt_(index)];
    [((id<JavaUtilList>) nil_chk(mTransientViews_)) addWithId:view];
  }
  ((RepackagedAndroidViewView *) nil_chk(view))->mParent_ = self;
  [view dispatchAttachedToWindowWithRepackagedAndroidViewView_AttachInfo:mAttachInfo_ withInt:(mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK)];
  [self invalidateWithBoolean:YES];
}


#line 3978
- (void)removeTransientViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  if (mTransientViews_ == nil) {
    return;
  }
  jint size = [((id<JavaUtilList>) nil_chk(mTransientViews_)) size];
  for (jint i = 0; i < size; ++i) {
    if (view == [mTransientViews_ getWithInt:i]) {
      (void) [mTransientViews_ removeWithInt:i];
      (void) [((id<JavaUtilList>) nil_chk(mTransientIndices_)) removeWithInt:i];
      ((RepackagedAndroidViewView *) nil_chk(view))->mParent_ = nil;
      [view dispatchDetachedFromWindow];
      [self invalidateWithBoolean:YES];
      return;
    }
  }
}


#line 4005
- (jint)getTransientViewCount {
  return mTransientIndices_ == nil ? 0 : [mTransientIndices_ size];
}


#line 4020
- (jint)getTransientViewIndexWithInt:(jint)position {
  if (position < 0 || mTransientIndices_ == nil || position >= [mTransientIndices_ size]) {
    return -1;
  }
  return [((JavaLangInteger *) nil_chk([((id<JavaUtilList>) nil_chk(mTransientIndices_)) getWithInt:position])) intValue];
}


#line 4038
- (RepackagedAndroidViewView *)getTransientViewWithInt:(jint)position {
  if (mTransientViews_ == nil || position >= [mTransientViews_ size]) {
    return nil;
  }
  return [((id<JavaUtilList>) nil_chk(mTransientViews_)) getWithInt:position];
}


#line 4057
- (void)addViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  [self addViewWithRepackagedAndroidViewView:child withInt:-1];
}


#line 4074
- (void)addViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                     withInt:(jint)index {
  if (child == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot add a null child view to a ViewGroup");
  }
  RepackagedAndroidViewViewGroup_LayoutParams *params = [((RepackagedAndroidViewView *) nil_chk(child)) getLayoutParams];
  if (params == nil) {
    params = [self generateDefaultLayoutParams];
    if (params == nil) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"generateDefaultLayoutParams() cannot return null");
    }
  }
  [self addViewWithRepackagedAndroidViewView:child withInt:index withRepackagedAndroidViewViewGroup_LayoutParams:params];
}


#line 4098
- (void)addViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                     withInt:(jint)width
                                     withInt:(jint)height {
  RepackagedAndroidViewViewGroup_LayoutParams *params = [self generateDefaultLayoutParams];
  ((RepackagedAndroidViewViewGroup_LayoutParams *) nil_chk(params))->width_ = width;
  params->height_ = height;
  [self addViewWithRepackagedAndroidViewView:child withInt:-1 withRepackagedAndroidViewViewGroup_LayoutParams:params];
}


#line 4115
- (void)addViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
withRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)params {
  [self addViewWithRepackagedAndroidViewView:child withInt:-1 withRepackagedAndroidViewViewGroup_LayoutParams:params];
}


#line 4130
- (void)addViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                     withInt:(jint)index
withRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)params {
  
#line 4135
  if (child == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot add a null child view to a ViewGroup");
  }
  
#line 4142
  [self requestLayout];
  [self invalidateWithBoolean:YES];
  RepackagedAndroidViewViewGroup_addViewInnerWithRepackagedAndroidViewView_withInt_withRepackagedAndroidViewViewGroup_LayoutParams_withBoolean_(self, child, index, params, NO);
}


#line 4150
- (void)updateViewLayoutWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view
      withRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)params {
  if (![self checkLayoutParamsWithRepackagedAndroidViewViewGroup_LayoutParams:params]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Invalid LayoutParams supplied to ", self));
  }
  if (((RepackagedAndroidViewView *) nil_chk(view))->mParent_ != self) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Given view not a child of ", self));
  }
  [view setLayoutParamsWithRepackagedAndroidViewViewGroup_LayoutParams:params];
}


#line 4163
- (jboolean)checkLayoutParamsWithRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)p {
  return p != nil;
}


#line 4196
- (void)setOnHierarchyChangeListenerWithRepackagedAndroidViewViewGroup_OnHierarchyChangeListener:(id<RepackagedAndroidViewViewGroup_OnHierarchyChangeListener>)listener {
  mOnHierarchyChangeListener_ = listener;
}

- (void)dispatchViewAddedWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  [self onViewAddedWithRepackagedAndroidViewView:child];
  if (mOnHierarchyChangeListener_ != nil) {
    [mOnHierarchyChangeListener_ onChildViewAddedWithRepackagedAndroidViewView:self withRepackagedAndroidViewView:child];
  }
}


#line 4213
- (void)onViewAddedWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
}

- (void)dispatchViewRemovedWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  [self onViewRemovedWithRepackagedAndroidViewView:child];
  if (mOnHierarchyChangeListener_ != nil) {
    [mOnHierarchyChangeListener_ onChildViewRemovedWithRepackagedAndroidViewView:self withRepackagedAndroidViewView:child];
  }
}


#line 4229
- (void)onViewRemovedWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
}

- (void)clearCachedLayoutMode {
  RepackagedAndroidViewViewGroup_clearCachedLayoutMode(self);
}


#line 4239
- (void)onAttachedToWindow {
  [super onAttachedToWindow];
  RepackagedAndroidViewViewGroup_clearCachedLayoutMode(self);
}


#line 4245
- (void)onDetachedFromWindow {
  [super onDetachedFromWindow];
  RepackagedAndroidViewViewGroup_clearCachedLayoutMode(self);
}


#line 4261
- (jboolean)addViewInLayoutWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                 withInt:(jint)index
         withRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)params {
  return [self addViewInLayoutWithRepackagedAndroidViewView:child withInt:index withRepackagedAndroidViewViewGroup_LayoutParams:params withBoolean:NO];
}


#line 4278
- (jboolean)addViewInLayoutWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                 withInt:(jint)index
         withRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)params
                                             withBoolean:(jboolean)preventRequestLayout {
  
#line 4280
  if (child == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot add a null child view to a ViewGroup");
  }
  ((RepackagedAndroidViewView *) nil_chk(child))->mParent_ = nil;
  RepackagedAndroidViewViewGroup_addViewInnerWithRepackagedAndroidViewView_withInt_withRepackagedAndroidViewViewGroup_LayoutParams_withBoolean_(self, child, index, params, preventRequestLayout);
  child->mPrivateFlags_ = (child->mPrivateFlags_ & ~RepackagedAndroidViewView_PFLAG_DIRTY_MASK) | RepackagedAndroidViewView_PFLAG_DRAWN;
  return YES;
}


#line 4294
- (void)cleanupLayoutStateWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  ((RepackagedAndroidViewView *) nil_chk(child))->mPrivateFlags_ &= ~RepackagedAndroidViewView_PFLAG_FORCE_LAYOUT;
}

- (void)addViewInnerWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                          withInt:(jint)index
  withRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)params
                                      withBoolean:(jboolean)preventRequestLayout {
  RepackagedAndroidViewViewGroup_addViewInnerWithRepackagedAndroidViewView_withInt_withRepackagedAndroidViewViewGroup_LayoutParams_withBoolean_(self, child, index, params, preventRequestLayout);
}


#line 4383
- (void)addInArrayWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                        withInt:(jint)index {
  RepackagedAndroidViewViewGroup_addInArrayWithRepackagedAndroidViewView_withInt_(self, child, index);
}


#line 4414
- (void)removeFromArrayWithInt:(jint)index {
  RepackagedAndroidViewViewGroup_removeFromArrayWithInt_(self, index);
}


#line 4437
- (void)removeFromArrayWithInt:(jint)start
                       withInt:(jint)count {
  RepackagedAndroidViewViewGroup_removeFromArrayWithInt_withInt_(self, start, count);
}


#line 4470
- (void)bindLayoutAnimationWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  RepackagedAndroidViewViewGroup_bindLayoutAnimationWithRepackagedAndroidViewView_(self, child);
}


#line 4485
- (void)attachLayoutAnimationParametersWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                     withRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)params
                                                             withInt:(jint)index
                                                             withInt:(jint)count {
  
#line 4487
  RepackagedAndroidViewAnimationLayoutAnimationController_AnimationParameters *animationParams = ((RepackagedAndroidViewViewGroup_LayoutParams *) nil_chk(
#line 4488
  params))->layoutAnimationParameters_;
  if (animationParams == nil) {
    animationParams = new_RepackagedAndroidViewAnimationLayoutAnimationController_AnimationParameters_init();
    params->layoutAnimationParameters_ = animationParams;
  }
  
#line 4494
  ((RepackagedAndroidViewAnimationLayoutAnimationController_AnimationParameters *) nil_chk(animationParams))->count_ = count;
  animationParams->index_ = index;
}


#line 4505
- (void)removeViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  if (RepackagedAndroidViewViewGroup_removeViewInternalWithRepackagedAndroidViewView_(self, view)) {
    [self requestLayout];
    [self invalidateWithBoolean:YES];
  }
}


#line 4522
- (void)removeViewInLayoutWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  RepackagedAndroidViewViewGroup_removeViewInternalWithRepackagedAndroidViewView_(self, view);
}


#line 4537
- (void)removeViewsInLayoutWithInt:(jint)start
                           withInt:(jint)count {
  RepackagedAndroidViewViewGroup_removeViewsInternalWithInt_withInt_(self, start, count);
}


#line 4550
- (void)removeViewAtWithInt:(jint)index {
  RepackagedAndroidViewViewGroup_removeViewInternalWithInt_withRepackagedAndroidViewView_(self, index, [self getChildAtWithInt:index]);
  [self requestLayout];
  [self invalidateWithBoolean:YES];
}


#line 4566
- (void)removeViewsWithInt:(jint)start
                   withInt:(jint)count {
  RepackagedAndroidViewViewGroup_removeViewsInternalWithInt_withInt_(self, start, count);
  [self requestLayout];
  [self invalidateWithBoolean:YES];
}


#line 4572
- (jboolean)removeViewInternalWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  return RepackagedAndroidViewViewGroup_removeViewInternalWithRepackagedAndroidViewView_(self, view);
}


#line 4581
- (void)removeViewInternalWithInt:(jint)index
    withRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  RepackagedAndroidViewViewGroup_removeViewInternalWithInt_withRepackagedAndroidViewView_(self, index, view);
}


#line 4649
- (void)setLayoutTransitionWithRepackagedAndroidAnimationLayoutTransition:(RepackagedAndroidAnimationLayoutTransition *)transition {
  if (mTransition_ != nil) {
    RepackagedAndroidAnimationLayoutTransition *previousTransition = mTransition_;
    [previousTransition cancel];
    [previousTransition removeTransitionListenerWithRepackagedAndroidAnimationLayoutTransition_TransitionListener:mLayoutTransitionListener_];
  }
  mTransition_ = transition;
  if (mTransition_ != nil) {
    [mTransition_ addTransitionListenerWithRepackagedAndroidAnimationLayoutTransition_TransitionListener:mLayoutTransitionListener_];
  }
}


#line 4670
- (RepackagedAndroidAnimationLayoutTransition *)getLayoutTransition {
  return mTransition_;
}

- (void)removeViewsInternalWithInt:(jint)start
                           withInt:(jint)count {
  RepackagedAndroidViewViewGroup_removeViewsInternalWithInt_withInt_(self, start, count);
}


#line 4733
- (void)removeAllViews {
  [self removeAllViewsInLayout];
  [self requestLayout];
  [self invalidateWithBoolean:YES];
}


#line 4752
- (void)removeAllViewsInLayout {
  jint count = mChildrenCount_;
  if (count <= 0) {
    return;
  }
  
#line 4758
  IOSObjectArray *children = mChildren_;
  mChildrenCount_ = 0;
  
#line 4761
  RepackagedAndroidViewView *focused = mFocused_;
  jboolean detach = mAttachInfo_ != nil;
  jboolean clearChildFocus = NO;
  
#line 4765
  [self needGlobalAttributesUpdateWithBoolean:NO];
  
#line 4767
  for (jint i = count - 1; i >= 0; i--) {
    RepackagedAndroidViewView *view = IOSObjectArray_Get(nil_chk(children), i);
    
#line 4770
    if (mTransition_ != nil) {
      [mTransition_ removeChildWithRepackagedAndroidViewViewGroup:self withRepackagedAndroidViewView:view];
    }
    
#line 4774
    if (view == focused) {
      [((RepackagedAndroidViewView *) nil_chk(view)) unFocusWithRepackagedAndroidViewView:nil];
      clearChildFocus = YES;
    }
    
#line 4779
    [((RepackagedAndroidViewView *) nil_chk(view)) clearAccessibilityFocus];
    
#line 4781
    RepackagedAndroidViewViewGroup_cancelTouchTargetWithRepackagedAndroidViewView_(self, view);
    RepackagedAndroidViewViewGroup_cancelHoverTargetWithRepackagedAndroidViewView_(self, view);
    
#line 4784
    if ([view getAnimation] != nil ||
#line 4785
    (mTransitioningViews_ != nil && [mTransitioningViews_ containsWithId:view])) {
      RepackagedAndroidViewViewGroup_addDisappearingViewWithRepackagedAndroidViewView_(self, view);
    }
    else
#line 4787
    if (detach) {
      [view dispatchDetachedFromWindow];
    }
    
#line 4791
    if ([view hasTransientState]) {
      [self childHasTransientStateChangedWithRepackagedAndroidViewView:view withBoolean:NO];
    }
    
#line 4795
    [self dispatchViewRemovedWithRepackagedAndroidViewView:view];
    
#line 4797
    view->mParent_ = nil;
    (void) IOSObjectArray_Set(children, i, nil);
  }
  
#line 4801
  if (clearChildFocus) {
    [self clearChildFocusWithRepackagedAndroidViewView:focused];
    if (![self rootViewRequestFocus]) {
      [self notifyGlobalFocusClearedWithRepackagedAndroidViewView:focused];
    }
  }
}


#line 4829
- (void)removeDetachedViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                            withBoolean:(jboolean)animate {
  if (mTransition_ != nil) {
    [mTransition_ removeChildWithRepackagedAndroidViewViewGroup:self withRepackagedAndroidViewView:child];
  }
  
#line 4834
  if (child == mFocused_) {
    [((RepackagedAndroidViewView *) nil_chk(child)) clearFocus];
  }
  
#line 4838
  [((RepackagedAndroidViewView *) nil_chk(child)) clearAccessibilityFocus];
  
#line 4840
  RepackagedAndroidViewViewGroup_cancelTouchTargetWithRepackagedAndroidViewView_(self, child);
  RepackagedAndroidViewViewGroup_cancelHoverTargetWithRepackagedAndroidViewView_(self, child);
  
#line 4843
  if ((animate && [child getAnimation] != nil) ||
#line 4844
  (mTransitioningViews_ != nil && [mTransitioningViews_ containsWithId:child])) {
    RepackagedAndroidViewViewGroup_addDisappearingViewWithRepackagedAndroidViewView_(self, child);
  }
  else
#line 4846
  if (child->mAttachInfo_ != nil) {
    [child dispatchDetachedFromWindow];
  }
  
#line 4850
  if ([child hasTransientState]) {
    [self childHasTransientStateChangedWithRepackagedAndroidViewView:child withBoolean:NO];
  }
  
#line 4854
  [self dispatchViewRemovedWithRepackagedAndroidViewView:child];
}


#line 4880
- (void)attachViewToParentWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                withInt:(jint)index
        withRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)params {
  ((RepackagedAndroidViewView *) nil_chk(child))->mLayoutParams_ = params;
  
#line 4883
  if (index < 0) {
    index = mChildrenCount_;
  }
  
#line 4887
  RepackagedAndroidViewViewGroup_addInArrayWithRepackagedAndroidViewView_withInt_(self, child, index);
  
#line 4889
  child->mParent_ = self;
  child->mPrivateFlags_ = (child->mPrivateFlags_ & ~RepackagedAndroidViewView_PFLAG_DIRTY_MASK &
#line 4891
  ~RepackagedAndroidViewView_PFLAG_DRAWING_CACHE_VALID) |
#line 4892
  RepackagedAndroidViewView_PFLAG_DRAWN | RepackagedAndroidViewView_PFLAG_INVALIDATED;
  self->mPrivateFlags_ |= RepackagedAndroidViewView_PFLAG_INVALIDATED;
  
#line 4895
  if ([child hasFocus]) {
    [self requestChildFocusWithRepackagedAndroidViewView:child withRepackagedAndroidViewView:[child findFocus]];
  }
}


#line 4917
- (void)detachViewFromParentWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  RepackagedAndroidViewViewGroup_removeFromArrayWithInt_(self, [self indexOfChildWithRepackagedAndroidViewView:child]);
}


#line 4938
- (void)detachViewFromParentWithInt:(jint)index {
  RepackagedAndroidViewViewGroup_removeFromArrayWithInt_(self, index);
}


#line 4960
- (void)detachViewsFromParentWithInt:(jint)start
                             withInt:(jint)count {
  RepackagedAndroidViewViewGroup_removeFromArrayWithInt_withInt_(self, start, count);
}


#line 4979
- (void)detachAllViewsFromParent {
  jint count = mChildrenCount_;
  if (count <= 0) {
    return;
  }
  
#line 4985
  IOSObjectArray *children = mChildren_;
  mChildrenCount_ = 0;
  
#line 4988
  for (jint i = count - 1; i >= 0; i--) {
    ((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i)))->mParent_ = nil;
    (void) IOSObjectArray_Set(children, i, nil);
  }
}


#line 4998
- (void)invalidateChildWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                   withRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)dirty {
  id<RepackagedAndroidViewViewParent> parent = self;
  
#line 5001
  RepackagedAndroidViewView_AttachInfo *attachInfo = mAttachInfo_;
  if (attachInfo != nil) {
    
#line 5006
    jboolean drawAnimation = (((RepackagedAndroidViewView *) nil_chk(child))->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_DRAW_ANIMATION) ==
#line 5007
    RepackagedAndroidViewView_PFLAG_DRAW_ANIMATION;
    
#line 5012
    RepackagedAndroidGraphicsMatrix *childMatrix = [child getMatrix];
    jboolean isOpaque = [child isOpaque] && !drawAnimation &&
#line 5014
    [child getAnimation] == nil && [((RepackagedAndroidGraphicsMatrix *) nil_chk(childMatrix)) isIdentity];
    
#line 5017
    jint opaqueFlag = isOpaque ? RepackagedAndroidViewView_PFLAG_DIRTY_OPAQUE : RepackagedAndroidViewView_PFLAG_DIRTY;
    
#line 5019
    if (child->mLayerType_ != RepackagedAndroidViewView_LAYER_TYPE_NONE) {
      mPrivateFlags_ |= RepackagedAndroidViewView_PFLAG_INVALIDATED;
      mPrivateFlags_ &= ~RepackagedAndroidViewView_PFLAG_DRAWING_CACHE_VALID;
    }
    
#line 5024
    IOSIntArray *location = attachInfo->mInvalidateChildLocation_;
    *IOSIntArray_GetRef(nil_chk(location), RepackagedAndroidViewViewGroup_CHILD_LEFT_INDEX) = child->mLeft_;
    *IOSIntArray_GetRef(location, RepackagedAndroidViewViewGroup_CHILD_TOP_INDEX) = child->mTop_;
    if (![((RepackagedAndroidGraphicsMatrix *) nil_chk(childMatrix)) isIdentity] ||
#line 5028
    (mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_SUPPORT_STATIC_TRANSFORMATIONS) != 0) {
      RepackagedAndroidGraphicsRectF *boundingRect = attachInfo->mTmpTransformRect_;
      [((RepackagedAndroidGraphicsRectF *) nil_chk(boundingRect)) setWithRepackagedAndroidGraphicsRect:dirty];
      RepackagedAndroidGraphicsMatrix *transformMatrix;
      if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_SUPPORT_STATIC_TRANSFORMATIONS) != 0) {
        RepackagedAndroidViewAnimationTransformation *t = attachInfo->mTmpTransformation_;
        jboolean transformed = [self getChildStaticTransformationWithRepackagedAndroidViewView:child withRepackagedAndroidViewAnimationTransformation:t];
        if (transformed) {
          transformMatrix = attachInfo->mTmpMatrix_;
          [((RepackagedAndroidGraphicsMatrix *) nil_chk(transformMatrix)) setWithRepackagedAndroidGraphicsMatrix:[((RepackagedAndroidViewAnimationTransformation *) nil_chk(t)) getMatrix]];
          if (![childMatrix isIdentity]) {
            [transformMatrix preConcatWithRepackagedAndroidGraphicsMatrix:childMatrix];
          }
        }
        else {
          
#line 5042
          transformMatrix = childMatrix;
        }
      }
      else {
        
#line 5045
        transformMatrix = childMatrix;
      }
      [((RepackagedAndroidGraphicsMatrix *) nil_chk(transformMatrix)) mapRectWithRepackagedAndroidGraphicsRectF:boundingRect];
      [((RepackagedAndroidGraphicsRect *) nil_chk(dirty)) setWithInt:J2ObjCFpToInt((boundingRect->left_ - 0.5f)) withInt:J2ObjCFpToInt(
#line 5049
      (boundingRect->top_ - 0.5f)) withInt:J2ObjCFpToInt(
#line 5050
      (boundingRect->right_ + 0.5f)) withInt:J2ObjCFpToInt(
#line 5051
      (boundingRect->bottom_ + 0.5f))];
    }
    
#line 5054
    do {
      RepackagedAndroidViewView *view = nil;
      if ([parent isKindOfClass:[RepackagedAndroidViewView class]]) {
        view = (RepackagedAndroidViewView *) check_class_cast(parent, [RepackagedAndroidViewView class]);
      }
      
#line 5060
      if (drawAnimation) {
        if (view != nil) {
          view->mPrivateFlags_ |= RepackagedAndroidViewView_PFLAG_DRAW_ANIMATION;
        }
        else
#line 5063
        if ([parent isKindOfClass:[RepackagedAndroidViewViewRootImpl class]]) {
          ((RepackagedAndroidViewViewRootImpl *) check_class_cast(parent, [RepackagedAndroidViewViewRootImpl class]))->mIsAnimating_ = YES;
        }
      }
      
#line 5070
      if (view != nil) {
        if ((view->mViewFlags_ & RepackagedAndroidViewView_FADING_EDGE_MASK) != 0 &&
#line 5072
        [view getSolidColor] == 0) {
          opaqueFlag = RepackagedAndroidViewView_PFLAG_DIRTY;
        }
        if ((view->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_DIRTY_MASK) != RepackagedAndroidViewView_PFLAG_DIRTY) {
          view->mPrivateFlags_ = (view->mPrivateFlags_ & ~RepackagedAndroidViewView_PFLAG_DIRTY_MASK) | opaqueFlag;
        }
      }
      
#line 5080
      parent = [parent invalidateChildInParentWithIntArray:location withRepackagedAndroidGraphicsRect:dirty];
      if (view != nil) {
        
#line 5083
        RepackagedAndroidGraphicsMatrix *m = [view getMatrix];
        if (![((RepackagedAndroidGraphicsMatrix *) nil_chk(m)) isIdentity]) {
          RepackagedAndroidGraphicsRectF *boundingRect = attachInfo->mTmpTransformRect_;
          [((RepackagedAndroidGraphicsRectF *) nil_chk(boundingRect)) setWithRepackagedAndroidGraphicsRect:dirty];
          [m mapRectWithRepackagedAndroidGraphicsRectF:boundingRect];
          [((RepackagedAndroidGraphicsRect *) nil_chk(dirty)) setWithInt:J2ObjCFpToInt((boundingRect->left_ - 0.5f)) withInt:J2ObjCFpToInt(
#line 5089
          (boundingRect->top_ - 0.5f)) withInt:J2ObjCFpToInt(
#line 5090
          (boundingRect->right_ + 0.5f)) withInt:J2ObjCFpToInt(
#line 5091
          (boundingRect->bottom_ + 0.5f))];
        }
      }
    }
    while (
#line 5094
    parent != nil);
  }
}


#line 5106
- (id<RepackagedAndroidViewViewParent>)invalidateChildInParentWithIntArray:(IOSIntArray *)location
                                         withRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)dirty {
  if ((mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_DRAWN) == RepackagedAndroidViewView_PFLAG_DRAWN ||
#line 5108
  (mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_DRAWING_CACHE_VALID) == RepackagedAndroidViewView_PFLAG_DRAWING_CACHE_VALID) {
    if ((mGroupFlags_ & (RepackagedAndroidViewViewGroup_FLAG_OPTIMIZE_INVALIDATE | RepackagedAndroidViewViewGroup_FLAG_ANIMATION_DONE)) !=
#line 5110
    RepackagedAndroidViewViewGroup_FLAG_OPTIMIZE_INVALIDATE) {
      [((RepackagedAndroidGraphicsRect *) nil_chk(dirty)) offsetWithInt:IOSIntArray_Get(nil_chk(location), RepackagedAndroidViewViewGroup_CHILD_LEFT_INDEX) - mScrollX_ withInt:
#line 5112
      IOSIntArray_Get(location, RepackagedAndroidViewViewGroup_CHILD_TOP_INDEX) - mScrollY_];
      if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN) == 0) {
        [dirty union__WithInt:0 withInt:0 withInt:mRight_ - mLeft_ withInt:mBottom_ - mTop_];
      }
      
#line 5117
      jint left = mLeft_;
      jint top = mTop_;
      
#line 5120
      if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN) == RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN) {
        if (![dirty intersectWithInt:0 withInt:0 withInt:mRight_ - left withInt:mBottom_ - top]) {
          [dirty setEmpty];
        }
      }
      mPrivateFlags_ &= ~RepackagedAndroidViewView_PFLAG_DRAWING_CACHE_VALID;
      
#line 5127
      *IOSIntArray_GetRef(location, RepackagedAndroidViewViewGroup_CHILD_LEFT_INDEX) = left;
      *IOSIntArray_GetRef(location, RepackagedAndroidViewViewGroup_CHILD_TOP_INDEX) = top;
      
#line 5130
      if (mLayerType_ != RepackagedAndroidViewView_LAYER_TYPE_NONE) {
        mPrivateFlags_ |= RepackagedAndroidViewView_PFLAG_INVALIDATED;
      }
      
#line 5134
      return mParent_;
    }
    else {
      mPrivateFlags_ &= ~RepackagedAndroidViewView_PFLAG_DRAWN & ~RepackagedAndroidViewView_PFLAG_DRAWING_CACHE_VALID;
      
#line 5139
      *IOSIntArray_GetRef(nil_chk(location), RepackagedAndroidViewViewGroup_CHILD_LEFT_INDEX) = mLeft_;
      *IOSIntArray_GetRef(location, RepackagedAndroidViewViewGroup_CHILD_TOP_INDEX) = mTop_;
      if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN) == RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN) {
        [((RepackagedAndroidGraphicsRect *) nil_chk(dirty)) setWithInt:0 withInt:0 withInt:mRight_ - mLeft_ withInt:mBottom_ - mTop_];
      }
      else {
        [((RepackagedAndroidGraphicsRect *) nil_chk(dirty)) union__WithInt:0 withInt:0 withInt:mRight_ - mLeft_ withInt:mBottom_ - mTop_];
      }
      
#line 5148
      if (mLayerType_ != RepackagedAndroidViewView_LAYER_TYPE_NONE) {
        mPrivateFlags_ |= RepackagedAndroidViewView_PFLAG_INVALIDATED;
      }
      
#line 5152
      return mParent_;
    }
  }
  
#line 5156
  return nil;
}


#line 5166
- (jboolean)damageChildDeferredWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  id<RepackagedAndroidViewViewParent> parent = [self getParent];
  while (parent != nil) {
    if ([parent isKindOfClass:[RepackagedAndroidViewViewGroup class]]) {
      parent = [((id<RepackagedAndroidViewViewParent>) nil_chk(parent)) getParent];
    }
    else
#line 5171
    if ([parent isKindOfClass:[RepackagedAndroidViewViewRootImpl class]]) {
      [((RepackagedAndroidViewViewRootImpl *) nil_chk(((RepackagedAndroidViewViewRootImpl *) check_class_cast(parent, [RepackagedAndroidViewViewRootImpl class])))) invalidate];
      return YES;
    }
    else {
      
#line 5175
      parent = nil;
    }
  }
  return NO;
}


#line 5188
- (void)damageChildWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
               withRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)dirty {
  if ([self damageChildDeferredWithRepackagedAndroidViewView:child]) {
    return;
  }
  
#line 5193
  id<RepackagedAndroidViewViewParent> parent = self;
  
#line 5195
  RepackagedAndroidViewView_AttachInfo *attachInfo = mAttachInfo_;
  if (attachInfo != nil) {
    jint left = ((RepackagedAndroidViewView *) nil_chk(child))->mLeft_;
    jint top = child->mTop_;
    if (![((RepackagedAndroidGraphicsMatrix *) nil_chk([child getMatrix])) isIdentity]) {
      [child transformRectWithRepackagedAndroidGraphicsRect:dirty];
    }
    
#line 5203
    do {
      if ([parent isKindOfClass:[RepackagedAndroidViewViewGroup class]]) {
        RepackagedAndroidViewViewGroup *parentVG = (RepackagedAndroidViewViewGroup *) check_class_cast(parent, [RepackagedAndroidViewViewGroup class]);
        if (parentVG->mLayerType_ != RepackagedAndroidViewView_LAYER_TYPE_NONE) {
          
#line 5208
          [parentVG invalidate];
          parent = nil;
        }
        else {
          
#line 5211
          parent = [parentVG damageChildInParentWithInt:left withInt:top withRepackagedAndroidGraphicsRect:dirty];
          left = parentVG->mLeft_;
          top = parentVG->mTop_;
        }
      }
      else {
        
#line 5218
        IOSIntArray *location = attachInfo->mInvalidateChildLocation_;
        *IOSIntArray_GetRef(nil_chk(location), 0) = left;
        *IOSIntArray_GetRef(location, 1) = top;
        parent = [parent invalidateChildInParentWithIntArray:location withRepackagedAndroidGraphicsRect:dirty];
      }
    }
    while (
#line 5223
    parent != nil);
  }
}


#line 5233
- (id<RepackagedAndroidViewViewParent>)damageChildInParentWithInt:(jint)left
                                                          withInt:(jint)top
                                withRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)dirty {
  if ((mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_DRAWN) != 0 ||
#line 5235
  (mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_DRAWING_CACHE_VALID) != 0) {
    [((RepackagedAndroidGraphicsRect *) nil_chk(dirty)) offsetWithInt:left - mScrollX_ withInt:top - mScrollY_];
    if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN) == 0) {
      [dirty union__WithInt:0 withInt:0 withInt:mRight_ - mLeft_ withInt:mBottom_ - mTop_];
    }
    
#line 5241
    if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN) == 0 ||
#line 5242
    [dirty intersectWithInt:0 withInt:0 withInt:mRight_ - mLeft_ withInt:mBottom_ - mTop_]) {
      
#line 5244
      if (![((RepackagedAndroidGraphicsMatrix *) nil_chk([self getMatrix])) isIdentity]) {
        [self transformRectWithRepackagedAndroidGraphicsRect:dirty];
      }
      
#line 5248
      return mParent_;
    }
  }
  
#line 5252
  return nil;
}


#line 5261
- (void)offsetDescendantRectToMyCoordsWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)descendant
                                  withRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)rect {
  RepackagedAndroidViewViewGroup_offsetDescendantRectToMyCoordsWithRepackagedAndroidViewView_withRepackagedAndroidGraphicsRect_(self, descendant, rect);
}


#line 5271
- (void)offsetRectIntoDescendantCoordsWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)descendant
                                  withRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)rect {
  [self offsetRectBetweenParentAndChildWithRepackagedAndroidViewView:descendant withRepackagedAndroidGraphicsRect:rect withBoolean:NO withBoolean:NO];
}


#line 5279
- (void)offsetRectBetweenParentAndChildWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)descendant
                                   withRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)rect
                                                         withBoolean:(jboolean)offsetFromChildToParent
                                                         withBoolean:(jboolean)clipToBounds {
  
#line 5283
  if (descendant == self) {
    return;
  }
  
#line 5287
  id<RepackagedAndroidViewViewParent> theParent = ((RepackagedAndroidViewView *) nil_chk(descendant))->mParent_;
  
#line 5290
  while ((theParent != nil) &&
#line 5291
  ([theParent isKindOfClass:[RepackagedAndroidViewView class]]) &&
#line 5292
  (theParent != self)) {
    
#line 5294
    if (offsetFromChildToParent) {
      [((RepackagedAndroidGraphicsRect *) nil_chk(rect)) offsetWithInt:descendant->mLeft_ - descendant->mScrollX_ withInt:
#line 5296
      descendant->mTop_ - descendant->mScrollY_];
      if (clipToBounds) {
        RepackagedAndroidViewView *p = (RepackagedAndroidViewView *) check_class_cast(theParent, [RepackagedAndroidViewView class]);
        jboolean intersected = [rect intersectWithInt:0 withInt:0 withInt:((RepackagedAndroidViewView *) nil_chk(p))->mRight_ - p->mLeft_ withInt:
#line 5300
        p->mBottom_ - p->mTop_];
        if (!intersected) {
          [rect setEmpty];
        }
      }
    }
    else {
      
#line 5306
      if (clipToBounds) {
        RepackagedAndroidViewView *p = (RepackagedAndroidViewView *) check_class_cast(theParent, [RepackagedAndroidViewView class]);
        jboolean intersected = [((RepackagedAndroidGraphicsRect *) nil_chk(rect)) intersectWithInt:0 withInt:0 withInt:((RepackagedAndroidViewView *) nil_chk(p))->mRight_ - p->mLeft_ withInt:
#line 5309
        p->mBottom_ - p->mTop_];
        if (!intersected) {
          [rect setEmpty];
        }
      }
      [((RepackagedAndroidGraphicsRect *) nil_chk(rect)) offsetWithInt:descendant->mScrollX_ - descendant->mLeft_ withInt:
#line 5315
      descendant->mScrollY_ - descendant->mTop_];
    }
    
#line 5318
    descendant = (RepackagedAndroidViewView *) check_class_cast(theParent, [RepackagedAndroidViewView class]);
    theParent = ((RepackagedAndroidViewView *) nil_chk(descendant))->mParent_;
  }
  
#line 5324
  if (theParent == self) {
    if (offsetFromChildToParent) {
      [((RepackagedAndroidGraphicsRect *) nil_chk(rect)) offsetWithInt:((RepackagedAndroidViewView *) nil_chk(descendant))->mLeft_ - descendant->mScrollX_ withInt:
#line 5327
      descendant->mTop_ - descendant->mScrollY_];
    }
    else {
      
#line 5329
      [((RepackagedAndroidGraphicsRect *) nil_chk(rect)) offsetWithInt:((RepackagedAndroidViewView *) nil_chk(descendant))->mScrollX_ - descendant->mLeft_ withInt:
#line 5330
      descendant->mScrollY_ - descendant->mTop_];
    }
  }
  else {
    
#line 5333
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"parameter must be a descendant of this view");
  }
}


#line 5344
- (void)offsetChildrenTopAndBottomWithInt:(jint)offset {
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  jboolean invalidate = NO;
  
#line 5349
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *v = IOSObjectArray_Get(nil_chk(children), i);
    ((RepackagedAndroidViewView *) nil_chk(v))->mTop_ += offset;
    v->mBottom_ += offset;
    if (v->mRenderNode_ != nil) {
      invalidate = YES;
      [v->mRenderNode_ offsetTopAndBottomWithInt:offset];
    }
  }
  
#line 5359
  if (invalidate) {
    [self invalidateViewPropertyWithBoolean:NO withBoolean:NO];
  }
  [self notifySubtreeAccessibilityStateChangedIfNeeded];
}


#line 5368
- (jboolean)getChildVisibleRectWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                           withRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)r
                          withRepackagedAndroidGraphicsPoint:(RepackagedAndroidGraphicsPoint *)offset {
  
#line 5372
  RepackagedAndroidGraphicsRectF *rect = mAttachInfo_ != nil ? mAttachInfo_->mTmpTransformRect_ : new_RepackagedAndroidGraphicsRectF_init();
  [rect setWithRepackagedAndroidGraphicsRect:r];
  
#line 5375
  if (![((RepackagedAndroidViewView *) nil_chk(child)) hasIdentityMatrix]) {
    [((RepackagedAndroidGraphicsMatrix *) nil_chk([child getMatrix])) mapRectWithRepackagedAndroidGraphicsRectF:rect];
  }
  
#line 5379
  jint dx = child->mLeft_ - mScrollX_;
  jint dy = child->mTop_ - mScrollY_;
  
#line 5382
  [rect offsetWithFloat:dx withFloat:dy];
  
#line 5384
  if (offset != nil) {
    if (![child hasIdentityMatrix]) {
      IOSFloatArray *position = mAttachInfo_ != nil ? mAttachInfo_->mTmpTransformLocation_ : [IOSFloatArray newArrayWithLength:
#line 5387
      2];
      *IOSFloatArray_GetRef(position, 0) = offset->x_;
      *IOSFloatArray_GetRef(position, 1) = offset->y_;
      [((RepackagedAndroidGraphicsMatrix *) nil_chk([child getMatrix])) mapPointsWithFloatArray:position];
      offset->x_ = J2ObjCFpToInt((IOSFloatArray_Get(position, 0) + 0.5f));
      offset->y_ = J2ObjCFpToInt((IOSFloatArray_Get(position, 1) + 0.5f));
    }
    offset->x_ += dx;
    offset->y_ += dy;
  }
  
#line 5398
  jint width = mRight_ - mLeft_;
  jint height = mBottom_ - mTop_;
  
#line 5401
  jboolean rectIsVisible = YES;
  if (mParent_ == nil ||
#line 5403
  ([mParent_ isKindOfClass:[RepackagedAndroidViewViewGroup class]] && [((RepackagedAndroidViewViewGroup *) check_class_cast(mParent_, [RepackagedAndroidViewViewGroup class])) getClipChildren])) {
    
#line 5405
    rectIsVisible = [rect intersectWithFloat:0 withFloat:0 withFloat:width withFloat:height];
  }
  
#line 5408
  if (rectIsVisible && (mGroupFlags_ & RepackagedAndroidViewViewGroup_CLIP_TO_PADDING_MASK) == RepackagedAndroidViewViewGroup_CLIP_TO_PADDING_MASK) {
    
#line 5410
    rectIsVisible = [rect intersectWithFloat:mPaddingLeft_ withFloat:mPaddingTop_ withFloat:
#line 5411
    width - mPaddingRight_ withFloat:height - mPaddingBottom_];
  }
  
#line 5414
  if (rectIsVisible && mClipBounds_ != nil) {
    
#line 5416
    rectIsVisible = [rect intersectWithFloat:mClipBounds_->left_ withFloat:mClipBounds_->top_ withFloat:mClipBounds_->right_ withFloat:
#line 5417
    mClipBounds_->bottom_];
  }
  [((RepackagedAndroidGraphicsRect *) nil_chk(r)) setWithInt:J2ObjCFpToInt((rect->left_ + 0.5f)) withInt:J2ObjCFpToInt((rect->top_ + 0.5f)) withInt:J2ObjCFpToInt((rect->right_ + 0.5f)) withInt:J2ObjCFpToInt(
#line 5420
  (rect->bottom_ + 0.5f))];
  if (rectIsVisible && mParent_ != nil) {
    rectIsVisible = [mParent_ getChildVisibleRectWithRepackagedAndroidViewView:self withRepackagedAndroidGraphicsRect:r withRepackagedAndroidGraphicsPoint:offset];
  }
  return rectIsVisible;
}


#line 5431
- (void)layoutWithInt:(jint)l
              withInt:(jint)t
              withInt:(jint)r
              withInt:(jint)b {
  if (!mSuppressLayout_ && (mTransition_ == nil || ![mTransition_ isChangingLayout])) {
    if (mTransition_ != nil) {
      [mTransition_ layoutChangeWithRepackagedAndroidViewViewGroup:self];
    }
    [super layoutWithInt:l withInt:t withInt:r withInt:b];
  }
  else {
    mLayoutCalledWhileSuppressed_ = YES;
  }
}


#line 5447
- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)canAnimate {
  return mLayoutAnimationController_ != nil;
}


#line 5464
- (void)startLayoutAnimation {
  if (mLayoutAnimationController_ != nil) {
    mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_RUN_ANIMATION;
    [self requestLayout];
  }
}


#line 5477
- (void)scheduleLayoutAnimation {
  mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_RUN_ANIMATION;
}


#line 5487
- (void)setLayoutAnimationWithRepackagedAndroidViewAnimationLayoutAnimationController:(RepackagedAndroidViewAnimationLayoutAnimationController *)controller {
  mLayoutAnimationController_ = controller;
  if (mLayoutAnimationController_ != nil) {
    mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_RUN_ANIMATION;
  }
}


#line 5500
- (RepackagedAndroidViewAnimationLayoutAnimationController *)getLayoutAnimation {
  return mLayoutAnimationController_;
}


#line 5518
- (jboolean)isAnimationCacheEnabled {
  return (mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_ANIMATION_CACHE) == RepackagedAndroidViewViewGroup_FLAG_ANIMATION_CACHE;
}


#line 5536
- (void)setAnimationCacheEnabledWithBoolean:(jboolean)enabled {
  RepackagedAndroidViewViewGroup_setBooleanFlagWithInt_withBoolean_(self, RepackagedAndroidViewViewGroup_FLAG_ANIMATION_CACHE, enabled);
}


#line 5553
- (jboolean)isAlwaysDrawnWithCacheEnabled {
  return (mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_ALWAYS_DRAWN_WITH_CACHE) == RepackagedAndroidViewViewGroup_FLAG_ALWAYS_DRAWN_WITH_CACHE;
}


#line 5577
- (void)setAlwaysDrawnWithCacheEnabledWithBoolean:(jboolean)always {
  RepackagedAndroidViewViewGroup_setBooleanFlagWithInt_withBoolean_(self, RepackagedAndroidViewViewGroup_FLAG_ALWAYS_DRAWN_WITH_CACHE, always);
}


#line 5594
- (jboolean)isChildrenDrawnWithCacheEnabled {
  return (mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_CHILDREN_DRAWN_WITH_CACHE) == RepackagedAndroidViewViewGroup_FLAG_CHILDREN_DRAWN_WITH_CACHE;
}


#line 5615
- (void)setChildrenDrawnWithCacheEnabledWithBoolean:(jboolean)enabled {
  RepackagedAndroidViewViewGroup_setBooleanFlagWithInt_withBoolean_(self, RepackagedAndroidViewViewGroup_FLAG_CHILDREN_DRAWN_WITH_CACHE, enabled);
}


#line 5630
- (jboolean)isChildrenDrawingOrderEnabled {
  return (mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_USE_CHILD_DRAWING_ORDER) == RepackagedAndroidViewViewGroup_FLAG_USE_CHILD_DRAWING_ORDER;
}


#line 5647
- (void)setChildrenDrawingOrderEnabledWithBoolean:(jboolean)enabled {
  RepackagedAndroidViewViewGroup_setBooleanFlagWithInt_withBoolean_(self, RepackagedAndroidViewViewGroup_FLAG_USE_CHILD_DRAWING_ORDER, enabled);
}

- (jboolean)hasBooleanFlagWithInt:(jint)flag {
  return RepackagedAndroidViewViewGroup_hasBooleanFlagWithInt_(self, flag);
}

- (void)setBooleanFlagWithInt:(jint)flag
                  withBoolean:(jboolean)value {
  RepackagedAndroidViewViewGroup_setBooleanFlagWithInt_withBoolean_(self, flag, value);
}


#line 5679
- (jint)getPersistentDrawingCache {
  return mPersistentDrawingCache_;
}


#line 5694
- (void)setPersistentDrawingCacheWithInt:(jint)drawingCacheToKeep {
  mPersistentDrawingCache_ = drawingCacheToKeep & RepackagedAndroidViewViewGroup_PERSISTENT_ALL_CACHES;
}

- (void)setLayoutModeWithInt:(jint)layoutMode
                 withBoolean:(jboolean)explicitly {
  RepackagedAndroidViewViewGroup_setLayoutModeWithInt_withBoolean_(self, layoutMode, explicitly);
}


#line 5716
- (void)invalidateInheritedLayoutModeWithInt:(jint)layoutModeOfRoot {
  if (mLayoutMode_ == RepackagedAndroidViewViewGroup_LAYOUT_MODE_UNDEFINED ||
#line 5718
  mLayoutMode_ == layoutModeOfRoot || RepackagedAndroidViewViewGroup_hasBooleanFlagWithInt_(self,
#line 5719
  RepackagedAndroidViewViewGroup_FLAG_LAYOUT_MODE_WAS_EXPLICITLY_SET)) {
    return;
  }
  RepackagedAndroidViewViewGroup_setLayoutModeWithInt_withBoolean_(self, RepackagedAndroidViewViewGroup_LAYOUT_MODE_UNDEFINED, NO);
  
#line 5725
  for (jint i = 0, N = [self getChildCount]; i < N; i++) {
    [((RepackagedAndroidViewView *) nil_chk([self getChildAtWithInt:i])) invalidateInheritedLayoutModeWithInt:layoutModeOfRoot];
  }
}


#line 5742
- (jint)getLayoutMode {
  if (mLayoutMode_ == RepackagedAndroidViewViewGroup_LAYOUT_MODE_UNDEFINED) {
    jint inheritedLayoutMode = ([mParent_ isKindOfClass:[RepackagedAndroidViewViewGroup class]]) ?
#line 5745
    [((RepackagedAndroidViewViewGroup *) nil_chk(((RepackagedAndroidViewViewGroup *) check_class_cast(mParent_, [RepackagedAndroidViewViewGroup class])))) getLayoutMode] : RepackagedAndroidViewViewGroup_LAYOUT_MODE_DEFAULT_;
    RepackagedAndroidViewViewGroup_setLayoutModeWithInt_withBoolean_(self, inheritedLayoutMode, NO);
  }
  return mLayoutMode_;
}


#line 5761
- (void)setLayoutModeWithInt:(jint)layoutMode {
  if (mLayoutMode_ != layoutMode) {
    [self invalidateInheritedLayoutModeWithInt:layoutMode];
    RepackagedAndroidViewViewGroup_setLayoutModeWithInt_withBoolean_(self, layoutMode, layoutMode != RepackagedAndroidViewViewGroup_LAYOUT_MODE_UNDEFINED);
    [self requestLayout];
  }
}


#line 5777
- (RepackagedAndroidViewViewGroup_LayoutParams *)generateLayoutParamsWithRepackagedAndroidUtilAttributeSet:(id<RepackagedAndroidUtilAttributeSet>)attrs {
  return new_RepackagedAndroidViewViewGroup_LayoutParams_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_([self getContext], attrs);
}


#line 5795
- (RepackagedAndroidViewViewGroup_LayoutParams *)generateLayoutParamsWithRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)p {
  return p;
}


#line 5806
- (RepackagedAndroidViewViewGroup_LayoutParams *)generateDefaultLayoutParams {
  return new_RepackagedAndroidViewViewGroup_LayoutParams_initWithInt_withInt_(RepackagedAndroidViewViewGroup_LayoutParams_WRAP_CONTENT, RepackagedAndroidViewViewGroup_LayoutParams_WRAP_CONTENT);
}


#line 5814
- (void)debugWithInt:(jint)depth {
  [super debugWithInt:depth];
  NSString *output;
  
#line 5818
  if (mFocused_ != nil) {
    output = RepackagedAndroidViewView_debugIndentWithInt_(depth);
    output = JreStrcat("$$", output, @"mFocused");
    RepackagedAndroidUtilLog_dWithNSString_withNSString_(RepackagedAndroidViewView_get_VIEW_LOG_TAG_(), output);
  }
  if (mChildrenCount_ != 0) {
    output = RepackagedAndroidViewView_debugIndentWithInt_(depth);
    output = JreStrcat("$C", output, '{');
    RepackagedAndroidUtilLog_dWithNSString_withNSString_(RepackagedAndroidViewView_get_VIEW_LOG_TAG_(), output);
  }
  jint count = mChildrenCount_;
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(mChildren_), i);
    [((RepackagedAndroidViewView *) nil_chk(child)) debugWithInt:depth + 1];
  }
  
#line 5834
  if (mChildrenCount_ != 0) {
    output = RepackagedAndroidViewView_debugIndentWithInt_(depth);
    output = JreStrcat("$C", output, '}');
    RepackagedAndroidUtilLog_dWithNSString_withNSString_(RepackagedAndroidViewView_get_VIEW_LOG_TAG_(), output);
  }
}


#line 5848
- (jint)indexOfChildWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  jint count = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < count; i++) {
    if (IOSObjectArray_Get(nil_chk(children), i) == child) {
      return i;
    }
  }
  return -1;
}


#line 5865
- (jint)getChildCount {
  return mChildrenCount_;
}


#line 5876
- (RepackagedAndroidViewView *)getChildAtWithInt:(jint)index {
  if (index < 0 || index >= mChildrenCount_) {
    return nil;
  }
  return IOSObjectArray_Get(nil_chk(mChildren_), index);
}


#line 5892
- (void)measureChildrenWithInt:(jint)widthMeasureSpec
                       withInt:(jint)heightMeasureSpec {
  jint size = mChildrenCount_;
  IOSObjectArray *children = mChildren_;
  for (jint i = 0; i < size; ++i) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    if ((((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) != RepackagedAndroidViewView_GONE) {
      [self measureChildWithRepackagedAndroidViewView:child withInt:widthMeasureSpec withInt:heightMeasureSpec];
    }
  }
}


#line 5912
- (void)measureChildWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                          withInt:(jint)parentWidthMeasureSpec
                                          withInt:(jint)parentHeightMeasureSpec {
  
#line 5914
  RepackagedAndroidViewViewGroup_LayoutParams *lp = [((RepackagedAndroidViewView *) nil_chk(child)) getLayoutParams];
  
#line 5916
  jint childWidthMeasureSpec = RepackagedAndroidViewViewGroup_getChildMeasureSpecWithInt_withInt_withInt_(parentWidthMeasureSpec,
#line 5917
  mPaddingLeft_ + mPaddingRight_, ((RepackagedAndroidViewViewGroup_LayoutParams *) nil_chk(lp))->width_);
  jint childHeightMeasureSpec = RepackagedAndroidViewViewGroup_getChildMeasureSpecWithInt_withInt_withInt_(parentHeightMeasureSpec,
#line 5919
  mPaddingTop_ + mPaddingBottom_, lp->height_);
  
#line 5921
  [child measureWithInt:childWidthMeasureSpec withInt:childHeightMeasureSpec];
}


#line 5938
- (void)measureChildWithMarginsWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                     withInt:(jint)parentWidthMeasureSpec
                                                     withInt:(jint)widthUsed
                                                     withInt:(jint)parentHeightMeasureSpec
                                                     withInt:(jint)heightUsed {
  
#line 5941
  RepackagedAndroidViewViewGroup_MarginLayoutParams *lp = (RepackagedAndroidViewViewGroup_MarginLayoutParams *) check_class_cast([((RepackagedAndroidViewView *) nil_chk(child)) getLayoutParams], [RepackagedAndroidViewViewGroup_MarginLayoutParams class]);
  
#line 5943
  jint childWidthMeasureSpec = RepackagedAndroidViewViewGroup_getChildMeasureSpecWithInt_withInt_withInt_(parentWidthMeasureSpec,
#line 5944
  mPaddingLeft_ + mPaddingRight_ + ((RepackagedAndroidViewViewGroup_MarginLayoutParams *) nil_chk(lp))->leftMargin_ + lp->rightMargin_ +
#line 5945
  widthUsed, lp->width_);
  jint childHeightMeasureSpec = RepackagedAndroidViewViewGroup_getChildMeasureSpecWithInt_withInt_withInt_(parentHeightMeasureSpec,
#line 5947
  mPaddingTop_ + mPaddingBottom_ + lp->topMargin_ + lp->bottomMargin_ +
#line 5948
  heightUsed, lp->height_);
  
#line 5950
  [child measureWithInt:childWidthMeasureSpec withInt:childHeightMeasureSpec];
}


#line 5972
+ (jint)getChildMeasureSpecWithInt:(jint)spec
                           withInt:(jint)padding
                           withInt:(jint)childDimension {
  return RepackagedAndroidViewViewGroup_getChildMeasureSpecWithInt_withInt_withInt_(spec, padding, childDimension);
}


#line 6045
- (void)clearDisappearingChildren {
  JavaUtilArrayList *disappearingChildren = mDisappearingChildren_;
  if (disappearingChildren != nil) {
    jint count = [disappearingChildren size];
    for (jint i = 0; i < count; i++) {
      RepackagedAndroidViewView *view = [disappearingChildren getWithInt:i];
      if (((RepackagedAndroidViewView *) nil_chk(view))->mAttachInfo_ != nil) {
        [view dispatchDetachedFromWindow];
      }
      [view clearAnimation];
    }
    [disappearingChildren clear];
    [self invalidate];
  }
}


#line 6066
- (void)addDisappearingViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)v {
  RepackagedAndroidViewViewGroup_addDisappearingViewWithRepackagedAndroidViewView_(self, v);
}


#line 6083
- (void)finishAnimatingViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view
             withRepackagedAndroidViewAnimationAnimation:(id<RepackagedAndroidViewAnimationAnimation>)animation {
  JavaUtilArrayList *disappearingChildren = mDisappearingChildren_;
  if (disappearingChildren != nil) {
    if ([disappearingChildren containsWithId:view]) {
      [disappearingChildren removeWithId:view];
      
#line 6089
      if (((RepackagedAndroidViewView *) nil_chk(view))->mAttachInfo_ != nil) {
        [view dispatchDetachedFromWindow];
      }
      
#line 6093
      [view clearAnimation];
      mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_INVALIDATE_REQUIRED;
    }
  }
  
#line 6098
  if (animation != nil && ![animation getFillAfter]) {
    [((RepackagedAndroidViewView *) nil_chk(view)) clearAnimation];
  }
  
#line 6102
  if ((((RepackagedAndroidViewView *) nil_chk(view))->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_ANIMATION_STARTED) == RepackagedAndroidViewView_PFLAG_ANIMATION_STARTED) {
    [view onAnimationEnd];
    
#line 6106
    view->mPrivateFlags_ &= ~RepackagedAndroidViewView_PFLAG_ANIMATION_STARTED;
    
#line 6108
    mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_INVALIDATE_REQUIRED;
  }
}


#line 6117
- (jboolean)isViewTransitioningWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  return (mTransitioningViews_ != nil && [mTransitioningViews_ containsWithId:view]);
}


#line 6133
- (void)startViewTransitionWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  if (((RepackagedAndroidViewView *) nil_chk(view))->mParent_ == self) {
    if (mTransitioningViews_ == nil) {
      mTransitioningViews_ = new_JavaUtilArrayList_init();
    }
    [((JavaUtilArrayList *) nil_chk(mTransitioningViews_)) addWithId:view];
  }
}


#line 6152
- (void)endViewTransitionWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  if (mTransitioningViews_ != nil) {
    [mTransitioningViews_ removeWithId:view];
    JavaUtilArrayList *disappearingChildren = mDisappearingChildren_;
    if (disappearingChildren != nil && [disappearingChildren containsWithId:view]) {
      [disappearingChildren removeWithId:view];
      if (mVisibilityChangingChildren_ != nil &&
#line 6159
      [mVisibilityChangingChildren_ containsWithId:view]) {
        [mVisibilityChangingChildren_ removeWithId:view];
      }
      else {
        
#line 6162
        if (((RepackagedAndroidViewView *) nil_chk(view))->mAttachInfo_ != nil) {
          [view dispatchDetachedFromWindow];
        }
        if (view->mParent_ != nil) {
          view->mParent_ = nil;
        }
      }
      [self invalidate];
    }
  }
}


#line 6207
- (void)suppressLayoutWithBoolean:(jboolean)suppress {
  mSuppressLayout_ = suppress;
  if (!suppress) {
    if (mLayoutCalledWhileSuppressed_) {
      [self requestLayout];
      mLayoutCalledWhileSuppressed_ = NO;
    }
  }
}


#line 6225
- (jboolean)isLayoutSuppressed {
  return mSuppressLayout_;
}


#line 6233
- (jboolean)gatherTransparentRegionWithRepackagedAndroidGraphicsRegion:(RepackagedAndroidGraphicsRegion *)region {
  
#line 6235
  jboolean meOpaque = (mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_REQUEST_TRANSPARENT_REGIONS) == 0;
  if (meOpaque && region == nil) {
    
#line 6238
    return YES;
  }
  [super gatherTransparentRegionWithRepackagedAndroidGraphicsRegion:region];
  IOSObjectArray *children = mChildren_;
  jint count = mChildrenCount_;
  jboolean noneOfTheChildrenAreTransparent = YES;
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
    if ((((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE || [child getAnimation] != nil) {
      if (![child gatherTransparentRegionWithRepackagedAndroidGraphicsRegion:region]) {
        noneOfTheChildrenAreTransparent = NO;
      }
    }
  }
  return meOpaque || noneOfTheChildrenAreTransparent;
}


#line 6258
- (void)requestTransparentRegionWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  if (child != nil) {
    child->mPrivateFlags_ |= RepackagedAndroidViewView_PFLAG_REQUEST_TRANSPARENT_REGIONS;
    if (mParent_ != nil) {
      [mParent_ requestTransparentRegionWithRepackagedAndroidViewView:self];
    }
  }
}


#line 6268
- (RepackagedAndroidViewWindowInsets *)dispatchApplyWindowInsetsWithRepackagedAndroidViewWindowInsets:(RepackagedAndroidViewWindowInsets *)insets {
  insets = [super dispatchApplyWindowInsetsWithRepackagedAndroidViewWindowInsets:insets];
  if (![((RepackagedAndroidViewWindowInsets *) nil_chk(insets)) isConsumed]) {
    jint count = [self getChildCount];
    for (jint i = 0; i < count; i++) {
      insets = [((RepackagedAndroidViewView *) nil_chk([self getChildAtWithInt:i])) dispatchApplyWindowInsetsWithRepackagedAndroidViewWindowInsets:insets];
      if ([((RepackagedAndroidViewWindowInsets *) nil_chk(insets)) isConsumed]) {
        break;
      }
    }
  }
  return insets;
}


#line 6288
- (RepackagedAndroidViewAnimationAnimation_AnimationListener *)getLayoutAnimationListener {
  return mAnimationListener_;
}


#line 6293
- (void)drawableStateChanged {
  [super drawableStateChanged];
  
#line 6296
  if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE) != 0) {
    if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_ADD_STATES_FROM_CHILDREN) != 0) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"addStateFromChildren cannot be enabled if a child has duplicateParentState set to true");
    }
    
#line 6302
    IOSObjectArray *children = mChildren_;
    jint count = mChildrenCount_;
    
#line 6305
    for (jint i = 0; i < count; i++) {
      RepackagedAndroidViewView *child = IOSObjectArray_Get(nil_chk(children), i);
      if ((((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_DUPLICATE_PARENT_STATE) != 0) {
        [child refreshDrawableState];
      }
    }
  }
}


#line 6315
- (void)jumpDrawablesToCurrentState {
  [super jumpDrawablesToCurrentState];
  IOSObjectArray *children = mChildren_;
  jint count = mChildrenCount_;
  for (jint i = 0; i < count; i++) {
    [((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i))) jumpDrawablesToCurrentState];
  }
}


#line 6325
- (IOSIntArray *)onCreateDrawableStateWithInt:(jint)extraSpace {
  if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_ADD_STATES_FROM_CHILDREN) == 0) {
    return [super onCreateDrawableStateWithInt:extraSpace];
  }
  
#line 6330
  jint need = 0;
  jint n = [self getChildCount];
  for (jint i = 0; i < n; i++) {
    IOSIntArray *childState = [((RepackagedAndroidViewView *) nil_chk([self getChildAtWithInt:i])) getDrawableState];
    
#line 6335
    if (childState != nil) {
      need += childState->size_;
    }
  }
  
#line 6340
  IOSIntArray *state = [super onCreateDrawableStateWithInt:extraSpace + need];
  
#line 6342
  for (jint i = 0; i < n; i++) {
    IOSIntArray *childState = [((RepackagedAndroidViewView *) nil_chk([self getChildAtWithInt:i])) getDrawableState];
    
#line 6345
    if (childState != nil) {
      state = RepackagedAndroidViewView_mergeDrawableStatesWithIntArray_withIntArray_(state, childState);
    }
  }
  
#line 6350
  return state;
}

- (void)setAddStatesFromChildrenWithBoolean:(jboolean)addsStates {
  if (addsStates) {
    mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_ADD_STATES_FROM_CHILDREN;
  }
  else {
    
#line 6363
    mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_ADD_STATES_FROM_CHILDREN;
  }
  
#line 6366
  [self refreshDrawableState];
}


#line 6375
- (jboolean)addStatesFromChildren {
  return (mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_ADD_STATES_FROM_CHILDREN) != 0;
}


#line 6383
- (void)childDrawableStateChangedWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  if ((mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_ADD_STATES_FROM_CHILDREN) != 0) {
    [self refreshDrawableState];
  }
}


#line 6399
- (void)setLayoutAnimationListenerWithRepackagedAndroidViewAnimationAnimation_AnimationListener:(RepackagedAndroidViewAnimationAnimation_AnimationListener *)animationListener {
  mAnimationListener_ = animationListener;
}


#line 6412
- (void)requestTransitionStartWithRepackagedAndroidAnimationLayoutTransition:(RepackagedAndroidAnimationLayoutTransition *)transition {
  RepackagedAndroidViewViewRootImpl *viewAncestor = [self getViewRootImpl];
  if (viewAncestor != nil) {
    [viewAncestor requestTransitionStartWithRepackagedAndroidAnimationLayoutTransition:transition];
  }
}


#line 6423
- (jboolean)resolveRtlPropertiesIfNeeded {
  jboolean result = [super resolveRtlPropertiesIfNeeded];
  
#line 6426
  if (result) {
    jint count = [self getChildCount];
    for (jint i = 0; i < count; i++) {
      RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
      if ([((RepackagedAndroidViewView *) nil_chk(child)) isLayoutDirectionInherited]) {
        [child resolveRtlPropertiesIfNeeded];
      }
    }
  }
  return result;
}


#line 6442
- (jboolean)resolveLayoutDirection {
  jboolean result = [super resolveLayoutDirection];
  if (result) {
    jint count = [self getChildCount];
    for (jint i = 0; i < count; i++) {
      RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
      if ([((RepackagedAndroidViewView *) nil_chk(child)) isLayoutDirectionInherited]) {
        [child resolveLayoutDirection];
      }
    }
  }
  return result;
}


#line 6460
- (jboolean)resolveTextDirection {
  jboolean result = [super resolveTextDirection];
  if (result) {
    jint count = [self getChildCount];
    for (jint i = 0; i < count; i++) {
      RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
      if ([((RepackagedAndroidViewView *) nil_chk(child)) isTextDirectionInherited]) {
        [child resolveTextDirection];
      }
    }
  }
  return result;
}


#line 6478
- (jboolean)resolveTextAlignment {
  jboolean result = [super resolveTextAlignment];
  if (result) {
    jint count = [self getChildCount];
    for (jint i = 0; i < count; i++) {
      RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
      if ([((RepackagedAndroidViewView *) nil_chk(child)) isTextAlignmentInherited]) {
        [child resolveTextAlignment];
      }
    }
  }
  return result;
}


#line 6496
- (void)resolvePadding {
  [super resolvePadding];
  jint count = [self getChildCount];
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
    if ([((RepackagedAndroidViewView *) nil_chk(child)) isLayoutDirectionInherited] && ![child isPaddingResolved]) {
      [child resolvePadding];
    }
  }
}


#line 6511
- (void)resolveDrawables {
  [super resolveDrawables];
  jint count = [self getChildCount];
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
    if ([((RepackagedAndroidViewView *) nil_chk(child)) isLayoutDirectionInherited] && ![child areDrawablesResolved]) {
      [child resolveDrawables];
    }
  }
}


#line 6526
- (void)resolveLayoutParams {
  [super resolveLayoutParams];
  jint count = [self getChildCount];
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
    [((RepackagedAndroidViewView *) nil_chk(child)) resolveLayoutParams];
  }
}


#line 6539
- (void)resetResolvedLayoutDirection {
  [super resetResolvedLayoutDirection];
  
#line 6542
  jint count = [self getChildCount];
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
    if ([((RepackagedAndroidViewView *) nil_chk(child)) isLayoutDirectionInherited]) {
      [child resetResolvedLayoutDirection];
    }
  }
}


#line 6555
- (void)resetResolvedTextDirection {
  [super resetResolvedTextDirection];
  
#line 6558
  jint count = [self getChildCount];
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
    if ([((RepackagedAndroidViewView *) nil_chk(child)) isTextDirectionInherited]) {
      [child resetResolvedTextDirection];
    }
  }
}


#line 6571
- (void)resetResolvedTextAlignment {
  [super resetResolvedTextAlignment];
  
#line 6574
  jint count = [self getChildCount];
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
    if ([((RepackagedAndroidViewView *) nil_chk(child)) isTextAlignmentInherited]) {
      [child resetResolvedTextAlignment];
    }
  }
}


#line 6587
- (void)resetResolvedPadding {
  [super resetResolvedPadding];
  
#line 6590
  jint count = [self getChildCount];
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
    if ([((RepackagedAndroidViewView *) nil_chk(child)) isLayoutDirectionInherited]) {
      [child resetResolvedPadding];
    }
  }
}


#line 6603
- (void)resetResolvedDrawables {
  [super resetResolvedDrawables];
  
#line 6606
  jint count = [self getChildCount];
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
    if ([((RepackagedAndroidViewView *) nil_chk(child)) isLayoutDirectionInherited]) {
      [child resetResolvedDrawables];
    }
  }
}


#line 6624
- (jboolean)shouldDelayChildPressedState {
  return YES;
}


#line 6632
- (jboolean)onStartNestedScrollWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                               withRepackagedAndroidViewView:(RepackagedAndroidViewView *)target
                                                     withInt:(jint)nestedScrollAxes {
  return NO;
}


#line 6640
- (void)onNestedScrollAcceptedWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                              withRepackagedAndroidViewView:(RepackagedAndroidViewView *)target
                                                    withInt:(jint)axes {
  mNestedScrollAxes_ = axes;
}


#line 6651
- (void)onStopNestedScrollWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  
#line 6653
  [self stopNestedScroll];
  mNestedScrollAxes_ = 0;
}


#line 6661
- (void)onNestedScrollWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)target
                                            withInt:(jint)dxConsumed
                                            withInt:(jint)dyConsumed
                                            withInt:(jint)dxUnconsumed
                                            withInt:(jint)dyUnconsumed {
}


#line 6670
- (void)onNestedPreScrollWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)target
                                               withInt:(jint)dx
                                               withInt:(jint)dy
                                          withIntArray:(IOSIntArray *)consumed {
}


#line 6678
- (jboolean)onNestedFlingWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)target
                                             withFloat:(jfloat)velocityX
                                             withFloat:(jfloat)velocityY
                                           withBoolean:(jboolean)consumed {
  return NO;
}


#line 6686
- (jboolean)onNestedPreFlingWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)target
                                                withFloat:(jfloat)velocityX
                                                withFloat:(jfloat)velocityY {
  return NO;
}


#line 6701
- (jint)getNestedScrollAxes {
  return mNestedScrollAxes_;
}


#line 6706
- (void)onSetLayoutParamsWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
       withRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)layoutParams {
}


#line 6711
- (void)captureTransitioningViewsWithJavaUtilList:(id<JavaUtilList>)transitioningViews {
  if ([self getVisibility] != RepackagedAndroidViewView_VISIBLE) {
    return;
  }
  if ([self isTransitionGroup]) {
    [((id<JavaUtilList>) nil_chk(transitioningViews)) addWithId:self];
  }
  else {
    
#line 6718
    jint count = [self getChildCount];
    for (jint i = 0; i < count; i++) {
      RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
      [((RepackagedAndroidViewView *) nil_chk(child)) captureTransitioningViewsWithJavaUtilList:transitioningViews];
    }
  }
}


#line 6728
- (void)findNamedViewsWithJavaUtilMap:(id<JavaUtilMap>)namedElements {
  if ([self getVisibility] != RepackagedAndroidViewView_VISIBLE && mGhostView_ == nil) {
    return;
  }
  [super findNamedViewsWithJavaUtilMap:namedElements];
  jint count = [self getChildCount];
  for (jint i = 0; i < count; i++) {
    RepackagedAndroidViewView *child = [self getChildAtWithInt:i];
    [((RepackagedAndroidViewView *) nil_chk(child)) findNamedViewsWithJavaUtilMap:namedElements];
  }
}


#line 7740
+ (RepackagedAndroidGraphicsPaint *)getDebugPaint {
  return RepackagedAndroidViewViewGroup_getDebugPaint();
}


#line 7748
+ (void)drawRectWithRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas
                 withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint
                                            withInt:(jint)x1
                                            withInt:(jint)y1
                                            withInt:(jint)x2
                                            withInt:(jint)y2 {
  RepackagedAndroidViewViewGroup_drawRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(canvas, paint, x1, y1, x2, y2);
}


#line 7779
- (void)encodePropertiesWithRepackagedAndroidViewViewHierarchyEncoder:(id<RepackagedAndroidViewViewHierarchyEncoder>)encoder {
  [super encodePropertiesWithRepackagedAndroidViewViewHierarchyEncoder:encoder];
  
#line 7782
  [((id<RepackagedAndroidViewViewHierarchyEncoder>) nil_chk(encoder)) addPropertyWithNSString:@"focus:descendantFocusability" withInt:[self getDescendantFocusability]];
  [encoder addPropertyWithNSString:@"drawing:clipChildren" withBoolean:[self getClipChildren]];
  [encoder addPropertyWithNSString:@"drawing:clipToPadding" withBoolean:[self getClipToPadding]];
  [encoder addPropertyWithNSString:@"drawing:childrenDrawingOrderEnabled" withBoolean:[self isChildrenDrawingOrderEnabled]];
  [encoder addPropertyWithNSString:@"drawing:persistentDrawingCache" withInt:[self getPersistentDrawingCache]];
  
#line 7788
  jint n = [self getChildCount];
  [encoder addPropertyWithNSString:@"meta:__childCount__" withInt:(jshort) n];
  for (jint i = 0; i < n; i++) {
    [encoder addPropertyKeyWithNSString:JreStrcat("$I", @"meta:__child__", i)];
    [((RepackagedAndroidViewView *) nil_chk([self getChildAtWithInt:i])) encodeWithRepackagedAndroidViewViewHierarchyEncoder:encoder];
  }
}

+ (void)initialize {
  if (self == [RepackagedAndroidViewViewGroup class]) {
    RepackagedAndroidViewViewGroup_DESCENDANT_FOCUSABILITY_FLAGS_ = [IOSIntArray newArrayWithInts:(jint[]){
#line 331
      RepackagedAndroidViewViewGroup_FOCUS_BEFORE_DESCENDANTS, RepackagedAndroidViewViewGroup_FOCUS_AFTER_DESCENDANTS,
#line 332
      RepackagedAndroidViewViewGroup_FOCUS_BLOCK_DESCENDANTS } count:3];
      RepackagedAndroidViewViewGroup_SENTINEL_ACTION_MODE_ = new_RepackagedAndroidViewViewGroup_$1_init();
      J2OBJC_SET_INITIALIZED(RepackagedAndroidViewViewGroup)
    }
  }

+ (IOSObjectArray *)__annotations_getDescendantFocusability {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"focus" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_IntToString alloc] initWithFrom:131072 withTo:@"FOCUS_BEFORE_DESCENDANTS"], [[RepackagedAndroidViewViewDebug_IntToString alloc] initWithFrom:262144 withTo:@"FOCUS_AFTER_DESCENDANTS"], [[RepackagedAndroidViewViewDebug_IntToString alloc] initWithFrom:393216 withTo:@"FOCUS_BLOCK_DESCENDANTS"] } count:3 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_getClipChildren {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"drawing" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_getClipToPadding {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"drawing" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_isChildrenDrawingOrderEnabled {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"drawing" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_getPersistentDrawingCache {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"drawing" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_IntToString alloc] initWithFrom:0 withTo:@"NONE"], [[RepackagedAndroidViewViewDebug_IntToString alloc] initWithFrom:1 withTo:@"ANIMATION"], [[RepackagedAndroidViewViewDebug_IntToString alloc] initWithFrom:2 withTo:@"SCROLLING"], [[RepackagedAndroidViewViewDebug_IntToString alloc] initWithFrom:3 withTo:@"ALL"] } count:4 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_mLastTouchDownTime_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"events" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_mLastTouchDownIndex_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"events" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_mLastTouchDownX_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"events" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_mLastTouchDownY_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"events" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_mGroupFlags_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_FlagToString alloc] initWithEquals:1 withMask:1 withName:@"CLIP_CHILDREN" withOutputIf:true], [[RepackagedAndroidViewViewDebug_FlagToString alloc] initWithEquals:2 withMask:2 withName:@"CLIP_TO_PADDING" withOutputIf:true], [[RepackagedAndroidViewViewDebug_FlagToString alloc] initWithEquals:32 withMask:32 withName:@"PADDING_NOT_NULL" withOutputIf:true] } count:3 type:NSObject_class_()] withFormatToHexString:true withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_mChildCountWithTransientState_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"layout" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRepackagedAndroidContentContext:", "ViewGroup", NULL, 0x1, NULL, NULL },
    { "initWithRepackagedAndroidContentContext:withRepackagedAndroidUtilAttributeSet:", "ViewGroup", NULL, 0x1, NULL, NULL },
    { "initWithRepackagedAndroidContentContext:withRepackagedAndroidUtilAttributeSet:withInt:", "ViewGroup", NULL, 0x1, NULL, NULL },
    { "initWithRepackagedAndroidContentContext:withRepackagedAndroidUtilAttributeSet:withInt:withInt:", "ViewGroup", NULL, 0x1, NULL, NULL },
    { "debugDraw", NULL, "Z", 0x2, NULL, NULL },
    { "initViewGroup", NULL, "V", 0x2, NULL, NULL },
    { "initFromAttributesWithRepackagedAndroidContentContext:withRepackagedAndroidUtilAttributeSet:withInt:withInt:", "initFromAttributes", "V", 0x2, NULL, NULL },
    { "getDescendantFocusability", NULL, "I", 0x1, NULL, NULL },
    { "setDescendantFocusabilityWithInt:", "setDescendantFocusability", "V", 0x1, NULL, NULL },
    { "handleFocusGainInternalWithInt:withRepackagedAndroidGraphicsRect:", "handleFocusGainInternal", "V", 0x0, NULL, NULL },
    { "requestChildFocusWithRepackagedAndroidViewView:withRepackagedAndroidViewView:", "requestChildFocus", "V", 0x1, NULL, NULL },
    { "focusableViewAvailableWithRepackagedAndroidViewView:", "focusableViewAvailable", "V", 0x1, NULL, NULL },
    { "showContextMenuForChildWithRepackagedAndroidViewView:", "showContextMenuForChild", "Z", 0x1, NULL, NULL },
    { "startActionModeForChildWithRepackagedAndroidViewView:withRepackagedAndroidViewActionMode_Callback:", "startActionModeForChild", "Lrepackaged.android.view.ActionMode;", 0x1, NULL, NULL },
    { "startActionModeForChildWithRepackagedAndroidViewView:withRepackagedAndroidViewActionMode_Callback:withInt:", "startActionModeForChild", "Lrepackaged.android.view.ActionMode;", 0x1, NULL, NULL },
    { "dispatchActivityResultWithNSString:withInt:withInt:withRepackagedAndroidContentIntent:", "dispatchActivityResult", "Z", 0x1, NULL, NULL },
    { "focusSearchWithRepackagedAndroidViewView:withInt:", "focusSearch", "Lrepackaged.android.view.View;", 0x1, NULL, NULL },
    { "requestChildRectangleOnScreenWithRepackagedAndroidViewView:withRepackagedAndroidGraphicsRect:withBoolean:", "requestChildRectangleOnScreen", "Z", 0x1, NULL, NULL },
    { "requestSendAccessibilityEventWithRepackagedAndroidViewView:withRepackagedAndroidViewAccessibilityAccessibilityEvent:", "requestSendAccessibilityEvent", "Z", 0x1, NULL, NULL },
    { "onRequestSendAccessibilityEventWithRepackagedAndroidViewView:withRepackagedAndroidViewAccessibilityAccessibilityEvent:", "onRequestSendAccessibilityEvent", "Z", 0x1, NULL, NULL },
    { "onRequestSendAccessibilityEventInternalWithRepackagedAndroidViewView:withRepackagedAndroidViewAccessibilityAccessibilityEvent:", "onRequestSendAccessibilityEventInternal", "Z", 0x1, NULL, NULL },
    { "childHasTransientStateChangedWithRepackagedAndroidViewView:withBoolean:", "childHasTransientStateChanged", "V", 0x1, NULL, NULL },
    { "hasTransientState", NULL, "Z", 0x1, NULL, NULL },
    { "dispatchUnhandledMoveWithRepackagedAndroidViewView:withInt:", "dispatchUnhandledMove", "Z", 0x1, NULL, NULL },
    { "clearChildFocusWithRepackagedAndroidViewView:", "clearChildFocus", "V", 0x1, NULL, NULL },
    { "clearFocus", NULL, "V", 0x1, NULL, NULL },
    { "unFocusWithRepackagedAndroidViewView:", "unFocus", "V", 0x0, NULL, NULL },
    { "getFocusedChild", NULL, "Lrepackaged.android.view.View;", 0x1, NULL, NULL },
    { "getDeepestFocusedChild", NULL, "Lrepackaged.android.view.View;", 0x0, NULL, NULL },
    { "hasFocus", NULL, "Z", 0x1, NULL, NULL },
    { "findFocus", NULL, "Lrepackaged.android.view.View;", 0x1, NULL, NULL },
    { "hasFocusable", NULL, "Z", 0x1, NULL, NULL },
    { "addFocusablesWithJavaUtilArrayList:withInt:withInt:", "addFocusables", "V", 0x1, NULL, NULL },
    { "setTouchscreenBlocksFocusWithBoolean:", "setTouchscreenBlocksFocus", "V", 0x1, NULL, NULL },
    { "getTouchscreenBlocksFocus", NULL, "Z", 0x1, NULL, NULL },
    { "shouldBlockFocusForTouchscreen", NULL, "Z", 0x0, NULL, NULL },
    { "findViewsWithTextWithJavaUtilArrayList:withJavaLangCharSequence:withInt:", "findViewsWithText", "V", 0x1, NULL, NULL },
    { "findViewByAccessibilityIdTraversalWithInt:", "findViewByAccessibilityIdTraversal", "Lrepackaged.android.view.View;", 0x1, NULL, NULL },
    { "dispatchWindowFocusChangedWithBoolean:", "dispatchWindowFocusChanged", "V", 0x1, NULL, NULL },
    { "addTouchablesWithJavaUtilArrayList:", "addTouchables", "V", 0x1, NULL, NULL },
    { "makeOptionalFitsSystemWindows", NULL, "V", 0x1, NULL, NULL },
    { "dispatchDisplayHintWithInt:", "dispatchDisplayHint", "V", 0x1, NULL, NULL },
    { "onChildVisibilityChangedWithRepackagedAndroidViewView:withInt:withInt:", "onChildVisibilityChanged", "V", 0x4, NULL, NULL },
    { "dispatchVisibilityChangedWithRepackagedAndroidViewView:withInt:", "dispatchVisibilityChanged", "V", 0x4, NULL, NULL },
    { "dispatchWindowVisibilityChangedWithInt:", "dispatchWindowVisibilityChanged", "V", 0x1, NULL, NULL },
    { "dispatchConfigurationChangedWithRepackagedAndroidContentResConfiguration:", "dispatchConfigurationChanged", "V", 0x1, NULL, NULL },
    { "recomputeViewAttributesWithRepackagedAndroidViewView:", "recomputeViewAttributes", "V", 0x1, NULL, NULL },
    { "dispatchCollectViewAttributesWithRepackagedAndroidViewView_AttachInfo:withInt:", "dispatchCollectViewAttributes", "V", 0x0, NULL, NULL },
    { "bringChildToFrontWithRepackagedAndroidViewView:", "bringChildToFront", "V", 0x1, NULL, NULL },
    { "getLocalPoint", NULL, "Lrepackaged.android.graphics.PointF;", 0x2, NULL, NULL },
    { "dispatchDragEventWithRepackagedAndroidViewDragEvent:", "dispatchDragEvent", "Z", 0x1, NULL, NULL },
    { "findFrontmostDroppableChildAtWithFloat:withFloat:withRepackagedAndroidGraphicsPointF:", "findFrontmostDroppableChildAt", "Lrepackaged.android.view.View;", 0x0, NULL, NULL },
    { "notifyChildOfDragWithRepackagedAndroidViewView:", "notifyChildOfDrag", "Z", 0x0, NULL, NULL },
    { "dispatchWindowSystemUiVisiblityChangedWithInt:", "dispatchWindowSystemUiVisiblityChanged", "V", 0x1, NULL, NULL },
    { "dispatchSystemUiVisibilityChangedWithInt:", "dispatchSystemUiVisibilityChanged", "V", 0x1, NULL, NULL },
    { "updateLocalSystemUiVisibilityWithInt:withInt:", "updateLocalSystemUiVisibility", "Z", 0x0, NULL, NULL },
    { "dispatchKeyEventPreImeWithRepackagedAndroidViewKeyEvent:", "dispatchKeyEventPreIme", "Z", 0x1, NULL, NULL },
    { "dispatchKeyEventWithRepackagedAndroidViewKeyEvent:", "dispatchKeyEvent", "Z", 0x1, NULL, NULL },
    { "dispatchKeyShortcutEventWithRepackagedAndroidViewKeyEvent:", "dispatchKeyShortcutEvent", "Z", 0x1, NULL, NULL },
    { "dispatchTrackballEventWithRepackagedAndroidViewMotionEvent:", "dispatchTrackballEvent", "Z", 0x1, NULL, NULL },
    { "dispatchHoverEventWithRepackagedAndroidViewMotionEvent:", "dispatchHoverEvent", "Z", 0x4, NULL, NULL },
    { "exitHoverTargets", NULL, "V", 0x2, NULL, NULL },
    { "cancelHoverTargetWithRepackagedAndroidViewView:", "cancelHoverTarget", "V", 0x2, NULL, NULL },
    { "hasHoveredChild", NULL, "Z", 0x4, NULL, NULL },
    { "addChildrenForAccessibilityWithJavaUtilArrayList:", "addChildrenForAccessibility", "V", 0x1, NULL, NULL },
    { "onInterceptHoverEventWithRepackagedAndroidViewMotionEvent:", "onInterceptHoverEvent", "Z", 0x1, NULL, NULL },
    { "obtainMotionEventNoHistoryOrSelfWithRepackagedAndroidViewMotionEvent:", "obtainMotionEventNoHistoryOrSelf", "Lrepackaged.android.view.MotionEvent;", 0xa, NULL, NULL },
    { "dispatchGenericPointerEventWithRepackagedAndroidViewMotionEvent:", "dispatchGenericPointerEvent", "Z", 0x4, NULL, NULL },
    { "dispatchGenericFocusedEventWithRepackagedAndroidViewMotionEvent:", "dispatchGenericFocusedEvent", "Z", 0x4, NULL, NULL },
    { "dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent:withRepackagedAndroidViewView:", "dispatchTransformedGenericPointerEvent", "Z", 0x2, NULL, NULL },
    { "dispatchTouchEventWithRepackagedAndroidViewMotionEvent:", "dispatchTouchEvent", "Z", 0x1, NULL, NULL },
    { "findChildWithAccessibilityFocus", NULL, "Lrepackaged.android.view.View;", 0x2, NULL, NULL },
    { "resetTouchState", NULL, "V", 0x2, NULL, NULL },
    { "resetCancelNextUpFlagWithRepackagedAndroidViewView:", "resetCancelNextUpFlag", "Z", 0xa, NULL, NULL },
    { "clearTouchTargets", NULL, "V", 0x2, NULL, NULL },
    { "cancelAndClearTouchTargetsWithRepackagedAndroidViewMotionEvent:", "cancelAndClearTouchTargets", "V", 0x2, NULL, NULL },
    { "getTouchTargetWithRepackagedAndroidViewView:", "getTouchTarget", "Lrepackaged.android.view.ViewGroup$TouchTarget;", 0x2, NULL, NULL },
    { "addTouchTargetWithRepackagedAndroidViewView:withInt:", "addTouchTarget", "Lrepackaged.android.view.ViewGroup$TouchTarget;", 0x2, NULL, NULL },
    { "removePointersFromTouchTargetsWithInt:", "removePointersFromTouchTargets", "V", 0x2, NULL, NULL },
    { "cancelTouchTargetWithRepackagedAndroidViewView:", "cancelTouchTarget", "V", 0x2, NULL, NULL },
    { "canViewReceivePointerEventsWithRepackagedAndroidViewView:", "canViewReceivePointerEvents", "Z", 0xa, NULL, NULL },
    { "getTempPoint", NULL, "[F", 0x2, NULL, NULL },
    { "isTransformedTouchPointInViewWithFloat:withFloat:withRepackagedAndroidViewView:withRepackagedAndroidGraphicsPointF:", "isTransformedTouchPointInView", "Z", 0x4, NULL, NULL },
    { "transformPointToViewLocalWithFloatArray:withRepackagedAndroidViewView:", "transformPointToViewLocal", "V", 0x1, NULL, NULL },
    { "dispatchTransformedTouchEventWithRepackagedAndroidViewMotionEvent:withBoolean:withRepackagedAndroidViewView:withInt:", "dispatchTransformedTouchEvent", "Z", 0x2, NULL, NULL },
    { "setMotionEventSplittingEnabledWithBoolean:", "setMotionEventSplittingEnabled", "V", 0x1, NULL, NULL },
    { "isMotionEventSplittingEnabled", NULL, "Z", 0x1, NULL, NULL },
    { "isTransitionGroup", NULL, "Z", 0x1, NULL, NULL },
    { "setTransitionGroupWithBoolean:", "setTransitionGroup", "V", 0x1, NULL, NULL },
    { "requestDisallowInterceptTouchEventWithBoolean:", "requestDisallowInterceptTouchEvent", "V", 0x1, NULL, NULL },
    { "onInterceptTouchEventWithRepackagedAndroidViewMotionEvent:", "onInterceptTouchEvent", "Z", 0x1, NULL, NULL },
    { "requestFocusWithInt:withRepackagedAndroidGraphicsRect:", "requestFocus", "Z", 0x1, NULL, NULL },
    { "onRequestFocusInDescendantsWithInt:withRepackagedAndroidGraphicsRect:", "onRequestFocusInDescendants", "Z", 0x4, NULL, NULL },
    { "dispatchStartTemporaryDetach", NULL, "V", 0x1, NULL, NULL },
    { "dispatchFinishTemporaryDetach", NULL, "V", 0x1, NULL, NULL },
    { "dispatchAttachedToWindowWithRepackagedAndroidViewView_AttachInfo:withInt:", "dispatchAttachedToWindow", "V", 0x0, NULL, NULL },
    { "dispatchScreenStateChangedWithInt:", "dispatchScreenStateChanged", "V", 0x0, NULL, NULL },
    { "dispatchPopulateAccessibilityEventInternalWithRepackagedAndroidViewAccessibilityAccessibilityEvent:", "dispatchPopulateAccessibilityEventInternal", "Z", 0x1, NULL, NULL },
    { "dispatchProvideStructureWithRepackagedAndroidViewViewStructure:", "dispatchProvideStructure", "V", 0x1, NULL, NULL },
    { "onInitializeAccessibilityNodeInfoInternalWithRepackagedAndroidViewAccessibilityAccessibilityNodeInfo:", "onInitializeAccessibilityNodeInfoInternal", "V", 0x1, NULL, NULL },
    { "getAccessibilityClassName", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "notifySubtreeAccessibilityStateChangedWithRepackagedAndroidViewView:withRepackagedAndroidViewView:withInt:", "notifySubtreeAccessibilityStateChanged", "V", 0x1, NULL, NULL },
    { "resetSubtreeAccessibilityStateChanged", NULL, "V", 0x0, NULL, NULL },
    { "onNestedPrePerformAccessibilityActionWithRepackagedAndroidViewView:withInt:withRepackagedAndroidOsBundle:", "onNestedPrePerformAccessibilityAction", "Z", 0x1, NULL, NULL },
    { "dispatchDetachedFromWindow", NULL, "V", 0x0, NULL, NULL },
    { "internalSetPaddingWithInt:withInt:withInt:withInt:", "internalSetPadding", "V", 0x4, NULL, NULL },
    { "dispatchSaveInstanceStateWithRepackagedAndroidUtilSparseArray:", "dispatchSaveInstanceState", "V", 0x4, NULL, NULL },
    { "dispatchFreezeSelfOnlyWithRepackagedAndroidUtilSparseArray:", "dispatchFreezeSelfOnly", "V", 0x4, NULL, NULL },
    { "dispatchRestoreInstanceStateWithRepackagedAndroidUtilSparseArray:", "dispatchRestoreInstanceState", "V", 0x4, NULL, NULL },
    { "dispatchThawSelfOnlyWithRepackagedAndroidUtilSparseArray:", "dispatchThawSelfOnly", "V", 0x4, NULL, NULL },
    { "setChildrenDrawingCacheEnabledWithBoolean:", "setChildrenDrawingCacheEnabled", "V", 0x4, NULL, NULL },
    { "createSnapshotWithRepackagedAndroidGraphicsBitmap_Config:withInt:withBoolean:", "createSnapshot", "Lrepackaged.android.graphics.Bitmap;", 0x0, NULL, NULL },
    { "isLayoutModeOptical", NULL, "Z", 0x0, NULL, NULL },
    { "computeOpticalInsets", NULL, "Lrepackaged.android.graphics.Insets;", 0x0, NULL, NULL },
    { "fillRectWithRepackagedAndroidGraphicsCanvas:withRepackagedAndroidGraphicsPaint:withInt:withInt:withInt:withInt:", "fillRect", "V", 0xa, NULL, NULL },
    { "signWithInt:", "sign", "I", 0xa, NULL, NULL },
    { "drawCornerWithRepackagedAndroidGraphicsCanvas:withRepackagedAndroidGraphicsPaint:withInt:withInt:withInt:withInt:withInt:", "drawCorner", "V", 0xa, NULL, NULL },
    { "dipsToPixelsWithInt:", "dipsToPixels", "I", 0x2, NULL, NULL },
    { "drawRectCornersWithRepackagedAndroidGraphicsCanvas:withInt:withInt:withInt:withInt:withRepackagedAndroidGraphicsPaint:withInt:withInt:", "drawRectCorners", "V", 0xa, NULL, NULL },
    { "fillDifferenceWithRepackagedAndroidGraphicsCanvas:withInt:withInt:withInt:withInt:withInt:withInt:withInt:withInt:withRepackagedAndroidGraphicsPaint:", "fillDifference", "V", 0xa, NULL, NULL },
    { "onDebugDrawMarginsWithRepackagedAndroidGraphicsCanvas:withRepackagedAndroidGraphicsPaint:", "onDebugDrawMargins", "V", 0x4, NULL, NULL },
    { "onDebugDrawWithRepackagedAndroidGraphicsCanvas:", "onDebugDraw", "V", 0x4, NULL, NULL },
    { "dispatchDrawWithRepackagedAndroidGraphicsCanvas:", "dispatchDraw", "V", 0x4, NULL, NULL },
    { "getOverlay", NULL, "Lrepackaged.android.view.ViewGroupOverlay;", 0x1, NULL, NULL },
    { "getChildDrawingOrderWithInt:withInt:", "getChildDrawingOrder", "I", 0x4, NULL, NULL },
    { "hasChildWithZ", NULL, "Z", 0x2, NULL, NULL },
    { "buildOrderedChildList", NULL, "Ljava.util.ArrayList;", 0x0, NULL, NULL },
    { "notifyAnimationListener", NULL, "V", 0x2, NULL, NULL },
    { "dispatchGetDisplayList", NULL, "V", 0x4, NULL, NULL },
    { "recreateChildDisplayListWithRepackagedAndroidViewView:", "recreateChildDisplayList", "V", 0x2, NULL, NULL },
    { "drawChildWithRepackagedAndroidGraphicsCanvas:withRepackagedAndroidViewView:withLong:", "drawChild", "Z", 0x4, NULL, NULL },
    { "getScrollIndicatorBoundsWithRepackagedAndroidGraphicsRect:", "getScrollIndicatorBounds", "V", 0x0, NULL, NULL },
    { "getClipChildren", NULL, "Z", 0x1, NULL, NULL },
    { "setClipChildrenWithBoolean:", "setClipChildren", "V", 0x1, NULL, NULL },
    { "setClipToPaddingWithBoolean:", "setClipToPadding", "V", 0x1, NULL, NULL },
    { "getClipToPadding", NULL, "Z", 0x1, NULL, NULL },
    { "dispatchSetSelectedWithBoolean:", "dispatchSetSelected", "V", 0x1, NULL, NULL },
    { "dispatchSetActivatedWithBoolean:", "dispatchSetActivated", "V", 0x1, NULL, NULL },
    { "dispatchSetPressedWithBoolean:", "dispatchSetPressed", "V", 0x4, NULL, NULL },
    { "dispatchDrawableHotspotChangedWithFloat:withFloat:", "dispatchDrawableHotspotChanged", "V", 0x1, NULL, NULL },
    { "dispatchCancelPendingInputEvents", NULL, "V", 0x0, NULL, NULL },
    { "setStaticTransformationsEnabledWithBoolean:", "setStaticTransformationsEnabled", "V", 0x4, NULL, NULL },
    { "getChildStaticTransformationWithRepackagedAndroidViewView:withRepackagedAndroidViewAnimationTransformation:", "getChildStaticTransformation", "Z", 0x4, NULL, NULL },
    { "getChildTransformation", NULL, "Lrepackaged.android.view.animation.Transformation;", 0x0, NULL, NULL },
    { "findViewTraversalWithInt:", "findViewTraversal", "Lrepackaged.android.view.View;", 0x4, NULL, NULL },
    { "findViewWithTagTraversalWithId:", "findViewWithTagTraversal", "Lrepackaged.android.view.View;", 0x4, NULL, NULL },
    { "findViewByPredicateTraversalWithRepackagedComAndroidInternalUtilPredicate:withRepackagedAndroidViewView:", "findViewByPredicateTraversal", "Lrepackaged.android.view.View;", 0x4, NULL, NULL },
    { "addTransientViewWithRepackagedAndroidViewView:withInt:", "addTransientView", "V", 0x1, NULL, NULL },
    { "removeTransientViewWithRepackagedAndroidViewView:", "removeTransientView", "V", 0x1, NULL, NULL },
    { "getTransientViewCount", NULL, "I", 0x1, NULL, NULL },
    { "getTransientViewIndexWithInt:", "getTransientViewIndex", "I", 0x1, NULL, NULL },
    { "getTransientViewWithInt:", "getTransientView", "Lrepackaged.android.view.View;", 0x1, NULL, NULL },
    { "addViewWithRepackagedAndroidViewView:", "addView", "V", 0x1, NULL, NULL },
    { "addViewWithRepackagedAndroidViewView:withInt:", "addView", "V", 0x1, NULL, NULL },
    { "addViewWithRepackagedAndroidViewView:withInt:withInt:", "addView", "V", 0x1, NULL, NULL },
    { "addViewWithRepackagedAndroidViewView:withRepackagedAndroidViewViewGroup_LayoutParams:", "addView", "V", 0x1, NULL, NULL },
    { "addViewWithRepackagedAndroidViewView:withInt:withRepackagedAndroidViewViewGroup_LayoutParams:", "addView", "V", 0x1, NULL, NULL },
    { "updateViewLayoutWithRepackagedAndroidViewView:withRepackagedAndroidViewViewGroup_LayoutParams:", "updateViewLayout", "V", 0x1, NULL, NULL },
    { "checkLayoutParamsWithRepackagedAndroidViewViewGroup_LayoutParams:", "checkLayoutParams", "Z", 0x4, NULL, NULL },
    { "setOnHierarchyChangeListenerWithRepackagedAndroidViewViewGroup_OnHierarchyChangeListener:", "setOnHierarchyChangeListener", "V", 0x1, NULL, NULL },
    { "dispatchViewAddedWithRepackagedAndroidViewView:", "dispatchViewAdded", "V", 0x0, NULL, NULL },
    { "onViewAddedWithRepackagedAndroidViewView:", "onViewAdded", "V", 0x1, NULL, NULL },
    { "dispatchViewRemovedWithRepackagedAndroidViewView:", "dispatchViewRemoved", "V", 0x0, NULL, NULL },
    { "onViewRemovedWithRepackagedAndroidViewView:", "onViewRemoved", "V", 0x1, NULL, NULL },
    { "clearCachedLayoutMode", NULL, "V", 0x2, NULL, NULL },
    { "onAttachedToWindow", NULL, "V", 0x4, NULL, NULL },
    { "onDetachedFromWindow", NULL, "V", 0x4, NULL, NULL },
    { "addViewInLayoutWithRepackagedAndroidViewView:withInt:withRepackagedAndroidViewViewGroup_LayoutParams:", "addViewInLayout", "Z", 0x4, NULL, NULL },
    { "addViewInLayoutWithRepackagedAndroidViewView:withInt:withRepackagedAndroidViewViewGroup_LayoutParams:withBoolean:", "addViewInLayout", "Z", 0x4, NULL, NULL },
    { "cleanupLayoutStateWithRepackagedAndroidViewView:", "cleanupLayoutState", "V", 0x4, NULL, NULL },
    { "addViewInnerWithRepackagedAndroidViewView:withInt:withRepackagedAndroidViewViewGroup_LayoutParams:withBoolean:", "addViewInner", "V", 0x2, NULL, NULL },
    { "addInArrayWithRepackagedAndroidViewView:withInt:", "addInArray", "V", 0x2, NULL, NULL },
    { "removeFromArrayWithInt:", "removeFromArray", "V", 0x2, NULL, NULL },
    { "removeFromArrayWithInt:withInt:", "removeFromArray", "V", 0x2, NULL, NULL },
    { "bindLayoutAnimationWithRepackagedAndroidViewView:", "bindLayoutAnimation", "V", 0x2, NULL, NULL },
    { "attachLayoutAnimationParametersWithRepackagedAndroidViewView:withRepackagedAndroidViewViewGroup_LayoutParams:withInt:withInt:", "attachLayoutAnimationParameters", "V", 0x4, NULL, NULL },
    { "removeViewWithRepackagedAndroidViewView:", "removeView", "V", 0x1, NULL, NULL },
    { "removeViewInLayoutWithRepackagedAndroidViewView:", "removeViewInLayout", "V", 0x1, NULL, NULL },
    { "removeViewsInLayoutWithInt:withInt:", "removeViewsInLayout", "V", 0x1, NULL, NULL },
    { "removeViewAtWithInt:", "removeViewAt", "V", 0x1, NULL, NULL },
    { "removeViewsWithInt:withInt:", "removeViews", "V", 0x1, NULL, NULL },
    { "removeViewInternalWithRepackagedAndroidViewView:", "removeViewInternal", "Z", 0x2, NULL, NULL },
    { "removeViewInternalWithInt:withRepackagedAndroidViewView:", "removeViewInternal", "V", 0x2, NULL, NULL },
    { "setLayoutTransitionWithRepackagedAndroidAnimationLayoutTransition:", "setLayoutTransition", "V", 0x1, NULL, NULL },
    { "getLayoutTransition", NULL, "Lrepackaged.android.animation.LayoutTransition;", 0x1, NULL, NULL },
    { "removeViewsInternalWithInt:withInt:", "removeViewsInternal", "V", 0x2, NULL, NULL },
    { "removeAllViews", NULL, "V", 0x1, NULL, NULL },
    { "removeAllViewsInLayout", NULL, "V", 0x1, NULL, NULL },
    { "removeDetachedViewWithRepackagedAndroidViewView:withBoolean:", "removeDetachedView", "V", 0x4, NULL, NULL },
    { "attachViewToParentWithRepackagedAndroidViewView:withInt:withRepackagedAndroidViewViewGroup_LayoutParams:", "attachViewToParent", "V", 0x4, NULL, NULL },
    { "detachViewFromParentWithRepackagedAndroidViewView:", "detachViewFromParent", "V", 0x4, NULL, NULL },
    { "detachViewFromParentWithInt:", "detachViewFromParent", "V", 0x4, NULL, NULL },
    { "detachViewsFromParentWithInt:withInt:", "detachViewsFromParent", "V", 0x4, NULL, NULL },
    { "detachAllViewsFromParent", NULL, "V", 0x4, NULL, NULL },
    { "invalidateChildWithRepackagedAndroidViewView:withRepackagedAndroidGraphicsRect:", "invalidateChild", "V", 0x11, NULL, NULL },
    { "invalidateChildInParentWithIntArray:withRepackagedAndroidGraphicsRect:", "invalidateChildInParent", "Lrepackaged.android.view.ViewParent;", 0x1, NULL, NULL },
    { "damageChildDeferredWithRepackagedAndroidViewView:", "damageChildDeferred", "Z", 0x1, NULL, NULL },
    { "damageChildWithRepackagedAndroidViewView:withRepackagedAndroidGraphicsRect:", "damageChild", "V", 0x1, NULL, NULL },
    { "damageChildInParentWithInt:withInt:withRepackagedAndroidGraphicsRect:", "damageChildInParent", "Lrepackaged.android.view.ViewParent;", 0x4, NULL, NULL },
    { "offsetDescendantRectToMyCoordsWithRepackagedAndroidViewView:withRepackagedAndroidGraphicsRect:", "offsetDescendantRectToMyCoords", "V", 0x11, NULL, NULL },
    { "offsetRectIntoDescendantCoordsWithRepackagedAndroidViewView:withRepackagedAndroidGraphicsRect:", "offsetRectIntoDescendantCoords", "V", 0x11, NULL, NULL },
    { "offsetRectBetweenParentAndChildWithRepackagedAndroidViewView:withRepackagedAndroidGraphicsRect:withBoolean:withBoolean:", "offsetRectBetweenParentAndChild", "V", 0x0, NULL, NULL },
    { "offsetChildrenTopAndBottomWithInt:", "offsetChildrenTopAndBottom", "V", 0x1, NULL, NULL },
    { "getChildVisibleRectWithRepackagedAndroidViewView:withRepackagedAndroidGraphicsRect:withRepackagedAndroidGraphicsPoint:", "getChildVisibleRect", "Z", 0x1, NULL, NULL },
    { "layoutWithInt:withInt:withInt:withInt:", "layout", "V", 0x11, NULL, NULL },
    { "onLayoutWithBoolean:withInt:withInt:withInt:withInt:", "onLayout", "V", 0x404, NULL, NULL },
    { "canAnimate", NULL, "Z", 0x4, NULL, NULL },
    { "startLayoutAnimation", NULL, "V", 0x1, NULL, NULL },
    { "scheduleLayoutAnimation", NULL, "V", 0x1, NULL, NULL },
    { "setLayoutAnimationWithRepackagedAndroidViewAnimationLayoutAnimationController:", "setLayoutAnimation", "V", 0x1, NULL, NULL },
    { "getLayoutAnimation", NULL, "Lrepackaged.android.view.animation.LayoutAnimationController;", 0x1, NULL, NULL },
    { "isAnimationCacheEnabled", NULL, "Z", 0x1, NULL, NULL },
    { "setAnimationCacheEnabledWithBoolean:", "setAnimationCacheEnabled", "V", 0x1, NULL, NULL },
    { "isAlwaysDrawnWithCacheEnabled", NULL, "Z", 0x1, NULL, NULL },
    { "setAlwaysDrawnWithCacheEnabledWithBoolean:", "setAlwaysDrawnWithCacheEnabled", "V", 0x1, NULL, NULL },
    { "isChildrenDrawnWithCacheEnabled", NULL, "Z", 0x4, NULL, NULL },
    { "setChildrenDrawnWithCacheEnabledWithBoolean:", "setChildrenDrawnWithCacheEnabled", "V", 0x4, NULL, NULL },
    { "isChildrenDrawingOrderEnabled", NULL, "Z", 0x4, NULL, NULL },
    { "setChildrenDrawingOrderEnabledWithBoolean:", "setChildrenDrawingOrderEnabled", "V", 0x4, NULL, NULL },
    { "hasBooleanFlagWithInt:", "hasBooleanFlag", "Z", 0x2, NULL, NULL },
    { "setBooleanFlagWithInt:withBoolean:", "setBooleanFlag", "V", 0x2, NULL, NULL },
    { "getPersistentDrawingCache", NULL, "I", 0x1, NULL, NULL },
    { "setPersistentDrawingCacheWithInt:", "setPersistentDrawingCache", "V", 0x1, NULL, NULL },
    { "setLayoutModeWithInt:withBoolean:", "setLayoutMode", "V", 0x2, NULL, NULL },
    { "invalidateInheritedLayoutModeWithInt:", "invalidateInheritedLayoutMode", "V", 0x0, NULL, NULL },
    { "getLayoutMode", NULL, "I", 0x1, NULL, NULL },
    { "setLayoutModeWithInt:", "setLayoutMode", "V", 0x1, NULL, NULL },
    { "generateLayoutParamsWithRepackagedAndroidUtilAttributeSet:", "generateLayoutParams", "Lrepackaged.android.view.ViewGroup$LayoutParams;", 0x1, NULL, NULL },
    { "generateLayoutParamsWithRepackagedAndroidViewViewGroup_LayoutParams:", "generateLayoutParams", "Lrepackaged.android.view.ViewGroup$LayoutParams;", 0x4, NULL, NULL },
    { "generateDefaultLayoutParams", NULL, "Lrepackaged.android.view.ViewGroup$LayoutParams;", 0x4, NULL, NULL },
    { "debugWithInt:", "debug", "V", 0x4, NULL, NULL },
    { "indexOfChildWithRepackagedAndroidViewView:", "indexOfChild", "I", 0x1, NULL, NULL },
    { "getChildCount", NULL, "I", 0x1, NULL, NULL },
    { "getChildAtWithInt:", "getChildAt", "Lrepackaged.android.view.View;", 0x1, NULL, NULL },
    { "measureChildrenWithInt:withInt:", "measureChildren", "V", 0x4, NULL, NULL },
    { "measureChildWithRepackagedAndroidViewView:withInt:withInt:", "measureChild", "V", 0x4, NULL, NULL },
    { "measureChildWithMarginsWithRepackagedAndroidViewView:withInt:withInt:withInt:withInt:", "measureChildWithMargins", "V", 0x4, NULL, NULL },
    { "getChildMeasureSpecWithInt:withInt:withInt:", "getChildMeasureSpec", "I", 0x9, NULL, NULL },
    { "clearDisappearingChildren", NULL, "V", 0x1, NULL, NULL },
    { "addDisappearingViewWithRepackagedAndroidViewView:", "addDisappearingView", "V", 0x2, NULL, NULL },
    { "finishAnimatingViewWithRepackagedAndroidViewView:withRepackagedAndroidViewAnimationAnimation:", "finishAnimatingView", "V", 0x0, NULL, NULL },
    { "isViewTransitioningWithRepackagedAndroidViewView:", "isViewTransitioning", "Z", 0x0, NULL, NULL },
    { "startViewTransitionWithRepackagedAndroidViewView:", "startViewTransition", "V", 0x1, NULL, NULL },
    { "endViewTransitionWithRepackagedAndroidViewView:", "endViewTransition", "V", 0x1, NULL, NULL },
    { "suppressLayoutWithBoolean:", "suppressLayout", "V", 0x1, NULL, NULL },
    { "isLayoutSuppressed", NULL, "Z", 0x1, NULL, NULL },
    { "gatherTransparentRegionWithRepackagedAndroidGraphicsRegion:", "gatherTransparentRegion", "Z", 0x1, NULL, NULL },
    { "requestTransparentRegionWithRepackagedAndroidViewView:", "requestTransparentRegion", "V", 0x1, NULL, NULL },
    { "dispatchApplyWindowInsetsWithRepackagedAndroidViewWindowInsets:", "dispatchApplyWindowInsets", "Lrepackaged.android.view.WindowInsets;", 0x1, NULL, NULL },
    { "getLayoutAnimationListener", NULL, "Lrepackaged.android.view.animation.Animation$AnimationListener;", 0x1, NULL, NULL },
    { "drawableStateChanged", NULL, "V", 0x4, NULL, NULL },
    { "jumpDrawablesToCurrentState", NULL, "V", 0x1, NULL, NULL },
    { "onCreateDrawableStateWithInt:", "onCreateDrawableState", "[I", 0x4, NULL, NULL },
    { "setAddStatesFromChildrenWithBoolean:", "setAddStatesFromChildren", "V", 0x1, NULL, NULL },
    { "addStatesFromChildren", NULL, "Z", 0x1, NULL, NULL },
    { "childDrawableStateChangedWithRepackagedAndroidViewView:", "childDrawableStateChanged", "V", 0x1, NULL, NULL },
    { "setLayoutAnimationListenerWithRepackagedAndroidViewAnimationAnimation_AnimationListener:", "setLayoutAnimationListener", "V", 0x1, NULL, NULL },
    { "requestTransitionStartWithRepackagedAndroidAnimationLayoutTransition:", "requestTransitionStart", "V", 0x1, NULL, NULL },
    { "resolveRtlPropertiesIfNeeded", NULL, "Z", 0x1, NULL, NULL },
    { "resolveLayoutDirection", NULL, "Z", 0x1, NULL, NULL },
    { "resolveTextDirection", NULL, "Z", 0x1, NULL, NULL },
    { "resolveTextAlignment", NULL, "Z", 0x1, NULL, NULL },
    { "resolvePadding", NULL, "V", 0x1, NULL, NULL },
    { "resolveDrawables", NULL, "V", 0x4, NULL, NULL },
    { "resolveLayoutParams", NULL, "V", 0x1, NULL, NULL },
    { "resetResolvedLayoutDirection", NULL, "V", 0x1, NULL, NULL },
    { "resetResolvedTextDirection", NULL, "V", 0x1, NULL, NULL },
    { "resetResolvedTextAlignment", NULL, "V", 0x1, NULL, NULL },
    { "resetResolvedPadding", NULL, "V", 0x1, NULL, NULL },
    { "resetResolvedDrawables", NULL, "V", 0x4, NULL, NULL },
    { "shouldDelayChildPressedState", NULL, "Z", 0x1, NULL, NULL },
    { "onStartNestedScrollWithRepackagedAndroidViewView:withRepackagedAndroidViewView:withInt:", "onStartNestedScroll", "Z", 0x1, NULL, NULL },
    { "onNestedScrollAcceptedWithRepackagedAndroidViewView:withRepackagedAndroidViewView:withInt:", "onNestedScrollAccepted", "V", 0x1, NULL, NULL },
    { "onStopNestedScrollWithRepackagedAndroidViewView:", "onStopNestedScroll", "V", 0x1, NULL, NULL },
    { "onNestedScrollWithRepackagedAndroidViewView:withInt:withInt:withInt:withInt:", "onNestedScroll", "V", 0x1, NULL, NULL },
    { "onNestedPreScrollWithRepackagedAndroidViewView:withInt:withInt:withIntArray:", "onNestedPreScroll", "V", 0x1, NULL, NULL },
    { "onNestedFlingWithRepackagedAndroidViewView:withFloat:withFloat:withBoolean:", "onNestedFling", "Z", 0x1, NULL, NULL },
    { "onNestedPreFlingWithRepackagedAndroidViewView:withFloat:withFloat:", "onNestedPreFling", "Z", 0x1, NULL, NULL },
    { "getNestedScrollAxes", NULL, "I", 0x1, NULL, NULL },
    { "onSetLayoutParamsWithRepackagedAndroidViewView:withRepackagedAndroidViewViewGroup_LayoutParams:", "onSetLayoutParams", "V", 0x4, NULL, NULL },
    { "captureTransitioningViewsWithJavaUtilList:", "captureTransitioningViews", "V", 0x1, NULL, NULL },
    { "findNamedViewsWithJavaUtilMap:", "findNamedViews", "V", 0x1, NULL, NULL },
    { "getDebugPaint", NULL, "Lrepackaged.android.graphics.Paint;", 0xa, NULL, NULL },
    { "drawRectWithRepackagedAndroidGraphicsCanvas:withRepackagedAndroidGraphicsPaint:withInt:withInt:withInt:withInt:", "drawRect", "V", 0xa, NULL, NULL },
    { "encodePropertiesWithRepackagedAndroidViewViewHierarchyEncoder:", "encodeProperties", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TAG_", NULL, 0x1a, "Ljava.lang.String;", &RepackagedAndroidViewViewGroup_TAG_, NULL,  },
    { "DBG_", NULL, 0x1a, "Z", NULL, NULL, .constantValue.asBOOL = RepackagedAndroidViewViewGroup_DBG },
    { "DEBUG_DRAW_", NULL, 0x9, "Z", &RepackagedAndroidViewViewGroup_DEBUG_DRAW_, NULL,  },
    { "mDisappearingChildren_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrepackaged/android/view/View;>;",  },
    { "mOnHierarchyChangeListener_", NULL, 0x4, "Lrepackaged.android.view.ViewGroup$OnHierarchyChangeListener;", NULL, NULL,  },
    { "mFocused_", NULL, 0x2, "Lrepackaged.android.view.View;", NULL, NULL,  },
    { "mChildTransformation_", NULL, 0x2, "Lrepackaged.android.view.animation.Transformation;", NULL, NULL,  },
    { "mInvalidateRegion_", NULL, 0x0, "Lrepackaged.android.graphics.RectF;", NULL, NULL,  },
    { "mInvalidationTransformation_", NULL, 0x0, "Lrepackaged.android.view.animation.Transformation;", NULL, NULL,  },
    { "mCurrentDragView_", NULL, 0x2, "Lrepackaged.android.view.View;", NULL, NULL,  },
    { "mCurrentDrag_", NULL, 0x2, "Lrepackaged.android.view.DragEvent;", NULL, NULL,  },
    { "mDragNotifiedChildren_", NULL, 0x2, "Ljava.util.HashSet;", NULL, "Ljava/util/HashSet<Lrepackaged/android/view/View;>;",  },
    { "mChildAcceptsDrag_", NULL, 0x2, "Z", NULL, NULL,  },
    { "mLocalPoint_", NULL, 0x2, "Lrepackaged.android.graphics.PointF;", NULL, NULL,  },
    { "mTempPoint_", NULL, 0x2, "[F", NULL, NULL,  },
    { "mLayoutAnimationController_", NULL, 0x2, "Lrepackaged.android.view.animation.LayoutAnimationController;", NULL, NULL,  },
    { "mAnimationListener_", NULL, 0x2, "Lrepackaged.android.view.animation.Animation$AnimationListener;", NULL, NULL,  },
    { "mFirstTouchTarget_", NULL, 0x2, "Lrepackaged.android.view.ViewGroup$TouchTarget;", NULL, NULL,  },
    { "mLastTouchDownTime_", NULL, 0x2, "J", NULL, NULL,  },
    { "mLastTouchDownIndex_", NULL, 0x2, "I", NULL, NULL,  },
    { "mLastTouchDownX_", NULL, 0x2, "F", NULL, NULL,  },
    { "mLastTouchDownY_", NULL, 0x2, "F", NULL, NULL,  },
    { "mFirstHoverTarget_", NULL, 0x2, "Lrepackaged.android.view.ViewGroup$HoverTarget;", NULL, NULL,  },
    { "mHoveredSelf_", NULL, 0x2, "Z", NULL, NULL,  },
    { "mGroupFlags_", NULL, 0x4, "I", NULL, NULL,  },
    { "mLayoutMode_", NULL, 0x2, "I", NULL, NULL,  },
    { "FLAG_CLIP_CHILDREN_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN },
    { "FLAG_CLIP_TO_PADDING_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_CLIP_TO_PADDING },
    { "FLAG_INVALIDATE_REQUIRED_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_INVALIDATE_REQUIRED },
    { "FLAG_RUN_ANIMATION_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_RUN_ANIMATION },
    { "FLAG_ANIMATION_DONE_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_ANIMATION_DONE },
    { "FLAG_PADDING_NOT_NULL_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_PADDING_NOT_NULL },
    { "FLAG_ANIMATION_CACHE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_ANIMATION_CACHE },
    { "FLAG_OPTIMIZE_INVALIDATE_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_OPTIMIZE_INVALIDATE },
    { "FLAG_CLEAR_TRANSFORMATION_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_CLEAR_TRANSFORMATION },
    { "FLAG_NOTIFY_ANIMATION_LISTENER_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_NOTIFY_ANIMATION_LISTENER },
    { "FLAG_USE_CHILD_DRAWING_ORDER_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_USE_CHILD_DRAWING_ORDER },
    { "FLAG_SUPPORT_STATIC_TRANSFORMATIONS_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_SUPPORT_STATIC_TRANSFORMATIONS },
    { "FLAG_ADD_STATES_FROM_CHILDREN_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_ADD_STATES_FROM_CHILDREN },
    { "FLAG_ALWAYS_DRAWN_WITH_CACHE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_ALWAYS_DRAWN_WITH_CACHE },
    { "FLAG_CHILDREN_DRAWN_WITH_CACHE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_CHILDREN_DRAWN_WITH_CACHE },
    { "FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE },
    { "FLAG_MASK_FOCUSABILITY_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_MASK_FOCUSABILITY },
    { "FOCUS_BEFORE_DESCENDANTS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FOCUS_BEFORE_DESCENDANTS },
    { "FOCUS_AFTER_DESCENDANTS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FOCUS_AFTER_DESCENDANTS },
    { "FOCUS_BLOCK_DESCENDANTS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FOCUS_BLOCK_DESCENDANTS },
    { "DESCENDANT_FOCUSABILITY_FLAGS_", NULL, 0x1a, "[I", &RepackagedAndroidViewViewGroup_DESCENDANT_FOCUSABILITY_FLAGS_, NULL,  },
    { "FLAG_DISALLOW_INTERCEPT_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_DISALLOW_INTERCEPT },
    { "FLAG_SPLIT_MOTION_EVENTS_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_SPLIT_MOTION_EVENTS },
    { "FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW },
    { "FLAG_LAYOUT_MODE_WAS_EXPLICITLY_SET_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_LAYOUT_MODE_WAS_EXPLICITLY_SET },
    { "FLAG_IS_TRANSITION_GROUP_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_IS_TRANSITION_GROUP },
    { "FLAG_IS_TRANSITION_GROUP_SET_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_IS_TRANSITION_GROUP_SET },
    { "FLAG_TOUCHSCREEN_BLOCKS_FOCUS_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_TOUCHSCREEN_BLOCKS_FOCUS },
    { "FLAG_START_ACTION_MODE_FOR_CHILD_IS_TYPED_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_START_ACTION_MODE_FOR_CHILD_IS_TYPED },
    { "FLAG_START_ACTION_MODE_FOR_CHILD_IS_NOT_TYPED_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_FLAG_START_ACTION_MODE_FOR_CHILD_IS_NOT_TYPED },
    { "mPersistentDrawingCache_", NULL, 0x4, "I", NULL, NULL,  },
    { "PERSISTENT_NO_CACHE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_PERSISTENT_NO_CACHE },
    { "PERSISTENT_ANIMATION_CACHE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_PERSISTENT_ANIMATION_CACHE },
    { "PERSISTENT_SCROLLING_CACHE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_PERSISTENT_SCROLLING_CACHE },
    { "PERSISTENT_ALL_CACHES_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_PERSISTENT_ALL_CACHES },
    { "LAYOUT_MODE_UNDEFINED_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_LAYOUT_MODE_UNDEFINED },
    { "LAYOUT_MODE_CLIP_BOUNDS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_LAYOUT_MODE_CLIP_BOUNDS },
    { "LAYOUT_MODE_OPTICAL_BOUNDS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_LAYOUT_MODE_OPTICAL_BOUNDS },
    { "LAYOUT_MODE_DEFAULT_", NULL, 0x9, "I", &RepackagedAndroidViewViewGroup_LAYOUT_MODE_DEFAULT_, NULL,  },
    { "CLIP_TO_PADDING_MASK_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_CLIP_TO_PADDING_MASK },
    { "CHILD_LEFT_INDEX_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_CHILD_LEFT_INDEX },
    { "CHILD_TOP_INDEX_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_CHILD_TOP_INDEX },
    { "mChildren_", NULL, 0x2, "[Lrepackaged.android.view.View;", NULL, NULL,  },
    { "mChildrenCount_", NULL, 0x2, "I", NULL, NULL,  },
    { "mSuppressLayout_", NULL, 0x0, "Z", NULL, NULL,  },
    { "mLayoutCalledWhileSuppressed_", NULL, 0x2, "Z", NULL, NULL,  },
    { "ARRAY_INITIAL_CAPACITY_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_ARRAY_INITIAL_CAPACITY },
    { "ARRAY_CAPACITY_INCREMENT_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_ARRAY_CAPACITY_INCREMENT },
    { "sDebugPaint_", NULL, 0xa, "Lrepackaged.android.graphics.Paint;", &RepackagedAndroidViewViewGroup_sDebugPaint_, NULL,  },
    { "sDebugLines_", NULL, 0xa, "[F", &RepackagedAndroidViewViewGroup_sDebugLines_, NULL,  },
    { "mCachePaint_", NULL, 0x0, "Lrepackaged.android.graphics.Paint;", NULL, NULL,  },
    { "mTransition_", NULL, 0x2, "Lrepackaged.android.animation.LayoutTransition;", NULL, NULL,  },
    { "mTransitioningViews_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrepackaged/android/view/View;>;",  },
    { "mVisibilityChangingChildren_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrepackaged/android/view/View;>;",  },
    { "mPreSortedChildren_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrepackaged/android/view/View;>;",  },
    { "mChildCountWithTransientState_", NULL, 0x2, "I", NULL, NULL,  },
    { "mNestedScrollAxes_", NULL, 0x2, "I", NULL, NULL,  },
    { "mTransientIndices_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/Integer;>;",  },
    { "mTransientViews_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lrepackaged/android/view/View;>;",  },
    { "SENTINEL_ACTION_MODE_", NULL, 0x1a, "Lrepackaged.android.view.ActionMode;", &RepackagedAndroidViewViewGroup_SENTINEL_ACTION_MODE_, NULL,  },
    { "mLayoutTransitionListener_", NULL, 0x2, "Lrepackaged.android.animation.LayoutTransition$TransitionListener;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lrepackaged.android.view.ViewGroup$OnHierarchyChangeListener;", "Lrepackaged.android.view.ViewGroup$LayoutParams;", "Lrepackaged.android.view.ViewGroup$MarginLayoutParams;", "Lrepackaged.android.view.ViewGroup$TouchTarget;", "Lrepackaged.android.view.ViewGroup$HoverTarget;", "Lrepackaged.android.view.ViewGroup$ChildListForAccessibility;", "Lrepackaged.android.view.ViewGroup$ViewLocationHolder;"};
  static const J2ObjcClassInfo _RepackagedAndroidViewViewGroup = { 2, "ViewGroup", "repackaged.android.view", NULL, 0x401, 285, methods, 87, fields, 0, NULL, 7, inner_classes, NULL, NULL };
  return &_RepackagedAndroidViewViewGroup;
}

@end


#line 559
void RepackagedAndroidViewViewGroup_initWithRepackagedAndroidContentContext_(RepackagedAndroidViewViewGroup *self, id<RepackagedAndroidContentContext> context) {
  (void) RepackagedAndroidViewViewGroup_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_(self, context, nil);
}

void RepackagedAndroidViewViewGroup_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_(RepackagedAndroidViewViewGroup *self, id<RepackagedAndroidContentContext> context, id<RepackagedAndroidUtilAttributeSet> attrs) {
  (void) RepackagedAndroidViewViewGroup_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_withInt_(self, context, attrs, 0);
}

void RepackagedAndroidViewViewGroup_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_withInt_(RepackagedAndroidViewViewGroup *self, id<RepackagedAndroidContentContext> context, id<RepackagedAndroidUtilAttributeSet> attrs, jint defStyleAttr) {
  (void) RepackagedAndroidViewViewGroup_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_withInt_withInt_(self, context, attrs, defStyleAttr, 0);
}

void RepackagedAndroidViewViewGroup_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_withInt_withInt_(RepackagedAndroidViewViewGroup *self, id<RepackagedAndroidContentContext> context, id<RepackagedAndroidUtilAttributeSet> attrs, jint defStyleAttr, jint defStyleRes) {
  (void) RepackagedAndroidViewView_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_withInt_withInt_(self, context, attrs, defStyleAttr, defStyleRes);
  self->mLastTouchDownIndex_ =
#line 182
  -1;
  self->mLayoutMode_ = RepackagedAndroidViewViewGroup_LAYOUT_MODE_UNDEFINED;
  self->mSuppressLayout_ =
#line 457
  NO;
  self->mLayoutCalledWhileSuppressed_ =
#line 462
  NO;
  self->mChildCountWithTransientState_ =
#line 491
  0;
  self->mTransientIndices_ =
#line 501
  nil;
  self->mTransientViews_ = nil;
  self->mLayoutTransitionListener_ = new_RepackagedAndroidViewViewGroup_$2_initWithRepackagedAndroidViewViewGroup_(self);
  
#line 573
  RepackagedAndroidViewViewGroup_initViewGroup(self);
  RepackagedAndroidViewViewGroup_initFromAttributesWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_withInt_withInt_(self, context, attrs, defStyleAttr, defStyleRes);
}


#line 577
jboolean RepackagedAndroidViewViewGroup_debugDraw(RepackagedAndroidViewViewGroup *self) {
  return RepackagedAndroidViewViewGroup_DEBUG_DRAW_ || (self->mAttachInfo_ != nil && self->mAttachInfo_->mDebugLayout_);
}

void RepackagedAndroidViewViewGroup_initViewGroup(RepackagedAndroidViewViewGroup *self) {
  
#line 583
  if (!RepackagedAndroidViewViewGroup_debugDraw(self)) {
    [self setFlagsWithInt:RepackagedAndroidViewView_WILL_NOT_DRAW withInt:RepackagedAndroidViewView_DRAW_MASK];
  }
  self->mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_CLIP_CHILDREN;
  self->mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_CLIP_TO_PADDING;
  self->mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_ANIMATION_DONE;
  self->mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_ANIMATION_CACHE;
  self->mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_ALWAYS_DRAWN_WITH_CACHE;
  
#line 592
  if (((RepackagedAndroidContentPmApplicationInfo *) nil_chk([((id<RepackagedAndroidContentContext>) nil_chk(self->mContext_)) getApplicationInfo]))->targetSdkVersion_ >= RepackagedAndroidOsBuild_VERSION_CODES_HONEYCOMB) {
    self->mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_SPLIT_MOTION_EVENTS;
  }
  
#line 596
  [self setDescendantFocusabilityWithInt:RepackagedAndroidViewViewGroup_FOCUS_BEFORE_DESCENDANTS];
  
#line 598
  self->mChildren_ = [IOSObjectArray newArrayWithLength:RepackagedAndroidViewViewGroup_ARRAY_INITIAL_CAPACITY type:RepackagedAndroidViewView_class_()];
  self->mChildrenCount_ = 0;
  
#line 601
  self->mPersistentDrawingCache_ = RepackagedAndroidViewViewGroup_PERSISTENT_SCROLLING_CACHE;
}


#line 604
void RepackagedAndroidViewViewGroup_initFromAttributesWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_withInt_withInt_(RepackagedAndroidViewViewGroup *self, id<RepackagedAndroidContentContext> context, id<RepackagedAndroidUtilAttributeSet> attrs, jint defStyleAttr, jint defStyleRes) {
  
#line 606
  id<RepackagedAndroidContentResTypedArray> a = [((id<RepackagedAndroidContentContext>) nil_chk(context)) obtainStyledAttributesWithRepackagedAndroidUtilAttributeSet:attrs withIntArray:RepackagedComAndroidInternalR_styleable_get_ViewGroup_() withInt:defStyleAttr withInt:
#line 607
  defStyleRes];
  
#line 609
  jint N = [((id<RepackagedAndroidContentResTypedArray>) nil_chk(a)) getIndexCount];
  for (jint i = 0; i < N; i++) {
    jint attr = [a getIndexWithInt:i];
    {
      
#line 632
      jint id_;
      
#line 644
      jboolean animateLayoutChanges;
      
#line 612
      switch (attr) {
        case RepackagedComAndroidInternalR_styleable_ViewGroup_clipChildren:
        [self setClipChildrenWithBoolean:[a getBooleanWithInt:attr withBoolean:YES]];
        break;
        case RepackagedComAndroidInternalR_styleable_ViewGroup_clipToPadding:
        [self setClipToPaddingWithBoolean:[a getBooleanWithInt:attr withBoolean:YES]];
        break;
        case RepackagedComAndroidInternalR_styleable_ViewGroup_animationCache:
        [self setAnimationCacheEnabledWithBoolean:[a getBooleanWithInt:attr withBoolean:YES]];
        break;
        case RepackagedComAndroidInternalR_styleable_ViewGroup_persistentDrawingCache:
        [self setPersistentDrawingCacheWithInt:[a getIntWithInt:attr withInt:RepackagedAndroidViewViewGroup_PERSISTENT_SCROLLING_CACHE]];
        break;
        case RepackagedComAndroidInternalR_styleable_ViewGroup_addStatesFromChildren:
        [self setAddStatesFromChildrenWithBoolean:[a getBooleanWithInt:attr withBoolean:NO]];
        break;
        case RepackagedComAndroidInternalR_styleable_ViewGroup_alwaysDrawnWithCache:
        [self setAlwaysDrawnWithCacheEnabledWithBoolean:[a getBooleanWithInt:attr withBoolean:YES]];
        break;
        case RepackagedComAndroidInternalR_styleable_ViewGroup_layoutAnimation:
        id_ = [a getResourceIdWithInt:attr withInt:-1];
        if (id_ > 0) {
          [self setLayoutAnimationWithRepackagedAndroidViewAnimationLayoutAnimationController:RepackagedAndroidViewAnimationAnimationUtils_loadLayoutAnimationWithRepackagedAndroidContentContext_withInt_(self->mContext_, id_)];
        }
        break;
        case RepackagedComAndroidInternalR_styleable_ViewGroup_descendantFocusability:
        [self setDescendantFocusabilityWithInt:IOSIntArray_Get(nil_chk(RepackagedAndroidViewViewGroup_DESCENDANT_FOCUSABILITY_FLAGS_), [a getIntWithInt:attr withInt:0])];
        break;
        case RepackagedComAndroidInternalR_styleable_ViewGroup_splitMotionEvents:
        [self setMotionEventSplittingEnabledWithBoolean:[a getBooleanWithInt:attr withBoolean:NO]];
        break;
        case RepackagedComAndroidInternalR_styleable_ViewGroup_animateLayoutChanges:
        animateLayoutChanges = [a getBooleanWithInt:attr withBoolean:NO];
        if (animateLayoutChanges) {
          [self setLayoutTransitionWithRepackagedAndroidAnimationLayoutTransition:new_RepackagedAndroidAnimationLayoutTransition_init()];
        }
        break;
        case RepackagedComAndroidInternalR_styleable_ViewGroup_layoutMode:
        [self setLayoutModeWithInt:[a getIntWithInt:attr withInt:RepackagedAndroidViewViewGroup_LAYOUT_MODE_UNDEFINED]];
        break;
        case RepackagedComAndroidInternalR_styleable_ViewGroup_transitionGroup:
        [self setTransitionGroupWithBoolean:[a getBooleanWithInt:attr withBoolean:NO]];
        break;
        case RepackagedComAndroidInternalR_styleable_ViewGroup_touchscreenBlocksFocus:
        [self setTouchscreenBlocksFocusWithBoolean:[a getBooleanWithInt:attr withBoolean:NO]];
        break;
      }
    }
  }
  [a recycle];
}


#line 1363
RepackagedAndroidGraphicsPointF *RepackagedAndroidViewViewGroup_getLocalPoint(RepackagedAndroidViewViewGroup *self) {
  if (self->mLocalPoint_ == nil) self->mLocalPoint_ = new_RepackagedAndroidGraphicsPointF_init();
  return self->mLocalPoint_;
}


#line 1878
void RepackagedAndroidViewViewGroup_exitHoverTargets(RepackagedAndroidViewViewGroup *self) {
  if (self->mHoveredSelf_ || self->mFirstHoverTarget_ != nil) {
    jlong now = RepackagedAndroidOsSystemClock_uptimeMillis();
    RepackagedAndroidViewMotionEvent *event = RepackagedAndroidViewMotionEvent_obtainWithLong_withLong_withInt_withFloat_withFloat_withInt_(now, now,
#line 1882
    RepackagedAndroidViewMotionEvent_ACTION_HOVER_EXIT, 0.0f, 0.0f, 0);
    [((RepackagedAndroidViewMotionEvent *) nil_chk(event)) setSourceWithNSString:RepackagedAndroidViewInputDevice_get_SOURCE_TOUCHSCREEN_()];
    [self dispatchHoverEventWithRepackagedAndroidViewMotionEvent:event];
    [event recycle];
  }
}


#line 1889
void RepackagedAndroidViewViewGroup_cancelHoverTargetWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *view) {
  RepackagedAndroidViewViewGroup_HoverTarget *predecessor = nil;
  RepackagedAndroidViewViewGroup_HoverTarget *target = self->mFirstHoverTarget_;
  while (target != nil) {
    RepackagedAndroidViewViewGroup_HoverTarget *next = ((RepackagedAndroidViewViewGroup_HoverTarget *) nil_chk(target))->next_;
    if (target->child_ == view) {
      if (predecessor == nil) {
        self->mFirstHoverTarget_ = next;
      }
      else {
        
#line 1898
        predecessor->next_ = next;
      }
      [target recycle];
      
#line 1902
      jlong now = RepackagedAndroidOsSystemClock_uptimeMillis();
      RepackagedAndroidViewMotionEvent *event = RepackagedAndroidViewMotionEvent_obtainWithLong_withLong_withInt_withFloat_withFloat_withInt_(now, now,
#line 1904
      RepackagedAndroidViewMotionEvent_ACTION_HOVER_EXIT, 0.0f, 0.0f, 0);
      [((RepackagedAndroidViewMotionEvent *) nil_chk(event)) setSourceWithNSString:RepackagedAndroidViewInputDevice_get_SOURCE_TOUCHSCREEN_()];
      [((RepackagedAndroidViewView *) nil_chk(view)) dispatchHoverEventWithRepackagedAndroidViewMotionEvent:event];
      [event recycle];
      return;
    }
    predecessor = target;
    target = next;
  }
}


#line 1986
RepackagedAndroidViewMotionEvent *RepackagedAndroidViewViewGroup_obtainMotionEventNoHistoryOrSelfWithRepackagedAndroidViewMotionEvent_(RepackagedAndroidViewMotionEvent *event) {
  RepackagedAndroidViewViewGroup_initialize();
  
#line 1987
  if ([((RepackagedAndroidViewMotionEvent *) nil_chk(event)) getHistorySize] == 0) {
    return event;
  }
  return RepackagedAndroidViewMotionEvent_obtainNoHistoryWithRepackagedAndroidViewMotionEvent_(event);
}


#line 2053
jboolean RepackagedAndroidViewViewGroup_dispatchTransformedGenericPointerEventWithRepackagedAndroidViewMotionEvent_withRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewMotionEvent *event, RepackagedAndroidViewView *child) {
  jfloat offsetX = self->mScrollX_ - ((RepackagedAndroidViewView *) nil_chk(child))->mLeft_;
  jfloat offsetY = self->mScrollY_ - child->mTop_;
  
#line 2057
  jboolean handled;
  if (![child hasIdentityMatrix]) {
    RepackagedAndroidViewMotionEvent *transformedEvent = RepackagedAndroidViewMotionEvent_obtainWithRepackagedAndroidViewMotionEvent_(event);
    [((RepackagedAndroidViewMotionEvent *) nil_chk(transformedEvent)) offsetLocationWithFloat:offsetX withFloat:offsetY];
    [transformedEvent transformWithRepackagedAndroidGraphicsMatrix:[child getInverseMatrix]];
    handled = [child dispatchGenericMotionEventWithRepackagedAndroidViewMotionEvent:transformedEvent];
    [transformedEvent recycle];
  }
  else {
    
#line 2065
    [((RepackagedAndroidViewMotionEvent *) nil_chk(event)) offsetLocationWithFloat:offsetX withFloat:offsetY];
    handled = [child dispatchGenericMotionEventWithRepackagedAndroidViewMotionEvent:event];
    [event offsetLocationWithFloat:-offsetX withFloat:-offsetY];
  }
  return handled;
}


#line 2296
RepackagedAndroidViewView *RepackagedAndroidViewViewGroup_findChildWithAccessibilityFocus(RepackagedAndroidViewViewGroup *self) {
  RepackagedAndroidViewViewRootImpl *viewRoot = [self getViewRootImpl];
  if (viewRoot == nil) {
    return nil;
  }
  
#line 2302
  RepackagedAndroidViewView *current = [((RepackagedAndroidViewViewRootImpl *) nil_chk(viewRoot)) getAccessibilityFocusedHost];
  if (current == nil) {
    return nil;
  }
  
#line 2307
  id<RepackagedAndroidViewViewParent> parent = [((RepackagedAndroidViewView *) nil_chk(current)) getParent];
  while ([parent isKindOfClass:[RepackagedAndroidViewView class]]) {
    if (parent == self) {
      return current;
    }
    current = (RepackagedAndroidViewView *) check_class_cast(parent, [RepackagedAndroidViewView class]);
    parent = [((RepackagedAndroidViewView *) nil_chk(current)) getParent];
  }
  
#line 2316
  return nil;
}

void RepackagedAndroidViewViewGroup_resetTouchState(RepackagedAndroidViewViewGroup *self) {
  RepackagedAndroidViewViewGroup_clearTouchTargets(self);
  RepackagedAndroidViewViewGroup_resetCancelNextUpFlagWithRepackagedAndroidViewView_(self);
  self->mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_DISALLOW_INTERCEPT;
  self->mNestedScrollAxes_ = RepackagedAndroidViewView_SCROLL_AXIS_NONE;
}


#line 2333
jboolean RepackagedAndroidViewViewGroup_resetCancelNextUpFlagWithRepackagedAndroidViewView_(RepackagedAndroidViewView *view) {
  RepackagedAndroidViewViewGroup_initialize();
  
#line 2334
  if ((((RepackagedAndroidViewView *) nil_chk(view))->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_CANCEL_NEXT_UP_EVENT) != 0) {
    view->mPrivateFlags_ &= ~RepackagedAndroidViewView_PFLAG_CANCEL_NEXT_UP_EVENT;
    return YES;
  }
  return NO;
}

void RepackagedAndroidViewViewGroup_clearTouchTargets(RepackagedAndroidViewViewGroup *self) {
  RepackagedAndroidViewViewGroup_TouchTarget *target = self->mFirstTouchTarget_;
  if (target != nil) {
    do {
      RepackagedAndroidViewViewGroup_TouchTarget *next = target->next_;
      [target recycle];
      target = next;
    }
    while (
#line 2351
    target != nil);
    self->mFirstTouchTarget_ = nil;
  }
}

void RepackagedAndroidViewViewGroup_cancelAndClearTouchTargetsWithRepackagedAndroidViewMotionEvent_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewMotionEvent *event) {
  if (self->mFirstTouchTarget_ != nil) {
    jboolean syntheticEvent = NO;
    if (event == nil) {
      jlong now = RepackagedAndroidOsSystemClock_uptimeMillis();
      event = RepackagedAndroidViewMotionEvent_obtainWithLong_withLong_withInt_withFloat_withFloat_withInt_(now, now,
#line 2365
      RepackagedAndroidViewMotionEvent_ACTION_CANCEL, 0.0f, 0.0f, 0);
      [((RepackagedAndroidViewMotionEvent *) nil_chk(event)) setSourceWithNSString:RepackagedAndroidViewInputDevice_get_SOURCE_TOUCHSCREEN_()];
      syntheticEvent = YES;
    }
    
#line 2370
    for (RepackagedAndroidViewViewGroup_TouchTarget *target = self->mFirstTouchTarget_; target != nil; target = target->next_) {
      RepackagedAndroidViewViewGroup_resetCancelNextUpFlagWithRepackagedAndroidViewView_(target->child_);
      [self dispatchTransformedTouchEventWithRepackagedAndroidViewMotionEvent:event withBoolean:YES withRepackagedAndroidViewView:target->child_ withInt:target->pointerIdBits_];
    }
    RepackagedAndroidViewViewGroup_clearTouchTargets(self);
    
#line 2376
    if (syntheticEvent) {
      [((RepackagedAndroidViewMotionEvent *) nil_chk(event)) recycle];
    }
  }
}


#line 2386
RepackagedAndroidViewViewGroup_TouchTarget *RepackagedAndroidViewViewGroup_getTouchTargetWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *child) {
  for (RepackagedAndroidViewViewGroup_TouchTarget *target = self->mFirstTouchTarget_; target != nil; target = target->next_) {
    if (((RepackagedAndroidViewViewGroup_TouchTarget *) nil_chk(target))->child_ == child) {
      return target;
    }
  }
  return nil;
}


#line 2399
RepackagedAndroidViewViewGroup_TouchTarget *RepackagedAndroidViewViewGroup_addTouchTargetWithRepackagedAndroidViewView_withInt_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *child, jint pointerIdBits) {
  RepackagedAndroidViewViewGroup_TouchTarget *target = RepackagedAndroidViewViewGroup_TouchTarget_obtainWithRepackagedAndroidViewView_withInt_(child, pointerIdBits);
  ((RepackagedAndroidViewViewGroup_TouchTarget *) nil_chk(target))->next_ = self->mFirstTouchTarget_;
  self->mFirstTouchTarget_ = target;
  return target;
}


#line 2409
void RepackagedAndroidViewViewGroup_removePointersFromTouchTargetsWithInt_(RepackagedAndroidViewViewGroup *self, jint pointerIdBits) {
  RepackagedAndroidViewViewGroup_TouchTarget *predecessor = nil;
  RepackagedAndroidViewViewGroup_TouchTarget *target = self->mFirstTouchTarget_;
  while (target != nil) {
    RepackagedAndroidViewViewGroup_TouchTarget *next = ((RepackagedAndroidViewViewGroup_TouchTarget *) nil_chk(target))->next_;
    if ((target->pointerIdBits_ & pointerIdBits) != 0) {
      target->pointerIdBits_ &= ~pointerIdBits;
      if (target->pointerIdBits_ == 0) {
        if (predecessor == nil) {
          self->mFirstTouchTarget_ = next;
        }
        else {
          
#line 2420
          predecessor->next_ = next;
        }
        [target recycle];
        target = next;
        continue;
      }
    }
    predecessor = target;
    target = next;
  }
}


#line 2432
void RepackagedAndroidViewViewGroup_cancelTouchTargetWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *view) {
  RepackagedAndroidViewViewGroup_TouchTarget *predecessor = nil;
  RepackagedAndroidViewViewGroup_TouchTarget *target = self->mFirstTouchTarget_;
  while (target != nil) {
    RepackagedAndroidViewViewGroup_TouchTarget *next = ((RepackagedAndroidViewViewGroup_TouchTarget *) nil_chk(target))->next_;
    if (target->child_ == view) {
      if (predecessor == nil) {
        self->mFirstTouchTarget_ = next;
      }
      else {
        
#line 2441
        predecessor->next_ = next;
      }
      [target recycle];
      
#line 2445
      jlong now = RepackagedAndroidOsSystemClock_uptimeMillis();
      RepackagedAndroidViewMotionEvent *event = RepackagedAndroidViewMotionEvent_obtainWithLong_withLong_withInt_withFloat_withFloat_withInt_(now, now,
#line 2447
      RepackagedAndroidViewMotionEvent_ACTION_CANCEL, 0.0f, 0.0f, 0);
      [((RepackagedAndroidViewMotionEvent *) nil_chk(event)) setSourceWithNSString:RepackagedAndroidViewInputDevice_get_SOURCE_TOUCHSCREEN_()];
      [((RepackagedAndroidViewView *) nil_chk(view)) dispatchTouchEventWithRepackagedAndroidViewMotionEvent:event];
      [event recycle];
      return;
    }
    predecessor = target;
    target = next;
  }
}


#line 2462
jboolean RepackagedAndroidViewViewGroup_canViewReceivePointerEventsWithRepackagedAndroidViewView_(RepackagedAndroidViewView *child) {
  RepackagedAndroidViewViewGroup_initialize();
  
#line 2463
  return (((RepackagedAndroidViewView *) nil_chk(child))->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK) == RepackagedAndroidViewView_VISIBLE ||
#line 2464
  [child getAnimation] != nil;
}


#line 2467
IOSFloatArray *RepackagedAndroidViewViewGroup_getTempPoint(RepackagedAndroidViewViewGroup *self) {
  if (self->mTempPoint_ == nil) {
    self->mTempPoint_ = [IOSFloatArray newArrayWithLength:2];
  }
  return self->mTempPoint_;
}


#line 3212
void RepackagedAndroidViewViewGroup_fillRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(RepackagedAndroidGraphicsCanvas *canvas, RepackagedAndroidGraphicsPaint *paint, jint x1, jint y1, jint x2, jint y2) {
  RepackagedAndroidViewViewGroup_initialize();
  
#line 3213
  if (x1 != x2 && y1 != y2) {
    if (x1 > x2) {
      jint tmp = x1;
      
#line 3215
      x1 = x2;
      
#line 3215
      x2 = tmp;
    }
    if (y1 > y2) {
      jint tmp = y1;
      
#line 3218
      y1 = y2;
      
#line 3218
      y2 = tmp;
    }
    [((RepackagedAndroidGraphicsCanvas *) nil_chk(canvas)) drawRectWithInt:x1 withInt:y1 withInt:x2 withInt:y2 withRepackagedAndroidGraphicsPaint:paint];
  }
}


#line 3224
jint RepackagedAndroidViewViewGroup_signWithInt_(jint x) {
  RepackagedAndroidViewViewGroup_initialize();
  
#line 3225
  return (x >= 0) ? 1 : -1;
}


#line 3228
void RepackagedAndroidViewViewGroup_drawCornerWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_withInt_(RepackagedAndroidGraphicsCanvas *c, RepackagedAndroidGraphicsPaint *paint, jint x1, jint y1, jint dx, jint dy, jint lw) {
  RepackagedAndroidViewViewGroup_initialize();
  
#line 3229
  RepackagedAndroidViewViewGroup_fillRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(c, paint, x1, y1, x1 + dx, y1 + lw * RepackagedAndroidViewViewGroup_signWithInt_(dy));
  RepackagedAndroidViewViewGroup_fillRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(c, paint, x1, y1, x1 + lw * RepackagedAndroidViewViewGroup_signWithInt_(dx), y1 + dy);
}


#line 3233
jint RepackagedAndroidViewViewGroup_dipsToPixelsWithInt_(RepackagedAndroidViewViewGroup *self, jint dips) {
  jfloat scale_ = ((RepackagedAndroidUtilDisplayMetrics *) nil_chk([((RepackagedAndroidContentResResources *) nil_chk([((id<RepackagedAndroidContentContext>) nil_chk([self getContext])) getResources])) getDisplayMetrics]))->density_;
  return J2ObjCFpToInt((dips * scale_ + 0.5f));
}

void RepackagedAndroidViewViewGroup_drawRectCornersWithRepackagedAndroidGraphicsCanvas_withInt_withInt_withInt_withInt_withRepackagedAndroidGraphicsPaint_withInt_withInt_(RepackagedAndroidGraphicsCanvas *canvas, jint x1, jint y1, jint x2, jint y2, RepackagedAndroidGraphicsPaint *paint, jint lineLength, jint lineWidth) {
  RepackagedAndroidViewViewGroup_initialize();
  RepackagedAndroidViewViewGroup_drawCornerWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_withInt_(canvas, paint, x1, y1, lineLength, lineLength, lineWidth);
  RepackagedAndroidViewViewGroup_drawCornerWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_withInt_(canvas, paint, x1, y2, lineLength, -lineLength, lineWidth);
  RepackagedAndroidViewViewGroup_drawCornerWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_withInt_(canvas, paint, x2, y1, -lineLength, lineLength, lineWidth);
  RepackagedAndroidViewViewGroup_drawCornerWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_withInt_(canvas, paint, x2, y2, -lineLength, -lineLength, lineWidth);
}

void RepackagedAndroidViewViewGroup_fillDifferenceWithRepackagedAndroidGraphicsCanvas_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withRepackagedAndroidGraphicsPaint_(RepackagedAndroidGraphicsCanvas *canvas, jint x2, jint y2, jint x3, jint y3, jint dx1, jint dy1, jint dx2, jint dy2, RepackagedAndroidGraphicsPaint *paint) {
  RepackagedAndroidViewViewGroup_initialize();
  
#line 3249
  jint x1 = x2 - dx1;
  jint y1 = y2 - dy1;
  
#line 3252
  jint x4 = x3 + dx2;
  jint y4 = y3 + dy2;
  
#line 3255
  RepackagedAndroidViewViewGroup_fillRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(canvas, paint, x1, y1, x4, y2);
  RepackagedAndroidViewViewGroup_fillRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(canvas, paint, x1, y2, x2, y3);
  RepackagedAndroidViewViewGroup_fillRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(canvas, paint, x3, y2, x4, y3);
  RepackagedAndroidViewViewGroup_fillRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(canvas, paint, x1, y3, x4, y4);
}


#line 3499
jboolean RepackagedAndroidViewViewGroup_hasChildWithZ(RepackagedAndroidViewViewGroup *self) {
  for (jint i = 0; i < self->mChildrenCount_; i++) {
    if ([((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(self->mChildren_), i))) getZ] != 0) return YES;
  }
  return NO;
}


#line 3541
void RepackagedAndroidViewViewGroup_notifyAnimationListener(RepackagedAndroidViewViewGroup *self) {
  self->mGroupFlags_ &= ~RepackagedAndroidViewViewGroup_FLAG_NOTIFY_ANIMATION_LISTENER;
  self->mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_ANIMATION_DONE;
  
#line 3545
  if (self->mAnimationListener_ != nil) {
    id<JavaLangRunnable> end = new_RepackagedAndroidViewViewGroup_$4_initWithRepackagedAndroidViewViewGroup_(self);
    
#line 3551
    [self postWithJavaLangRunnable:end];
  }
  
#line 3554
  [self invalidateWithBoolean:YES];
}


#line 3589
void RepackagedAndroidViewViewGroup_recreateChildDisplayListWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *child) {
  ((RepackagedAndroidViewView *) nil_chk(child))->mRecreateDisplayList_ = ((child->mPrivateFlags_ & RepackagedAndroidViewView_PFLAG_INVALIDATED) != 0);
  child->mPrivateFlags_ &= ~RepackagedAndroidViewView_PFLAG_INVALIDATED;
  (void) [child updateDisplayListIfDirty];
  child->mRecreateDisplayList_ = NO;
}


#line 4232
void RepackagedAndroidViewViewGroup_clearCachedLayoutMode(RepackagedAndroidViewViewGroup *self) {
  if (!RepackagedAndroidViewViewGroup_hasBooleanFlagWithInt_(self, RepackagedAndroidViewViewGroup_FLAG_LAYOUT_MODE_WAS_EXPLICITLY_SET)) {
    self->mLayoutMode_ = RepackagedAndroidViewViewGroup_LAYOUT_MODE_UNDEFINED;
  }
}


#line 4298
void RepackagedAndroidViewViewGroup_addViewInnerWithRepackagedAndroidViewView_withInt_withRepackagedAndroidViewViewGroup_LayoutParams_withBoolean_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *child, jint index, RepackagedAndroidViewViewGroup_LayoutParams *params, jboolean preventRequestLayout) {
  
#line 4301
  if (self->mTransition_ != nil) {
    
#line 4304
    [self->mTransition_ cancelWithInt:RepackagedAndroidAnimationLayoutTransition_DISAPPEARING];
  }
  
#line 4307
  if ([((RepackagedAndroidViewView *) nil_chk(child)) getParent] != nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"The specified child already has a parent. You must call removeView() on the child's parent first.");
  }
  
#line 4312
  if (self->mTransition_ != nil) {
    [self->mTransition_ addChildWithRepackagedAndroidViewViewGroup:self withRepackagedAndroidViewView:child];
  }
  
#line 4316
  if (![self checkLayoutParamsWithRepackagedAndroidViewViewGroup_LayoutParams:params]) {
    params = [self generateLayoutParamsWithRepackagedAndroidViewViewGroup_LayoutParams:params];
  }
  
#line 4320
  if (preventRequestLayout) {
    child->mLayoutParams_ = params;
  }
  else {
    
#line 4323
    [child setLayoutParamsWithRepackagedAndroidViewViewGroup_LayoutParams:params];
  }
  
#line 4326
  if (index < 0) {
    index = self->mChildrenCount_;
  }
  
#line 4330
  RepackagedAndroidViewViewGroup_addInArrayWithRepackagedAndroidViewView_withInt_(self, child, index);
  
#line 4333
  if (preventRequestLayout) {
    [child assignParentWithRepackagedAndroidViewViewParent:self];
  }
  else {
    
#line 4336
    child->mParent_ = self;
  }
  
#line 4339
  if ([child hasFocus]) {
    [self requestChildFocusWithRepackagedAndroidViewView:child withRepackagedAndroidViewView:[child findFocus]];
  }
  
#line 4343
  RepackagedAndroidViewView_AttachInfo *ai = self->mAttachInfo_;
  if (ai != nil && (self->mGroupFlags_ & RepackagedAndroidViewViewGroup_FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW) == 0) {
    jboolean lastKeepOn = ai->mKeepScreenOn_;
    ai->mKeepScreenOn_ = NO;
    [child dispatchAttachedToWindowWithRepackagedAndroidViewView_AttachInfo:self->mAttachInfo_ withInt:(self->mViewFlags_ & RepackagedAndroidViewView_VISIBILITY_MASK)];
    if (ai->mKeepScreenOn_) {
      [self needGlobalAttributesUpdateWithBoolean:YES];
    }
    ai->mKeepScreenOn_ = lastKeepOn;
  }
  
#line 4354
  if ([child isLayoutDirectionInherited]) {
    [child resetRtlProperties];
  }
  
#line 4358
  [self dispatchViewAddedWithRepackagedAndroidViewView:child];
  
#line 4360
  if ((child->mViewFlags_ & RepackagedAndroidViewView_DUPLICATE_PARENT_STATE) == RepackagedAndroidViewView_DUPLICATE_PARENT_STATE) {
    self->mGroupFlags_ |= RepackagedAndroidViewViewGroup_FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE;
  }
  
#line 4364
  if ([child hasTransientState]) {
    [self childHasTransientStateChangedWithRepackagedAndroidViewView:child withBoolean:YES];
  }
  
#line 4368
  if ([child getVisibility] != RepackagedAndroidViewView_GONE) {
    [self notifySubtreeAccessibilityStateChangedIfNeeded];
  }
  
#line 4372
  if (self->mTransientIndices_ != nil) {
    jint transientCount = [self->mTransientIndices_ size];
    for (jint i = 0; i < transientCount; ++i) {
      jint oldIndex = [((JavaLangInteger *) nil_chk([self->mTransientIndices_ getWithInt:i])) intValue];
      if (index <= oldIndex) {
        (void) [self->mTransientIndices_ setWithInt:i withId:JavaLangInteger_valueOfWithInt_(oldIndex + 1)];
      }
    }
  }
}


#line 4383
void RepackagedAndroidViewViewGroup_addInArrayWithRepackagedAndroidViewView_withInt_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *child, jint index) {
  IOSObjectArray *children = self->mChildren_;
  jint count = self->mChildrenCount_;
  jint size = ((IOSObjectArray *) nil_chk(children))->size_;
  if (index == count) {
    if (size == count) {
      self->mChildren_ = [IOSObjectArray newArrayWithLength:size + RepackagedAndroidViewViewGroup_ARRAY_CAPACITY_INCREMENT type:RepackagedAndroidViewView_class_()];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(children, 0, self->mChildren_, 0, size);
      children = self->mChildren_;
    }
    (void) IOSObjectArray_Set(children, self->mChildrenCount_++, child);
  }
  else
#line 4394
  if (index < count) {
    if (size == count) {
      self->mChildren_ = [IOSObjectArray newArrayWithLength:size + RepackagedAndroidViewViewGroup_ARRAY_CAPACITY_INCREMENT type:RepackagedAndroidViewView_class_()];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(children, 0, self->mChildren_, 0, index);
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(children, index, self->mChildren_, index + 1, count - index);
      children = self->mChildren_;
    }
    else {
      
#line 4401
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(children, index, children, index + 1, count - index);
    }
    (void) IOSObjectArray_Set(children, index, child);
    self->mChildrenCount_++;
    if (self->mLastTouchDownIndex_ >= index) {
      self->mLastTouchDownIndex_++;
    }
  }
  else {
    
#line 4409
    @throw new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"index=", index, @" count=", count));
  }
}


#line 4414
void RepackagedAndroidViewViewGroup_removeFromArrayWithInt_(RepackagedAndroidViewViewGroup *self, jint index) {
  IOSObjectArray *children = self->mChildren_;
  if (!(self->mTransitioningViews_ != nil && [self->mTransitioningViews_ containsWithId:IOSObjectArray_Get(nil_chk(children), index)])) {
    ((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(children, index)))->mParent_ = nil;
  }
  jint count = self->mChildrenCount_;
  if (index == count - 1) {
    (void) IOSObjectArray_Set(nil_chk(children), --self->mChildrenCount_, nil);
  }
  else
#line 4422
  if (index >= 0 && index < count) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(children, index + 1, children, index, count - index - 1);
    (void) IOSObjectArray_Set(nil_chk(children), --self->mChildrenCount_, nil);
  }
  else {
    
#line 4426
    @throw new_JavaLangIndexOutOfBoundsException_init();
  }
  if (self->mLastTouchDownIndex_ == index) {
    self->mLastTouchDownTime_ = 0;
    self->mLastTouchDownIndex_ = -1;
  }
  else
#line 4431
  if (self->mLastTouchDownIndex_ > index) {
    self->mLastTouchDownIndex_--;
  }
}


#line 4437
void RepackagedAndroidViewViewGroup_removeFromArrayWithInt_withInt_(RepackagedAndroidViewViewGroup *self, jint start, jint count) {
  IOSObjectArray *children = self->mChildren_;
  jint childrenCount = self->mChildrenCount_;
  
#line 4441
  start = JavaLangMath_maxWithInt_withInt_(0, start);
  jint end = JavaLangMath_minWithInt_withInt_(childrenCount, start + count);
  
#line 4444
  if (start == end) {
    return;
  }
  
#line 4448
  if (end == childrenCount) {
    for (jint i = start; i < end; i++) {
      ((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i)))->mParent_ = nil;
      (void) IOSObjectArray_Set(children, i, nil);
    }
  }
  else {
    
#line 4454
    for (jint i = start; i < end; i++) {
      ((RepackagedAndroidViewView *) nil_chk(IOSObjectArray_Get(nil_chk(children), i)))->mParent_ = nil;
    }
    
#line 4460
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(children, end, children, start, childrenCount - end);
    
#line 4462
    for (jint i = childrenCount - (end - start); i < childrenCount; i++) {
      (void) IOSObjectArray_Set(nil_chk(children), i, nil);
    }
  }
  
#line 4467
  self->mChildrenCount_ -= (end - start);
}


#line 4470
void RepackagedAndroidViewViewGroup_bindLayoutAnimationWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *child) {
  id<RepackagedAndroidViewAnimationAnimation> a = [((RepackagedAndroidViewAnimationLayoutAnimationController *) nil_chk(self->mLayoutAnimationController_)) getAnimationForViewWithRepackagedAndroidViewView:child];
  [((RepackagedAndroidViewView *) nil_chk(child)) setAnimationWithRepackagedAndroidViewAnimationAnimation:a];
}


#line 4572
jboolean RepackagedAndroidViewViewGroup_removeViewInternalWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *view) {
  jint index = [self indexOfChildWithRepackagedAndroidViewView:view];
  if (index >= 0) {
    RepackagedAndroidViewViewGroup_removeViewInternalWithInt_withRepackagedAndroidViewView_(self, index, view);
    return YES;
  }
  return NO;
}

void RepackagedAndroidViewViewGroup_removeViewInternalWithInt_withRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, jint index, RepackagedAndroidViewView *view) {
  
#line 4583
  if (self->mTransition_ != nil) {
    [self->mTransition_ removeChildWithRepackagedAndroidViewViewGroup:self withRepackagedAndroidViewView:view];
  }
  
#line 4587
  jboolean clearChildFocus = NO;
  if (view == self->mFocused_) {
    [((RepackagedAndroidViewView *) nil_chk(view)) unFocusWithRepackagedAndroidViewView:nil];
    clearChildFocus = YES;
  }
  
#line 4593
  [((RepackagedAndroidViewView *) nil_chk(view)) clearAccessibilityFocus];
  
#line 4595
  RepackagedAndroidViewViewGroup_cancelTouchTargetWithRepackagedAndroidViewView_(self, view);
  RepackagedAndroidViewViewGroup_cancelHoverTargetWithRepackagedAndroidViewView_(self, view);
  
#line 4598
  if ([view getAnimation] != nil ||
#line 4599
  (self->mTransitioningViews_ != nil && [self->mTransitioningViews_ containsWithId:view])) {
    RepackagedAndroidViewViewGroup_addDisappearingViewWithRepackagedAndroidViewView_(self, view);
  }
  else
#line 4601
  if (view->mAttachInfo_ != nil) {
    [view dispatchDetachedFromWindow];
  }
  
#line 4605
  if ([view hasTransientState]) {
    [self childHasTransientStateChangedWithRepackagedAndroidViewView:view withBoolean:NO];
  }
  
#line 4609
  [self needGlobalAttributesUpdateWithBoolean:NO];
  
#line 4611
  RepackagedAndroidViewViewGroup_removeFromArrayWithInt_(self, index);
  
#line 4613
  if (clearChildFocus) {
    [self clearChildFocusWithRepackagedAndroidViewView:view];
    if (![self rootViewRequestFocus]) {
      [self notifyGlobalFocusClearedWithRepackagedAndroidViewView:self];
    }
  }
  
#line 4620
  [self dispatchViewRemovedWithRepackagedAndroidViewView:view];
  
#line 4622
  if ([view getVisibility] != RepackagedAndroidViewView_GONE) {
    [self notifySubtreeAccessibilityStateChangedIfNeeded];
  }
  
#line 4626
  jint transientCount = self->mTransientIndices_ == nil ? 0 : [self->mTransientIndices_ size];
  for (jint i = 0; i < transientCount; ++i) {
    jint oldIndex = [((JavaLangInteger *) nil_chk([((id<JavaUtilList>) nil_chk(self->mTransientIndices_)) getWithInt:i])) intValue];
    if (index < oldIndex) {
      (void) [self->mTransientIndices_ setWithInt:i withId:JavaLangInteger_valueOfWithInt_(oldIndex - 1)];
    }
  }
}


#line 4674
void RepackagedAndroidViewViewGroup_removeViewsInternalWithInt_withInt_(RepackagedAndroidViewViewGroup *self, jint start, jint count) {
  RepackagedAndroidViewView *focused = self->mFocused_;
  jboolean detach = self->mAttachInfo_ != nil;
  jboolean clearChildFocus = NO;
  
#line 4679
  IOSObjectArray *children = self->mChildren_;
  jint end = start + count;
  
#line 4682
  for (jint i = start; i < end; i++) {
    RepackagedAndroidViewView *view = IOSObjectArray_Get(nil_chk(children), i);
    
#line 4685
    if (self->mTransition_ != nil) {
      [self->mTransition_ removeChildWithRepackagedAndroidViewViewGroup:self withRepackagedAndroidViewView:view];
    }
    
#line 4689
    if (view == focused) {
      [((RepackagedAndroidViewView *) nil_chk(view)) unFocusWithRepackagedAndroidViewView:nil];
      clearChildFocus = YES;
    }
    
#line 4694
    [((RepackagedAndroidViewView *) nil_chk(view)) clearAccessibilityFocus];
    
#line 4696
    RepackagedAndroidViewViewGroup_cancelTouchTargetWithRepackagedAndroidViewView_(self, view);
    RepackagedAndroidViewViewGroup_cancelHoverTargetWithRepackagedAndroidViewView_(self, view);
    
#line 4699
    if ([view getAnimation] != nil ||
#line 4700
    (self->mTransitioningViews_ != nil && [self->mTransitioningViews_ containsWithId:view])) {
      RepackagedAndroidViewViewGroup_addDisappearingViewWithRepackagedAndroidViewView_(self, view);
    }
    else
#line 4702
    if (detach) {
      [view dispatchDetachedFromWindow];
    }
    
#line 4706
    if ([view hasTransientState]) {
      [self childHasTransientStateChangedWithRepackagedAndroidViewView:view withBoolean:NO];
    }
    
#line 4710
    [self needGlobalAttributesUpdateWithBoolean:NO];
    
#line 4712
    [self dispatchViewRemovedWithRepackagedAndroidViewView:view];
  }
  
#line 4715
  RepackagedAndroidViewViewGroup_removeFromArrayWithInt_withInt_(self, start, count);
  
#line 4717
  if (clearChildFocus) {
    [self clearChildFocusWithRepackagedAndroidViewView:focused];
    if (![self rootViewRequestFocus]) {
      [self notifyGlobalFocusClearedWithRepackagedAndroidViewView:focused];
    }
  }
}


#line 5261
void RepackagedAndroidViewViewGroup_offsetDescendantRectToMyCoordsWithRepackagedAndroidViewView_withRepackagedAndroidGraphicsRect_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *descendant, RepackagedAndroidGraphicsRect *rect) {
  [self offsetRectBetweenParentAndChildWithRepackagedAndroidViewView:descendant withRepackagedAndroidGraphicsRect:rect withBoolean:YES withBoolean:NO];
}


#line 5651
jboolean RepackagedAndroidViewViewGroup_hasBooleanFlagWithInt_(RepackagedAndroidViewViewGroup *self, jint flag) {
  return (self->mGroupFlags_ & flag) == flag;
}

void RepackagedAndroidViewViewGroup_setBooleanFlagWithInt_withBoolean_(RepackagedAndroidViewViewGroup *self, jint flag, jboolean value) {
  if (value) {
    self->mGroupFlags_ |= flag;
  }
  else {
    
#line 5659
    self->mGroupFlags_ &= ~flag;
  }
}


#line 5698
void RepackagedAndroidViewViewGroup_setLayoutModeWithInt_withBoolean_(RepackagedAndroidViewViewGroup *self, jint layoutMode, jboolean explicitly) {
  self->mLayoutMode_ = layoutMode;
  RepackagedAndroidViewViewGroup_setBooleanFlagWithInt_withBoolean_(self, RepackagedAndroidViewViewGroup_FLAG_LAYOUT_MODE_WAS_EXPLICITLY_SET, explicitly);
}


#line 5972
jint RepackagedAndroidViewViewGroup_getChildMeasureSpecWithInt_withInt_withInt_(jint spec, jint padding, jint childDimension) {
  RepackagedAndroidViewViewGroup_initialize();
  
#line 5973
  jint specMode = RepackagedAndroidViewView_MeasureSpec_getModeWithInt_(spec);
  jint specSize = RepackagedAndroidViewView_MeasureSpec_getSizeWithInt_(spec);
  
#line 5976
  jint size = JavaLangMath_maxWithInt_withInt_(0, specSize - padding);
  
#line 5978
  jint resultSize = 0;
  jint resultMode = 0;
  
#line 5981
  switch (specMode) {
    
#line 5983
    case RepackagedAndroidViewView_MeasureSpec_EXACTLY:
    if (childDimension >= 0) {
      resultSize = childDimension;
      resultMode = RepackagedAndroidViewView_MeasureSpec_EXACTLY;
    }
    else
#line 5987
    if (childDimension == RepackagedAndroidViewViewGroup_LayoutParams_MATCH_PARENT) {
      
#line 5989
      resultSize = size;
      resultMode = RepackagedAndroidViewView_MeasureSpec_EXACTLY;
    }
    else
#line 5991
    if (childDimension == RepackagedAndroidViewViewGroup_LayoutParams_WRAP_CONTENT) {
      
#line 5994
      resultSize = size;
      resultMode = RepackagedAndroidViewView_MeasureSpec_AT_MOST;
    }
    break;
    
#line 6000
    case RepackagedAndroidViewView_MeasureSpec_AT_MOST:
    if (childDimension >= 0) {
      
#line 6003
      resultSize = childDimension;
      resultMode = RepackagedAndroidViewView_MeasureSpec_EXACTLY;
    }
    else
#line 6005
    if (childDimension == RepackagedAndroidViewViewGroup_LayoutParams_MATCH_PARENT) {
      
#line 6008
      resultSize = size;
      resultMode = RepackagedAndroidViewView_MeasureSpec_AT_MOST;
    }
    else
#line 6010
    if (childDimension == RepackagedAndroidViewViewGroup_LayoutParams_WRAP_CONTENT) {
      
#line 6013
      resultSize = size;
      resultMode = RepackagedAndroidViewView_MeasureSpec_AT_MOST;
    }
    break;
    
#line 6019
    case RepackagedAndroidViewView_MeasureSpec_UNSPECIFIED:
    if (childDimension >= 0) {
      
#line 6022
      resultSize = childDimension;
      resultMode = RepackagedAndroidViewView_MeasureSpec_EXACTLY;
    }
    else
#line 6024
    if (childDimension == RepackagedAndroidViewViewGroup_LayoutParams_MATCH_PARENT) {
      
#line 6027
      resultSize = RepackagedAndroidViewView_get_sUseZeroUnspecifiedMeasureSpec_() ? 0 : size;
      resultMode = RepackagedAndroidViewView_MeasureSpec_UNSPECIFIED;
    }
    else
#line 6029
    if (childDimension == RepackagedAndroidViewViewGroup_LayoutParams_WRAP_CONTENT) {
      
#line 6032
      resultSize = RepackagedAndroidViewView_get_sUseZeroUnspecifiedMeasureSpec_() ? 0 : size;
      resultMode = RepackagedAndroidViewView_MeasureSpec_UNSPECIFIED;
    }
    break;
  }
  return RepackagedAndroidViewView_MeasureSpec_makeMeasureSpecWithInt_withInt_(resultSize, resultMode);
}


#line 6066
void RepackagedAndroidViewViewGroup_addDisappearingViewWithRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *self, RepackagedAndroidViewView *v) {
  JavaUtilArrayList *disappearingChildren = self->mDisappearingChildren_;
  
#line 6069
  if (disappearingChildren == nil) {
    disappearingChildren = self->mDisappearingChildren_ = new_JavaUtilArrayList_init();
  }
  
#line 6073
  [((JavaUtilArrayList *) nil_chk(disappearingChildren)) addWithId:v];
}


#line 7740
RepackagedAndroidGraphicsPaint *RepackagedAndroidViewViewGroup_getDebugPaint() {
  RepackagedAndroidViewViewGroup_initialize();
  
#line 7741
  if (RepackagedAndroidViewViewGroup_sDebugPaint_ == nil) {
    RepackagedAndroidViewViewGroup_sDebugPaint_ = new_RepackagedAndroidGraphicsPaint_init();
    [RepackagedAndroidViewViewGroup_sDebugPaint_ setAntiAliasWithBoolean:NO];
  }
  return RepackagedAndroidViewViewGroup_sDebugPaint_;
}


#line 7748
void RepackagedAndroidViewViewGroup_drawRectWithRepackagedAndroidGraphicsCanvas_withRepackagedAndroidGraphicsPaint_withInt_withInt_withInt_withInt_(RepackagedAndroidGraphicsCanvas *canvas, RepackagedAndroidGraphicsPaint *paint, jint x1, jint y1, jint x2, jint y2) {
  RepackagedAndroidViewViewGroup_initialize();
  
#line 7749
  if (RepackagedAndroidViewViewGroup_sDebugLines_ == nil) {
    
#line 7751
    RepackagedAndroidViewViewGroup_sDebugLines_ = [IOSFloatArray newArrayWithLength:16];
  }
  
#line 7754
  *IOSFloatArray_GetRef(nil_chk(RepackagedAndroidViewViewGroup_sDebugLines_), 0) = x1;
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 1) = y1;
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 2) = x2;
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 3) = y1;
  
#line 7759
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 4) = x2;
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 5) = y1;
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 6) = x2;
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 7) = y2;
  
#line 7764
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 8) = x2;
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 9) = y2;
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 10) = x1;
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 11) = y2;
  
#line 7769
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 12) = x1;
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 13) = y2;
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 14) = x1;
  *IOSFloatArray_GetRef(RepackagedAndroidViewViewGroup_sDebugLines_, 15) = y1;
  
#line 7774
  [((RepackagedAndroidGraphicsCanvas *) nil_chk(canvas)) drawLinesWithFloatArray:RepackagedAndroidViewViewGroup_sDebugLines_ withRepackagedAndroidGraphicsPaint:paint];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewViewGroup)


#line 4172
@implementation RepackagedAndroidViewViewGroup_OnHierarchyChangeListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onChildViewAddedWithRepackagedAndroidViewView:withRepackagedAndroidViewView:", "onChildViewAdded", "V", 0x401, NULL, NULL },
    { "onChildViewRemovedWithRepackagedAndroidViewView:withRepackagedAndroidViewView:", "onChildViewRemoved", "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _RepackagedAndroidViewViewGroup_OnHierarchyChangeListener = { 2, "OnHierarchyChangeListener", "repackaged.android.view", "ViewGroup", 0x609, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidViewViewGroup_OnHierarchyChangeListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RepackagedAndroidViewViewGroup_OnHierarchyChangeListener)


#line 6769
@implementation RepackagedAndroidViewViewGroup_LayoutParams


#line 6839
- (instancetype)initWithRepackagedAndroidContentContext:(id<RepackagedAndroidContentContext>)c
                  withRepackagedAndroidUtilAttributeSet:(id<RepackagedAndroidUtilAttributeSet>)attrs {
  RepackagedAndroidViewViewGroup_LayoutParams_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_(self, c, attrs);
  return self;
}


#line 6858
- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height {
  RepackagedAndroidViewViewGroup_LayoutParams_initWithInt_withInt_(self, width, height);
  return self;
}


#line 6868
- (instancetype)initWithRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)source {
  RepackagedAndroidViewViewGroup_LayoutParams_initWithRepackagedAndroidViewViewGroup_LayoutParams_(self, source);
  return self;
}


#line 6877
- (instancetype)init {
  RepackagedAndroidViewViewGroup_LayoutParams_init(self);
  return self;
}


#line 6887
- (void)setBaseAttributesWithRepackagedAndroidContentResTypedArray:(id<RepackagedAndroidContentResTypedArray>)a
                                                           withInt:(jint)widthAttr
                                                           withInt:(jint)heightAttr {
  width_ = [((id<RepackagedAndroidContentResTypedArray>) nil_chk(a)) getLayoutDimensionWithInt:widthAttr withNSString:@"layout_width"];
  height_ = [a getLayoutDimensionWithInt:heightAttr withNSString:@"layout_height"];
}


#line 6902
- (void)resolveLayoutDirectionWithInt:(jint)layoutDirection {
}


#line 6914
- (NSString *)debugWithNSString:(NSString *)output {
  return JreStrcat("$$$$$$", output, @"ViewGroup.LayoutParams={ width=", RepackagedAndroidViewViewGroup_LayoutParams_sizeToStringWithInt_(
#line 6916
  width_), @", height=", RepackagedAndroidViewViewGroup_LayoutParams_sizeToStringWithInt_(height_), @" }");
}


#line 6927
- (void)onDebugDrawWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view
             withRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas
              withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint {
}


#line 6938
+ (NSString *)sizeToStringWithInt:(jint)size {
  return RepackagedAndroidViewViewGroup_LayoutParams_sizeToStringWithInt_(size);
}


#line 6949
- (void)encodeWithRepackagedAndroidViewViewHierarchyEncoder:(id<RepackagedAndroidViewViewHierarchyEncoder>)encoder {
  [((id<RepackagedAndroidViewViewHierarchyEncoder>) nil_chk(encoder)) beginObjectWithId:self];
  [self encodePropertiesWithRepackagedAndroidViewViewHierarchyEncoder:encoder];
  [encoder endObject];
}


#line 6956
- (void)encodePropertiesWithRepackagedAndroidViewViewHierarchyEncoder:(id<RepackagedAndroidViewViewHierarchyEncoder>)encoder {
  [((id<RepackagedAndroidViewViewHierarchyEncoder>) nil_chk(encoder)) addPropertyWithNSString:@"width" withInt:width_];
  [encoder addPropertyWithNSString:@"height" withInt:height_];
}

+ (IOSObjectArray *)__annotations_FILL_PARENT_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_width_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"layout" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_IntToString alloc] initWithFrom:-1 withTo:@"MATCH_PARENT"], [[RepackagedAndroidViewViewDebug_IntToString alloc] initWithFrom:-2 withTo:@"WRAP_CONTENT"] } count:2 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_height_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"layout" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_IntToString alloc] initWithFrom:-1 withTo:@"MATCH_PARENT"], [[RepackagedAndroidViewViewDebug_IntToString alloc] initWithFrom:-2 withTo:@"WRAP_CONTENT"] } count:2 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRepackagedAndroidContentContext:withRepackagedAndroidUtilAttributeSet:", "LayoutParams", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:", "LayoutParams", NULL, 0x1, NULL, NULL },
    { "initWithRepackagedAndroidViewViewGroup_LayoutParams:", "LayoutParams", NULL, 0x1, NULL, NULL },
    { "init", "LayoutParams", NULL, 0x0, NULL, NULL },
    { "setBaseAttributesWithRepackagedAndroidContentResTypedArray:withInt:withInt:", "setBaseAttributes", "V", 0x4, NULL, NULL },
    { "resolveLayoutDirectionWithInt:", "resolveLayoutDirection", "V", 0x1, NULL, NULL },
    { "debugWithNSString:", "debug", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "onDebugDrawWithRepackagedAndroidViewView:withRepackagedAndroidGraphicsCanvas:withRepackagedAndroidGraphicsPaint:", "onDebugDraw", "V", 0x1, NULL, NULL },
    { "sizeToStringWithInt:", "sizeToString", "Ljava.lang.String;", 0xc, NULL, NULL },
    { "encodeWithRepackagedAndroidViewViewHierarchyEncoder:", "encode", "V", 0x0, NULL, NULL },
    { "encodePropertiesWithRepackagedAndroidViewViewHierarchyEncoder:", "encodeProperties", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FILL_PARENT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_LayoutParams_FILL_PARENT },
    { "MATCH_PARENT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_LayoutParams_MATCH_PARENT },
    { "WRAP_CONTENT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_LayoutParams_WRAP_CONTENT },
    { "width_", NULL, 0x1, "I", NULL, NULL,  },
    { "height_", NULL, 0x1, "I", NULL, NULL,  },
    { "layoutAnimationParameters_", NULL, 0x1, "Lrepackaged.android.view.animation.LayoutAnimationController$AnimationParameters;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidViewViewGroup_LayoutParams = { 2, "LayoutParams", "repackaged.android.view", "ViewGroup", 0x9, 11, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidViewViewGroup_LayoutParams;
}

@end


#line 6839
void RepackagedAndroidViewViewGroup_LayoutParams_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_(RepackagedAndroidViewViewGroup_LayoutParams *self, id<RepackagedAndroidContentContext> c, id<RepackagedAndroidUtilAttributeSet> attrs) {
  (void) NSObject_init(self);
  
#line 6840
  id<RepackagedAndroidContentResTypedArray> a = [((id<RepackagedAndroidContentContext>) nil_chk(c)) obtainStyledAttributesWithRepackagedAndroidUtilAttributeSet:attrs withIntArray:RepackagedComAndroidInternalR_styleable_get_ViewGroup_Layout_()];
  [self setBaseAttributesWithRepackagedAndroidContentResTypedArray:a withInt:
#line 6842
  RepackagedComAndroidInternalR_styleable_ViewGroup_Layout_layout_width withInt:
#line 6843
  RepackagedComAndroidInternalR_styleable_ViewGroup_Layout_layout_height];
  [((id<RepackagedAndroidContentResTypedArray>) nil_chk(a)) recycle];
}


#line 6839
RepackagedAndroidViewViewGroup_LayoutParams *new_RepackagedAndroidViewViewGroup_LayoutParams_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_(id<RepackagedAndroidContentContext> c, id<RepackagedAndroidUtilAttributeSet> attrs) {
  RepackagedAndroidViewViewGroup_LayoutParams *self = [RepackagedAndroidViewViewGroup_LayoutParams alloc];
  RepackagedAndroidViewViewGroup_LayoutParams_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_(self, c, attrs);
  return self;
}


#line 6858
void RepackagedAndroidViewViewGroup_LayoutParams_initWithInt_withInt_(RepackagedAndroidViewViewGroup_LayoutParams *self, jint width, jint height) {
  (void) NSObject_init(self);
  
#line 6859
  self->width_ = width;
  self->height_ = height;
}


#line 6858
RepackagedAndroidViewViewGroup_LayoutParams *new_RepackagedAndroidViewViewGroup_LayoutParams_initWithInt_withInt_(jint width, jint height) {
  RepackagedAndroidViewViewGroup_LayoutParams *self = [RepackagedAndroidViewViewGroup_LayoutParams alloc];
  RepackagedAndroidViewViewGroup_LayoutParams_initWithInt_withInt_(self, width, height);
  return self;
}


#line 6868
void RepackagedAndroidViewViewGroup_LayoutParams_initWithRepackagedAndroidViewViewGroup_LayoutParams_(RepackagedAndroidViewViewGroup_LayoutParams *self, RepackagedAndroidViewViewGroup_LayoutParams *source) {
  (void) NSObject_init(self);
  
#line 6869
  self->width_ = ((RepackagedAndroidViewViewGroup_LayoutParams *) nil_chk(source))->width_;
  self->height_ = source->height_;
}


#line 6868
RepackagedAndroidViewViewGroup_LayoutParams *new_RepackagedAndroidViewViewGroup_LayoutParams_initWithRepackagedAndroidViewViewGroup_LayoutParams_(RepackagedAndroidViewViewGroup_LayoutParams *source) {
  RepackagedAndroidViewViewGroup_LayoutParams *self = [RepackagedAndroidViewViewGroup_LayoutParams alloc];
  RepackagedAndroidViewViewGroup_LayoutParams_initWithRepackagedAndroidViewViewGroup_LayoutParams_(self, source);
  return self;
}


#line 6877
void RepackagedAndroidViewViewGroup_LayoutParams_init(RepackagedAndroidViewViewGroup_LayoutParams *self) {
  (void) NSObject_init(self);
}


#line 6877
RepackagedAndroidViewViewGroup_LayoutParams *new_RepackagedAndroidViewViewGroup_LayoutParams_init() {
  RepackagedAndroidViewViewGroup_LayoutParams *self = [RepackagedAndroidViewViewGroup_LayoutParams alloc];
  RepackagedAndroidViewViewGroup_LayoutParams_init(self);
  return self;
}


#line 6938
NSString *RepackagedAndroidViewViewGroup_LayoutParams_sizeToStringWithInt_(jint size) {
  RepackagedAndroidViewViewGroup_LayoutParams_initialize();
  
#line 6939
  if (size == RepackagedAndroidViewViewGroup_LayoutParams_WRAP_CONTENT) {
    return @"wrap-content";
  }
  if (size == RepackagedAndroidViewViewGroup_LayoutParams_MATCH_PARENT) {
    return @"match-parent";
  }
  return NSString_valueOfInt_(size);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewViewGroup_LayoutParams)


#line 6968
@implementation RepackagedAndroidViewViewGroup_MarginLayoutParams


#line 7066
- (instancetype)initWithRepackagedAndroidContentContext:(id<RepackagedAndroidContentContext>)c
                  withRepackagedAndroidUtilAttributeSet:(id<RepackagedAndroidUtilAttributeSet>)attrs {
  RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_(self, c, attrs);
  return self;
}


#line 7131
- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height {
  RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithInt_withInt_(self, width, height);
  return self;
}


#line 7146
- (instancetype)initWithRepackagedAndroidViewViewGroup_MarginLayoutParams:(RepackagedAndroidViewViewGroup_MarginLayoutParams *)source {
  RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithRepackagedAndroidViewViewGroup_MarginLayoutParams_(self, source);
  return self;
}


#line 7163
- (instancetype)initWithRepackagedAndroidViewViewGroup_LayoutParams:(RepackagedAndroidViewViewGroup_LayoutParams *)source {
  RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithRepackagedAndroidViewViewGroup_LayoutParams_(self, source);
  return self;
}


#line 7176
- (void)copyMarginsFromWithRepackagedAndroidViewViewGroup_MarginLayoutParams:(RepackagedAndroidViewViewGroup_MarginLayoutParams *)source {
  self->leftMargin_ = ((RepackagedAndroidViewViewGroup_MarginLayoutParams *) nil_chk(source))->leftMargin_;
  self->topMargin_ = source->topMargin_;
  self->rightMargin_ = source->rightMargin_;
  self->bottomMargin_ = source->bottomMargin_;
  self->startMargin_ = source->startMargin_;
  self->endMargin_ = source->endMargin_;
  
#line 7184
  self->mMarginFlags_ = source->mMarginFlags_;
}


#line 7203
- (void)setMarginsWithInt:(jint)left
                  withInt:(jint)top
                  withInt:(jint)right
                  withInt:(jint)bottom {
  leftMargin_ = left;
  topMargin_ = top;
  rightMargin_ = right;
  bottomMargin_ = bottom;
  mMarginFlags_ &= ~RepackagedAndroidViewViewGroup_MarginLayoutParams_LEFT_MARGIN_UNDEFINED_MASK;
  mMarginFlags_ &= ~RepackagedAndroidViewViewGroup_MarginLayoutParams_RIGHT_MARGIN_UNDEFINED_MASK;
  if ([self isMarginRelative]) {
    mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK;
  }
  else {
    
#line 7213
    mMarginFlags_ &= ~RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK;
  }
}


#line 7235
- (void)setMarginsRelativeWithInt:(jint)start
                          withInt:(jint)top
                          withInt:(jint)end
                          withInt:(jint)bottom {
  startMargin_ = start;
  topMargin_ = top;
  endMargin_ = end;
  bottomMargin_ = bottom;
  mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK;
}


#line 7250
- (void)setMarginStartWithInt:(jint)start {
  startMargin_ = start;
  mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK;
}


#line 7262
- (jint)getMarginStart {
  if (startMargin_ != RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE) return startMargin_;
  if ((mMarginFlags_ & RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK) == RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK) {
    RepackagedAndroidViewViewGroup_MarginLayoutParams_doResolveMargins(self);
  }
  switch (mMarginFlags_ & RepackagedAndroidViewViewGroup_MarginLayoutParams_LAYOUT_DIRECTION_MASK) {
    case RepackagedAndroidViewView_LAYOUT_DIRECTION_RTL:
    return rightMargin_;
    case RepackagedAndroidViewView_LAYOUT_DIRECTION_LTR:
    default:
    return leftMargin_;
  }
}


#line 7283
- (void)setMarginEndWithInt:(jint)end {
  endMargin_ = end;
  mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK;
}


#line 7295
- (jint)getMarginEnd {
  if (endMargin_ != RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE) return endMargin_;
  if ((mMarginFlags_ & RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK) == RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK) {
    RepackagedAndroidViewViewGroup_MarginLayoutParams_doResolveMargins(self);
  }
  switch (mMarginFlags_ & RepackagedAndroidViewViewGroup_MarginLayoutParams_LAYOUT_DIRECTION_MASK) {
    case RepackagedAndroidViewView_LAYOUT_DIRECTION_RTL:
    return leftMargin_;
    case RepackagedAndroidViewView_LAYOUT_DIRECTION_LTR:
    default:
    return rightMargin_;
  }
}


#line 7317
- (jboolean)isMarginRelative {
  return (startMargin_ != RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE || endMargin_ != RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE);
}


#line 7327
- (void)setLayoutDirectionWithInt:(jint)layoutDirection {
  if (layoutDirection != RepackagedAndroidViewView_LAYOUT_DIRECTION_LTR &&
#line 7329
  layoutDirection != RepackagedAndroidViewView_LAYOUT_DIRECTION_RTL) return;
  if (layoutDirection != (mMarginFlags_ & RepackagedAndroidViewViewGroup_MarginLayoutParams_LAYOUT_DIRECTION_MASK)) {
    mMarginFlags_ &= ~RepackagedAndroidViewViewGroup_MarginLayoutParams_LAYOUT_DIRECTION_MASK;
    mMarginFlags_ |= (layoutDirection & RepackagedAndroidViewViewGroup_MarginLayoutParams_LAYOUT_DIRECTION_MASK);
    if ([self isMarginRelative]) {
      mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK;
    }
    else {
      
#line 7336
      mMarginFlags_ &= ~RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK;
    }
  }
}


#line 7347
- (jint)getLayoutDirection {
  return (mMarginFlags_ & RepackagedAndroidViewViewGroup_MarginLayoutParams_LAYOUT_DIRECTION_MASK);
}


#line 7356
- (void)resolveLayoutDirectionWithInt:(jint)layoutDirection {
  [self setLayoutDirectionWithInt:layoutDirection];
  
#line 7361
  if (![self isMarginRelative] ||
#line 7362
  (mMarginFlags_ & RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK) != RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK) return;
  
#line 7365
  RepackagedAndroidViewViewGroup_MarginLayoutParams_doResolveMargins(self);
}

- (void)doResolveMargins {
  RepackagedAndroidViewViewGroup_MarginLayoutParams_doResolveMargins(self);
}


#line 7406
- (jboolean)isLayoutRtl {
  return (mMarginFlags_ & RepackagedAndroidViewViewGroup_MarginLayoutParams_LAYOUT_DIRECTION_MASK) == RepackagedAndroidViewView_LAYOUT_DIRECTION_RTL;
}


#line 7414
- (void)onDebugDrawWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view
             withRepackagedAndroidGraphicsCanvas:(RepackagedAndroidGraphicsCanvas *)canvas
              withRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint {
  RepackagedAndroidGraphicsInsets *oi = RepackagedAndroidViewView_isLayoutModeOpticalWithId_(((RepackagedAndroidViewView *) nil_chk(view))->mParent_) ? [view getOpticalInsets] : RepackagedAndroidGraphicsInsets_get_NONE_();
  
#line 7417
  RepackagedAndroidViewViewGroup_fillDifferenceWithRepackagedAndroidGraphicsCanvas_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withRepackagedAndroidGraphicsPaint_(canvas,
#line 7418
  [view getLeft] + oi->left_,
#line 7419
  [view getTop] + oi->top_,
#line 7420
  [view getRight] - oi->right_,
#line 7421
  [view getBottom] - oi->bottom_,
#line 7422
  leftMargin_,
#line 7423
  topMargin_,
#line 7424
  rightMargin_,
#line 7425
  bottomMargin_,
#line 7426
  paint);
}


#line 7431
- (void)encodePropertiesWithRepackagedAndroidViewViewHierarchyEncoder:(id<RepackagedAndroidViewViewHierarchyEncoder>)encoder {
  [super encodePropertiesWithRepackagedAndroidViewViewHierarchyEncoder:encoder];
  [((id<RepackagedAndroidViewViewHierarchyEncoder>) nil_chk(encoder)) addPropertyWithNSString:@"leftMargin" withInt:leftMargin_];
  [encoder addPropertyWithNSString:@"topMargin" withInt:topMargin_];
  [encoder addPropertyWithNSString:@"rightMargin" withInt:rightMargin_];
  [encoder addPropertyWithNSString:@"bottomMargin" withInt:bottomMargin_];
  [encoder addPropertyWithNSString:@"startMargin" withInt:startMargin_];
  [encoder addPropertyWithNSString:@"endMargin" withInt:endMargin_];
}

+ (IOSObjectArray *)__annotations_leftMargin_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"layout" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_topMargin_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"layout" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_rightMargin_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"layout" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_bottomMargin_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"layout" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_startMargin_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"layout" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_endMargin_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"layout" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withFormatToHexString:false withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_mMarginFlags_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_ExportedProperty alloc] initWithCategory:@"layout" withDeepExport:false withFlagMapping:[IOSObjectArray arrayWithObjects:(id[]) { [[RepackagedAndroidViewViewDebug_FlagToString alloc] initWithEquals:3 withMask:3 withName:@"LAYOUT_DIRECTION" withOutputIf:true], [[RepackagedAndroidViewViewDebug_FlagToString alloc] initWithEquals:4 withMask:4 withName:@"LEFT_MARGIN_UNDEFINED_MASK" withOutputIf:true], [[RepackagedAndroidViewViewDebug_FlagToString alloc] initWithEquals:8 withMask:8 withName:@"RIGHT_MARGIN_UNDEFINED_MASK" withOutputIf:true], [[RepackagedAndroidViewViewDebug_FlagToString alloc] initWithEquals:16 withMask:16 withName:@"RTL_COMPATIBILITY_MODE_MASK" withOutputIf:true], [[RepackagedAndroidViewViewDebug_FlagToString alloc] initWithEquals:32 withMask:32 withName:@"NEED_RESOLUTION_MASK" withOutputIf:true] } count:5 type:NSObject_class_()] withFormatToHexString:true withHasAdjacentMapping:false withIndexMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withMapping:[IOSObjectArray arrayWithObjects:(id[]) {  } count:0 type:NSObject_class_()] withPrefix:@"" withResolveId:false] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRepackagedAndroidContentContext:withRepackagedAndroidUtilAttributeSet:", "MarginLayoutParams", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:", "MarginLayoutParams", NULL, 0x1, NULL, NULL },
    { "initWithRepackagedAndroidViewViewGroup_MarginLayoutParams:", "MarginLayoutParams", NULL, 0x1, NULL, NULL },
    { "initWithRepackagedAndroidViewViewGroup_LayoutParams:", "MarginLayoutParams", NULL, 0x1, NULL, NULL },
    { "copyMarginsFromWithRepackagedAndroidViewViewGroup_MarginLayoutParams:", "copyMarginsFrom", "V", 0x11, NULL, NULL },
    { "setMarginsWithInt:withInt:withInt:withInt:", "setMargins", "V", 0x1, NULL, NULL },
    { "setMarginsRelativeWithInt:withInt:withInt:withInt:", "setMarginsRelative", "V", 0x1, NULL, NULL },
    { "setMarginStartWithInt:", "setMarginStart", "V", 0x1, NULL, NULL },
    { "getMarginStart", NULL, "I", 0x1, NULL, NULL },
    { "setMarginEndWithInt:", "setMarginEnd", "V", 0x1, NULL, NULL },
    { "getMarginEnd", NULL, "I", 0x1, NULL, NULL },
    { "isMarginRelative", NULL, "Z", 0x1, NULL, NULL },
    { "setLayoutDirectionWithInt:", "setLayoutDirection", "V", 0x1, NULL, NULL },
    { "getLayoutDirection", NULL, "I", 0x1, NULL, NULL },
    { "resolveLayoutDirectionWithInt:", "resolveLayoutDirection", "V", 0x1, NULL, NULL },
    { "doResolveMargins", NULL, "V", 0x2, NULL, NULL },
    { "isLayoutRtl", NULL, "Z", 0x1, NULL, NULL },
    { "onDebugDrawWithRepackagedAndroidViewView:withRepackagedAndroidGraphicsCanvas:withRepackagedAndroidGraphicsPaint:", "onDebugDraw", "V", 0x1, NULL, NULL },
    { "encodePropertiesWithRepackagedAndroidViewViewHierarchyEncoder:", "encodeProperties", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "leftMargin_", NULL, 0x1, "I", NULL, NULL,  },
    { "topMargin_", NULL, 0x1, "I", NULL, NULL,  },
    { "rightMargin_", NULL, 0x1, "I", NULL, NULL,  },
    { "bottomMargin_", NULL, 0x1, "I", NULL, NULL,  },
    { "startMargin_", NULL, 0x2, "I", NULL, NULL,  },
    { "endMargin_", NULL, 0x2, "I", NULL, NULL,  },
    { "DEFAULT_MARGIN_RELATIVE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE },
    { "mMarginFlags_", NULL, 0x0, "B", NULL, NULL,  },
    { "LAYOUT_DIRECTION_MASK_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_MarginLayoutParams_LAYOUT_DIRECTION_MASK },
    { "LEFT_MARGIN_UNDEFINED_MASK_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_MarginLayoutParams_LEFT_MARGIN_UNDEFINED_MASK },
    { "RIGHT_MARGIN_UNDEFINED_MASK_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_MarginLayoutParams_RIGHT_MARGIN_UNDEFINED_MASK },
    { "RTL_COMPATIBILITY_MODE_MASK_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_MarginLayoutParams_RTL_COMPATIBILITY_MODE_MASK },
    { "NEED_RESOLUTION_MASK_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK },
    { "DEFAULT_MARGIN_RESOLVED_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RESOLVED },
    { "UNDEFINED_MARGIN_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_MarginLayoutParams_UNDEFINED_MARGIN },
  };
  static const J2ObjcClassInfo _RepackagedAndroidViewViewGroup_MarginLayoutParams = { 2, "MarginLayoutParams", "repackaged.android.view", "ViewGroup", 0x9, 19, methods, 15, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidViewViewGroup_MarginLayoutParams;
}

@end


#line 7066
void RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_(RepackagedAndroidViewViewGroup_MarginLayoutParams *self, id<RepackagedAndroidContentContext> c, id<RepackagedAndroidUtilAttributeSet> attrs) {
  (void) RepackagedAndroidViewViewGroup_LayoutParams_init(self);
  self->startMargin_ = RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE;
  self->endMargin_ = RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE;
  
#line 7069
  id<RepackagedAndroidContentResTypedArray> a = [((id<RepackagedAndroidContentContext>) nil_chk(c)) obtainStyledAttributesWithRepackagedAndroidUtilAttributeSet:attrs withIntArray:RepackagedComAndroidInternalR_styleable_get_ViewGroup_MarginLayout_()];
  [self setBaseAttributesWithRepackagedAndroidContentResTypedArray:a withInt:
#line 7071
  RepackagedComAndroidInternalR_styleable_ViewGroup_MarginLayout_layout_width withInt:
#line 7072
  RepackagedComAndroidInternalR_styleable_ViewGroup_MarginLayout_layout_height];
  
#line 7074
  jint margin = [((id<RepackagedAndroidContentResTypedArray>) nil_chk(a)) getDimensionPixelSizeWithInt:
#line 7075
  RepackagedComAndroidInternalR_styleable_ViewGroup_MarginLayout_layout_margin withInt:-1];
  if (margin >= 0) {
    self->leftMargin_ = margin;
    self->topMargin_ = margin;
    self->rightMargin_ = margin;
    self->bottomMargin_ = margin;
  }
  else {
    
#line 7082
    self->leftMargin_ = [a getDimensionPixelSizeWithInt:
#line 7083
    RepackagedComAndroidInternalR_styleable_ViewGroup_MarginLayout_layout_marginLeft withInt:RepackagedAndroidViewViewGroup_MarginLayoutParams_UNDEFINED_MARGIN];
    
#line 7085
    if (self->leftMargin_ == RepackagedAndroidViewViewGroup_MarginLayoutParams_UNDEFINED_MARGIN) {
      self->mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_LEFT_MARGIN_UNDEFINED_MASK;
      self->leftMargin_ = RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RESOLVED;
    }
    self->rightMargin_ = [a getDimensionPixelSizeWithInt:
#line 7090
    RepackagedComAndroidInternalR_styleable_ViewGroup_MarginLayout_layout_marginRight withInt:RepackagedAndroidViewViewGroup_MarginLayoutParams_UNDEFINED_MARGIN];
    
#line 7092
    if (self->rightMargin_ == RepackagedAndroidViewViewGroup_MarginLayoutParams_UNDEFINED_MARGIN) {
      self->mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_RIGHT_MARGIN_UNDEFINED_MASK;
      self->rightMargin_ = RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RESOLVED;
    }
    
#line 7097
    self->topMargin_ = [a getDimensionPixelSizeWithInt:
#line 7098
    RepackagedComAndroidInternalR_styleable_ViewGroup_MarginLayout_layout_marginTop withInt:RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RESOLVED];
    
#line 7100
    self->bottomMargin_ = [a getDimensionPixelSizeWithInt:
#line 7101
    RepackagedComAndroidInternalR_styleable_ViewGroup_MarginLayout_layout_marginBottom withInt:RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RESOLVED];
    
#line 7104
    self->startMargin_ = [a getDimensionPixelSizeWithInt:
#line 7105
    RepackagedComAndroidInternalR_styleable_ViewGroup_MarginLayout_layout_marginStart withInt:RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE];
    
#line 7107
    self->endMargin_ = [a getDimensionPixelSizeWithInt:
#line 7108
    RepackagedComAndroidInternalR_styleable_ViewGroup_MarginLayout_layout_marginEnd withInt:RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE];
    
#line 7111
    if ([self isMarginRelative]) {
      self->mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK;
    }
  }
  
#line 7116
  jboolean hasRtlSupport = [((RepackagedAndroidContentPmApplicationInfo *) nil_chk([c getApplicationInfo])) hasRtlSupport];
  jint targetSdkVersion = ((RepackagedAndroidContentPmApplicationInfo *) nil_chk([c getApplicationInfo]))->targetSdkVersion_;
  if (targetSdkVersion < RepackagedAndroidOsBuild_VERSION_CODES_JELLY_BEAN_MR1 || !hasRtlSupport) {
    self->mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_RTL_COMPATIBILITY_MODE_MASK;
  }
  
#line 7123
  self->mMarginFlags_ |= RepackagedAndroidViewView_LAYOUT_DIRECTION_LTR;
  
#line 7125
  [a recycle];
}


#line 7066
RepackagedAndroidViewViewGroup_MarginLayoutParams *new_RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_(id<RepackagedAndroidContentContext> c, id<RepackagedAndroidUtilAttributeSet> attrs) {
  RepackagedAndroidViewViewGroup_MarginLayoutParams *self = [RepackagedAndroidViewViewGroup_MarginLayoutParams alloc];
  RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithRepackagedAndroidContentContext_withRepackagedAndroidUtilAttributeSet_(self, c, attrs);
  return self;
}


#line 7131
void RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithInt_withInt_(RepackagedAndroidViewViewGroup_MarginLayoutParams *self, jint width, jint height) {
  (void) RepackagedAndroidViewViewGroup_LayoutParams_initWithInt_withInt_(self, width, height);
  self->startMargin_ = RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE;
  self->endMargin_ = RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE;
  
#line 7134
  self->mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_LEFT_MARGIN_UNDEFINED_MASK;
  self->mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_RIGHT_MARGIN_UNDEFINED_MASK;
  
#line 7137
  self->mMarginFlags_ &= ~RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK;
  self->mMarginFlags_ &= ~RepackagedAndroidViewViewGroup_MarginLayoutParams_RTL_COMPATIBILITY_MODE_MASK;
}


#line 7131
RepackagedAndroidViewViewGroup_MarginLayoutParams *new_RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithInt_withInt_(jint width, jint height) {
  RepackagedAndroidViewViewGroup_MarginLayoutParams *self = [RepackagedAndroidViewViewGroup_MarginLayoutParams alloc];
  RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithInt_withInt_(self, width, height);
  return self;
}


#line 7146
void RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithRepackagedAndroidViewViewGroup_MarginLayoutParams_(RepackagedAndroidViewViewGroup_MarginLayoutParams *self, RepackagedAndroidViewViewGroup_MarginLayoutParams *source) {
  (void) RepackagedAndroidViewViewGroup_LayoutParams_init(self);
  self->startMargin_ = RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE;
  self->endMargin_ = RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE;
  
#line 7147
  self->width_ = ((RepackagedAndroidViewViewGroup_MarginLayoutParams *) nil_chk(source))->width_;
  self->height_ = source->height_;
  
#line 7150
  self->leftMargin_ = source->leftMargin_;
  self->topMargin_ = source->topMargin_;
  self->rightMargin_ = source->rightMargin_;
  self->bottomMargin_ = source->bottomMargin_;
  self->startMargin_ = source->startMargin_;
  self->endMargin_ = source->endMargin_;
  
#line 7157
  self->mMarginFlags_ = source->mMarginFlags_;
}


#line 7146
RepackagedAndroidViewViewGroup_MarginLayoutParams *new_RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithRepackagedAndroidViewViewGroup_MarginLayoutParams_(RepackagedAndroidViewViewGroup_MarginLayoutParams *source) {
  RepackagedAndroidViewViewGroup_MarginLayoutParams *self = [RepackagedAndroidViewViewGroup_MarginLayoutParams alloc];
  RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithRepackagedAndroidViewViewGroup_MarginLayoutParams_(self, source);
  return self;
}


#line 7163
void RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithRepackagedAndroidViewViewGroup_LayoutParams_(RepackagedAndroidViewViewGroup_MarginLayoutParams *self, RepackagedAndroidViewViewGroup_LayoutParams *source) {
  (void) RepackagedAndroidViewViewGroup_LayoutParams_initWithRepackagedAndroidViewViewGroup_LayoutParams_(self, source);
  self->startMargin_ = RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE;
  self->endMargin_ = RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE;
  
#line 7166
  self->mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_LEFT_MARGIN_UNDEFINED_MASK;
  self->mMarginFlags_ |= RepackagedAndroidViewViewGroup_MarginLayoutParams_RIGHT_MARGIN_UNDEFINED_MASK;
  
#line 7169
  self->mMarginFlags_ &= ~RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK;
  self->mMarginFlags_ &= ~RepackagedAndroidViewViewGroup_MarginLayoutParams_RTL_COMPATIBILITY_MODE_MASK;
}


#line 7163
RepackagedAndroidViewViewGroup_MarginLayoutParams *new_RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithRepackagedAndroidViewViewGroup_LayoutParams_(RepackagedAndroidViewViewGroup_LayoutParams *source) {
  RepackagedAndroidViewViewGroup_MarginLayoutParams *self = [RepackagedAndroidViewViewGroup_MarginLayoutParams alloc];
  RepackagedAndroidViewViewGroup_MarginLayoutParams_initWithRepackagedAndroidViewViewGroup_LayoutParams_(self, source);
  return self;
}


#line 7368
void RepackagedAndroidViewViewGroup_MarginLayoutParams_doResolveMargins(RepackagedAndroidViewViewGroup_MarginLayoutParams *self) {
  if ((self->mMarginFlags_ & RepackagedAndroidViewViewGroup_MarginLayoutParams_RTL_COMPATIBILITY_MODE_MASK) == RepackagedAndroidViewViewGroup_MarginLayoutParams_RTL_COMPATIBILITY_MODE_MASK) {
    
#line 7372
    if ((self->mMarginFlags_ & RepackagedAndroidViewViewGroup_MarginLayoutParams_LEFT_MARGIN_UNDEFINED_MASK) == RepackagedAndroidViewViewGroup_MarginLayoutParams_LEFT_MARGIN_UNDEFINED_MASK &&
#line 7373
    self->startMargin_ > RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE) {
      self->leftMargin_ = self->startMargin_;
    }
    if ((self->mMarginFlags_ & RepackagedAndroidViewViewGroup_MarginLayoutParams_RIGHT_MARGIN_UNDEFINED_MASK) == RepackagedAndroidViewViewGroup_MarginLayoutParams_RIGHT_MARGIN_UNDEFINED_MASK &&
#line 7377
    self->endMargin_ > RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE) {
      self->rightMargin_ = self->endMargin_;
    }
  }
  else {
    
#line 7384
    switch (self->mMarginFlags_ & RepackagedAndroidViewViewGroup_MarginLayoutParams_LAYOUT_DIRECTION_MASK) {
      case RepackagedAndroidViewView_LAYOUT_DIRECTION_RTL:
      self->leftMargin_ = (self->endMargin_ > RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE) ? self->endMargin_ : RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RESOLVED;
      
#line 7388
      self->rightMargin_ = (self->startMargin_ > RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE) ? self->startMargin_ : RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RESOLVED;
      
#line 7390
      break;
      case RepackagedAndroidViewView_LAYOUT_DIRECTION_LTR:
      default:
      self->leftMargin_ = (self->startMargin_ > RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE) ? self->startMargin_ : RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RESOLVED;
      
#line 7395
      self->rightMargin_ = (self->endMargin_ > RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RELATIVE) ? self->endMargin_ : RepackagedAndroidViewViewGroup_MarginLayoutParams_DEFAULT_MARGIN_RESOLVED;
      
#line 7397
      break;
    }
  }
  self->mMarginFlags_ &= ~RepackagedAndroidViewViewGroup_MarginLayoutParams_NEED_RESOLUTION_MASK;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewViewGroup_MarginLayoutParams)

J2OBJC_INITIALIZED_DEFN(RepackagedAndroidViewViewGroup_TouchTarget)


#line 7449
@implementation RepackagedAndroidViewViewGroup_TouchTarget


#line 7466
- (instancetype)init {
  RepackagedAndroidViewViewGroup_TouchTarget_init(self);
  return self;
}


#line 7469
+ (RepackagedAndroidViewViewGroup_TouchTarget *)obtainWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child
                                                                            withInt:(jint)pointerIdBits {
  return RepackagedAndroidViewViewGroup_TouchTarget_obtainWithRepackagedAndroidViewView_withInt_(child, pointerIdBits);
}


#line 7486
- (void)recycle {
  @synchronized(RepackagedAndroidViewViewGroup_TouchTarget_sRecycleLock_) {
    if (RepackagedAndroidViewViewGroup_TouchTarget_sRecycledCount_ < RepackagedAndroidViewViewGroup_TouchTarget_MAX_RECYCLED) {
      next_ = RepackagedAndroidViewViewGroup_TouchTarget_sRecycleBin_;
      RepackagedAndroidViewViewGroup_TouchTarget_sRecycleBin_ = self;
      RepackagedAndroidViewViewGroup_TouchTarget_sRecycledCount_ += 1;
    }
    else {
      
#line 7493
      next_ = nil;
    }
    child_ = nil;
  }
}

+ (void)initialize {
  if (self == [RepackagedAndroidViewViewGroup_TouchTarget class]) {
    RepackagedAndroidViewViewGroup_TouchTarget_sRecycleLock_ = [IOSObjectArray newArrayWithLength:
#line 7451
    0 type:NSObject_class_()];
    J2OBJC_SET_INITIALIZED(RepackagedAndroidViewViewGroup_TouchTarget)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "TouchTarget", NULL, 0x2, NULL, NULL },
    { "obtainWithRepackagedAndroidViewView:withInt:", "obtain", "Lrepackaged.android.view.ViewGroup$TouchTarget;", 0x9, NULL, NULL },
    { "recycle", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_RECYCLED_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_TouchTarget_MAX_RECYCLED },
    { "sRecycleLock_", NULL, 0x1a, "Ljava.lang.Object;", &RepackagedAndroidViewViewGroup_TouchTarget_sRecycleLock_, NULL,  },
    { "sRecycleBin_", NULL, 0xa, "Lrepackaged.android.view.ViewGroup$TouchTarget;", &RepackagedAndroidViewViewGroup_TouchTarget_sRecycleBin_, NULL,  },
    { "sRecycledCount_", NULL, 0xa, "I", &RepackagedAndroidViewViewGroup_TouchTarget_sRecycledCount_, NULL,  },
    { "ALL_POINTER_IDS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_TouchTarget_ALL_POINTER_IDS },
    { "child_", NULL, 0x1, "Lrepackaged.android.view.View;", NULL, NULL,  },
    { "pointerIdBits_", NULL, 0x1, "I", NULL, NULL,  },
    { "next_", NULL, 0x1, "Lrepackaged.android.view.ViewGroup$TouchTarget;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidViewViewGroup_TouchTarget = { 2, "TouchTarget", "repackaged.android.view", "ViewGroup", 0x1a, 3, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidViewViewGroup_TouchTarget;
}

@end


#line 7466
void RepackagedAndroidViewViewGroup_TouchTarget_init(RepackagedAndroidViewViewGroup_TouchTarget *self) {
  (void) NSObject_init(self);
}


#line 7466
RepackagedAndroidViewViewGroup_TouchTarget *new_RepackagedAndroidViewViewGroup_TouchTarget_init() {
  RepackagedAndroidViewViewGroup_TouchTarget *self = [RepackagedAndroidViewViewGroup_TouchTarget alloc];
  RepackagedAndroidViewViewGroup_TouchTarget_init(self);
  return self;
}


#line 7469
RepackagedAndroidViewViewGroup_TouchTarget *RepackagedAndroidViewViewGroup_TouchTarget_obtainWithRepackagedAndroidViewView_withInt_(RepackagedAndroidViewView *child, jint pointerIdBits) {
  RepackagedAndroidViewViewGroup_TouchTarget_initialize();
  
#line 7470
  RepackagedAndroidViewViewGroup_TouchTarget *target;
  @synchronized(RepackagedAndroidViewViewGroup_TouchTarget_sRecycleLock_) {
    if (RepackagedAndroidViewViewGroup_TouchTarget_sRecycleBin_ == nil) {
      target = new_RepackagedAndroidViewViewGroup_TouchTarget_init();
    }
    else {
      
#line 7475
      target = RepackagedAndroidViewViewGroup_TouchTarget_sRecycleBin_;
      RepackagedAndroidViewViewGroup_TouchTarget_sRecycleBin_ = target->next_;
      RepackagedAndroidViewViewGroup_TouchTarget_sRecycledCount_--;
      target->next_ = nil;
    }
  }
  ((RepackagedAndroidViewViewGroup_TouchTarget *) nil_chk(target))->child_ = child;
  target->pointerIdBits_ = pointerIdBits;
  return target;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewViewGroup_TouchTarget)

J2OBJC_INITIALIZED_DEFN(RepackagedAndroidViewViewGroup_HoverTarget)


#line 7501
@implementation RepackagedAndroidViewViewGroup_HoverTarget


#line 7513
- (instancetype)init {
  RepackagedAndroidViewViewGroup_HoverTarget_init(self);
  return self;
}


#line 7516
+ (RepackagedAndroidViewViewGroup_HoverTarget *)obtainWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  return RepackagedAndroidViewViewGroup_HoverTarget_obtainWithRepackagedAndroidViewView_(child);
}


#line 7532
- (void)recycle {
  @synchronized(RepackagedAndroidViewViewGroup_HoverTarget_sRecycleLock_) {
    if (RepackagedAndroidViewViewGroup_HoverTarget_sRecycledCount_ < RepackagedAndroidViewViewGroup_HoverTarget_MAX_RECYCLED) {
      next_ = RepackagedAndroidViewViewGroup_HoverTarget_sRecycleBin_;
      RepackagedAndroidViewViewGroup_HoverTarget_sRecycleBin_ = self;
      RepackagedAndroidViewViewGroup_HoverTarget_sRecycledCount_ += 1;
    }
    else {
      
#line 7539
      next_ = nil;
    }
    child_ = nil;
  }
}

+ (void)initialize {
  if (self == [RepackagedAndroidViewViewGroup_HoverTarget class]) {
    RepackagedAndroidViewViewGroup_HoverTarget_sRecycleLock_ = [IOSObjectArray newArrayWithLength:
#line 7503
    0 type:NSObject_class_()];
    J2OBJC_SET_INITIALIZED(RepackagedAndroidViewViewGroup_HoverTarget)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "HoverTarget", NULL, 0x2, NULL, NULL },
    { "obtainWithRepackagedAndroidViewView:", "obtain", "Lrepackaged.android.view.ViewGroup$HoverTarget;", 0x9, NULL, NULL },
    { "recycle", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_RECYCLED_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_HoverTarget_MAX_RECYCLED },
    { "sRecycleLock_", NULL, 0x1a, "Ljava.lang.Object;", &RepackagedAndroidViewViewGroup_HoverTarget_sRecycleLock_, NULL,  },
    { "sRecycleBin_", NULL, 0xa, "Lrepackaged.android.view.ViewGroup$HoverTarget;", &RepackagedAndroidViewViewGroup_HoverTarget_sRecycleBin_, NULL,  },
    { "sRecycledCount_", NULL, 0xa, "I", &RepackagedAndroidViewViewGroup_HoverTarget_sRecycledCount_, NULL,  },
    { "child_", NULL, 0x1, "Lrepackaged.android.view.View;", NULL, NULL,  },
    { "next_", NULL, 0x1, "Lrepackaged.android.view.ViewGroup$HoverTarget;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidViewViewGroup_HoverTarget = { 2, "HoverTarget", "repackaged.android.view", "ViewGroup", 0x1a, 3, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidViewViewGroup_HoverTarget;
}

@end


#line 7513
void RepackagedAndroidViewViewGroup_HoverTarget_init(RepackagedAndroidViewViewGroup_HoverTarget *self) {
  (void) NSObject_init(self);
}


#line 7513
RepackagedAndroidViewViewGroup_HoverTarget *new_RepackagedAndroidViewViewGroup_HoverTarget_init() {
  RepackagedAndroidViewViewGroup_HoverTarget *self = [RepackagedAndroidViewViewGroup_HoverTarget alloc];
  RepackagedAndroidViewViewGroup_HoverTarget_init(self);
  return self;
}


#line 7516
RepackagedAndroidViewViewGroup_HoverTarget *RepackagedAndroidViewViewGroup_HoverTarget_obtainWithRepackagedAndroidViewView_(RepackagedAndroidViewView *child) {
  RepackagedAndroidViewViewGroup_HoverTarget_initialize();
  
#line 7517
  RepackagedAndroidViewViewGroup_HoverTarget *target;
  @synchronized(RepackagedAndroidViewViewGroup_HoverTarget_sRecycleLock_) {
    if (RepackagedAndroidViewViewGroup_HoverTarget_sRecycleBin_ == nil) {
      target = new_RepackagedAndroidViewViewGroup_HoverTarget_init();
    }
    else {
      
#line 7522
      target = RepackagedAndroidViewViewGroup_HoverTarget_sRecycleBin_;
      RepackagedAndroidViewViewGroup_HoverTarget_sRecycleBin_ = target->next_;
      RepackagedAndroidViewViewGroup_HoverTarget_sRecycledCount_--;
      target->next_ = nil;
    }
  }
  ((RepackagedAndroidViewViewGroup_HoverTarget *) nil_chk(target))->child_ = child;
  return target;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewViewGroup_HoverTarget)

J2OBJC_INITIALIZED_DEFN(RepackagedAndroidViewViewGroup_ChildListForAccessibility)


#line 7550
@implementation RepackagedAndroidViewViewGroup_ChildListForAccessibility


#line 7561
+ (RepackagedAndroidViewViewGroup_ChildListForAccessibility *)obtainWithRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)parent
                                                                                           withBoolean:(jboolean)sort {
  return RepackagedAndroidViewViewGroup_ChildListForAccessibility_obtainWithRepackagedAndroidViewViewGroup_withBoolean_(parent, sort);
}


#line 7570
- (void)recycle {
  RepackagedAndroidViewViewGroup_ChildListForAccessibility_clear(self);
  [((RepackagedAndroidUtilPools_SynchronizedPool *) nil_chk(RepackagedAndroidViewViewGroup_ChildListForAccessibility_sPool_)) release__WithId:self];
}

- (jint)getChildCount {
  return [((JavaUtilArrayList *) nil_chk(mChildren_)) size];
}

- (RepackagedAndroidViewView *)getChildAtWithInt:(jint)index {
  return [((JavaUtilArrayList *) nil_chk(mChildren_)) getWithInt:index];
}

- (jint)getChildIndexWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)child {
  return [((JavaUtilArrayList *) nil_chk(mChildren_)) indexOfWithId:child];
}

- (void)init__WithRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)parent
                                     withBoolean:(jboolean)sort {
  RepackagedAndroidViewViewGroup_ChildListForAccessibility_init__WithRepackagedAndroidViewViewGroup_withBoolean_(self, parent, sort);
}


#line 7611
- (void)sortWithJavaUtilArrayList:(JavaUtilArrayList *)holders {
  RepackagedAndroidViewViewGroup_ChildListForAccessibility_sortWithJavaUtilArrayList_(self, holders);
}


#line 7628
- (void)clear {
  RepackagedAndroidViewViewGroup_ChildListForAccessibility_clear(self);
}

- (instancetype)init {
  RepackagedAndroidViewViewGroup_ChildListForAccessibility_init(self);
  return self;
}

+ (void)initialize {
  if (self == [RepackagedAndroidViewViewGroup_ChildListForAccessibility class]) {
    RepackagedAndroidViewViewGroup_ChildListForAccessibility_sPool_ = new_RepackagedAndroidUtilPools_SynchronizedPool_initWithInt_(
#line 7555
    RepackagedAndroidViewViewGroup_ChildListForAccessibility_MAX_POOL_SIZE);
    J2OBJC_SET_INITIALIZED(RepackagedAndroidViewViewGroup_ChildListForAccessibility)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "obtainWithRepackagedAndroidViewViewGroup:withBoolean:", "obtain", "Lrepackaged.android.view.ViewGroup$ChildListForAccessibility;", 0x9, NULL, NULL },
    { "recycle", NULL, "V", 0x1, NULL, NULL },
    { "getChildCount", NULL, "I", 0x1, NULL, NULL },
    { "getChildAtWithInt:", "getChildAt", "Lrepackaged.android.view.View;", 0x1, NULL, NULL },
    { "getChildIndexWithRepackagedAndroidViewView:", "getChildIndex", "I", 0x1, NULL, NULL },
    { "init__WithRepackagedAndroidViewViewGroup:withBoolean:", "init", "V", 0x2, NULL, NULL },
    { "sortWithJavaUtilArrayList:", "sort", "V", 0x2, NULL, NULL },
    { "clear", NULL, "V", 0x2, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_POOL_SIZE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_ChildListForAccessibility_MAX_POOL_SIZE },
    { "sPool_", NULL, 0x1a, "Lrepackaged.android.util.Pools$SynchronizedPool;", &RepackagedAndroidViewViewGroup_ChildListForAccessibility_sPool_, "Lrepackaged/android/util/Pools$SynchronizedPool<Lrepackaged/android/view/ViewGroup$ChildListForAccessibility;>;",  },
    { "mChildren_", NULL, 0x12, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrepackaged/android/view/View;>;",  },
    { "mHolders_", NULL, 0x12, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrepackaged/android/view/ViewGroup$ViewLocationHolder;>;",  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidViewViewGroup_ChildListForAccessibility = { 2, "ChildListForAccessibility", "repackaged.android.view", "ViewGroup", 0x8, 9, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidViewViewGroup_ChildListForAccessibility;
}

@end


#line 7561
RepackagedAndroidViewViewGroup_ChildListForAccessibility *RepackagedAndroidViewViewGroup_ChildListForAccessibility_obtainWithRepackagedAndroidViewViewGroup_withBoolean_(RepackagedAndroidViewViewGroup *parent, jboolean sort) {
  RepackagedAndroidViewViewGroup_ChildListForAccessibility_initialize();
  
#line 7562
  RepackagedAndroidViewViewGroup_ChildListForAccessibility *list = [((RepackagedAndroidUtilPools_SynchronizedPool *) nil_chk(RepackagedAndroidViewViewGroup_ChildListForAccessibility_sPool_)) acquire];
  if (list == nil) {
    list = new_RepackagedAndroidViewViewGroup_ChildListForAccessibility_init();
  }
  RepackagedAndroidViewViewGroup_ChildListForAccessibility_init__WithRepackagedAndroidViewViewGroup_withBoolean_(nil_chk(list), parent, sort);
  return list;
}


#line 7587
void RepackagedAndroidViewViewGroup_ChildListForAccessibility_init__WithRepackagedAndroidViewViewGroup_withBoolean_(RepackagedAndroidViewViewGroup_ChildListForAccessibility *self, RepackagedAndroidViewViewGroup *parent, jboolean sort) {
  JavaUtilArrayList *children = self->mChildren_;
  jint childCount = [((RepackagedAndroidViewViewGroup *) nil_chk(parent)) getChildCount];
  for (jint i = 0; i < childCount; i++) {
    RepackagedAndroidViewView *child = [parent getChildAtWithInt:i];
    [((JavaUtilArrayList *) nil_chk(children)) addWithId:child];
  }
  if (sort) {
    JavaUtilArrayList *holders = self->mHolders_;
    for (jint i = 0; i < childCount; i++) {
      RepackagedAndroidViewView *child = [((JavaUtilArrayList *) nil_chk(children)) getWithInt:i];
      RepackagedAndroidViewViewGroup_ViewLocationHolder *holder = RepackagedAndroidViewViewGroup_ViewLocationHolder_obtainWithRepackagedAndroidViewViewGroup_withRepackagedAndroidViewView_(parent, child);
      [((JavaUtilArrayList *) nil_chk(holders)) addWithId:holder];
    }
    RepackagedAndroidViewViewGroup_ChildListForAccessibility_sortWithJavaUtilArrayList_(self, holders);
    for (jint i = 0; i < childCount; i++) {
      RepackagedAndroidViewViewGroup_ViewLocationHolder *holder = [((JavaUtilArrayList *) nil_chk(holders)) getWithInt:i];
      (void) [((JavaUtilArrayList *) nil_chk(children)) setWithInt:i withId:((RepackagedAndroidViewViewGroup_ViewLocationHolder *) nil_chk(holder))->mView_];
      [holder recycle];
    }
    [((JavaUtilArrayList *) nil_chk(holders)) clear];
  }
}

void RepackagedAndroidViewViewGroup_ChildListForAccessibility_sortWithJavaUtilArrayList_(RepackagedAndroidViewViewGroup_ChildListForAccessibility *self, JavaUtilArrayList *holders) {
  
#line 7615
  @try {
    RepackagedAndroidViewViewGroup_ViewLocationHolder_setComparisonStrategyWithInt_(
#line 7617
    RepackagedAndroidViewViewGroup_ViewLocationHolder_COMPARISON_STRATEGY_STRIPE);
    JavaUtilCollections_sortWithJavaUtilList_(holders);
  }
  @catch (
#line 7619
  JavaLangIllegalArgumentException *iae) {
    
#line 7622
    RepackagedAndroidViewViewGroup_ViewLocationHolder_setComparisonStrategyWithInt_(
#line 7623
    RepackagedAndroidViewViewGroup_ViewLocationHolder_COMPARISON_STRATEGY_LOCATION);
    JavaUtilCollections_sortWithJavaUtilList_(holders);
  }
}


#line 7628
void RepackagedAndroidViewViewGroup_ChildListForAccessibility_clear(RepackagedAndroidViewViewGroup_ChildListForAccessibility *self) {
  [((JavaUtilArrayList *) nil_chk(self->mChildren_)) clear];
}

void RepackagedAndroidViewViewGroup_ChildListForAccessibility_init(RepackagedAndroidViewViewGroup_ChildListForAccessibility *self) {
  (void) NSObject_init(self);
  self->mChildren_ = new_JavaUtilArrayList_init();
  self->mHolders_ = new_JavaUtilArrayList_init();
}

RepackagedAndroidViewViewGroup_ChildListForAccessibility *new_RepackagedAndroidViewViewGroup_ChildListForAccessibility_init() {
  RepackagedAndroidViewViewGroup_ChildListForAccessibility *self = [RepackagedAndroidViewViewGroup_ChildListForAccessibility alloc];
  RepackagedAndroidViewViewGroup_ChildListForAccessibility_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewViewGroup_ChildListForAccessibility)

J2OBJC_INITIALIZED_DEFN(RepackagedAndroidViewViewGroup_ViewLocationHolder)


#line 7639
@implementation RepackagedAndroidViewViewGroup_ViewLocationHolder


#line 7658
+ (RepackagedAndroidViewViewGroup_ViewLocationHolder *)obtainWithRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)root
                                                                  withRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  return RepackagedAndroidViewViewGroup_ViewLocationHolder_obtainWithRepackagedAndroidViewViewGroup_withRepackagedAndroidViewView_(root, view);
}


#line 7667
+ (void)setComparisonStrategyWithInt:(jint)strategy {
  RepackagedAndroidViewViewGroup_ViewLocationHolder_setComparisonStrategyWithInt_(strategy);
}

- (void)recycle {
  RepackagedAndroidViewViewGroup_ViewLocationHolder_clear(self);
  [((RepackagedAndroidUtilPools_SynchronizedPool *) nil_chk(RepackagedAndroidViewViewGroup_ViewLocationHolder_sPool_)) release__WithId:self];
}


#line 7677
- (jint)compareToWithId:(RepackagedAndroidViewViewGroup_ViewLocationHolder *)another {
  (void) check_class_cast(another, [RepackagedAndroidViewViewGroup_ViewLocationHolder class]);
  if (another == nil) {
    return 1;
  }
  
#line 7683
  if (RepackagedAndroidViewViewGroup_ViewLocationHolder_sComparisonStrategy_ == RepackagedAndroidViewViewGroup_ViewLocationHolder_COMPARISON_STRATEGY_STRIPE) {
    
#line 7685
    if (((RepackagedAndroidGraphicsRect *) nil_chk(mLocation_))->bottom_ - ((RepackagedAndroidViewViewGroup_ViewLocationHolder *) nil_chk(another))->mLocation_->top_ <= 0) {
      return -1;
    }
    
#line 7689
    if (mLocation_->top_ - another->mLocation_->bottom_ >= 0) {
      return 1;
    }
  }
  
#line 7695
  if (mLayoutDirection_ == RepackagedAndroidViewView_LAYOUT_DIRECTION_LTR) {
    jint leftDifference = ((RepackagedAndroidGraphicsRect *) nil_chk(mLocation_))->left_ - ((RepackagedAndroidViewViewGroup_ViewLocationHolder *) nil_chk(another))->mLocation_->left_;
    if (leftDifference != 0) {
      return leftDifference;
    }
  }
  else {
    
#line 7701
    jint rightDifference = ((RepackagedAndroidGraphicsRect *) nil_chk(mLocation_))->right_ - ((RepackagedAndroidViewViewGroup_ViewLocationHolder *) nil_chk(another))->mLocation_->right_;
    if (rightDifference != 0) {
      return -rightDifference;
    }
  }
  
#line 7707
  jint topDifference = ((RepackagedAndroidGraphicsRect *) nil_chk(mLocation_))->top_ - ((RepackagedAndroidViewViewGroup_ViewLocationHolder *) nil_chk(another))->mLocation_->top_;
  if (topDifference != 0) {
    return topDifference;
  }
  
#line 7712
  jint heightDiference = [mLocation_ height] - [another->mLocation_ height];
  if (heightDiference != 0) {
    return -heightDiference;
  }
  
#line 7717
  jint widthDiference = [mLocation_ width] - [another->mLocation_ width];
  if (widthDiference != 0) {
    return -widthDiference;
  }
  
#line 7723
  return [((RepackagedAndroidViewView *) nil_chk(mView_)) getAccessibilityViewId] - [another->mView_ getAccessibilityViewId];
}


#line 7726
- (void)init__WithRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)root
                   withRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
  RepackagedAndroidViewViewGroup_ViewLocationHolder_init__WithRepackagedAndroidViewViewGroup_withRepackagedAndroidViewView_(self, root, view);
}


#line 7734
- (void)clear {
  RepackagedAndroidViewViewGroup_ViewLocationHolder_clear(self);
}

- (instancetype)init {
  RepackagedAndroidViewViewGroup_ViewLocationHolder_init(self);
  return self;
}

+ (void)initialize {
  if (self == [RepackagedAndroidViewViewGroup_ViewLocationHolder class]) {
    RepackagedAndroidViewViewGroup_ViewLocationHolder_sPool_ = new_RepackagedAndroidUtilPools_SynchronizedPool_initWithInt_(
#line 7644
    RepackagedAndroidViewViewGroup_ViewLocationHolder_MAX_POOL_SIZE);
    J2OBJC_SET_INITIALIZED(RepackagedAndroidViewViewGroup_ViewLocationHolder)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "obtainWithRepackagedAndroidViewViewGroup:withRepackagedAndroidViewView:", "obtain", "Lrepackaged.android.view.ViewGroup$ViewLocationHolder;", 0x9, NULL, NULL },
    { "setComparisonStrategyWithInt:", "setComparisonStrategy", "V", 0x9, NULL, NULL },
    { "recycle", NULL, "V", 0x1, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
    { "init__WithRepackagedAndroidViewViewGroup:withRepackagedAndroidViewView:", "init", "V", 0x2, NULL, NULL },
    { "clear", NULL, "V", 0x2, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_POOL_SIZE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_ViewLocationHolder_MAX_POOL_SIZE },
    { "sPool_", NULL, 0x1a, "Lrepackaged.android.util.Pools$SynchronizedPool;", &RepackagedAndroidViewViewGroup_ViewLocationHolder_sPool_, "Lrepackaged/android/util/Pools$SynchronizedPool<Lrepackaged/android/view/ViewGroup$ViewLocationHolder;>;",  },
    { "COMPARISON_STRATEGY_STRIPE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_ViewLocationHolder_COMPARISON_STRATEGY_STRIPE },
    { "COMPARISON_STRATEGY_LOCATION_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewViewGroup_ViewLocationHolder_COMPARISON_STRATEGY_LOCATION },
    { "sComparisonStrategy_", NULL, 0xa, "I", &RepackagedAndroidViewViewGroup_ViewLocationHolder_sComparisonStrategy_, NULL,  },
    { "mLocation_", NULL, 0x12, "Lrepackaged.android.graphics.Rect;", NULL, NULL,  },
    { "mView_", NULL, 0x1, "Lrepackaged.android.view.View;", NULL, NULL,  },
    { "mLayoutDirection_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidViewViewGroup_ViewLocationHolder = { 2, "ViewLocationHolder", "repackaged.android.view", "ViewGroup", 0x8, 7, methods, 8, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/lang/Comparable<Lrepackaged/android/view/ViewGroup$ViewLocationHolder;>;" };
  return &_RepackagedAndroidViewViewGroup_ViewLocationHolder;
}

@end


#line 7658
RepackagedAndroidViewViewGroup_ViewLocationHolder *RepackagedAndroidViewViewGroup_ViewLocationHolder_obtainWithRepackagedAndroidViewViewGroup_withRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup *root, RepackagedAndroidViewView *view) {
  RepackagedAndroidViewViewGroup_ViewLocationHolder_initialize();
  
#line 7659
  RepackagedAndroidViewViewGroup_ViewLocationHolder *holder = [((RepackagedAndroidUtilPools_SynchronizedPool *) nil_chk(RepackagedAndroidViewViewGroup_ViewLocationHolder_sPool_)) acquire];
  if (holder == nil) {
    holder = new_RepackagedAndroidViewViewGroup_ViewLocationHolder_init();
  }
  RepackagedAndroidViewViewGroup_ViewLocationHolder_init__WithRepackagedAndroidViewViewGroup_withRepackagedAndroidViewView_(nil_chk(holder), root, view);
  return holder;
}


#line 7667
void RepackagedAndroidViewViewGroup_ViewLocationHolder_setComparisonStrategyWithInt_(jint strategy) {
  RepackagedAndroidViewViewGroup_ViewLocationHolder_initialize();
  
#line 7668
  RepackagedAndroidViewViewGroup_ViewLocationHolder_sComparisonStrategy_ = strategy;
}


#line 7726
void RepackagedAndroidViewViewGroup_ViewLocationHolder_init__WithRepackagedAndroidViewViewGroup_withRepackagedAndroidViewView_(RepackagedAndroidViewViewGroup_ViewLocationHolder *self, RepackagedAndroidViewViewGroup *root, RepackagedAndroidViewView *view) {
  RepackagedAndroidGraphicsRect *viewLocation = self->mLocation_;
  [((RepackagedAndroidViewView *) nil_chk(view)) getDrawingRectWithRepackagedAndroidGraphicsRect:viewLocation];
  RepackagedAndroidViewViewGroup_offsetDescendantRectToMyCoordsWithRepackagedAndroidViewView_withRepackagedAndroidGraphicsRect_(nil_chk(root), view, viewLocation);
  self->mView_ = view;
  self->mLayoutDirection_ = [root getLayoutDirection];
}

void RepackagedAndroidViewViewGroup_ViewLocationHolder_clear(RepackagedAndroidViewViewGroup_ViewLocationHolder *self) {
  self->mView_ = nil;
  [((RepackagedAndroidGraphicsRect *) nil_chk(self->mLocation_)) setWithInt:0 withInt:0 withInt:0 withInt:0];
}

void RepackagedAndroidViewViewGroup_ViewLocationHolder_init(RepackagedAndroidViewViewGroup_ViewLocationHolder *self) {
  (void) NSObject_init(self);
  self->mLocation_ = new_RepackagedAndroidGraphicsRect_init();
}

RepackagedAndroidViewViewGroup_ViewLocationHolder *new_RepackagedAndroidViewViewGroup_ViewLocationHolder_init() {
  RepackagedAndroidViewViewGroup_ViewLocationHolder *self = [RepackagedAndroidViewViewGroup_ViewLocationHolder alloc];
  RepackagedAndroidViewViewGroup_ViewLocationHolder_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewViewGroup_ViewLocationHolder)

@implementation RepackagedAndroidViewViewGroup_$1


#line 513
- (void)setTitleWithJavaLangCharSequence:(id<JavaLangCharSequence>)title {
}

- (void)setTitleWithInt:(jint)resId {
}

- (void)setSubtitleWithJavaLangCharSequence:(id<JavaLangCharSequence>)subtitle {
}

- (void)setSubtitleWithInt:(jint)resId {
}

- (void)setCustomViewWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)view {
}

- (void)invalidate {
}

- (void)finish {
}

- (RepackagedAndroidViewMenu *)getMenu {
  return nil;
}


#line 539
- (id<JavaLangCharSequence>)getTitle {
  return nil;
}


#line 544
- (id<JavaLangCharSequence>)getSubtitle {
  return nil;
}


#line 549
- (RepackagedAndroidViewView *)getCustomView {
  return nil;
}


#line 554
- (RepackagedAndroidViewMenuInflater *)getMenuInflater {
  return nil;
}

- (instancetype)init {
  RepackagedAndroidViewViewGroup_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setTitleWithJavaLangCharSequence:", "setTitle", "V", 0x1, NULL, NULL },
    { "setTitleWithInt:", "setTitle", "V", 0x1, NULL, NULL },
    { "setSubtitleWithJavaLangCharSequence:", "setSubtitle", "V", 0x1, NULL, NULL },
    { "setSubtitleWithInt:", "setSubtitle", "V", 0x1, NULL, NULL },
    { "setCustomViewWithRepackagedAndroidViewView:", "setCustomView", "V", 0x1, NULL, NULL },
    { "invalidate", NULL, "V", 0x1, NULL, NULL },
    { "finish", NULL, "V", 0x1, NULL, NULL },
    { "getMenu", NULL, "Lrepackaged.android.view.Menu;", 0x1, NULL, NULL },
    { "getTitle", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "getSubtitle", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "getCustomView", NULL, "Lrepackaged.android.view.View;", 0x1, NULL, NULL },
    { "getMenuInflater", NULL, "Lrepackaged.android.view.MenuInflater;", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _RepackagedAndroidViewViewGroup_$1 = { 2, "", "repackaged.android.view", "ViewGroup", 0x8008, 13, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidViewViewGroup_$1;
}

@end

void RepackagedAndroidViewViewGroup_$1_init(RepackagedAndroidViewViewGroup_$1 *self) {
  (void) RepackagedAndroidViewActionMode_init(self);
}

RepackagedAndroidViewViewGroup_$1 *new_RepackagedAndroidViewViewGroup_$1_init() {
  RepackagedAndroidViewViewGroup_$1 *self = [RepackagedAndroidViewViewGroup_$1 alloc];
  RepackagedAndroidViewViewGroup_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewViewGroup_$1)

@implementation RepackagedAndroidViewViewGroup_$3


#line 3449
- (void)run {
  RepackagedAndroidViewViewGroup_notifyAnimationListener(this$0_);
}

- (instancetype)initWithRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)outer$ {
  RepackagedAndroidViewViewGroup_$3_initWithRepackagedAndroidViewViewGroup_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "initWithRepackagedAndroidViewViewGroup:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrepackaged.android.view.ViewGroup;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RepackagedAndroidViewViewGroup", "dispatchDrawWithRepackagedAndroidGraphicsCanvas:" };
  static const J2ObjcClassInfo _RepackagedAndroidViewViewGroup_$3 = { 2, "", "repackaged.android.view", "ViewGroup", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_RepackagedAndroidViewViewGroup_$3;
}

@end

void RepackagedAndroidViewViewGroup_$3_initWithRepackagedAndroidViewViewGroup_(RepackagedAndroidViewViewGroup_$3 *self, RepackagedAndroidViewViewGroup *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

RepackagedAndroidViewViewGroup_$3 *new_RepackagedAndroidViewViewGroup_$3_initWithRepackagedAndroidViewViewGroup_(RepackagedAndroidViewViewGroup *outer$) {
  RepackagedAndroidViewViewGroup_$3 *self = [RepackagedAndroidViewViewGroup_$3 alloc];
  RepackagedAndroidViewViewGroup_$3_initWithRepackagedAndroidViewViewGroup_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewViewGroup_$3)

@implementation RepackagedAndroidViewViewGroup_$4


#line 3547
- (void)run {
  [((RepackagedAndroidViewAnimationAnimation_AnimationListener *) nil_chk(this$0_->mAnimationListener_)) onAnimationEndWithId:[((RepackagedAndroidViewAnimationLayoutAnimationController *) nil_chk(this$0_->mLayoutAnimationController_)) getAnimation]];
}

- (instancetype)initWithRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)outer$ {
  RepackagedAndroidViewViewGroup_$4_initWithRepackagedAndroidViewViewGroup_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "initWithRepackagedAndroidViewViewGroup:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrepackaged.android.view.ViewGroup;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RepackagedAndroidViewViewGroup", "notifyAnimationListener" };
  static const J2ObjcClassInfo _RepackagedAndroidViewViewGroup_$4 = { 2, "", "repackaged.android.view", "ViewGroup", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_RepackagedAndroidViewViewGroup_$4;
}

@end

void RepackagedAndroidViewViewGroup_$4_initWithRepackagedAndroidViewViewGroup_(RepackagedAndroidViewViewGroup_$4 *self, RepackagedAndroidViewViewGroup *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

RepackagedAndroidViewViewGroup_$4 *new_RepackagedAndroidViewViewGroup_$4_initWithRepackagedAndroidViewViewGroup_(RepackagedAndroidViewViewGroup *outer$) {
  RepackagedAndroidViewViewGroup_$4 *self = [RepackagedAndroidViewViewGroup_$4 alloc];
  RepackagedAndroidViewViewGroup_$4_initWithRepackagedAndroidViewViewGroup_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewViewGroup_$4)

@implementation RepackagedAndroidViewViewGroup_$2


#line 6177
- (void)startTransitionWithRepackagedAndroidAnimationLayoutTransition:(RepackagedAndroidAnimationLayoutTransition *)transition
                                   withRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)container
                                        withRepackagedAndroidViewView:(RepackagedAndroidViewView *)view
                                                              withInt:(jint)transitionType {
  
#line 6181
  if (transitionType == RepackagedAndroidAnimationLayoutTransition_DISAPPEARING) {
    [this$0_ startViewTransitionWithRepackagedAndroidViewView:view];
  }
}


#line 6187
- (void)endTransitionWithRepackagedAndroidAnimationLayoutTransition:(RepackagedAndroidAnimationLayoutTransition *)transition
                                 withRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)container
                                      withRepackagedAndroidViewView:(RepackagedAndroidViewView *)view
                                                            withInt:(jint)transitionType {
  
#line 6189
  if (this$0_->mLayoutCalledWhileSuppressed_ && ![((RepackagedAndroidAnimationLayoutTransition *) nil_chk(transition)) isChangingLayout]) {
    [this$0_ requestLayout];
    this$0_->mLayoutCalledWhileSuppressed_ = NO;
  }
  if (transitionType == RepackagedAndroidAnimationLayoutTransition_DISAPPEARING && this$0_->mTransitioningViews_ != nil) {
    [this$0_ endViewTransitionWithRepackagedAndroidViewView:view];
  }
}

- (instancetype)initWithRepackagedAndroidViewViewGroup:(RepackagedAndroidViewViewGroup *)outer$ {
  RepackagedAndroidViewViewGroup_$2_initWithRepackagedAndroidViewViewGroup_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "startTransitionWithRepackagedAndroidAnimationLayoutTransition:withRepackagedAndroidViewViewGroup:withRepackagedAndroidViewView:withInt:", "startTransition", "V", 0x1, NULL, NULL },
    { "endTransitionWithRepackagedAndroidAnimationLayoutTransition:withRepackagedAndroidViewViewGroup:withRepackagedAndroidViewView:withInt:", "endTransition", "V", 0x1, NULL, NULL },
    { "initWithRepackagedAndroidViewViewGroup:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrepackaged.android.view.ViewGroup;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidViewViewGroup_$2 = { 2, "", "repackaged.android.view", "ViewGroup", 0x8008, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidViewViewGroup_$2;
}

@end

void RepackagedAndroidViewViewGroup_$2_initWithRepackagedAndroidViewViewGroup_(RepackagedAndroidViewViewGroup_$2 *self, RepackagedAndroidViewViewGroup *outer$) {
  self->this$0_ = outer$;
  (void) RepackagedAndroidAnimationLayoutTransition_TransitionListener_init(self);
}

RepackagedAndroidViewViewGroup_$2 *new_RepackagedAndroidViewViewGroup_$2_initWithRepackagedAndroidViewViewGroup_(RepackagedAndroidViewViewGroup *outer$) {
  RepackagedAndroidViewViewGroup_$2 *self = [RepackagedAndroidViewViewGroup_$2 alloc];
  RepackagedAndroidViewViewGroup_$2_initWithRepackagedAndroidViewViewGroup_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewViewGroup_$2)
