//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/view/RenderNode.java
//


#include "DisplayListCanvas.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "Matrix.h"
#include "Outline.h"
#include "Paint.h"
#include "Path.h"
#include "Rect.h"
#include "RenderNode.h"
#include "RenderNodeAnimator.h"
#include "View.h"
#include "ViewRootImpl.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Throwable.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/view/RenderNode.java"

@interface RepackagedAndroidViewRenderNode () {
 @public
  jboolean mValid_;
  RepackagedAndroidViewView *mOwningView_;
}

- (instancetype)initWithNSString:(NSString *)name
   withRepackagedAndroidViewView:(RepackagedAndroidViewView *)owningView;

/**
 */
- (instancetype)initWithLong:(jlong)nativePtr;

+ (jlong)nCreateWithNSString:(NSString *)name;

+ (void)nDestroyRenderNodeWithLong:(jlong)renderNode;

+ (void)nSetDisplayListDataWithLong:(jlong)renderNode
                           withLong:(jlong)newData;

+ (void)nGetTransformMatrixWithLong:(jlong)renderNode
                           withLong:(jlong)nativeMatrix;

+ (void)nGetInverseTransformMatrixWithLong:(jlong)renderNode
                                  withLong:(jlong)nativeMatrix;

+ (jboolean)nHasIdentityMatrixWithLong:(jlong)renderNode;

+ (jboolean)nOffsetTopAndBottomWithLong:(jlong)renderNode
                                withInt:(jint)offset;

+ (jboolean)nOffsetLeftAndRightWithLong:(jlong)renderNode
                                withInt:(jint)offset;

+ (jboolean)nSetLeftTopRightBottomWithLong:(jlong)renderNode
                                   withInt:(jint)left
                                   withInt:(jint)top
                                   withInt:(jint)right
                                   withInt:(jint)bottom;

+ (jboolean)nSetBottomWithLong:(jlong)renderNode
                       withInt:(jint)bottom;

+ (jboolean)nSetRightWithLong:(jlong)renderNode
                      withInt:(jint)right;

+ (jboolean)nSetTopWithLong:(jlong)renderNode
                    withInt:(jint)top;

+ (jboolean)nSetLeftWithLong:(jlong)renderNode
                     withInt:(jint)left;

+ (jboolean)nSetCameraDistanceWithLong:(jlong)renderNode
                             withFloat:(jfloat)distance;

+ (jboolean)nSetPivotYWithLong:(jlong)renderNode
                     withFloat:(jfloat)pivotY;

+ (jboolean)nSetPivotXWithLong:(jlong)renderNode
                     withFloat:(jfloat)pivotX;

+ (jboolean)nSetLayerTypeWithLong:(jlong)renderNode
                          withInt:(jint)layerType;

+ (jboolean)nSetLayerPaintWithLong:(jlong)renderNode
                          withLong:(jlong)paint;

+ (jboolean)nSetClipToBoundsWithLong:(jlong)renderNode
                         withBoolean:(jboolean)clipToBounds;

+ (jboolean)nSetClipBoundsWithLong:(jlong)renderNode
                           withInt:(jint)left
                           withInt:(jint)top
                           withInt:(jint)right
                           withInt:(jint)bottom;

+ (jboolean)nSetClipBoundsEmptyWithLong:(jlong)renderNode;

+ (jboolean)nSetProjectBackwardsWithLong:(jlong)renderNode
                             withBoolean:(jboolean)shouldProject;

+ (jboolean)nSetProjectionReceiverWithLong:(jlong)renderNode
                               withBoolean:(jboolean)shouldRecieve;

+ (jboolean)nSetOutlineRoundRectWithLong:(jlong)renderNode
                                 withInt:(jint)left
                                 withInt:(jint)top
                                 withInt:(jint)right
                                 withInt:(jint)bottom
                               withFloat:(jfloat)radius
                               withFloat:(jfloat)alpha;

+ (jboolean)nSetOutlineConvexPathWithLong:(jlong)renderNode
                                 withLong:(jlong)nativePath
                                withFloat:(jfloat)alpha;

+ (jboolean)nSetOutlineEmptyWithLong:(jlong)renderNode;

+ (jboolean)nSetOutlineNoneWithLong:(jlong)renderNode;

+ (jboolean)nHasShadowWithLong:(jlong)renderNode;

+ (jboolean)nSetClipToOutlineWithLong:(jlong)renderNode
                          withBoolean:(jboolean)clipToOutline;

+ (jboolean)nSetRevealClipWithLong:(jlong)renderNode
                       withBoolean:(jboolean)shouldClip
                         withFloat:(jfloat)x
                         withFloat:(jfloat)y
                         withFloat:(jfloat)radius;

+ (jboolean)nSetAlphaWithLong:(jlong)renderNode
                    withFloat:(jfloat)alpha;

+ (jboolean)nSetHasOverlappingRenderingWithLong:(jlong)renderNode
                                    withBoolean:(jboolean)hasOverlappingRendering;

+ (jboolean)nSetElevationWithLong:(jlong)renderNode
                        withFloat:(jfloat)lift;

+ (jboolean)nSetTranslationXWithLong:(jlong)renderNode
                           withFloat:(jfloat)translationX;

+ (jboolean)nSetTranslationYWithLong:(jlong)renderNode
                           withFloat:(jfloat)translationY;

+ (jboolean)nSetTranslationZWithLong:(jlong)renderNode
                           withFloat:(jfloat)translationZ;

+ (jboolean)nSetRotationWithLong:(jlong)renderNode
                       withFloat:(jfloat)rotation;

+ (jboolean)nSetRotationXWithLong:(jlong)renderNode
                        withFloat:(jfloat)rotationX;

+ (jboolean)nSetRotationYWithLong:(jlong)renderNode
                        withFloat:(jfloat)rotationY;

+ (jboolean)nSetScaleXWithLong:(jlong)renderNode
                     withFloat:(jfloat)scaleX;

+ (jboolean)nSetScaleYWithLong:(jlong)renderNode
                     withFloat:(jfloat)scaleY;

+ (jboolean)nSetStaticMatrixWithLong:(jlong)renderNode
                            withLong:(jlong)nativeMatrix;

+ (jboolean)nSetAnimationMatrixWithLong:(jlong)renderNode
                               withLong:(jlong)animationMatrix;

+ (jboolean)nHasOverlappingRenderingWithLong:(jlong)renderNode;

+ (jboolean)nGetClipToOutlineWithLong:(jlong)renderNode;

+ (jfloat)nGetAlphaWithLong:(jlong)renderNode;

+ (jfloat)nGetCameraDistanceWithLong:(jlong)renderNode;

+ (jfloat)nGetScaleXWithLong:(jlong)renderNode;

+ (jfloat)nGetScaleYWithLong:(jlong)renderNode;

+ (jfloat)nGetElevationWithLong:(jlong)renderNode;

+ (jfloat)nGetTranslationXWithLong:(jlong)renderNode;

+ (jfloat)nGetTranslationYWithLong:(jlong)renderNode;

+ (jfloat)nGetTranslationZWithLong:(jlong)renderNode;

+ (jfloat)nGetRotationWithLong:(jlong)renderNode;

+ (jfloat)nGetRotationXWithLong:(jlong)renderNode;

+ (jfloat)nGetRotationYWithLong:(jlong)renderNode;

+ (jboolean)nIsPivotExplicitlySetWithLong:(jlong)renderNode;

+ (jfloat)nGetPivotXWithLong:(jlong)renderNode;

+ (jfloat)nGetPivotYWithLong:(jlong)renderNode;

+ (void)nOutputWithLong:(jlong)renderNode;

+ (jint)nGetDebugSizeWithLong:(jlong)renderNode;

+ (void)nAddAnimatorWithLong:(jlong)renderNode
                    withLong:(jlong)animatorPtr;

+ (void)nEndAllAnimatorsWithLong:(jlong)renderNode;

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidViewRenderNode, mOwningView_, RepackagedAndroidViewView *)

__attribute__((unused)) static void RepackagedAndroidViewRenderNode_initWithNSString_withRepackagedAndroidViewView_(RepackagedAndroidViewRenderNode *self, NSString *name, RepackagedAndroidViewView *owningView);

__attribute__((unused)) static RepackagedAndroidViewRenderNode *new_RepackagedAndroidViewRenderNode_initWithNSString_withRepackagedAndroidViewView_(NSString *name, RepackagedAndroidViewView *owningView) NS_RETURNS_RETAINED;

__attribute__((unused)) static void RepackagedAndroidViewRenderNode_initWithLong_(RepackagedAndroidViewRenderNode *self, jlong nativePtr);

__attribute__((unused)) static RepackagedAndroidViewRenderNode *new_RepackagedAndroidViewRenderNode_initWithLong_(jlong nativePtr) NS_RETURNS_RETAINED;

__attribute__((unused)) static jlong RepackagedAndroidViewRenderNode_nCreateWithNSString_(NSString *name);

__attribute__((unused)) static void RepackagedAndroidViewRenderNode_nDestroyRenderNodeWithLong_(jlong renderNode);

__attribute__((unused)) static void RepackagedAndroidViewRenderNode_nSetDisplayListDataWithLong_withLong_(jlong renderNode, jlong newData);

__attribute__((unused)) static void RepackagedAndroidViewRenderNode_nGetTransformMatrixWithLong_withLong_(jlong renderNode, jlong nativeMatrix);

__attribute__((unused)) static void RepackagedAndroidViewRenderNode_nGetInverseTransformMatrixWithLong_withLong_(jlong renderNode, jlong nativeMatrix);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nHasIdentityMatrixWithLong_(jlong renderNode);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nOffsetTopAndBottomWithLong_withInt_(jlong renderNode, jint offset);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nOffsetLeftAndRightWithLong_withInt_(jlong renderNode, jint offset);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetLeftTopRightBottomWithLong_withInt_withInt_withInt_withInt_(jlong renderNode, jint left, jint top, jint right, jint bottom);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetBottomWithLong_withInt_(jlong renderNode, jint bottom);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetRightWithLong_withInt_(jlong renderNode, jint right);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetTopWithLong_withInt_(jlong renderNode, jint top);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetLeftWithLong_withInt_(jlong renderNode, jint left);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetCameraDistanceWithLong_withFloat_(jlong renderNode, jfloat distance);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetPivotYWithLong_withFloat_(jlong renderNode, jfloat pivotY);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetPivotXWithLong_withFloat_(jlong renderNode, jfloat pivotX);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetLayerTypeWithLong_withInt_(jlong renderNode, jint layerType);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetLayerPaintWithLong_withLong_(jlong renderNode, jlong paint);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetClipToBoundsWithLong_withBoolean_(jlong renderNode, jboolean clipToBounds);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetClipBoundsWithLong_withInt_withInt_withInt_withInt_(jlong renderNode, jint left, jint top, jint right, jint bottom);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetClipBoundsEmptyWithLong_(jlong renderNode);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetProjectBackwardsWithLong_withBoolean_(jlong renderNode, jboolean shouldProject);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetProjectionReceiverWithLong_withBoolean_(jlong renderNode, jboolean shouldRecieve);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetOutlineRoundRectWithLong_withInt_withInt_withInt_withInt_withFloat_withFloat_(jlong renderNode, jint left, jint top, jint right, jint bottom, jfloat radius, jfloat alpha);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetOutlineConvexPathWithLong_withLong_withFloat_(jlong renderNode, jlong nativePath, jfloat alpha);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetOutlineEmptyWithLong_(jlong renderNode);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetOutlineNoneWithLong_(jlong renderNode);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nHasShadowWithLong_(jlong renderNode);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetClipToOutlineWithLong_withBoolean_(jlong renderNode, jboolean clipToOutline);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetRevealClipWithLong_withBoolean_withFloat_withFloat_withFloat_(jlong renderNode, jboolean shouldClip, jfloat x, jfloat y, jfloat radius);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetAlphaWithLong_withFloat_(jlong renderNode, jfloat alpha);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetHasOverlappingRenderingWithLong_withBoolean_(jlong renderNode, jboolean hasOverlappingRendering);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetElevationWithLong_withFloat_(jlong renderNode, jfloat lift);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetTranslationXWithLong_withFloat_(jlong renderNode, jfloat translationX);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetTranslationYWithLong_withFloat_(jlong renderNode, jfloat translationY);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetTranslationZWithLong_withFloat_(jlong renderNode, jfloat translationZ);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetRotationWithLong_withFloat_(jlong renderNode, jfloat rotation);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetRotationXWithLong_withFloat_(jlong renderNode, jfloat rotationX);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetRotationYWithLong_withFloat_(jlong renderNode, jfloat rotationY);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetScaleXWithLong_withFloat_(jlong renderNode, jfloat scaleX);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetScaleYWithLong_withFloat_(jlong renderNode, jfloat scaleY);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetStaticMatrixWithLong_withLong_(jlong renderNode, jlong nativeMatrix);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nSetAnimationMatrixWithLong_withLong_(jlong renderNode, jlong animationMatrix);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nHasOverlappingRenderingWithLong_(jlong renderNode);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nGetClipToOutlineWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetAlphaWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetCameraDistanceWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetScaleXWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetScaleYWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetElevationWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetTranslationXWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetTranslationYWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetTranslationZWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetRotationWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetRotationXWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetRotationYWithLong_(jlong renderNode);

__attribute__((unused)) static jboolean RepackagedAndroidViewRenderNode_nIsPivotExplicitlySetWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetPivotXWithLong_(jlong renderNode);

__attribute__((unused)) static jfloat RepackagedAndroidViewRenderNode_nGetPivotYWithLong_(jlong renderNode);

__attribute__((unused)) static void RepackagedAndroidViewRenderNode_nOutputWithLong_(jlong renderNode);

__attribute__((unused)) static jint RepackagedAndroidViewRenderNode_nGetDebugSizeWithLong_(jlong renderNode);

__attribute__((unused)) static void RepackagedAndroidViewRenderNode_nAddAnimatorWithLong_withLong_(jlong renderNode, jlong animatorPtr);

__attribute__((unused)) static void RepackagedAndroidViewRenderNode_nEndAllAnimatorsWithLong_(jlong renderNode);


#line 128
@implementation RepackagedAndroidViewRenderNode


#line 174
- (instancetype)initWithNSString:(NSString *)name
   withRepackagedAndroidViewView:(RepackagedAndroidViewView *)owningView {
  RepackagedAndroidViewRenderNode_initWithNSString_withRepackagedAndroidViewView_(self, name, owningView);
  return self;
}


#line 182
- (instancetype)initWithLong:(jlong)nativePtr {
  RepackagedAndroidViewRenderNode_initWithLong_(self, nativePtr);
  return self;
}


#line 195
+ (RepackagedAndroidViewRenderNode *)createWithNSString:(NSString *)name
                          withRepackagedAndroidViewView:(RepackagedAndroidViewView *)owningView {
  return RepackagedAndroidViewRenderNode_createWithNSString_withRepackagedAndroidViewView_(name, owningView);
}


#line 205
+ (RepackagedAndroidViewRenderNode *)adoptWithLong:(jlong)nativePtr {
  return RepackagedAndroidViewRenderNode_adoptWithLong_(nativePtr);
}


#line 227
- (RepackagedAndroidViewDisplayListCanvas *)startWithInt:(jint)width
                                                 withInt:(jint)height {
  RepackagedAndroidViewDisplayListCanvas *canvas = RepackagedAndroidViewDisplayListCanvas_obtainWithRepackagedAndroidViewRenderNode_(self);
  [((RepackagedAndroidViewDisplayListCanvas *) nil_chk(canvas)) setViewportWithInt:width withInt:height];
  
#line 231
  [canvas onPreDrawWithId:nil];
  return canvas;
}


#line 243
- (void)endWithRepackagedAndroidViewDisplayListCanvas:(RepackagedAndroidViewDisplayListCanvas *)canvas {
  [((RepackagedAndroidViewDisplayListCanvas *) nil_chk(canvas)) onPostDraw];
  jlong renderNodeData = [canvas finishRecording];
  RepackagedAndroidViewRenderNode_nSetDisplayListDataWithLong_withLong_(mNativeRenderNode_, renderNodeData);
  [canvas recycle];
  mValid_ = YES;
}


#line 256
- (void)destroyDisplayListData {
  if (!mValid_) return;
  
#line 259
  RepackagedAndroidViewRenderNode_nSetDisplayListDataWithLong_withLong_(mNativeRenderNode_, 0);
  mValid_ = NO;
}


#line 269
- (jboolean)isValid {
  
#line 269
  return mValid_;
}


#line 271
- (jlong)getNativeDisplayList {
  if (!mValid_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"The display list is not valid.");
  }
  return mNativeRenderNode_;
}


#line 282
- (jboolean)hasIdentityMatrix {
  return RepackagedAndroidViewRenderNode_nHasIdentityMatrixWithLong_(mNativeRenderNode_);
}

- (void)getMatrixWithRepackagedAndroidGraphicsMatrix:(RepackagedAndroidGraphicsMatrix *)outMatrix {
  RepackagedAndroidViewRenderNode_nGetTransformMatrixWithLong_withLong_(mNativeRenderNode_, ((RepackagedAndroidGraphicsMatrix *) nil_chk(outMatrix))->native_instance_);
}

- (void)getInverseMatrixWithRepackagedAndroidGraphicsMatrix:(RepackagedAndroidGraphicsMatrix *)outMatrix {
  RepackagedAndroidViewRenderNode_nGetInverseTransformMatrixWithLong_withLong_(mNativeRenderNode_, ((RepackagedAndroidGraphicsMatrix *) nil_chk(outMatrix))->native_instance_);
}


#line 298
- (jboolean)setLayerTypeWithInt:(jint)layerType {
  return RepackagedAndroidViewRenderNode_nSetLayerTypeWithLong_withInt_(mNativeRenderNode_, layerType);
}

- (jboolean)setLayerPaintWithRepackagedAndroidGraphicsPaint:(RepackagedAndroidGraphicsPaint *)paint {
  return RepackagedAndroidViewRenderNode_nSetLayerPaintWithLong_withLong_(mNativeRenderNode_, paint != nil ? RepackagedAndroidGraphicsPaint_getNativeInstance() : 0);
}

- (jboolean)setClipBoundsWithRepackagedAndroidGraphicsRect:(RepackagedAndroidGraphicsRect *)rect {
  if (rect == nil) {
    return RepackagedAndroidViewRenderNode_nSetClipBoundsEmptyWithLong_(mNativeRenderNode_);
  }
  else {
    
#line 310
    return RepackagedAndroidViewRenderNode_nSetClipBoundsWithLong_withInt_withInt_withInt_withInt_(mNativeRenderNode_, rect->left_, rect->top_, rect->right_, rect->bottom_);
  }
}


#line 320
- (jboolean)setClipToBoundsWithBoolean:(jboolean)clipToBounds {
  return RepackagedAndroidViewRenderNode_nSetClipToBoundsWithLong_withBoolean_(mNativeRenderNode_, clipToBounds);
}


#line 331
- (jboolean)setProjectBackwardsWithBoolean:(jboolean)shouldProject {
  return RepackagedAndroidViewRenderNode_nSetProjectBackwardsWithLong_withBoolean_(mNativeRenderNode_, shouldProject);
}


#line 340
- (jboolean)setProjectionReceiverWithBoolean:(jboolean)shouldRecieve {
  return RepackagedAndroidViewRenderNode_nSetProjectionReceiverWithLong_withBoolean_(mNativeRenderNode_, shouldRecieve);
}


#line 350
- (jboolean)setOutlineWithRepackagedAndroidGraphicsOutline:(RepackagedAndroidGraphicsOutline *)outline {
  if (outline == nil) {
    return RepackagedAndroidViewRenderNode_nSetOutlineNoneWithLong_(mNativeRenderNode_);
  }
  else
#line 353
  if ([outline isEmpty]) {
    return RepackagedAndroidViewRenderNode_nSetOutlineEmptyWithLong_(mNativeRenderNode_);
  }
  else
#line 355
  if (outline->mRect_ != nil) {
    return RepackagedAndroidViewRenderNode_nSetOutlineRoundRectWithLong_withInt_withInt_withInt_withInt_withFloat_withFloat_(mNativeRenderNode_, outline->mRect_->left_, outline->mRect_->top_,
#line 357
    outline->mRect_->right_, outline->mRect_->bottom_, outline->mRadius_, outline->mAlpha_);
  }
  else
#line 358
  if (outline->mPath_ != nil) {
    return RepackagedAndroidViewRenderNode_nSetOutlineConvexPathWithLong_withLong_withFloat_(mNativeRenderNode_, outline->mPath_->mNativePath_,
#line 360
    outline->mAlpha_);
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unrecognized outline?");
}


#line 365
- (jboolean)hasShadow {
  return RepackagedAndroidViewRenderNode_nHasShadowWithLong_(mNativeRenderNode_);
}


#line 374
- (jboolean)setClipToOutlineWithBoolean:(jboolean)clipToOutline {
  return RepackagedAndroidViewRenderNode_nSetClipToOutlineWithLong_withBoolean_(mNativeRenderNode_, clipToOutline);
}

- (jboolean)getClipToOutline {
  return RepackagedAndroidViewRenderNode_nGetClipToOutlineWithLong_(mNativeRenderNode_);
}


#line 385
- (jboolean)setRevealClipWithBoolean:(jboolean)shouldClip
                           withFloat:(jfloat)x
                           withFloat:(jfloat)y
                           withFloat:(jfloat)radius {
  
#line 387
  return RepackagedAndroidViewRenderNode_nSetRevealClipWithLong_withBoolean_withFloat_withFloat_withFloat_(mNativeRenderNode_, shouldClip, x, y, radius);
}


#line 396
- (jboolean)setStaticMatrixWithRepackagedAndroidGraphicsMatrix:(RepackagedAndroidGraphicsMatrix *)matrix {
  return RepackagedAndroidViewRenderNode_nSetStaticMatrixWithLong_withLong_(mNativeRenderNode_, ((RepackagedAndroidGraphicsMatrix *) nil_chk(matrix))->native_instance_);
}


#line 408
- (jboolean)setAnimationMatrixWithRepackagedAndroidGraphicsMatrix:(RepackagedAndroidGraphicsMatrix *)matrix {
  return RepackagedAndroidViewRenderNode_nSetAnimationMatrixWithLong_withLong_(mNativeRenderNode_,
#line 410
  (matrix != nil) ? matrix->native_instance_ : 0);
}


#line 421
- (jboolean)setAlphaWithFloat:(jfloat)alpha {
  return RepackagedAndroidViewRenderNode_nSetAlphaWithLong_withFloat_(mNativeRenderNode_, alpha);
}


#line 432
- (jfloat)getAlpha {
  return RepackagedAndroidViewRenderNode_nGetAlphaWithLong_(mNativeRenderNode_);
}


#line 447
- (jboolean)setHasOverlappingRenderingWithBoolean:(jboolean)hasOverlappingRendering {
  return RepackagedAndroidViewRenderNode_nSetHasOverlappingRenderingWithLong_withBoolean_(mNativeRenderNode_, hasOverlappingRendering);
}


#line 458
- (jboolean)hasOverlappingRendering {
  
#line 460
  return RepackagedAndroidViewRenderNode_nHasOverlappingRenderingWithLong_(mNativeRenderNode_);
}


#line 463
- (jboolean)setElevationWithFloat:(jfloat)lift {
  return RepackagedAndroidViewRenderNode_nSetElevationWithLong_withFloat_(mNativeRenderNode_, lift);
}

- (jfloat)getElevation {
  return RepackagedAndroidViewRenderNode_nGetElevationWithLong_(mNativeRenderNode_);
}


#line 479
- (jboolean)setTranslationXWithFloat:(jfloat)translationX {
  return RepackagedAndroidViewRenderNode_nSetTranslationXWithLong_withFloat_(mNativeRenderNode_, translationX);
}


#line 488
- (jfloat)getTranslationX {
  return RepackagedAndroidViewRenderNode_nGetTranslationXWithLong_(mNativeRenderNode_);
}


#line 500
- (jboolean)setTranslationYWithFloat:(jfloat)translationY {
  return RepackagedAndroidViewRenderNode_nSetTranslationYWithLong_withFloat_(mNativeRenderNode_, translationY);
}


#line 509
- (jfloat)getTranslationY {
  return RepackagedAndroidViewRenderNode_nGetTranslationYWithLong_(mNativeRenderNode_);
}


#line 519
- (jboolean)setTranslationZWithFloat:(jfloat)translationZ {
  return RepackagedAndroidViewRenderNode_nSetTranslationZWithLong_withFloat_(mNativeRenderNode_, translationZ);
}


#line 528
- (jfloat)getTranslationZ {
  return RepackagedAndroidViewRenderNode_nGetTranslationZWithLong_(mNativeRenderNode_);
}


#line 540
- (jboolean)setRotationWithFloat:(jfloat)rotation {
  return RepackagedAndroidViewRenderNode_nSetRotationWithLong_withFloat_(mNativeRenderNode_, rotation);
}


#line 549
- (jfloat)getRotation {
  return RepackagedAndroidViewRenderNode_nGetRotationWithLong_(mNativeRenderNode_);
}


#line 561
- (jboolean)setRotationXWithFloat:(jfloat)rotationX {
  return RepackagedAndroidViewRenderNode_nSetRotationXWithLong_withFloat_(mNativeRenderNode_, rotationX);
}


#line 570
- (jfloat)getRotationX {
  return RepackagedAndroidViewRenderNode_nGetRotationXWithLong_(mNativeRenderNode_);
}


#line 582
- (jboolean)setRotationYWithFloat:(jfloat)rotationY {
  return RepackagedAndroidViewRenderNode_nSetRotationYWithLong_withFloat_(mNativeRenderNode_, rotationY);
}


#line 591
- (jfloat)getRotationY {
  return RepackagedAndroidViewRenderNode_nGetRotationYWithLong_(mNativeRenderNode_);
}


#line 603
- (jboolean)setScaleXWithFloat:(jfloat)scaleX {
  return RepackagedAndroidViewRenderNode_nSetScaleXWithLong_withFloat_(mNativeRenderNode_, scaleX);
}


#line 612
- (jfloat)getScaleX {
  return RepackagedAndroidViewRenderNode_nGetScaleXWithLong_(mNativeRenderNode_);
}


#line 624
- (jboolean)setScaleYWithFloat:(jfloat)scaleY {
  return RepackagedAndroidViewRenderNode_nSetScaleYWithLong_withFloat_(mNativeRenderNode_, scaleY);
}


#line 633
- (jfloat)getScaleY {
  return RepackagedAndroidViewRenderNode_nGetScaleYWithLong_(mNativeRenderNode_);
}


#line 645
- (jboolean)setPivotXWithFloat:(jfloat)pivotX {
  return RepackagedAndroidViewRenderNode_nSetPivotXWithLong_withFloat_(mNativeRenderNode_, pivotX);
}


#line 654
- (jfloat)getPivotX {
  return RepackagedAndroidViewRenderNode_nGetPivotXWithLong_(mNativeRenderNode_);
}


#line 666
- (jboolean)setPivotYWithFloat:(jfloat)pivotY {
  return RepackagedAndroidViewRenderNode_nSetPivotYWithLong_withFloat_(mNativeRenderNode_, pivotY);
}


#line 675
- (jfloat)getPivotY {
  return RepackagedAndroidViewRenderNode_nGetPivotYWithLong_(mNativeRenderNode_);
}

- (jboolean)isPivotExplicitlySet {
  return RepackagedAndroidViewRenderNode_nIsPivotExplicitlySetWithLong_(mNativeRenderNode_);
}


#line 693
- (jboolean)setCameraDistanceWithFloat:(jfloat)distance {
  return RepackagedAndroidViewRenderNode_nSetCameraDistanceWithLong_withFloat_(mNativeRenderNode_, distance);
}


#line 702
- (jfloat)getCameraDistance {
  return RepackagedAndroidViewRenderNode_nGetCameraDistanceWithLong_(mNativeRenderNode_);
}


#line 713
- (jboolean)setLeftWithInt:(jint)left {
  return RepackagedAndroidViewRenderNode_nSetLeftWithLong_withInt_(mNativeRenderNode_, left);
}


#line 724
- (jboolean)setTopWithInt:(jint)top {
  return RepackagedAndroidViewRenderNode_nSetTopWithLong_withInt_(mNativeRenderNode_, top);
}


#line 735
- (jboolean)setRightWithInt:(jint)right {
  return RepackagedAndroidViewRenderNode_nSetRightWithLong_withInt_(mNativeRenderNode_, right);
}


#line 746
- (jboolean)setBottomWithInt:(jint)bottom {
  return RepackagedAndroidViewRenderNode_nSetBottomWithLong_withInt_(mNativeRenderNode_, bottom);
}


#line 763
- (jboolean)setLeftTopRightBottomWithInt:(jint)left
                                 withInt:(jint)top
                                 withInt:(jint)right
                                 withInt:(jint)bottom {
  return RepackagedAndroidViewRenderNode_nSetLeftTopRightBottomWithLong_withInt_withInt_withInt_withInt_(mNativeRenderNode_, left, top, right, bottom);
}


#line 775
- (jboolean)offsetLeftAndRightWithInt:(jint)offset {
  return RepackagedAndroidViewRenderNode_nOffsetLeftAndRightWithLong_withInt_(mNativeRenderNode_, offset);
}


#line 787
- (jboolean)offsetTopAndBottomWithInt:(jint)offset {
  return RepackagedAndroidViewRenderNode_nOffsetTopAndBottomWithLong_withInt_(mNativeRenderNode_, offset);
}


#line 795
- (void)output {
  RepackagedAndroidViewRenderNode_nOutputWithLong_(mNativeRenderNode_);
}


#line 802
- (jint)getDebugSize {
  return RepackagedAndroidViewRenderNode_nGetDebugSizeWithLong_(mNativeRenderNode_);
}


#line 810
- (void)addAnimatorWithRepackagedAndroidViewRenderNodeAnimator:(RepackagedAndroidViewRenderNodeAnimator *)animator {
  if (mOwningView_ == nil || mOwningView_->mAttachInfo_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Cannot start this animator on a detached view!");
  }
  RepackagedAndroidViewRenderNode_nAddAnimatorWithLong_withLong_(mNativeRenderNode_, [((RepackagedAndroidViewRenderNodeAnimator *) nil_chk(animator)) getNativeAnimator]);
  [((RepackagedAndroidViewViewRootImpl *) nil_chk(((RepackagedAndroidViewView_AttachInfo *) nil_chk(((RepackagedAndroidViewView *) nil_chk(mOwningView_))->mAttachInfo_))->mViewRootImpl_)) registerAnimatingRenderNodeWithRepackagedAndroidViewRenderNode:self];
}

- (void)endAllAnimators {
  RepackagedAndroidViewRenderNode_nEndAllAnimatorsWithLong_(mNativeRenderNode_);
}


#line 826
+ (jlong)nCreateWithNSString:(NSString *)name {
  return RepackagedAndroidViewRenderNode_nCreateWithNSString_(name);
}


#line 829
+ (void)nDestroyRenderNodeWithLong:(jlong)renderNode {
  RepackagedAndroidViewRenderNode_nDestroyRenderNodeWithLong_(renderNode);
}


#line 832
+ (void)nSetDisplayListDataWithLong:(jlong)renderNode
                           withLong:(jlong)newData {
  RepackagedAndroidViewRenderNode_nSetDisplayListDataWithLong_withLong_(renderNode, newData);
}


#line 838
+ (void)nGetTransformMatrixWithLong:(jlong)renderNode
                           withLong:(jlong)nativeMatrix {
  RepackagedAndroidViewRenderNode_nGetTransformMatrixWithLong_withLong_(renderNode, nativeMatrix);
}


#line 841
+ (void)nGetInverseTransformMatrixWithLong:(jlong)renderNode
                                  withLong:(jlong)nativeMatrix {
  RepackagedAndroidViewRenderNode_nGetInverseTransformMatrixWithLong_withLong_(renderNode, nativeMatrix);
}


#line 844
+ (jboolean)nHasIdentityMatrixWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nHasIdentityMatrixWithLong_(renderNode);
}


#line 850
+ (jboolean)nOffsetTopAndBottomWithLong:(jlong)renderNode
                                withInt:(jint)offset {
  return RepackagedAndroidViewRenderNode_nOffsetTopAndBottomWithLong_withInt_(renderNode, offset);
}


#line 853
+ (jboolean)nOffsetLeftAndRightWithLong:(jlong)renderNode
                                withInt:(jint)offset {
  return RepackagedAndroidViewRenderNode_nOffsetLeftAndRightWithLong_withInt_(renderNode, offset);
}


#line 856
+ (jboolean)nSetLeftTopRightBottomWithLong:(jlong)renderNode
                                   withInt:(jint)left
                                   withInt:(jint)top
                                   withInt:(jint)right
                                   withInt:(jint)bottom {
  return RepackagedAndroidViewRenderNode_nSetLeftTopRightBottomWithLong_withInt_withInt_withInt_withInt_(renderNode, left, top, right, bottom);
}


#line 860
+ (jboolean)nSetBottomWithLong:(jlong)renderNode
                       withInt:(jint)bottom {
  return RepackagedAndroidViewRenderNode_nSetBottomWithLong_withInt_(renderNode, bottom);
}


#line 863
+ (jboolean)nSetRightWithLong:(jlong)renderNode
                      withInt:(jint)right {
  return RepackagedAndroidViewRenderNode_nSetRightWithLong_withInt_(renderNode, right);
}


#line 866
+ (jboolean)nSetTopWithLong:(jlong)renderNode
                    withInt:(jint)top {
  return RepackagedAndroidViewRenderNode_nSetTopWithLong_withInt_(renderNode, top);
}


#line 869
+ (jboolean)nSetLeftWithLong:(jlong)renderNode
                     withInt:(jint)left {
  return RepackagedAndroidViewRenderNode_nSetLeftWithLong_withInt_(renderNode, left);
}


#line 872
+ (jboolean)nSetCameraDistanceWithLong:(jlong)renderNode
                             withFloat:(jfloat)distance {
  return RepackagedAndroidViewRenderNode_nSetCameraDistanceWithLong_withFloat_(renderNode, distance);
}


#line 875
+ (jboolean)nSetPivotYWithLong:(jlong)renderNode
                     withFloat:(jfloat)pivotY {
  return RepackagedAndroidViewRenderNode_nSetPivotYWithLong_withFloat_(renderNode, pivotY);
}


#line 878
+ (jboolean)nSetPivotXWithLong:(jlong)renderNode
                     withFloat:(jfloat)pivotX {
  return RepackagedAndroidViewRenderNode_nSetPivotXWithLong_withFloat_(renderNode, pivotX);
}


#line 881
+ (jboolean)nSetLayerTypeWithLong:(jlong)renderNode
                          withInt:(jint)layerType {
  return RepackagedAndroidViewRenderNode_nSetLayerTypeWithLong_withInt_(renderNode, layerType);
}


#line 884
+ (jboolean)nSetLayerPaintWithLong:(jlong)renderNode
                          withLong:(jlong)paint {
  return RepackagedAndroidViewRenderNode_nSetLayerPaintWithLong_withLong_(renderNode, paint);
}


#line 887
+ (jboolean)nSetClipToBoundsWithLong:(jlong)renderNode
                         withBoolean:(jboolean)clipToBounds {
  return RepackagedAndroidViewRenderNode_nSetClipToBoundsWithLong_withBoolean_(renderNode, clipToBounds);
}


#line 890
+ (jboolean)nSetClipBoundsWithLong:(jlong)renderNode
                           withInt:(jint)left
                           withInt:(jint)top
                           withInt:(jint)right
                           withInt:(jint)bottom {
  return RepackagedAndroidViewRenderNode_nSetClipBoundsWithLong_withInt_withInt_withInt_withInt_(renderNode, left, top, right, bottom);
}


#line 894
+ (jboolean)nSetClipBoundsEmptyWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nSetClipBoundsEmptyWithLong_(renderNode);
}


#line 897
+ (jboolean)nSetProjectBackwardsWithLong:(jlong)renderNode
                             withBoolean:(jboolean)shouldProject {
  return RepackagedAndroidViewRenderNode_nSetProjectBackwardsWithLong_withBoolean_(renderNode, shouldProject);
}


#line 900
+ (jboolean)nSetProjectionReceiverWithLong:(jlong)renderNode
                               withBoolean:(jboolean)shouldRecieve {
  return RepackagedAndroidViewRenderNode_nSetProjectionReceiverWithLong_withBoolean_(renderNode, shouldRecieve);
}


#line 903
+ (jboolean)nSetOutlineRoundRectWithLong:(jlong)renderNode
                                 withInt:(jint)left
                                 withInt:(jint)top
                                 withInt:(jint)right
                                 withInt:(jint)bottom
                               withFloat:(jfloat)radius
                               withFloat:(jfloat)alpha {
  return RepackagedAndroidViewRenderNode_nSetOutlineRoundRectWithLong_withInt_withInt_withInt_withInt_withFloat_withFloat_(renderNode, left, top, right, bottom, radius, alpha);
}


#line 907
+ (jboolean)nSetOutlineConvexPathWithLong:(jlong)renderNode
                                 withLong:(jlong)nativePath
                                withFloat:(jfloat)alpha {
  return RepackagedAndroidViewRenderNode_nSetOutlineConvexPathWithLong_withLong_withFloat_(renderNode, nativePath, alpha);
}


#line 911
+ (jboolean)nSetOutlineEmptyWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nSetOutlineEmptyWithLong_(renderNode);
}


#line 914
+ (jboolean)nSetOutlineNoneWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nSetOutlineNoneWithLong_(renderNode);
}


#line 917
+ (jboolean)nHasShadowWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nHasShadowWithLong_(renderNode);
}


#line 920
+ (jboolean)nSetClipToOutlineWithLong:(jlong)renderNode
                          withBoolean:(jboolean)clipToOutline {
  return RepackagedAndroidViewRenderNode_nSetClipToOutlineWithLong_withBoolean_(renderNode, clipToOutline);
}


#line 923
+ (jboolean)nSetRevealClipWithLong:(jlong)renderNode
                       withBoolean:(jboolean)shouldClip
                         withFloat:(jfloat)x
                         withFloat:(jfloat)y
                         withFloat:(jfloat)radius {
  return RepackagedAndroidViewRenderNode_nSetRevealClipWithLong_withBoolean_withFloat_withFloat_withFloat_(renderNode, shouldClip, x, y, radius);
}


#line 927
+ (jboolean)nSetAlphaWithLong:(jlong)renderNode
                    withFloat:(jfloat)alpha {
  return RepackagedAndroidViewRenderNode_nSetAlphaWithLong_withFloat_(renderNode, alpha);
}


#line 930
+ (jboolean)nSetHasOverlappingRenderingWithLong:(jlong)renderNode
                                    withBoolean:(jboolean)hasOverlappingRendering {
  return RepackagedAndroidViewRenderNode_nSetHasOverlappingRenderingWithLong_withBoolean_(renderNode, hasOverlappingRendering);
}


#line 934
+ (jboolean)nSetElevationWithLong:(jlong)renderNode
                        withFloat:(jfloat)lift {
  return RepackagedAndroidViewRenderNode_nSetElevationWithLong_withFloat_(renderNode, lift);
}


#line 937
+ (jboolean)nSetTranslationXWithLong:(jlong)renderNode
                           withFloat:(jfloat)translationX {
  return RepackagedAndroidViewRenderNode_nSetTranslationXWithLong_withFloat_(renderNode, translationX);
}


#line 940
+ (jboolean)nSetTranslationYWithLong:(jlong)renderNode
                           withFloat:(jfloat)translationY {
  return RepackagedAndroidViewRenderNode_nSetTranslationYWithLong_withFloat_(renderNode, translationY);
}


#line 943
+ (jboolean)nSetTranslationZWithLong:(jlong)renderNode
                           withFloat:(jfloat)translationZ {
  return RepackagedAndroidViewRenderNode_nSetTranslationZWithLong_withFloat_(renderNode, translationZ);
}


#line 946
+ (jboolean)nSetRotationWithLong:(jlong)renderNode
                       withFloat:(jfloat)rotation {
  return RepackagedAndroidViewRenderNode_nSetRotationWithLong_withFloat_(renderNode, rotation);
}


#line 949
+ (jboolean)nSetRotationXWithLong:(jlong)renderNode
                        withFloat:(jfloat)rotationX {
  return RepackagedAndroidViewRenderNode_nSetRotationXWithLong_withFloat_(renderNode, rotationX);
}


#line 952
+ (jboolean)nSetRotationYWithLong:(jlong)renderNode
                        withFloat:(jfloat)rotationY {
  return RepackagedAndroidViewRenderNode_nSetRotationYWithLong_withFloat_(renderNode, rotationY);
}


#line 955
+ (jboolean)nSetScaleXWithLong:(jlong)renderNode
                     withFloat:(jfloat)scaleX {
  return RepackagedAndroidViewRenderNode_nSetScaleXWithLong_withFloat_(renderNode, scaleX);
}


#line 958
+ (jboolean)nSetScaleYWithLong:(jlong)renderNode
                     withFloat:(jfloat)scaleY {
  return RepackagedAndroidViewRenderNode_nSetScaleYWithLong_withFloat_(renderNode, scaleY);
}


#line 961
+ (jboolean)nSetStaticMatrixWithLong:(jlong)renderNode
                            withLong:(jlong)nativeMatrix {
  return RepackagedAndroidViewRenderNode_nSetStaticMatrixWithLong_withLong_(renderNode, nativeMatrix);
}


#line 964
+ (jboolean)nSetAnimationMatrixWithLong:(jlong)renderNode
                               withLong:(jlong)animationMatrix {
  return RepackagedAndroidViewRenderNode_nSetAnimationMatrixWithLong_withLong_(renderNode, animationMatrix);
}


#line 968
+ (jboolean)nHasOverlappingRenderingWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nHasOverlappingRenderingWithLong_(renderNode);
}


#line 971
+ (jboolean)nGetClipToOutlineWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetClipToOutlineWithLong_(renderNode);
}


#line 974
+ (jfloat)nGetAlphaWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetAlphaWithLong_(renderNode);
}


#line 977
+ (jfloat)nGetCameraDistanceWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetCameraDistanceWithLong_(renderNode);
}


#line 980
+ (jfloat)nGetScaleXWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetScaleXWithLong_(renderNode);
}


#line 983
+ (jfloat)nGetScaleYWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetScaleYWithLong_(renderNode);
}


#line 986
+ (jfloat)nGetElevationWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetElevationWithLong_(renderNode);
}


#line 989
+ (jfloat)nGetTranslationXWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetTranslationXWithLong_(renderNode);
}


#line 992
+ (jfloat)nGetTranslationYWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetTranslationYWithLong_(renderNode);
}


#line 995
+ (jfloat)nGetTranslationZWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetTranslationZWithLong_(renderNode);
}


#line 998
+ (jfloat)nGetRotationWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetRotationWithLong_(renderNode);
}


#line 1001
+ (jfloat)nGetRotationXWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetRotationXWithLong_(renderNode);
}


#line 1004
+ (jfloat)nGetRotationYWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetRotationYWithLong_(renderNode);
}


#line 1007
+ (jboolean)nIsPivotExplicitlySetWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nIsPivotExplicitlySetWithLong_(renderNode);
}


#line 1010
+ (jfloat)nGetPivotXWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetPivotXWithLong_(renderNode);
}


#line 1013
+ (jfloat)nGetPivotYWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetPivotYWithLong_(renderNode);
}


#line 1016
+ (void)nOutputWithLong:(jlong)renderNode {
  RepackagedAndroidViewRenderNode_nOutputWithLong_(renderNode);
}


#line 1019
+ (jint)nGetDebugSizeWithLong:(jlong)renderNode {
  return RepackagedAndroidViewRenderNode_nGetDebugSizeWithLong_(renderNode);
}


#line 1027
+ (void)nAddAnimatorWithLong:(jlong)renderNode
                    withLong:(jlong)animatorPtr {
  RepackagedAndroidViewRenderNode_nAddAnimatorWithLong_withLong_(renderNode, animatorPtr);
}


#line 1030
+ (void)nEndAllAnimatorsWithLong:(jlong)renderNode {
  RepackagedAndroidViewRenderNode_nEndAllAnimatorsWithLong_(renderNode);
}


#line 1039
- (void)dealloc {
  @try {
    RepackagedAndroidViewRenderNode_nDestroyRenderNodeWithLong_(mNativeRenderNode_);
  }
  @finally {
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withRepackagedAndroidViewView:", "RenderNode", NULL, 0x2, NULL, NULL },
    { "initWithLong:", "RenderNode", NULL, 0x2, NULL, NULL },
    { "createWithNSString:withRepackagedAndroidViewView:", "create", "Lrepackaged.android.view.RenderNode;", 0x9, NULL, NULL },
    { "adoptWithLong:", "adopt", "Lrepackaged.android.view.RenderNode;", 0x9, NULL, NULL },
    { "startWithInt:withInt:", "start", "Lrepackaged.android.view.DisplayListCanvas;", 0x1, NULL, NULL },
    { "endWithRepackagedAndroidViewDisplayListCanvas:", "end", "V", 0x1, NULL, NULL },
    { "destroyDisplayListData", NULL, "V", 0x1, NULL, NULL },
    { "isValid", NULL, "Z", 0x1, NULL, NULL },
    { "getNativeDisplayList", NULL, "J", 0x0, NULL, NULL },
    { "hasIdentityMatrix", NULL, "Z", 0x1, NULL, NULL },
    { "getMatrixWithRepackagedAndroidGraphicsMatrix:", "getMatrix", "V", 0x1, NULL, NULL },
    { "getInverseMatrixWithRepackagedAndroidGraphicsMatrix:", "getInverseMatrix", "V", 0x1, NULL, NULL },
    { "setLayerTypeWithInt:", "setLayerType", "Z", 0x1, NULL, NULL },
    { "setLayerPaintWithRepackagedAndroidGraphicsPaint:", "setLayerPaint", "Z", 0x1, NULL, NULL },
    { "setClipBoundsWithRepackagedAndroidGraphicsRect:", "setClipBounds", "Z", 0x1, NULL, NULL },
    { "setClipToBoundsWithBoolean:", "setClipToBounds", "Z", 0x1, NULL, NULL },
    { "setProjectBackwardsWithBoolean:", "setProjectBackwards", "Z", 0x1, NULL, NULL },
    { "setProjectionReceiverWithBoolean:", "setProjectionReceiver", "Z", 0x1, NULL, NULL },
    { "setOutlineWithRepackagedAndroidGraphicsOutline:", "setOutline", "Z", 0x1, NULL, NULL },
    { "hasShadow", NULL, "Z", 0x1, NULL, NULL },
    { "setClipToOutlineWithBoolean:", "setClipToOutline", "Z", 0x1, NULL, NULL },
    { "getClipToOutline", NULL, "Z", 0x1, NULL, NULL },
    { "setRevealClipWithBoolean:withFloat:withFloat:withFloat:", "setRevealClip", "Z", 0x1, NULL, NULL },
    { "setStaticMatrixWithRepackagedAndroidGraphicsMatrix:", "setStaticMatrix", "Z", 0x1, NULL, NULL },
    { "setAnimationMatrixWithRepackagedAndroidGraphicsMatrix:", "setAnimationMatrix", "Z", 0x1, NULL, NULL },
    { "setAlphaWithFloat:", "setAlpha", "Z", 0x1, NULL, NULL },
    { "getAlpha", NULL, "F", 0x1, NULL, NULL },
    { "setHasOverlappingRenderingWithBoolean:", "setHasOverlappingRendering", "Z", 0x1, NULL, NULL },
    { "hasOverlappingRendering", NULL, "Z", 0x1, NULL, NULL },
    { "setElevationWithFloat:", "setElevation", "Z", 0x1, NULL, NULL },
    { "getElevation", NULL, "F", 0x1, NULL, NULL },
    { "setTranslationXWithFloat:", "setTranslationX", "Z", 0x1, NULL, NULL },
    { "getTranslationX", NULL, "F", 0x1, NULL, NULL },
    { "setTranslationYWithFloat:", "setTranslationY", "Z", 0x1, NULL, NULL },
    { "getTranslationY", NULL, "F", 0x1, NULL, NULL },
    { "setTranslationZWithFloat:", "setTranslationZ", "Z", 0x1, NULL, NULL },
    { "getTranslationZ", NULL, "F", 0x1, NULL, NULL },
    { "setRotationWithFloat:", "setRotation", "Z", 0x1, NULL, NULL },
    { "getRotation", NULL, "F", 0x1, NULL, NULL },
    { "setRotationXWithFloat:", "setRotationX", "Z", 0x1, NULL, NULL },
    { "getRotationX", NULL, "F", 0x1, NULL, NULL },
    { "setRotationYWithFloat:", "setRotationY", "Z", 0x1, NULL, NULL },
    { "getRotationY", NULL, "F", 0x1, NULL, NULL },
    { "setScaleXWithFloat:", "setScaleX", "Z", 0x1, NULL, NULL },
    { "getScaleX", NULL, "F", 0x1, NULL, NULL },
    { "setScaleYWithFloat:", "setScaleY", "Z", 0x1, NULL, NULL },
    { "getScaleY", NULL, "F", 0x1, NULL, NULL },
    { "setPivotXWithFloat:", "setPivotX", "Z", 0x1, NULL, NULL },
    { "getPivotX", NULL, "F", 0x1, NULL, NULL },
    { "setPivotYWithFloat:", "setPivotY", "Z", 0x1, NULL, NULL },
    { "getPivotY", NULL, "F", 0x1, NULL, NULL },
    { "isPivotExplicitlySet", NULL, "Z", 0x1, NULL, NULL },
    { "setCameraDistanceWithFloat:", "setCameraDistance", "Z", 0x1, NULL, NULL },
    { "getCameraDistance", NULL, "F", 0x1, NULL, NULL },
    { "setLeftWithInt:", "setLeft", "Z", 0x1, NULL, NULL },
    { "setTopWithInt:", "setTop", "Z", 0x1, NULL, NULL },
    { "setRightWithInt:", "setRight", "Z", 0x1, NULL, NULL },
    { "setBottomWithInt:", "setBottom", "Z", 0x1, NULL, NULL },
    { "setLeftTopRightBottomWithInt:withInt:withInt:withInt:", "setLeftTopRightBottom", "Z", 0x1, NULL, NULL },
    { "offsetLeftAndRightWithInt:", "offsetLeftAndRight", "Z", 0x1, NULL, NULL },
    { "offsetTopAndBottomWithInt:", "offsetTopAndBottom", "Z", 0x1, NULL, NULL },
    { "output", NULL, "V", 0x1, NULL, NULL },
    { "getDebugSize", NULL, "I", 0x1, NULL, NULL },
    { "addAnimatorWithRepackagedAndroidViewRenderNodeAnimator:", "addAnimator", "V", 0x1, NULL, NULL },
    { "endAllAnimators", NULL, "V", 0x1, NULL, NULL },
    { "nCreateWithNSString:", "nCreate", "J", 0xa, NULL, NULL },
    { "nDestroyRenderNodeWithLong:", "nDestroyRenderNode", "V", 0xa, NULL, NULL },
    { "nSetDisplayListDataWithLong:withLong:", "nSetDisplayListData", "V", 0xa, NULL, NULL },
    { "nGetTransformMatrixWithLong:withLong:", "nGetTransformMatrix", "V", 0xa, NULL, NULL },
    { "nGetInverseTransformMatrixWithLong:withLong:", "nGetInverseTransformMatrix", "V", 0xa, NULL, NULL },
    { "nHasIdentityMatrixWithLong:", "nHasIdentityMatrix", "Z", 0xa, NULL, NULL },
    { "nOffsetTopAndBottomWithLong:withInt:", "nOffsetTopAndBottom", "Z", 0xa, NULL, NULL },
    { "nOffsetLeftAndRightWithLong:withInt:", "nOffsetLeftAndRight", "Z", 0xa, NULL, NULL },
    { "nSetLeftTopRightBottomWithLong:withInt:withInt:withInt:withInt:", "nSetLeftTopRightBottom", "Z", 0xa, NULL, NULL },
    { "nSetBottomWithLong:withInt:", "nSetBottom", "Z", 0xa, NULL, NULL },
    { "nSetRightWithLong:withInt:", "nSetRight", "Z", 0xa, NULL, NULL },
    { "nSetTopWithLong:withInt:", "nSetTop", "Z", 0xa, NULL, NULL },
    { "nSetLeftWithLong:withInt:", "nSetLeft", "Z", 0xa, NULL, NULL },
    { "nSetCameraDistanceWithLong:withFloat:", "nSetCameraDistance", "Z", 0xa, NULL, NULL },
    { "nSetPivotYWithLong:withFloat:", "nSetPivotY", "Z", 0xa, NULL, NULL },
    { "nSetPivotXWithLong:withFloat:", "nSetPivotX", "Z", 0xa, NULL, NULL },
    { "nSetLayerTypeWithLong:withInt:", "nSetLayerType", "Z", 0xa, NULL, NULL },
    { "nSetLayerPaintWithLong:withLong:", "nSetLayerPaint", "Z", 0xa, NULL, NULL },
    { "nSetClipToBoundsWithLong:withBoolean:", "nSetClipToBounds", "Z", 0xa, NULL, NULL },
    { "nSetClipBoundsWithLong:withInt:withInt:withInt:withInt:", "nSetClipBounds", "Z", 0xa, NULL, NULL },
    { "nSetClipBoundsEmptyWithLong:", "nSetClipBoundsEmpty", "Z", 0xa, NULL, NULL },
    { "nSetProjectBackwardsWithLong:withBoolean:", "nSetProjectBackwards", "Z", 0xa, NULL, NULL },
    { "nSetProjectionReceiverWithLong:withBoolean:", "nSetProjectionReceiver", "Z", 0xa, NULL, NULL },
    { "nSetOutlineRoundRectWithLong:withInt:withInt:withInt:withInt:withFloat:withFloat:", "nSetOutlineRoundRect", "Z", 0xa, NULL, NULL },
    { "nSetOutlineConvexPathWithLong:withLong:withFloat:", "nSetOutlineConvexPath", "Z", 0xa, NULL, NULL },
    { "nSetOutlineEmptyWithLong:", "nSetOutlineEmpty", "Z", 0xa, NULL, NULL },
    { "nSetOutlineNoneWithLong:", "nSetOutlineNone", "Z", 0xa, NULL, NULL },
    { "nHasShadowWithLong:", "nHasShadow", "Z", 0xa, NULL, NULL },
    { "nSetClipToOutlineWithLong:withBoolean:", "nSetClipToOutline", "Z", 0xa, NULL, NULL },
    { "nSetRevealClipWithLong:withBoolean:withFloat:withFloat:withFloat:", "nSetRevealClip", "Z", 0xa, NULL, NULL },
    { "nSetAlphaWithLong:withFloat:", "nSetAlpha", "Z", 0xa, NULL, NULL },
    { "nSetHasOverlappingRenderingWithLong:withBoolean:", "nSetHasOverlappingRendering", "Z", 0xa, NULL, NULL },
    { "nSetElevationWithLong:withFloat:", "nSetElevation", "Z", 0xa, NULL, NULL },
    { "nSetTranslationXWithLong:withFloat:", "nSetTranslationX", "Z", 0xa, NULL, NULL },
    { "nSetTranslationYWithLong:withFloat:", "nSetTranslationY", "Z", 0xa, NULL, NULL },
    { "nSetTranslationZWithLong:withFloat:", "nSetTranslationZ", "Z", 0xa, NULL, NULL },
    { "nSetRotationWithLong:withFloat:", "nSetRotation", "Z", 0xa, NULL, NULL },
    { "nSetRotationXWithLong:withFloat:", "nSetRotationX", "Z", 0xa, NULL, NULL },
    { "nSetRotationYWithLong:withFloat:", "nSetRotationY", "Z", 0xa, NULL, NULL },
    { "nSetScaleXWithLong:withFloat:", "nSetScaleX", "Z", 0xa, NULL, NULL },
    { "nSetScaleYWithLong:withFloat:", "nSetScaleY", "Z", 0xa, NULL, NULL },
    { "nSetStaticMatrixWithLong:withLong:", "nSetStaticMatrix", "Z", 0xa, NULL, NULL },
    { "nSetAnimationMatrixWithLong:withLong:", "nSetAnimationMatrix", "Z", 0xa, NULL, NULL },
    { "nHasOverlappingRenderingWithLong:", "nHasOverlappingRendering", "Z", 0xa, NULL, NULL },
    { "nGetClipToOutlineWithLong:", "nGetClipToOutline", "Z", 0xa, NULL, NULL },
    { "nGetAlphaWithLong:", "nGetAlpha", "F", 0xa, NULL, NULL },
    { "nGetCameraDistanceWithLong:", "nGetCameraDistance", "F", 0xa, NULL, NULL },
    { "nGetScaleXWithLong:", "nGetScaleX", "F", 0xa, NULL, NULL },
    { "nGetScaleYWithLong:", "nGetScaleY", "F", 0xa, NULL, NULL },
    { "nGetElevationWithLong:", "nGetElevation", "F", 0xa, NULL, NULL },
    { "nGetTranslationXWithLong:", "nGetTranslationX", "F", 0xa, NULL, NULL },
    { "nGetTranslationYWithLong:", "nGetTranslationY", "F", 0xa, NULL, NULL },
    { "nGetTranslationZWithLong:", "nGetTranslationZ", "F", 0xa, NULL, NULL },
    { "nGetRotationWithLong:", "nGetRotation", "F", 0xa, NULL, NULL },
    { "nGetRotationXWithLong:", "nGetRotationX", "F", 0xa, NULL, NULL },
    { "nGetRotationYWithLong:", "nGetRotationY", "F", 0xa, NULL, NULL },
    { "nIsPivotExplicitlySetWithLong:", "nIsPivotExplicitlySet", "Z", 0xa, NULL, NULL },
    { "nGetPivotXWithLong:", "nGetPivotX", "F", 0xa, NULL, NULL },
    { "nGetPivotYWithLong:", "nGetPivotY", "F", 0xa, NULL, NULL },
    { "nOutputWithLong:", "nOutput", "V", 0xa, NULL, NULL },
    { "nGetDebugSizeWithLong:", "nGetDebugSize", "I", 0xa, NULL, NULL },
    { "nAddAnimatorWithLong:withLong:", "nAddAnimator", "V", 0xa, NULL, NULL },
    { "nEndAllAnimatorsWithLong:", "nEndAllAnimators", "V", 0xa, NULL, NULL },
    { "dealloc", "finalize", "V", 0x4, "Ljava.lang.Throwable;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FLAG_CLIP_CHILDREN_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewRenderNode_FLAG_CLIP_CHILDREN },
    { "STATUS_DONE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewRenderNode_STATUS_DONE },
    { "STATUS_DRAW_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewRenderNode_STATUS_DRAW },
    { "STATUS_INVOKE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewRenderNode_STATUS_INVOKE },
    { "STATUS_DREW_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewRenderNode_STATUS_DREW },
    { "mValid_", NULL, 0x2, "Z", NULL, NULL,  },
    { "mNativeRenderNode_", NULL, 0x10, "J", NULL, NULL,  },
    { "mOwningView_", NULL, 0x12, "Lrepackaged.android.view.View;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidViewRenderNode = { 2, "RenderNode", "repackaged.android.view", NULL, 0x1, 129, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidViewRenderNode;
}

@end


#line 174
void RepackagedAndroidViewRenderNode_initWithNSString_withRepackagedAndroidViewView_(RepackagedAndroidViewRenderNode *self, NSString *name, RepackagedAndroidViewView *owningView) {
  (void) NSObject_init(self);
  
#line 175
  self->mNativeRenderNode_ = RepackagedAndroidViewRenderNode_nCreateWithNSString_(name);
  self->mOwningView_ = owningView;
}


#line 174
RepackagedAndroidViewRenderNode *new_RepackagedAndroidViewRenderNode_initWithNSString_withRepackagedAndroidViewView_(NSString *name, RepackagedAndroidViewView *owningView) {
  RepackagedAndroidViewRenderNode *self = [RepackagedAndroidViewRenderNode alloc];
  RepackagedAndroidViewRenderNode_initWithNSString_withRepackagedAndroidViewView_(self, name, owningView);
  return self;
}


#line 182
void RepackagedAndroidViewRenderNode_initWithLong_(RepackagedAndroidViewRenderNode *self, jlong nativePtr) {
  (void) NSObject_init(self);
  
#line 183
  self->mNativeRenderNode_ = nativePtr;
  self->mOwningView_ = nil;
}


#line 182
RepackagedAndroidViewRenderNode *new_RepackagedAndroidViewRenderNode_initWithLong_(jlong nativePtr) {
  RepackagedAndroidViewRenderNode *self = [RepackagedAndroidViewRenderNode alloc];
  RepackagedAndroidViewRenderNode_initWithLong_(self, nativePtr);
  return self;
}


#line 195
RepackagedAndroidViewRenderNode *RepackagedAndroidViewRenderNode_createWithNSString_withRepackagedAndroidViewView_(NSString *name, RepackagedAndroidViewView *owningView) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 196
  return new_RepackagedAndroidViewRenderNode_initWithNSString_withRepackagedAndroidViewView_(name, owningView);
}


#line 205
RepackagedAndroidViewRenderNode *RepackagedAndroidViewRenderNode_adoptWithLong_(jlong nativePtr) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 206
  return new_RepackagedAndroidViewRenderNode_initWithLong_(nativePtr);
}


#line 826
jlong RepackagedAndroidViewRenderNode_nCreateWithNSString_(NSString *name) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 827
  return 1;
}


#line 829
void RepackagedAndroidViewRenderNode_nDestroyRenderNodeWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
}


#line 832
void RepackagedAndroidViewRenderNode_nSetDisplayListDataWithLong_withLong_(jlong renderNode, jlong newData) {
  RepackagedAndroidViewRenderNode_initialize();
}


#line 838
void RepackagedAndroidViewRenderNode_nGetTransformMatrixWithLong_withLong_(jlong renderNode, jlong nativeMatrix) {
  RepackagedAndroidViewRenderNode_initialize();
}


#line 841
void RepackagedAndroidViewRenderNode_nGetInverseTransformMatrixWithLong_withLong_(jlong renderNode, jlong nativeMatrix) {
  RepackagedAndroidViewRenderNode_initialize();
}


#line 844
jboolean RepackagedAndroidViewRenderNode_nHasIdentityMatrixWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 845
  return NO;
}


#line 850
jboolean RepackagedAndroidViewRenderNode_nOffsetTopAndBottomWithLong_withInt_(jlong renderNode, jint offset) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 851
  return NO;
}


#line 853
jboolean RepackagedAndroidViewRenderNode_nOffsetLeftAndRightWithLong_withInt_(jlong renderNode, jint offset) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 854
  return NO;
}


#line 856
jboolean RepackagedAndroidViewRenderNode_nSetLeftTopRightBottomWithLong_withInt_withInt_withInt_withInt_(jlong renderNode, jint left, jint top, jint right, jint bottom) {
  RepackagedAndroidViewRenderNode_initialize();
  return NO;
}


#line 860
jboolean RepackagedAndroidViewRenderNode_nSetBottomWithLong_withInt_(jlong renderNode, jint bottom) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 861
  return NO;
}


#line 863
jboolean RepackagedAndroidViewRenderNode_nSetRightWithLong_withInt_(jlong renderNode, jint right) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 864
  return NO;
}


#line 866
jboolean RepackagedAndroidViewRenderNode_nSetTopWithLong_withInt_(jlong renderNode, jint top) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 867
  return NO;
}


#line 869
jboolean RepackagedAndroidViewRenderNode_nSetLeftWithLong_withInt_(jlong renderNode, jint left) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 870
  return NO;
}


#line 872
jboolean RepackagedAndroidViewRenderNode_nSetCameraDistanceWithLong_withFloat_(jlong renderNode, jfloat distance) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 873
  return NO;
}


#line 875
jboolean RepackagedAndroidViewRenderNode_nSetPivotYWithLong_withFloat_(jlong renderNode, jfloat pivotY) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 876
  return NO;
}


#line 878
jboolean RepackagedAndroidViewRenderNode_nSetPivotXWithLong_withFloat_(jlong renderNode, jfloat pivotX) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 879
  return NO;
}


#line 881
jboolean RepackagedAndroidViewRenderNode_nSetLayerTypeWithLong_withInt_(jlong renderNode, jint layerType) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 882
  return NO;
}


#line 884
jboolean RepackagedAndroidViewRenderNode_nSetLayerPaintWithLong_withLong_(jlong renderNode, jlong paint) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 885
  return NO;
}


#line 887
jboolean RepackagedAndroidViewRenderNode_nSetClipToBoundsWithLong_withBoolean_(jlong renderNode, jboolean clipToBounds) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 888
  return NO;
}


#line 890
jboolean RepackagedAndroidViewRenderNode_nSetClipBoundsWithLong_withInt_withInt_withInt_withInt_(jlong renderNode, jint left, jint top, jint right, jint bottom) {
  RepackagedAndroidViewRenderNode_initialize();
  return NO;
}


#line 894
jboolean RepackagedAndroidViewRenderNode_nSetClipBoundsEmptyWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 895
  return NO;
}


#line 897
jboolean RepackagedAndroidViewRenderNode_nSetProjectBackwardsWithLong_withBoolean_(jlong renderNode, jboolean shouldProject) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 898
  return NO;
}


#line 900
jboolean RepackagedAndroidViewRenderNode_nSetProjectionReceiverWithLong_withBoolean_(jlong renderNode, jboolean shouldRecieve) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 901
  return NO;
}


#line 903
jboolean RepackagedAndroidViewRenderNode_nSetOutlineRoundRectWithLong_withInt_withInt_withInt_withInt_withFloat_withFloat_(jlong renderNode, jint left, jint top, jint right, jint bottom, jfloat radius, jfloat alpha) {
  RepackagedAndroidViewRenderNode_initialize();
  return NO;
}


#line 907
jboolean RepackagedAndroidViewRenderNode_nSetOutlineConvexPathWithLong_withLong_withFloat_(jlong renderNode, jlong nativePath, jfloat alpha) {
  RepackagedAndroidViewRenderNode_initialize();
  return NO;
}


#line 911
jboolean RepackagedAndroidViewRenderNode_nSetOutlineEmptyWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 912
  return NO;
}


#line 914
jboolean RepackagedAndroidViewRenderNode_nSetOutlineNoneWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 915
  return NO;
}


#line 917
jboolean RepackagedAndroidViewRenderNode_nHasShadowWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 918
  return NO;
}


#line 920
jboolean RepackagedAndroidViewRenderNode_nSetClipToOutlineWithLong_withBoolean_(jlong renderNode, jboolean clipToOutline) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 921
  return NO;
}


#line 923
jboolean RepackagedAndroidViewRenderNode_nSetRevealClipWithLong_withBoolean_withFloat_withFloat_withFloat_(jlong renderNode, jboolean shouldClip, jfloat x, jfloat y, jfloat radius) {
  RepackagedAndroidViewRenderNode_initialize();
  return NO;
}


#line 927
jboolean RepackagedAndroidViewRenderNode_nSetAlphaWithLong_withFloat_(jlong renderNode, jfloat alpha) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 928
  return NO;
}


#line 930
jboolean RepackagedAndroidViewRenderNode_nSetHasOverlappingRenderingWithLong_withBoolean_(jlong renderNode, jboolean hasOverlappingRendering) {
  RepackagedAndroidViewRenderNode_initialize();
  return NO;
}


#line 934
jboolean RepackagedAndroidViewRenderNode_nSetElevationWithLong_withFloat_(jlong renderNode, jfloat lift) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 935
  return NO;
}


#line 937
jboolean RepackagedAndroidViewRenderNode_nSetTranslationXWithLong_withFloat_(jlong renderNode, jfloat translationX) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 938
  return NO;
}


#line 940
jboolean RepackagedAndroidViewRenderNode_nSetTranslationYWithLong_withFloat_(jlong renderNode, jfloat translationY) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 941
  return NO;
}


#line 943
jboolean RepackagedAndroidViewRenderNode_nSetTranslationZWithLong_withFloat_(jlong renderNode, jfloat translationZ) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 944
  return NO;
}


#line 946
jboolean RepackagedAndroidViewRenderNode_nSetRotationWithLong_withFloat_(jlong renderNode, jfloat rotation) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 947
  return NO;
}


#line 949
jboolean RepackagedAndroidViewRenderNode_nSetRotationXWithLong_withFloat_(jlong renderNode, jfloat rotationX) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 950
  return NO;
}


#line 952
jboolean RepackagedAndroidViewRenderNode_nSetRotationYWithLong_withFloat_(jlong renderNode, jfloat rotationY) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 953
  return NO;
}


#line 955
jboolean RepackagedAndroidViewRenderNode_nSetScaleXWithLong_withFloat_(jlong renderNode, jfloat scaleX) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 956
  return NO;
}


#line 958
jboolean RepackagedAndroidViewRenderNode_nSetScaleYWithLong_withFloat_(jlong renderNode, jfloat scaleY) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 959
  return NO;
}


#line 961
jboolean RepackagedAndroidViewRenderNode_nSetStaticMatrixWithLong_withLong_(jlong renderNode, jlong nativeMatrix) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 962
  return NO;
}


#line 964
jboolean RepackagedAndroidViewRenderNode_nSetAnimationMatrixWithLong_withLong_(jlong renderNode, jlong animationMatrix) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 965
  return NO;
}


#line 968
jboolean RepackagedAndroidViewRenderNode_nHasOverlappingRenderingWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 969
  return NO;
}


#line 971
jboolean RepackagedAndroidViewRenderNode_nGetClipToOutlineWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 972
  return NO;
}


#line 974
jfloat RepackagedAndroidViewRenderNode_nGetAlphaWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 975
  return 0;
}


#line 977
jfloat RepackagedAndroidViewRenderNode_nGetCameraDistanceWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 978
  return 0;
}


#line 980
jfloat RepackagedAndroidViewRenderNode_nGetScaleXWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 981
  return 0;
}


#line 983
jfloat RepackagedAndroidViewRenderNode_nGetScaleYWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 984
  return 0;
}


#line 986
jfloat RepackagedAndroidViewRenderNode_nGetElevationWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 987
  return 0;
}


#line 989
jfloat RepackagedAndroidViewRenderNode_nGetTranslationXWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 990
  return 0;
}


#line 992
jfloat RepackagedAndroidViewRenderNode_nGetTranslationYWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 993
  return 0;
}


#line 995
jfloat RepackagedAndroidViewRenderNode_nGetTranslationZWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 996
  return 0;
}


#line 998
jfloat RepackagedAndroidViewRenderNode_nGetRotationWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 999
  return 0;
}


#line 1001
jfloat RepackagedAndroidViewRenderNode_nGetRotationXWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 1002
  return 0;
}


#line 1004
jfloat RepackagedAndroidViewRenderNode_nGetRotationYWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 1005
  return 0;
}


#line 1007
jboolean RepackagedAndroidViewRenderNode_nIsPivotExplicitlySetWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 1008
  return NO;
}


#line 1010
jfloat RepackagedAndroidViewRenderNode_nGetPivotXWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 1011
  return 0;
}


#line 1013
jfloat RepackagedAndroidViewRenderNode_nGetPivotYWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 1014
  return 0;
}


#line 1016
void RepackagedAndroidViewRenderNode_nOutputWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
}


#line 1019
jint RepackagedAndroidViewRenderNode_nGetDebugSizeWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
  
#line 1020
  return 0;
}


#line 1027
void RepackagedAndroidViewRenderNode_nAddAnimatorWithLong_withLong_(jlong renderNode, jlong animatorPtr) {
  RepackagedAndroidViewRenderNode_initialize();
}


#line 1030
void RepackagedAndroidViewRenderNode_nEndAllAnimatorsWithLong_(jlong renderNode) {
  RepackagedAndroidViewRenderNode_initialize();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewRenderNode)
