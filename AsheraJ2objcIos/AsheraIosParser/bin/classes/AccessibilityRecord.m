//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/view/accessibility/AccessibilityRecord.java
//


#include "AccessibilityNodeInfo.h"
#include "AccessibilityNodeProvider.h"
#include "AccessibilityRecord.h"
#include "J2ObjC_source.h"
#include "Parcelable.h"
#include "View.h"
#include "java/lang/CharSequence.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/view/accessibility/AccessibilityRecord.java"

#define RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED -1
#define RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_CHECKED 1
#define RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_ENABLED 2
#define RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_PASSWORD 4
#define RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_FULL_SCREEN 128
#define RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_SCROLLABLE 256
#define RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_IMPORTANT_FOR_ACCESSIBILITY 512
#define RepackagedAndroidViewAccessibilityAccessibilityRecord_GET_SOURCE_PREFETCH_FLAGS 7
#define RepackagedAndroidViewAccessibilityAccessibilityRecord_MAX_POOL_SIZE 10

@interface RepackagedAndroidViewAccessibilityAccessibilityRecord () {
 @public
  RepackagedAndroidViewAccessibilityAccessibilityRecord *mNext_;
  jboolean mIsInPool_;
}

/**
 @brief Gets the value of a boolean property.
 @param property The property.
 @return The value.
 */
- (jboolean)getBooleanPropertyWithInt:(jint)property;

/**
 @brief Sets a boolean property.
 @param property The property.
 @param value The value.
 */
- (void)setBooleanPropertyWithInt:(jint)property
                      withBoolean:(jboolean)value;

- (void)clearSourceNode;

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, mNext_, RepackagedAndroidViewAccessibilityAccessibilityRecord *)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, UNDEFINED, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, PROPERTY_CHECKED, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, PROPERTY_ENABLED, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, PROPERTY_PASSWORD, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, PROPERTY_FULL_SCREEN, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, PROPERTY_SCROLLABLE, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, PROPERTY_IMPORTANT_FOR_ACCESSIBILITY, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, GET_SOURCE_PREFETCH_FLAGS, jint)

J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, MAX_POOL_SIZE, jint)

static id RepackagedAndroidViewAccessibilityAccessibilityRecord_sPoolLock_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, sPoolLock_, id)

static RepackagedAndroidViewAccessibilityAccessibilityRecord *RepackagedAndroidViewAccessibilityAccessibilityRecord_sPool_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, sPool_, RepackagedAndroidViewAccessibilityAccessibilityRecord *)
J2OBJC_STATIC_FIELD_SETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, sPool_, RepackagedAndroidViewAccessibilityAccessibilityRecord *)

static jint RepackagedAndroidViewAccessibilityAccessibilityRecord_sPoolSize_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, sPoolSize_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(RepackagedAndroidViewAccessibilityAccessibilityRecord, sPoolSize_, jint)

__attribute__((unused)) static jboolean RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(RepackagedAndroidViewAccessibilityAccessibilityRecord *self, jint property);

__attribute__((unused)) static void RepackagedAndroidViewAccessibilityAccessibilityRecord_setBooleanPropertyWithInt_withBoolean_(RepackagedAndroidViewAccessibilityAccessibilityRecord *self, jint property, jboolean value);

__attribute__((unused)) static void RepackagedAndroidViewAccessibilityAccessibilityRecord_clearSourceNode(RepackagedAndroidViewAccessibilityAccessibilityRecord *self);

J2OBJC_INITIALIZED_DEFN(RepackagedAndroidViewAccessibilityAccessibilityRecord)


#line 56
@implementation RepackagedAndroidViewAccessibilityAccessibilityRecord


#line 108
- (instancetype)init {
  RepackagedAndroidViewAccessibilityAccessibilityRecord_init(self);
  return self;
}


#line 118
- (void)setSourceWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)source {
  [self setSourceWithRepackagedAndroidViewView:source withInt:RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED];
}


#line 136
- (void)setSourceWithRepackagedAndroidViewView:(RepackagedAndroidViewView *)root
                                       withInt:(jint)virtualDescendantId {
  [self enforceNotSealed];
  jboolean important = YES;
  mSourceWindowId_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  RepackagedAndroidViewAccessibilityAccessibilityRecord_clearSourceNode(self);
  if (root != nil) {
    if (virtualDescendantId == RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED ||
#line 143
    virtualDescendantId == RepackagedAndroidViewAccessibilityAccessibilityNodeInfo_UNDEFINED_ITEM_ID) {
      important = [root isImportantForAccessibility];
      mSourceNode_ = [root createAccessibilityNodeInfo];
    }
    else {
      
#line 147
      RepackagedAndroidViewAccessibilityAccessibilityNodeProvider *provider = [root getAccessibilityNodeProvider];
      if (provider != nil) {
        mSourceNode_ = [provider createAccessibilityNodeInfoWithInt:virtualDescendantId];
      }
    }
    
#line 153
    mSourceWindowId_ = [root getAccessibilityWindowId];
  }
  RepackagedAndroidViewAccessibilityAccessibilityRecord_setBooleanPropertyWithInt_withBoolean_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_IMPORTANT_FOR_ACCESSIBILITY, important);
}


#line 167
- (RepackagedAndroidViewAccessibilityAccessibilityNodeInfo *)getSource {
  [self enforceSealed];
  if (mSourceNode_ != nil) {
    return RepackagedAndroidViewAccessibilityAccessibilityNodeInfo_obtainWithRepackagedAndroidViewAccessibilityAccessibilityNodeInfo_(mSourceNode_);
  }
  
#line 173
  return nil;
}


#line 183
- (void)setWindowIdWithInt:(jint)windowId {
  mSourceWindowId_ = windowId;
}


#line 192
- (jint)getWindowId {
  return mSourceWindowId_;
}


#line 201
- (jboolean)isChecked {
  return RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_CHECKED);
}


#line 212
- (void)setCheckedWithBoolean:(jboolean)isChecked {
  [self enforceNotSealed];
  RepackagedAndroidViewAccessibilityAccessibilityRecord_setBooleanPropertyWithInt_withBoolean_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_CHECKED, isChecked);
}


#line 222
- (jboolean)isEnabled {
  return RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_ENABLED);
}


#line 233
- (void)setEnabledWithBoolean:(jboolean)isEnabled {
  [self enforceNotSealed];
  RepackagedAndroidViewAccessibilityAccessibilityRecord_setBooleanPropertyWithInt_withBoolean_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_ENABLED, isEnabled);
}


#line 243
- (jboolean)isPassword {
  return RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_PASSWORD);
}


#line 254
- (void)setPasswordWithBoolean:(jboolean)isPassword {
  [self enforceNotSealed];
  RepackagedAndroidViewAccessibilityAccessibilityRecord_setBooleanPropertyWithInt_withBoolean_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_PASSWORD, isPassword);
}


#line 264
- (jboolean)isFullScreen {
  return RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_FULL_SCREEN);
}


#line 275
- (void)setFullScreenWithBoolean:(jboolean)isFullScreen {
  [self enforceNotSealed];
  RepackagedAndroidViewAccessibilityAccessibilityRecord_setBooleanPropertyWithInt_withBoolean_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_FULL_SCREEN, isFullScreen);
}


#line 285
- (jboolean)isScrollable {
  return RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_SCROLLABLE);
}


#line 296
- (void)setScrollableWithBoolean:(jboolean)scrollable {
  [self enforceNotSealed];
  RepackagedAndroidViewAccessibilityAccessibilityRecord_setBooleanPropertyWithInt_withBoolean_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_SCROLLABLE, scrollable);
}


#line 314
- (jboolean)isImportantForAccessibility {
  return RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_IMPORTANT_FOR_ACCESSIBILITY);
}


#line 323
- (jint)getItemCount {
  return mItemCount_;
}


#line 334
- (void)setItemCountWithInt:(jint)itemCount {
  [self enforceNotSealed];
  mItemCount_ = itemCount;
}


#line 344
- (jint)getCurrentItemIndex {
  return mCurrentItemIndex_;
}


#line 355
- (void)setCurrentItemIndexWithInt:(jint)currentItemIndex {
  [self enforceNotSealed];
  mCurrentItemIndex_ = currentItemIndex;
}


#line 368
- (jint)getFromIndex {
  return mFromIndex_;
}


#line 382
- (void)setFromIndexWithInt:(jint)fromIndex {
  [self enforceNotSealed];
  mFromIndex_ = fromIndex;
}


#line 393
- (jint)getToIndex {
  return mToIndex_;
}


#line 403
- (void)setToIndexWithInt:(jint)toIndex {
  [self enforceNotSealed];
  mToIndex_ = toIndex;
}


#line 413
- (jint)getScrollX {
  return mScrollX_;
}


#line 422
- (void)setScrollXWithInt:(jint)scrollX {
  [self enforceNotSealed];
  mScrollX_ = scrollX;
}


#line 432
- (jint)getScrollY {
  return mScrollY_;
}


#line 441
- (void)setScrollYWithInt:(jint)scrollY {
  [self enforceNotSealed];
  mScrollY_ = scrollY;
}


#line 451
- (jint)getMaxScrollX {
  return mMaxScrollX_;
}


#line 460
- (void)setMaxScrollXWithInt:(jint)maxScrollX {
  [self enforceNotSealed];
  mMaxScrollX_ = maxScrollX;
}


#line 470
- (jint)getMaxScrollY {
  return mMaxScrollY_;
}


#line 479
- (void)setMaxScrollYWithInt:(jint)maxScrollY {
  [self enforceNotSealed];
  mMaxScrollY_ = maxScrollY;
}


#line 489
- (jint)getAddedCount {
  return mAddedCount_;
}


#line 500
- (void)setAddedCountWithInt:(jint)addedCount {
  [self enforceNotSealed];
  mAddedCount_ = addedCount;
}


#line 510
- (jint)getRemovedCount {
  return mRemovedCount_;
}


#line 521
- (void)setRemovedCountWithInt:(jint)removedCount {
  [self enforceNotSealed];
  mRemovedCount_ = removedCount;
}


#line 531
- (id<JavaLangCharSequence>)getClassName {
  return mClassName_;
}


#line 542
- (void)setClassNameWithJavaLangCharSequence:(id<JavaLangCharSequence>)className_ {
  [self enforceNotSealed];
  mClassName_ = className_;
}


#line 553
- (id<JavaUtilList>)getText {
  return mText_;
}


#line 562
- (id<JavaLangCharSequence>)getBeforeText {
  return mBeforeText_;
}


#line 573
- (void)setBeforeTextWithJavaLangCharSequence:(id<JavaLangCharSequence>)beforeText {
  [self enforceNotSealed];
  mBeforeText_ = beforeText;
}


#line 583
- (id<JavaLangCharSequence>)getContentDescription {
  return mContentDescription_;
}


#line 594
- (void)setContentDescriptionWithJavaLangCharSequence:(id<JavaLangCharSequence>)contentDescription {
  [self enforceNotSealed];
  mContentDescription_ = contentDescription;
}


#line 604
- (id<RepackagedAndroidOsParcelable>)getParcelableData {
  return mParcelableData_;
}


#line 615
- (void)setParcelableDataWithRepackagedAndroidOsParcelable:(id<RepackagedAndroidOsParcelable>)parcelableData {
  [self enforceNotSealed];
  mParcelableData_ = parcelableData;
}


#line 627
- (jlong)getSourceNodeId {
  return mSourceNode_ != nil ? [mSourceNode_ getSourceNodeId] : RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
}


#line 639
- (void)setConnectionIdWithInt:(jint)connectionId {
  [self enforceNotSealed];
  mConnectionId_ = connectionId;
  if (mSourceNode_ != nil) {
    [mSourceNode_ setConnectionIdWithInt:mConnectionId_];
  }
}


#line 654
- (void)setSealedWithBoolean:(jboolean)sealed {
  mSealed_ = sealed;
  if (mSourceNode_ != nil) {
    [mSourceNode_ setSealedWithBoolean:sealed];
  }
}


#line 666
- (jboolean)isSealed {
  return mSealed_;
}


#line 675
- (void)enforceSealed {
  if (![self isSealed]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Cannot perform this action on a not sealed instance.");
  }
}


#line 687
- (void)enforceNotSealed {
  if ([self isSealed]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Cannot perform this action on a sealed instance.");
  }
}


#line 700
- (jboolean)getBooleanPropertyWithInt:(jint)property {
  return RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(self, property);
}


#line 710
- (void)setBooleanPropertyWithInt:(jint)property
                      withBoolean:(jboolean)value {
  RepackagedAndroidViewAccessibilityAccessibilityRecord_setBooleanPropertyWithInt_withBoolean_(self, property, value);
}


#line 725
+ (RepackagedAndroidViewAccessibilityAccessibilityRecord *)obtainWithRepackagedAndroidViewAccessibilityAccessibilityRecord:(RepackagedAndroidViewAccessibilityAccessibilityRecord *)record {
  return RepackagedAndroidViewAccessibilityAccessibilityRecord_obtainWithRepackagedAndroidViewAccessibilityAccessibilityRecord_(record);
}


#line 737
+ (RepackagedAndroidViewAccessibilityAccessibilityRecord *)obtain {
  return RepackagedAndroidViewAccessibilityAccessibilityRecord_obtain();
}


#line 758
- (void)recycle {
  if (mIsInPool_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Record already recycled!");
  }
  [self clear];
  @synchronized(RepackagedAndroidViewAccessibilityAccessibilityRecord_sPoolLock_) {
    if (RepackagedAndroidViewAccessibilityAccessibilityRecord_sPoolSize_ <= RepackagedAndroidViewAccessibilityAccessibilityRecord_MAX_POOL_SIZE) {
      mNext_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_sPool_;
      RepackagedAndroidViewAccessibilityAccessibilityRecord_sPool_ = self;
      mIsInPool_ = YES;
      RepackagedAndroidViewAccessibilityAccessibilityRecord_sPoolSize_++;
    }
  }
}


#line 778
- (void)init__WithRepackagedAndroidViewAccessibilityAccessibilityRecord:(RepackagedAndroidViewAccessibilityAccessibilityRecord *)record {
  mSealed_ = ((RepackagedAndroidViewAccessibilityAccessibilityRecord *) nil_chk(record))->mSealed_;
  mBooleanProperties_ = record->mBooleanProperties_;
  mCurrentItemIndex_ = record->mCurrentItemIndex_;
  mItemCount_ = record->mItemCount_;
  mFromIndex_ = record->mFromIndex_;
  mToIndex_ = record->mToIndex_;
  mScrollX_ = record->mScrollX_;
  mScrollY_ = record->mScrollY_;
  mMaxScrollX_ = record->mMaxScrollX_;
  mMaxScrollY_ = record->mMaxScrollY_;
  mAddedCount_ = record->mAddedCount_;
  mRemovedCount_ = record->mRemovedCount_;
  mClassName_ = record->mClassName_;
  mContentDescription_ = record->mContentDescription_;
  mBeforeText_ = record->mBeforeText_;
  mParcelableData_ = record->mParcelableData_;
  [((id<JavaUtilList>) nil_chk(mText_)) addAllWithJavaUtilCollection:record->mText_];
  mSourceWindowId_ = record->mSourceWindowId_;
  if (record->mSourceNode_ != nil) {
    mSourceNode_ = RepackagedAndroidViewAccessibilityAccessibilityNodeInfo_obtainWithRepackagedAndroidViewAccessibilityAccessibilityNodeInfo_(record->mSourceNode_);
  }
  mConnectionId_ = record->mConnectionId_;
}


#line 806
- (void)clear {
  mSealed_ = NO;
  mBooleanProperties_ = 0;
  mCurrentItemIndex_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  mItemCount_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  mFromIndex_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  mToIndex_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  mScrollX_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  mScrollY_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  mMaxScrollX_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  mMaxScrollY_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  mAddedCount_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  mRemovedCount_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  mClassName_ = nil;
  mContentDescription_ = nil;
  mBeforeText_ = nil;
  mParcelableData_ = nil;
  [((id<JavaUtilList>) nil_chk(mText_)) clear];
  RepackagedAndroidViewAccessibilityAccessibilityRecord_clearSourceNode(self);
  mSourceWindowId_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  mConnectionId_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
}

- (void)clearSourceNode {
  RepackagedAndroidViewAccessibilityAccessibilityRecord_clearSourceNode(self);
}


#line 837
- (NSString *)description {
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_init();
  (void) [builder appendWithNSString:JreStrcat("$@", @" [ ClassName: ", mClassName_)];
  (void) [builder appendWithNSString:JreStrcat("$@", @"; Text: ", mText_)];
  (void) [builder appendWithNSString:JreStrcat("$@", @"; ContentDescription: ", mContentDescription_)];
  (void) [builder appendWithNSString:JreStrcat("$I", @"; ItemCount: ", mItemCount_)];
  (void) [builder appendWithNSString:JreStrcat("$I", @"; CurrentItemIndex: ", mCurrentItemIndex_)];
  (void) [builder appendWithNSString:JreStrcat("$Z", @"; IsEnabled: ", RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_ENABLED))];
  (void) [builder appendWithNSString:JreStrcat("$Z", @"; IsPassword: ", RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_PASSWORD))];
  (void) [builder appendWithNSString:JreStrcat("$Z", @"; IsChecked: ", RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_CHECKED))];
  (void) [builder appendWithNSString:JreStrcat("$Z", @"; IsFullScreen: ", RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_FULL_SCREEN))];
  (void) [builder appendWithNSString:JreStrcat("$Z", @"; Scrollable: ", RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(self, RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_SCROLLABLE))];
  (void) [builder appendWithNSString:JreStrcat("$@", @"; BeforeText: ", mBeforeText_)];
  (void) [builder appendWithNSString:JreStrcat("$I", @"; FromIndex: ", mFromIndex_)];
  (void) [builder appendWithNSString:JreStrcat("$I", @"; ToIndex: ", mToIndex_)];
  (void) [builder appendWithNSString:JreStrcat("$I", @"; ScrollX: ", mScrollX_)];
  (void) [builder appendWithNSString:JreStrcat("$I", @"; ScrollY: ", mScrollY_)];
  (void) [builder appendWithNSString:JreStrcat("$I", @"; MaxScrollX: ", mMaxScrollX_)];
  (void) [builder appendWithNSString:JreStrcat("$I", @"; MaxScrollY: ", mMaxScrollY_)];
  (void) [builder appendWithNSString:JreStrcat("$I", @"; AddedCount: ", mAddedCount_)];
  (void) [builder appendWithNSString:JreStrcat("$I", @"; RemovedCount: ", mRemovedCount_)];
  (void) [builder appendWithNSString:JreStrcat("$@", @"; ParcelableData: ", mParcelableData_)];
  (void) [builder appendWithNSString:@" ]"];
  return [builder description];
}

+ (void)initialize {
  if (self == [RepackagedAndroidViewAccessibilityAccessibilityRecord class]) {
    RepackagedAndroidViewAccessibilityAccessibilityRecord_sPoolLock_ = new_NSObject_init();
    J2OBJC_SET_INITIALIZED(RepackagedAndroidViewAccessibilityAccessibilityRecord)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AccessibilityRecord", NULL, 0x0, NULL, NULL },
    { "setSourceWithRepackagedAndroidViewView:", "setSource", "V", 0x1, NULL, NULL },
    { "setSourceWithRepackagedAndroidViewView:withInt:", "setSource", "V", 0x1, NULL, NULL },
    { "getSource", NULL, "Lrepackaged.android.view.accessibility.AccessibilityNodeInfo;", 0x1, NULL, NULL },
    { "setWindowIdWithInt:", "setWindowId", "V", 0x1, NULL, NULL },
    { "getWindowId", NULL, "I", 0x1, NULL, NULL },
    { "isChecked", NULL, "Z", 0x1, NULL, NULL },
    { "setCheckedWithBoolean:", "setChecked", "V", 0x1, NULL, NULL },
    { "isEnabled", NULL, "Z", 0x1, NULL, NULL },
    { "setEnabledWithBoolean:", "setEnabled", "V", 0x1, NULL, NULL },
    { "isPassword", NULL, "Z", 0x1, NULL, NULL },
    { "setPasswordWithBoolean:", "setPassword", "V", 0x1, NULL, NULL },
    { "isFullScreen", NULL, "Z", 0x1, NULL, NULL },
    { "setFullScreenWithBoolean:", "setFullScreen", "V", 0x1, NULL, NULL },
    { "isScrollable", NULL, "Z", 0x1, NULL, NULL },
    { "setScrollableWithBoolean:", "setScrollable", "V", 0x1, NULL, NULL },
    { "isImportantForAccessibility", NULL, "Z", 0x1, NULL, NULL },
    { "getItemCount", NULL, "I", 0x1, NULL, NULL },
    { "setItemCountWithInt:", "setItemCount", "V", 0x1, NULL, NULL },
    { "getCurrentItemIndex", NULL, "I", 0x1, NULL, NULL },
    { "setCurrentItemIndexWithInt:", "setCurrentItemIndex", "V", 0x1, NULL, NULL },
    { "getFromIndex", NULL, "I", 0x1, NULL, NULL },
    { "setFromIndexWithInt:", "setFromIndex", "V", 0x1, NULL, NULL },
    { "getToIndex", NULL, "I", 0x1, NULL, NULL },
    { "setToIndexWithInt:", "setToIndex", "V", 0x1, NULL, NULL },
    { "getScrollX", NULL, "I", 0x1, NULL, NULL },
    { "setScrollXWithInt:", "setScrollX", "V", 0x1, NULL, NULL },
    { "getScrollY", NULL, "I", 0x1, NULL, NULL },
    { "setScrollYWithInt:", "setScrollY", "V", 0x1, NULL, NULL },
    { "getMaxScrollX", NULL, "I", 0x1, NULL, NULL },
    { "setMaxScrollXWithInt:", "setMaxScrollX", "V", 0x1, NULL, NULL },
    { "getMaxScrollY", NULL, "I", 0x1, NULL, NULL },
    { "setMaxScrollYWithInt:", "setMaxScrollY", "V", 0x1, NULL, NULL },
    { "getAddedCount", NULL, "I", 0x1, NULL, NULL },
    { "setAddedCountWithInt:", "setAddedCount", "V", 0x1, NULL, NULL },
    { "getRemovedCount", NULL, "I", 0x1, NULL, NULL },
    { "setRemovedCountWithInt:", "setRemovedCount", "V", 0x1, NULL, NULL },
    { "getClassName", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "setClassNameWithJavaLangCharSequence:", "setClassName", "V", 0x1, NULL, NULL },
    { "getText", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "getBeforeText", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "setBeforeTextWithJavaLangCharSequence:", "setBeforeText", "V", 0x1, NULL, NULL },
    { "getContentDescription", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "setContentDescriptionWithJavaLangCharSequence:", "setContentDescription", "V", 0x1, NULL, NULL },
    { "getParcelableData", NULL, "Lrepackaged.android.os.Parcelable;", 0x1, NULL, NULL },
    { "setParcelableDataWithRepackagedAndroidOsParcelable:", "setParcelableData", "V", 0x1, NULL, NULL },
    { "getSourceNodeId", NULL, "J", 0x1, NULL, NULL },
    { "setConnectionIdWithInt:", "setConnectionId", "V", 0x1, NULL, NULL },
    { "setSealedWithBoolean:", "setSealed", "V", 0x1, NULL, NULL },
    { "isSealed", NULL, "Z", 0x0, NULL, NULL },
    { "enforceSealed", NULL, "V", 0x0, NULL, NULL },
    { "enforceNotSealed", NULL, "V", 0x0, NULL, NULL },
    { "getBooleanPropertyWithInt:", "getBooleanProperty", "Z", 0x2, NULL, NULL },
    { "setBooleanPropertyWithInt:withBoolean:", "setBooleanProperty", "V", 0x2, NULL, NULL },
    { "obtainWithRepackagedAndroidViewAccessibilityAccessibilityRecord:", "obtain", "Lrepackaged.android.view.accessibility.AccessibilityRecord;", 0x9, NULL, NULL },
    { "obtain", NULL, "Lrepackaged.android.view.accessibility.AccessibilityRecord;", 0x9, NULL, NULL },
    { "recycle", NULL, "V", 0x1, NULL, NULL },
    { "init__WithRepackagedAndroidViewAccessibilityAccessibilityRecord:", "init", "V", 0x0, NULL, NULL },
    { "clear", NULL, "V", 0x0, NULL, NULL },
    { "clearSourceNode", NULL, "V", 0x2, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "UNDEFINED_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED },
    { "PROPERTY_CHECKED_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_CHECKED },
    { "PROPERTY_ENABLED_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_ENABLED },
    { "PROPERTY_PASSWORD_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_PASSWORD },
    { "PROPERTY_FULL_SCREEN_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_FULL_SCREEN },
    { "PROPERTY_SCROLLABLE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_SCROLLABLE },
    { "PROPERTY_IMPORTANT_FOR_ACCESSIBILITY_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewAccessibilityAccessibilityRecord_PROPERTY_IMPORTANT_FOR_ACCESSIBILITY },
    { "GET_SOURCE_PREFETCH_FLAGS_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewAccessibilityAccessibilityRecord_GET_SOURCE_PREFETCH_FLAGS },
    { "MAX_POOL_SIZE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidViewAccessibilityAccessibilityRecord_MAX_POOL_SIZE },
    { "sPoolLock_", NULL, 0x1a, "Ljava.lang.Object;", &RepackagedAndroidViewAccessibilityAccessibilityRecord_sPoolLock_, NULL,  },
    { "sPool_", NULL, 0xa, "Lrepackaged.android.view.accessibility.AccessibilityRecord;", &RepackagedAndroidViewAccessibilityAccessibilityRecord_sPool_, NULL,  },
    { "sPoolSize_", NULL, 0xa, "I", &RepackagedAndroidViewAccessibilityAccessibilityRecord_sPoolSize_, NULL,  },
    { "mNext_", NULL, 0x2, "Lrepackaged.android.view.accessibility.AccessibilityRecord;", NULL, NULL,  },
    { "mIsInPool_", NULL, 0x2, "Z", NULL, NULL,  },
    { "mSealed_", NULL, 0x0, "Z", NULL, NULL,  },
    { "mBooleanProperties_", NULL, 0x0, "I", NULL, NULL,  },
    { "mCurrentItemIndex_", NULL, 0x0, "I", NULL, NULL,  },
    { "mItemCount_", NULL, 0x0, "I", NULL, NULL,  },
    { "mFromIndex_", NULL, 0x0, "I", NULL, NULL,  },
    { "mToIndex_", NULL, 0x0, "I", NULL, NULL,  },
    { "mScrollX_", NULL, 0x0, "I", NULL, NULL,  },
    { "mScrollY_", NULL, 0x0, "I", NULL, NULL,  },
    { "mMaxScrollX_", NULL, 0x0, "I", NULL, NULL,  },
    { "mMaxScrollY_", NULL, 0x0, "I", NULL, NULL,  },
    { "mAddedCount_", NULL, 0x0, "I", NULL, NULL,  },
    { "mRemovedCount_", NULL, 0x0, "I", NULL, NULL,  },
    { "mSourceNode_", NULL, 0x0, "Lrepackaged.android.view.accessibility.AccessibilityNodeInfo;", NULL, NULL,  },
    { "mSourceWindowId_", NULL, 0x0, "I", NULL, NULL,  },
    { "mClassName_", NULL, 0x0, "Ljava.lang.CharSequence;", NULL, NULL,  },
    { "mContentDescription_", NULL, 0x0, "Ljava.lang.CharSequence;", NULL, NULL,  },
    { "mBeforeText_", NULL, 0x0, "Ljava.lang.CharSequence;", NULL, NULL,  },
    { "mParcelableData_", NULL, 0x0, "Lrepackaged.android.os.Parcelable;", NULL, NULL,  },
    { "mText_", NULL, 0x10, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/CharSequence;>;",  },
    { "mConnectionId_", NULL, 0x0, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidViewAccessibilityAccessibilityRecord = { 2, "AccessibilityRecord", "repackaged.android.view.accessibility", NULL, 0x1, 61, methods, 34, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidViewAccessibilityAccessibilityRecord;
}

@end


#line 108
void RepackagedAndroidViewAccessibilityAccessibilityRecord_init(RepackagedAndroidViewAccessibilityAccessibilityRecord *self) {
  (void) NSObject_init(self);
  self->mBooleanProperties_ =
#line 81
  0;
  self->mCurrentItemIndex_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  self->mItemCount_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  self->mFromIndex_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  self->mToIndex_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  self->mScrollX_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  self->mScrollY_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  self->mMaxScrollX_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  self->mMaxScrollY_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  self->mAddedCount_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  self->mRemovedCount_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  self->mSourceWindowId_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
  self->mText_ = new_JavaUtilArrayList_init();
  self->mConnectionId_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_UNDEFINED;
}


#line 108
RepackagedAndroidViewAccessibilityAccessibilityRecord *new_RepackagedAndroidViewAccessibilityAccessibilityRecord_init() {
  RepackagedAndroidViewAccessibilityAccessibilityRecord *self = [RepackagedAndroidViewAccessibilityAccessibilityRecord alloc];
  RepackagedAndroidViewAccessibilityAccessibilityRecord_init(self);
  return self;
}


#line 700
jboolean RepackagedAndroidViewAccessibilityAccessibilityRecord_getBooleanPropertyWithInt_(RepackagedAndroidViewAccessibilityAccessibilityRecord *self, jint property) {
  return (self->mBooleanProperties_ & property) == property;
}


#line 710
void RepackagedAndroidViewAccessibilityAccessibilityRecord_setBooleanPropertyWithInt_withBoolean_(RepackagedAndroidViewAccessibilityAccessibilityRecord *self, jint property, jboolean value) {
  if (value) {
    self->mBooleanProperties_ |= property;
  }
  else {
    
#line 714
    self->mBooleanProperties_ &= ~property;
  }
}


#line 725
RepackagedAndroidViewAccessibilityAccessibilityRecord *RepackagedAndroidViewAccessibilityAccessibilityRecord_obtainWithRepackagedAndroidViewAccessibilityAccessibilityRecord_(RepackagedAndroidViewAccessibilityAccessibilityRecord *record) {
  RepackagedAndroidViewAccessibilityAccessibilityRecord_initialize();
  
#line 726
  RepackagedAndroidViewAccessibilityAccessibilityRecord *clone = RepackagedAndroidViewAccessibilityAccessibilityRecord_obtain();
  [((RepackagedAndroidViewAccessibilityAccessibilityRecord *) nil_chk(clone)) init__WithRepackagedAndroidViewAccessibilityAccessibilityRecord:record];
  return clone;
}


#line 737
RepackagedAndroidViewAccessibilityAccessibilityRecord *RepackagedAndroidViewAccessibilityAccessibilityRecord_obtain() {
  RepackagedAndroidViewAccessibilityAccessibilityRecord_initialize();
  
#line 738
  @synchronized(RepackagedAndroidViewAccessibilityAccessibilityRecord_sPoolLock_) {
    if (RepackagedAndroidViewAccessibilityAccessibilityRecord_sPool_ != nil) {
      RepackagedAndroidViewAccessibilityAccessibilityRecord *record = RepackagedAndroidViewAccessibilityAccessibilityRecord_sPool_;
      RepackagedAndroidViewAccessibilityAccessibilityRecord_sPool_ = RepackagedAndroidViewAccessibilityAccessibilityRecord_sPool_->mNext_;
      RepackagedAndroidViewAccessibilityAccessibilityRecord_sPoolSize_--;
      record->mNext_ = nil;
      record->mIsInPool_ = NO;
      return record;
    }
    return new_RepackagedAndroidViewAccessibilityAccessibilityRecord_init();
  }
}


#line 829
void RepackagedAndroidViewAccessibilityAccessibilityRecord_clearSourceNode(RepackagedAndroidViewAccessibilityAccessibilityRecord *self) {
  if (self->mSourceNode_ != nil) {
    [self->mSourceNode_ recycle];
    self->mSourceNode_ = nil;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidViewAccessibilityAccessibilityRecord)
