//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/com/android/internal/util/FastPrintWriter.java
//


#include "FastPrintWriter.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Printer.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/io/PrintWriter.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/io/Writer.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Exception.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/nio/Buffer.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/CharBuffer.h"
#include "java/nio/charset/Charset.h"
#include "java/nio/charset/CharsetEncoder.h"
#include "java/nio/charset/CoderResult.h"
#include "java/nio/charset/CodingErrorAction.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/com/android/internal/util/FastPrintWriter.java"

@interface RepackagedComAndroidInternalUtilFastPrintWriter () {
 @public
  jint mBufferLen_;
  IOSCharArray *mText_;
  jint mPos_;
  JavaIoOutputStream *mOutputStream_;
  jboolean mAutoFlush_;
  NSString *mSeparator_;
  JavaIoWriter *mWriter_;
  id<RepackagedAndroidUtilPrinter> mPrinter_;
  JavaNioCharsetCharsetEncoder *mCharset_;
  JavaNioByteBuffer *mBytes_;
  jboolean mIoError_;
}

- (void)initEncoderWithNSString:(NSString *)csn OBJC_METHOD_FAMILY_NONE;

- (void)initDefaultEncoder OBJC_METHOD_FAMILY_NONE;

- (void)appendLockedWithChar:(jchar)c;

- (void)appendLockedWithNSString:(NSString *)str
                         withInt:(jint)i
                         withInt:(jint)length;

- (void)appendLockedWithCharArray:(IOSCharArray *)buf
                          withInt:(jint)i
                          withInt:(jint)length;

- (void)flushBytesLocked;

- (void)flushLocked;

@end

J2OBJC_FIELD_SETTER(RepackagedComAndroidInternalUtilFastPrintWriter, mText_, IOSCharArray *)
J2OBJC_FIELD_SETTER(RepackagedComAndroidInternalUtilFastPrintWriter, mOutputStream_, JavaIoOutputStream *)
J2OBJC_FIELD_SETTER(RepackagedComAndroidInternalUtilFastPrintWriter, mSeparator_, NSString *)
J2OBJC_FIELD_SETTER(RepackagedComAndroidInternalUtilFastPrintWriter, mWriter_, JavaIoWriter *)
J2OBJC_FIELD_SETTER(RepackagedComAndroidInternalUtilFastPrintWriter, mPrinter_, id<RepackagedAndroidUtilPrinter>)
J2OBJC_FIELD_SETTER(RepackagedComAndroidInternalUtilFastPrintWriter, mCharset_, JavaNioCharsetCharsetEncoder *)
J2OBJC_FIELD_SETTER(RepackagedComAndroidInternalUtilFastPrintWriter, mBytes_, JavaNioByteBuffer *)

__attribute__((unused)) static void RepackagedComAndroidInternalUtilFastPrintWriter_initDefaultEncoder(RepackagedComAndroidInternalUtilFastPrintWriter *self);

__attribute__((unused)) static void RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithChar_(RepackagedComAndroidInternalUtilFastPrintWriter *self, jchar c);

__attribute__((unused)) static void RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithNSString_withInt_withInt_(RepackagedComAndroidInternalUtilFastPrintWriter *self, NSString *str, jint i, jint length);

__attribute__((unused)) static void RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithCharArray_withInt_withInt_(RepackagedComAndroidInternalUtilFastPrintWriter *self, IOSCharArray *buf, jint i, jint length);

__attribute__((unused)) static void RepackagedComAndroidInternalUtilFastPrintWriter_flushBytesLocked(RepackagedComAndroidInternalUtilFastPrintWriter *self);

__attribute__((unused)) static void RepackagedComAndroidInternalUtilFastPrintWriter_flushLocked(RepackagedComAndroidInternalUtilFastPrintWriter *self);

@interface RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter : JavaIoWriter

- (void)close;

- (void)flush;

- (void)writeWithCharArray:(IOSCharArray *)buf
                   withInt:(jint)offset
                   withInt:(jint)count;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter)

__attribute__((unused)) static void RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter_init(RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter *self);

__attribute__((unused)) static RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter *new_RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter)


#line 17
@implementation RepackagedComAndroidInternalUtilFastPrintWriter


#line 63
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_(self, outArg);
  return self;
}


#line 81
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                               withBoolean:(jboolean)autoFlush {
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_withBoolean_(self, outArg, autoFlush);
  return self;
}


#line 102
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                               withBoolean:(jboolean)autoFlush
                                   withInt:(jint)bufferLen {
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_withBoolean_withInt_(self, outArg, autoFlush, bufferLen);
  return self;
}


#line 132
- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)wr {
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_(self, wr);
  return self;
}


#line 150
- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)wr
                         withBoolean:(jboolean)autoFlush {
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_withBoolean_(self, wr, autoFlush);
  return self;
}


#line 171
- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)wr
                         withBoolean:(jboolean)autoFlush
                             withInt:(jint)bufferLen {
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_withBoolean_withInt_(self, wr, autoFlush, bufferLen);
  return self;
}


#line 197
- (instancetype)initWithRepackagedAndroidUtilPrinter:(id<RepackagedAndroidUtilPrinter>)pr {
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithRepackagedAndroidUtilPrinter_(self, pr);
  return self;
}


#line 214
- (instancetype)initWithRepackagedAndroidUtilPrinter:(id<RepackagedAndroidUtilPrinter>)pr
                                             withInt:(jint)bufferLen {
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithRepackagedAndroidUtilPrinter_withInt_(self, pr, bufferLen);
  return self;
}


#line 230
- (void)initEncoderWithNSString:(NSString *)csn {
  @try {
    mCharset_ = [((JavaNioCharsetCharset *) nil_chk(JavaNioCharsetCharset_forNameWithNSString_(csn))) newEncoder];
  }
  @catch (
#line 233
  JavaLangException *e) {
    @throw new_JavaIoUnsupportedEncodingException_initWithNSString_(csn);
  }
  (void) [((JavaNioCharsetCharsetEncoder *) nil_chk(mCharset_)) onMalformedInputWithJavaNioCharsetCodingErrorAction:JavaNioCharsetCodingErrorAction_get_REPLACE_()];
  (void) [mCharset_ onUnmappableCharacterWithJavaNioCharsetCodingErrorAction:JavaNioCharsetCodingErrorAction_get_REPLACE_()];
}


#line 248
- (jboolean)checkError {
  [self flush];
  @synchronized(lock_) {
    return mIoError_;
  }
}


#line 259
- (void)clearError {
  @synchronized(lock_) {
    mIoError_ = NO;
  }
}


#line 268
- (void)setError {
  @synchronized(lock_) {
    mIoError_ = YES;
  }
}

- (void)initDefaultEncoder {
  RepackagedComAndroidInternalUtilFastPrintWriter_initDefaultEncoder(self);
}


#line 280
- (void)appendLockedWithChar:(jchar)c {
  RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithChar_(self, c);
}


#line 290
- (void)appendLockedWithNSString:(NSString *)str
                         withInt:(jint)i
                         withInt:(jint)length {
  RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithNSString_withInt_withInt_(self, str, i, length);
}


#line 310
- (void)appendLockedWithCharArray:(IOSCharArray *)buf
                          withInt:(jint)i
                          withInt:(jint)length {
  RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithCharArray_withInt_withInt_(self, buf, i, length);
}


#line 330
- (void)flushBytesLocked {
  RepackagedComAndroidInternalUtilFastPrintWriter_flushBytesLocked(self);
}


#line 339
- (void)flushLocked {
  RepackagedComAndroidInternalUtilFastPrintWriter_flushLocked(self);
}


#line 384
- (void)flush {
  @synchronized(lock_) {
    @try {
      RepackagedComAndroidInternalUtilFastPrintWriter_flushLocked(self);
      if (mOutputStream_ != nil) {
        [mOutputStream_ flush];
      }
      else
#line 390
      if (mWriter_ != nil) {
        [mWriter_ flush];
      }
    }
    @catch (
#line 393
    JavaIoIOException *e) {
      [self setError];
    }
  }
}


#line 400
- (void)close {
  @synchronized(lock_) {
    @try {
      RepackagedComAndroidInternalUtilFastPrintWriter_flushLocked(self);
      if (mOutputStream_ != nil) {
        [mOutputStream_ close];
      }
      else
#line 406
      if (mWriter_ != nil) {
        [mWriter_ close];
      }
    }
    @catch (
#line 409
    JavaIoIOException *e) {
      [self setError];
    }
  }
}


#line 423
- (void)printWithCharArray:(IOSCharArray *)charArray {
  @synchronized(lock_) {
    @try {
      RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithCharArray_withInt_withInt_(self, charArray, 0, ((IOSCharArray *) nil_chk(charArray))->size_);
    }
    @catch (
#line 427
    JavaIoIOException *e) {
    }
  }
}


#line 440
- (void)printWithChar:(jchar)ch {
  @synchronized(lock_) {
    @try {
      RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithChar_(self, ch);
    }
    @catch (
#line 444
    JavaIoIOException *e) {
    }
  }
}


#line 460
- (void)printWithNSString:(NSString *)str {
  if (str == nil) {
    str = NSString_valueOf_(nil);
  }
  @synchronized(lock_) {
    @try {
      RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithNSString_withInt_withInt_(self, str, 0, ((jint) [((NSString *) nil_chk(str)) length]));
    }
    @catch (
#line 467
    JavaIoIOException *e) {
      [self setError];
    }
  }
}


#line 475
- (void)printWithInt:(jint)inum {
  if (inum == 0) {
    [self printWithNSString:@"0"];
  }
  else {
    
#line 479
    [super printWithInt:inum];
  }
}


#line 484
- (void)printWithLong:(jlong)lnum {
  if (lnum == 0) {
    [self printWithNSString:@"0"];
  }
  else {
    
#line 488
    [super printWithLong:lnum];
  }
}

- (void)println {
  @synchronized(lock_) {
    @try {
      RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithNSString_withInt_withInt_(self, mSeparator_, 0, ((jint) [((NSString *) nil_chk(mSeparator_)) length]));
      if (mAutoFlush_) {
        RepackagedComAndroidInternalUtilFastPrintWriter_flushLocked(self);
      }
    }
    @catch (
#line 502
    JavaIoIOException *e) {
      [self setError];
    }
  }
}


#line 509
- (void)printlnWithInt:(jint)inum {
  if (inum == 0) {
    [self printlnWithNSString:@"0"];
  }
  else {
    
#line 513
    [super printlnWithInt:inum];
  }
}


#line 518
- (void)printlnWithLong:(jlong)lnum {
  if (lnum == 0) {
    [self printlnWithNSString:@"0"];
  }
  else {
    
#line 522
    [super printlnWithLong:lnum];
  }
}


#line 530
- (void)printlnWithCharArray:(IOSCharArray *)chars {
  [self printWithCharArray:chars];
  [self println];
}


#line 539
- (void)printlnWithChar:(jchar)c {
  [self printWithChar:c];
  [self println];
}


#line 562
- (void)writeWithCharArray:(IOSCharArray *)buf
                   withInt:(jint)offset
                   withInt:(jint)count {
  @synchronized(lock_) {
    @try {
      RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithCharArray_withInt_withInt_(self, buf, offset, count);
    }
    @catch (
#line 566
    JavaIoIOException *e) {
    }
  }
}


#line 582
- (void)writeWithInt:(jint)oneChar {
  @synchronized(lock_) {
    @try {
      RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithChar_(self, (jchar) oneChar);
    }
    @catch (
#line 586
    JavaIoIOException *e) {
    }
  }
}


#line 598
- (void)writeWithNSString:(NSString *)str {
  @synchronized(lock_) {
    @try {
      RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithNSString_withInt_withInt_(self, str, 0, ((jint) [((NSString *) nil_chk(str)) length]));
    }
    @catch (
#line 602
    JavaIoIOException *e) {
    }
  }
}


#line 622
- (void)writeWithNSString:(NSString *)str
                  withInt:(jint)offset
                  withInt:(jint)count {
  @synchronized(lock_) {
    @try {
      RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithNSString_withInt_withInt_(self, str, offset, count);
    }
    @catch (
#line 626
    JavaIoIOException *e) {
    }
  }
}


#line 653
- (JavaIoPrintWriter *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)csq
                                              withInt:(jint)start
                                              withInt:(jint)end {
  if (csq == nil) {
    csq = @"null";
  }
  NSString *output = [((id<JavaLangCharSequence>) nil_chk([((id<JavaLangCharSequence>) nil_chk(csq)) subSequenceFrom:start to:end])) description];
  [self writeWithNSString:output withInt:0 withInt:((jint) [((NSString *) nil_chk(output)) length])];
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoOutputStream:", "FastPrintWriter", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoOutputStream:withBoolean:", "FastPrintWriter", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoOutputStream:withBoolean:withInt:", "FastPrintWriter", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoWriter:", "FastPrintWriter", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoWriter:withBoolean:", "FastPrintWriter", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoWriter:withBoolean:withInt:", "FastPrintWriter", NULL, 0x1, NULL, NULL },
    { "initWithRepackagedAndroidUtilPrinter:", "FastPrintWriter", NULL, 0x1, NULL, NULL },
    { "initWithRepackagedAndroidUtilPrinter:withInt:", "FastPrintWriter", NULL, 0x1, NULL, NULL },
    { "initEncoderWithNSString:", "initEncoder", "V", 0x12, "Ljava.io.UnsupportedEncodingException;", NULL },
    { "checkError", NULL, "Z", 0x1, NULL, NULL },
    { "clearError", NULL, "V", 0x4, NULL, NULL },
    { "setError", NULL, "V", 0x4, NULL, NULL },
    { "initDefaultEncoder", NULL, "V", 0x12, NULL, NULL },
    { "appendLockedWithChar:", "appendLocked", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "appendLockedWithNSString:withInt:withInt:", "appendLocked", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "appendLockedWithCharArray:withInt:withInt:", "appendLocked", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "flushBytesLocked", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
    { "flushLocked", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
    { "flush", NULL, "V", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "printWithCharArray:", "print", "V", 0x1, NULL, NULL },
    { "printWithChar:", "print", "V", 0x1, NULL, NULL },
    { "printWithNSString:", "print", "V", 0x1, NULL, NULL },
    { "printWithInt:", "print", "V", 0x1, NULL, NULL },
    { "printWithLong:", "print", "V", 0x1, NULL, NULL },
    { "println", NULL, "V", 0x1, NULL, NULL },
    { "printlnWithInt:", "println", "V", 0x1, NULL, NULL },
    { "printlnWithLong:", "println", "V", 0x1, NULL, NULL },
    { "printlnWithCharArray:", "println", "V", 0x1, NULL, NULL },
    { "printlnWithChar:", "println", "V", 0x1, NULL, NULL },
    { "writeWithCharArray:withInt:withInt:", "write", "V", 0x1, NULL, NULL },
    { "writeWithInt:", "write", "V", 0x1, NULL, NULL },
    { "writeWithNSString:", "write", "V", 0x1, NULL, NULL },
    { "writeWithNSString:withInt:withInt:", "write", "V", 0x1, NULL, NULL },
    { "appendWithJavaLangCharSequence:withInt:withInt:", "append", "Ljava.io.PrintWriter;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mBufferLen_", NULL, 0x12, "I", NULL, NULL,  },
    { "mText_", NULL, 0x12, "[C", NULL, NULL,  },
    { "mPos_", NULL, 0x2, "I", NULL, NULL,  },
    { "mOutputStream_", NULL, 0x12, "Ljava.io.OutputStream;", NULL, NULL,  },
    { "mAutoFlush_", NULL, 0x12, "Z", NULL, NULL,  },
    { "mSeparator_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL,  },
    { "mWriter_", NULL, 0x12, "Ljava.io.Writer;", NULL, NULL,  },
    { "mPrinter_", NULL, 0x12, "Lrepackaged.android.util.Printer;", NULL, NULL,  },
    { "mCharset_", NULL, 0x2, "Ljava.nio.charset.CharsetEncoder;", NULL, NULL,  },
    { "mBytes_", NULL, 0x12, "Ljava.nio.ByteBuffer;", NULL, NULL,  },
    { "mIoError_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lrepackaged.com.android.internal.util.FastPrintWriter$DummyWriter;"};
  static const J2ObjcClassInfo _RepackagedComAndroidInternalUtilFastPrintWriter = { 2, "FastPrintWriter", "repackaged.com.android.internal.util", NULL, 0x1, 35, methods, 11, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_RepackagedComAndroidInternalUtilFastPrintWriter;
}

@end


#line 63
void RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_(RepackagedComAndroidInternalUtilFastPrintWriter *self, JavaIoOutputStream *outArg) {
  (void) RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_withBoolean_withInt_(self, outArg, NO, 8192);
}


#line 63
RepackagedComAndroidInternalUtilFastPrintWriter *new_RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) {
  RepackagedComAndroidInternalUtilFastPrintWriter *self = [RepackagedComAndroidInternalUtilFastPrintWriter alloc];
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_(self, outArg);
  return self;
}


#line 81
void RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_withBoolean_(RepackagedComAndroidInternalUtilFastPrintWriter *self, JavaIoOutputStream *outArg, jboolean autoFlush) {
  (void) RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_withBoolean_withInt_(self, outArg, autoFlush, 8192);
}


#line 81
RepackagedComAndroidInternalUtilFastPrintWriter *new_RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_withBoolean_(JavaIoOutputStream *outArg, jboolean autoFlush) {
  RepackagedComAndroidInternalUtilFastPrintWriter *self = [RepackagedComAndroidInternalUtilFastPrintWriter alloc];
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_withBoolean_(self, outArg, autoFlush);
  return self;
}


#line 102
void RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_withBoolean_withInt_(RepackagedComAndroidInternalUtilFastPrintWriter *self, JavaIoOutputStream *outArg, jboolean autoFlush, jint bufferLen) {
  (void) JavaIoPrintWriter_initWithJavaIoWriter_withBoolean_(self, new_RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter_init(), autoFlush);
  if (outArg == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"out is null");
  }
  self->mBufferLen_ = bufferLen;
  self->mText_ = [IOSCharArray newArrayWithLength:bufferLen];
  self->mBytes_ = JavaNioByteBuffer_allocateWithInt_(self->mBufferLen_);
  self->mOutputStream_ = outArg;
  self->mWriter_ = nil;
  self->mPrinter_ = nil;
  self->mAutoFlush_ = autoFlush;
  self->mSeparator_ = JavaLangSystem_lineSeparator();
  RepackagedComAndroidInternalUtilFastPrintWriter_initDefaultEncoder(self);
}


#line 102
RepackagedComAndroidInternalUtilFastPrintWriter *new_RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_withBoolean_withInt_(JavaIoOutputStream *outArg, jboolean autoFlush, jint bufferLen) {
  RepackagedComAndroidInternalUtilFastPrintWriter *self = [RepackagedComAndroidInternalUtilFastPrintWriter alloc];
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoOutputStream_withBoolean_withInt_(self, outArg, autoFlush, bufferLen);
  return self;
}


#line 132
void RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_(RepackagedComAndroidInternalUtilFastPrintWriter *self, JavaIoWriter *wr) {
  (void) RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_withBoolean_withInt_(self, wr, NO, 8192);
}


#line 132
RepackagedComAndroidInternalUtilFastPrintWriter *new_RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_(JavaIoWriter *wr) {
  RepackagedComAndroidInternalUtilFastPrintWriter *self = [RepackagedComAndroidInternalUtilFastPrintWriter alloc];
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_(self, wr);
  return self;
}


#line 150
void RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_withBoolean_(RepackagedComAndroidInternalUtilFastPrintWriter *self, JavaIoWriter *wr, jboolean autoFlush) {
  (void) RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_withBoolean_withInt_(self, wr, autoFlush, 8192);
}


#line 150
RepackagedComAndroidInternalUtilFastPrintWriter *new_RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_withBoolean_(JavaIoWriter *wr, jboolean autoFlush) {
  RepackagedComAndroidInternalUtilFastPrintWriter *self = [RepackagedComAndroidInternalUtilFastPrintWriter alloc];
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_withBoolean_(self, wr, autoFlush);
  return self;
}


#line 171
void RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_withBoolean_withInt_(RepackagedComAndroidInternalUtilFastPrintWriter *self, JavaIoWriter *wr, jboolean autoFlush, jint bufferLen) {
  (void) JavaIoPrintWriter_initWithJavaIoWriter_withBoolean_(self, new_RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter_init(), autoFlush);
  if (wr == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"wr is null");
  }
  self->mBufferLen_ = bufferLen;
  self->mText_ = [IOSCharArray newArrayWithLength:bufferLen];
  self->mBytes_ = nil;
  self->mOutputStream_ = nil;
  self->mWriter_ = wr;
  self->mPrinter_ = nil;
  self->mAutoFlush_ = autoFlush;
  self->mSeparator_ = JavaLangSystem_lineSeparator();
  RepackagedComAndroidInternalUtilFastPrintWriter_initDefaultEncoder(self);
}


#line 171
RepackagedComAndroidInternalUtilFastPrintWriter *new_RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_withBoolean_withInt_(JavaIoWriter *wr, jboolean autoFlush, jint bufferLen) {
  RepackagedComAndroidInternalUtilFastPrintWriter *self = [RepackagedComAndroidInternalUtilFastPrintWriter alloc];
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithJavaIoWriter_withBoolean_withInt_(self, wr, autoFlush, bufferLen);
  return self;
}


#line 197
void RepackagedComAndroidInternalUtilFastPrintWriter_initWithRepackagedAndroidUtilPrinter_(RepackagedComAndroidInternalUtilFastPrintWriter *self, id<RepackagedAndroidUtilPrinter> pr) {
  (void) RepackagedComAndroidInternalUtilFastPrintWriter_initWithRepackagedAndroidUtilPrinter_withInt_(self, pr, 512);
}


#line 197
RepackagedComAndroidInternalUtilFastPrintWriter *new_RepackagedComAndroidInternalUtilFastPrintWriter_initWithRepackagedAndroidUtilPrinter_(id<RepackagedAndroidUtilPrinter> pr) {
  RepackagedComAndroidInternalUtilFastPrintWriter *self = [RepackagedComAndroidInternalUtilFastPrintWriter alloc];
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithRepackagedAndroidUtilPrinter_(self, pr);
  return self;
}


#line 214
void RepackagedComAndroidInternalUtilFastPrintWriter_initWithRepackagedAndroidUtilPrinter_withInt_(RepackagedComAndroidInternalUtilFastPrintWriter *self, id<RepackagedAndroidUtilPrinter> pr, jint bufferLen) {
  (void) JavaIoPrintWriter_initWithJavaIoWriter_withBoolean_(self, new_RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter_init(), YES);
  if (pr == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"pr is null");
  }
  self->mBufferLen_ = bufferLen;
  self->mText_ = [IOSCharArray newArrayWithLength:bufferLen];
  self->mBytes_ = nil;
  self->mOutputStream_ = nil;
  self->mWriter_ = nil;
  self->mPrinter_ = pr;
  self->mAutoFlush_ = YES;
  self->mSeparator_ = JavaLangSystem_lineSeparator();
  RepackagedComAndroidInternalUtilFastPrintWriter_initDefaultEncoder(self);
}


#line 214
RepackagedComAndroidInternalUtilFastPrintWriter *new_RepackagedComAndroidInternalUtilFastPrintWriter_initWithRepackagedAndroidUtilPrinter_withInt_(id<RepackagedAndroidUtilPrinter> pr, jint bufferLen) {
  RepackagedComAndroidInternalUtilFastPrintWriter *self = [RepackagedComAndroidInternalUtilFastPrintWriter alloc];
  RepackagedComAndroidInternalUtilFastPrintWriter_initWithRepackagedAndroidUtilPrinter_withInt_(self, pr, bufferLen);
  return self;
}


#line 274
void RepackagedComAndroidInternalUtilFastPrintWriter_initDefaultEncoder(RepackagedComAndroidInternalUtilFastPrintWriter *self) {
  self->mCharset_ = [((JavaNioCharsetCharset *) nil_chk(JavaNioCharsetCharset_defaultCharset())) newEncoder];
  (void) [((JavaNioCharsetCharsetEncoder *) nil_chk(self->mCharset_)) onMalformedInputWithJavaNioCharsetCodingErrorAction:JavaNioCharsetCodingErrorAction_get_REPLACE_()];
  (void) [self->mCharset_ onUnmappableCharacterWithJavaNioCharsetCodingErrorAction:JavaNioCharsetCodingErrorAction_get_REPLACE_()];
}

void RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithChar_(RepackagedComAndroidInternalUtilFastPrintWriter *self, jchar c) {
  jint pos = self->mPos_;
  if (pos >= (self->mBufferLen_ - 1)) {
    RepackagedComAndroidInternalUtilFastPrintWriter_flushLocked(self);
    pos = self->mPos_;
  }
  *IOSCharArray_GetRef(nil_chk(self->mText_), pos) = c;
  self->mPos_ = pos + 1;
}

void RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithNSString_withInt_withInt_(RepackagedComAndroidInternalUtilFastPrintWriter *self, NSString *str, jint i, jint length) {
  jint BUFFER_LEN = self->mBufferLen_;
  if (length > BUFFER_LEN) {
    jint end = i + length;
    while (i < end) {
      jint next = i + BUFFER_LEN;
      RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithNSString_withInt_withInt_(self, str, i, next < end ? BUFFER_LEN : (end - i));
      i = next;
    }
    return;
  }
  jint pos = self->mPos_;
  if ((pos + length) > BUFFER_LEN) {
    RepackagedComAndroidInternalUtilFastPrintWriter_flushLocked(self);
    pos = self->mPos_;
  }
  [((NSString *) nil_chk(str)) getChars:i sourceEnd:i + length destination:self->mText_ destinationBegin:pos];
  self->mPos_ = pos + length;
}

void RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithCharArray_withInt_withInt_(RepackagedComAndroidInternalUtilFastPrintWriter *self, IOSCharArray *buf, jint i, jint length) {
  jint BUFFER_LEN = self->mBufferLen_;
  if (length > BUFFER_LEN) {
    jint end = i + length;
    while (i < end) {
      jint next = i + BUFFER_LEN;
      RepackagedComAndroidInternalUtilFastPrintWriter_appendLockedWithCharArray_withInt_withInt_(self, buf, i, next < end ? BUFFER_LEN : (end - i));
      i = next;
    }
    return;
  }
  jint pos = self->mPos_;
  if ((pos + length) > BUFFER_LEN) {
    RepackagedComAndroidInternalUtilFastPrintWriter_flushLocked(self);
    pos = self->mPos_;
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(buf, i, self->mText_, pos, length);
  self->mPos_ = pos + length;
}

void RepackagedComAndroidInternalUtilFastPrintWriter_flushBytesLocked(RepackagedComAndroidInternalUtilFastPrintWriter *self) {
  jint position;
  if ((position = [((JavaNioByteBuffer *) nil_chk(self->mBytes_)) position]) > 0) {
    (void) [self->mBytes_ flip];
    [((JavaIoOutputStream *) nil_chk(self->mOutputStream_)) writeWithByteArray:[self->mBytes_ array] withInt:0 withInt:position];
    (void) [self->mBytes_ clear];
  }
}

void RepackagedComAndroidInternalUtilFastPrintWriter_flushLocked(RepackagedComAndroidInternalUtilFastPrintWriter *self) {
  
#line 341
  if (self->mPos_ > 0) {
    if (self->mOutputStream_ != nil) {
      JavaNioCharBuffer *charBuffer = JavaNioCharBuffer_wrapWithCharArray_withInt_withInt_(self->mText_, 0, self->mPos_);
      JavaNioCharsetCoderResult *result = [((JavaNioCharsetCharsetEncoder *) nil_chk(self->mCharset_)) encodeWithJavaNioCharBuffer:charBuffer withJavaNioByteBuffer:self->mBytes_ withBoolean:YES];
      while (YES) {
        if ([((JavaNioCharsetCoderResult *) nil_chk(result)) isError]) {
          @throw new_JavaIoIOException_initWithNSString_([result description]);
        }
        else
#line 348
        if ([result isOverflow]) {
          RepackagedComAndroidInternalUtilFastPrintWriter_flushBytesLocked(self);
          result = [self->mCharset_ encodeWithJavaNioCharBuffer:charBuffer withJavaNioByteBuffer:self->mBytes_ withBoolean:YES];
          continue;
        }
        break;
      }
      RepackagedComAndroidInternalUtilFastPrintWriter_flushBytesLocked(self);
      [self->mOutputStream_ flush];
    }
    else
#line 357
    if (self->mWriter_ != nil) {
      [self->mWriter_ writeWithCharArray:self->mText_ withInt:0 withInt:self->mPos_];
      [self->mWriter_ flush];
    }
    else {
      
#line 361
      jint nonEolOff = 0;
      jint sepLen = ((jint) [((NSString *) nil_chk(self->mSeparator_)) length]);
      jint len = sepLen < self->mPos_ ? sepLen : self->mPos_;
      while (nonEolOff < len && IOSCharArray_Get(nil_chk(self->mText_), self->mPos_ - 1 - nonEolOff) ==
#line 365
      [self->mSeparator_ charAtWithInt:((jint) [self->mSeparator_ length]) - 1 - nonEolOff]) {
        nonEolOff++;
      }
      if (nonEolOff >= self->mPos_) {
        [((id<RepackagedAndroidUtilPrinter>) nil_chk(self->mPrinter_)) printlnWithNSString:@""];
      }
      else {
        
#line 371
        [((id<RepackagedAndroidUtilPrinter>) nil_chk(self->mPrinter_)) printlnWithNSString:[NSString stringWithCharacters:self->mText_ offset:0 length:self->mPos_ - nonEolOff]];
      }
    }
    self->mPos_ = 0;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComAndroidInternalUtilFastPrintWriter)


#line 18
@implementation RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter

- (void)close {
  JavaLangUnsupportedOperationException *ex = new_JavaLangUnsupportedOperationException_initWithNSString_(
#line 22
  @"Shouldn't be here");
  @throw ex;
}

- (void)flush {
  [self close];
}


#line 32
- (void)writeWithCharArray:(IOSCharArray *)buf
                   withInt:(jint)offset
                   withInt:(jint)count {
  [self close];
}

- (instancetype)init {
  RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "writeWithCharArray:withInt:withInt:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter = { 2, "DummyWriter", "repackaged.com.android.internal.util", "FastPrintWriter", 0xa, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter;
}

@end

void RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter_init(RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter *self) {
  (void) JavaIoWriter_init(self);
}

RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter *new_RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter_init() {
  RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter *self = [RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter alloc];
  RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedComAndroidInternalUtilFastPrintWriter_DummyWriter)
