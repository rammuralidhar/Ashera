//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/LocalLog.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "LocalLog.h"
#include "java/io/FileDescriptor.h"
#include "java/io/PrintWriter.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/Calendar.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/ListIterator.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/LocalLog.java"

@interface RepackagedAndroidUtilLocalLog () {
 @public
  JavaUtilLinkedList *mLog_;
  jint mMaxLines_;
  jlong mNow_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidUtilLocalLog, mLog_, JavaUtilLinkedList *)

@interface RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog () {
 @public
  RepackagedAndroidUtilLocalLog *mLog_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog, mLog_, RepackagedAndroidUtilLocalLog *)


#line 28
@implementation RepackagedAndroidUtilLocalLog


#line 34
- (instancetype)initWithInt:(jint)maxLines {
  RepackagedAndroidUtilLocalLog_initWithInt_(self, maxLines);
  return self;
}

- (void)logWithNSString:(NSString *)msg {
  @synchronized(self) {
    
#line 40
    if (mMaxLines_ > 0) {
      mNow_ = JavaLangSystem_currentTimeMillis();
      JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
      JavaUtilCalendar *c = JavaUtilCalendar_getInstance();
      [((JavaUtilCalendar *) nil_chk(c)) setTimeInMillisWithLong:mNow_];
      (void) [sb appendWithNSString:NSString_formatWithNSString_withNSObjectArray_(@"%tm-%td %tH:%tM:%tS.%tL", [IOSObjectArray newArrayWithObjects:(id[]){ c, c, c, c, c, c } count:6 type:NSObject_class_()])];
      [((JavaUtilLinkedList *) nil_chk(mLog_)) addWithId:JreStrcat("$$$", [sb description], @" - ", msg)];
      while ([mLog_ size] > mMaxLines_) (void) [mLog_ remove];
    }
  }
}


#line 51
- (void)dumpWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)fd
               withJavaIoPrintWriter:(JavaIoPrintWriter *)pw
                   withNSStringArray:(IOSObjectArray *)args {
  @synchronized(self) {
    
#line 52
    id<JavaUtilIterator> itr = [((JavaUtilLinkedList *) nil_chk(mLog_)) listIteratorWithInt:0];
    while ([((id<JavaUtilIterator>) nil_chk(itr)) hasNext]) {
      [((JavaIoPrintWriter *) nil_chk(pw)) printlnWithNSString:[itr next]];
    }
  }
}


#line 58
- (void)reverseDumpWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)fd
                      withJavaIoPrintWriter:(JavaIoPrintWriter *)pw
                          withNSStringArray:(IOSObjectArray *)args {
  @synchronized(self) {
    
#line 59
    for (jint i = [((JavaUtilLinkedList *) nil_chk(mLog_)) size] - 1; i >= 0; i--) {
      [((JavaIoPrintWriter *) nil_chk(pw)) printlnWithNSString:[mLog_ getWithInt:i]];
    }
  }
}


#line 74
- (RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog *)readOnlyLocalLog {
  return new_RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog_initWithRepackagedAndroidUtilLocalLog_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "LocalLog", NULL, 0x1, NULL, NULL },
    { "logWithNSString:", "log", "V", 0x21, NULL, NULL },
    { "dumpWithJavaIoFileDescriptor:withJavaIoPrintWriter:withNSStringArray:", "dump", "V", 0x21, NULL, NULL },
    { "reverseDumpWithJavaIoFileDescriptor:withJavaIoPrintWriter:withNSStringArray:", "reverseDump", "V", 0x21, NULL, NULL },
    { "readOnlyLocalLog", NULL, "Lrepackaged.android.util.LocalLog$ReadOnlyLocalLog;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mLog_", NULL, 0x2, "Ljava.util.LinkedList;", NULL, "Ljava/util/LinkedList<Ljava/lang/String;>;",  },
    { "mMaxLines_", NULL, 0x2, "I", NULL, NULL,  },
    { "mNow_", NULL, 0x2, "J", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lrepackaged.android.util.LocalLog$ReadOnlyLocalLog;"};
  static const J2ObjcClassInfo _RepackagedAndroidUtilLocalLog = { 2, "LocalLog", "repackaged.android.util", NULL, 0x11, 5, methods, 3, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_RepackagedAndroidUtilLocalLog;
}

@end


#line 34
void RepackagedAndroidUtilLocalLog_initWithInt_(RepackagedAndroidUtilLocalLog *self, jint maxLines) {
  (void) NSObject_init(self);
  
#line 35
  self->mLog_ = new_JavaUtilLinkedList_init();
  self->mMaxLines_ = maxLines;
}


#line 34
RepackagedAndroidUtilLocalLog *new_RepackagedAndroidUtilLocalLog_initWithInt_(jint maxLines) {
  RepackagedAndroidUtilLocalLog *self = [RepackagedAndroidUtilLocalLog alloc];
  RepackagedAndroidUtilLocalLog_initWithInt_(self, maxLines);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilLocalLog)


#line 64
@implementation RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog

- (instancetype)initWithRepackagedAndroidUtilLocalLog:(RepackagedAndroidUtilLocalLog *)log {
  RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog_initWithRepackagedAndroidUtilLocalLog_(self, log);
  return self;
}


#line 69
- (void)dumpWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)fd
               withJavaIoPrintWriter:(JavaIoPrintWriter *)pw
                   withNSStringArray:(IOSObjectArray *)args {
  [((RepackagedAndroidUtilLocalLog *) nil_chk(mLog_)) dumpWithJavaIoFileDescriptor:fd withJavaIoPrintWriter:pw withNSStringArray:args];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRepackagedAndroidUtilLocalLog:", "ReadOnlyLocalLog", NULL, 0x0, NULL, NULL },
    { "dumpWithJavaIoFileDescriptor:withJavaIoPrintWriter:withNSStringArray:", "dump", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mLog_", NULL, 0x12, "Lrepackaged.android.util.LocalLog;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog = { 2, "ReadOnlyLocalLog", "repackaged.android.util", "LocalLog", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog;
}

@end


#line 66
void RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog_initWithRepackagedAndroidUtilLocalLog_(RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog *self, RepackagedAndroidUtilLocalLog *log) {
  (void) NSObject_init(self);
  
#line 67
  self->mLog_ = log;
}


#line 66
RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog *new_RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog_initWithRepackagedAndroidUtilLocalLog_(RepackagedAndroidUtilLocalLog *log) {
  RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog *self = [RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog alloc];
  RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog_initWithRepackagedAndroidUtilLocalLog_(self, log);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilLocalLog_ReadOnlyLocalLog)
