//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/SparseArray.java
//


#include "ArrayUtils.h"
#include "ContainerHelpers.h"
#include "EmptyArray.h"
#include "GrowingArrayUtils.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "SparseArray.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/SparseArray.java"

@interface RepackagedAndroidUtilSparseArray () {
 @public
  jboolean mGarbage_;
  IOSIntArray *mKeys_;
  IOSObjectArray *mValues_;
  jint mSize_;
}

- (void)gc;

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidUtilSparseArray, mKeys_, IOSIntArray *)
J2OBJC_FIELD_SETTER(RepackagedAndroidUtilSparseArray, mValues_, IOSObjectArray *)

static id RepackagedAndroidUtilSparseArray_DELETED_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidUtilSparseArray, DELETED_, id)

__attribute__((unused)) static void RepackagedAndroidUtilSparseArray_gc(RepackagedAndroidUtilSparseArray *self);

J2OBJC_INITIALIZED_DEFN(RepackagedAndroidUtilSparseArray)


#line 51
@implementation RepackagedAndroidUtilSparseArray


#line 62
- (instancetype)init {
  RepackagedAndroidUtilSparseArray_init(self);
  return self;
}


#line 73
- (instancetype)initWithInt:(jint)initialCapacity {
  RepackagedAndroidUtilSparseArray_initWithInt_(self, initialCapacity);
  return self;
}


#line 86
- (RepackagedAndroidUtilSparseArray *)clone {
  RepackagedAndroidUtilSparseArray *clone = nil;
  @try {
    clone = (RepackagedAndroidUtilSparseArray *) check_class_cast([super clone], [RepackagedAndroidUtilSparseArray class]);
    ((RepackagedAndroidUtilSparseArray *) nil_chk(clone))->mKeys_ = [((IOSIntArray *) nil_chk(mKeys_)) clone];
    clone->mValues_ = [((IOSObjectArray *) nil_chk(mValues_)) clone];
  }
  @catch (
#line 92
  JavaLangCloneNotSupportedException *cnse) {
  }
  
#line 95
  return clone;
}

- (id)getWithInt:(jint)key {
  return [self getWithInt:key withId:nil];
}


#line 111
- (id)getWithInt:(jint)key
          withId:(id)valueIfKeyNotFound {
  jint i = RepackagedAndroidUtilContainerHelpers_binarySearchWithIntArray_withInt_withInt_(mKeys_, mSize_, key);
  
#line 114
  if (i < 0 || IOSObjectArray_Get(nil_chk(mValues_), i) == RepackagedAndroidUtilSparseArray_DELETED_) {
    return valueIfKeyNotFound;
  }
  else {
    
#line 117
    return (id) IOSObjectArray_Get(mValues_, i);
  }
}


#line 124
- (void)delete__WithInt:(jint)key {
  jint i = RepackagedAndroidUtilContainerHelpers_binarySearchWithIntArray_withInt_withInt_(mKeys_, mSize_, key);
  
#line 127
  if (i >= 0) {
    if (IOSObjectArray_Get(nil_chk(mValues_), i) != RepackagedAndroidUtilSparseArray_DELETED_) {
      (void) IOSObjectArray_Set(mValues_, i, RepackagedAndroidUtilSparseArray_DELETED_);
      mGarbage_ = YES;
    }
  }
}


#line 139
- (id)removeReturnOldWithInt:(jint)key {
  jint i = RepackagedAndroidUtilContainerHelpers_binarySearchWithIntArray_withInt_withInt_(mKeys_, mSize_, key);
  
#line 142
  if (i >= 0) {
    if (IOSObjectArray_Get(nil_chk(mValues_), i) != RepackagedAndroidUtilSparseArray_DELETED_) {
      id old = (id) IOSObjectArray_Get(mValues_, i);
      (void) IOSObjectArray_Set(mValues_, i, RepackagedAndroidUtilSparseArray_DELETED_);
      mGarbage_ = YES;
      return old;
    }
  }
  return nil;
}


#line 156
- (void)removeWithInt:(jint)key {
  [self delete__WithInt:key];
}


#line 163
- (void)removeAtWithInt:(jint)index {
  if (IOSObjectArray_Get(nil_chk(mValues_), index) != RepackagedAndroidUtilSparseArray_DELETED_) {
    (void) IOSObjectArray_Set(mValues_, index, RepackagedAndroidUtilSparseArray_DELETED_);
    mGarbage_ = YES;
  }
}


#line 176
- (void)removeAtRangeWithInt:(jint)index
                     withInt:(jint)size {
  jint end = JavaLangMath_minWithInt_withInt_(mSize_, index + size);
  for (jint i = index; i < end; i++) {
    [self removeAtWithInt:i];
  }
}


#line 183
- (void)gc {
  RepackagedAndroidUtilSparseArray_gc(self);
}


#line 216
- (void)putWithInt:(jint)key
            withId:(id)value {
  jint i = RepackagedAndroidUtilContainerHelpers_binarySearchWithIntArray_withInt_withInt_(mKeys_, mSize_, key);
  
#line 219
  if (i >= 0) {
    (void) IOSObjectArray_Set(nil_chk(mValues_), i, value);
  }
  else {
    
#line 222
    i = ~i;
    
#line 224
    if (i < mSize_ && IOSObjectArray_Get(nil_chk(mValues_), i) == RepackagedAndroidUtilSparseArray_DELETED_) {
      *IOSIntArray_GetRef(nil_chk(mKeys_), i) = key;
      (void) IOSObjectArray_Set(mValues_, i, value);
      return;
    }
    
#line 230
    if (mGarbage_ && mSize_ >= ((IOSIntArray *) nil_chk(mKeys_))->size_) {
      RepackagedAndroidUtilSparseArray_gc(self);
      
#line 234
      i = ~RepackagedAndroidUtilContainerHelpers_binarySearchWithIntArray_withInt_withInt_(mKeys_, mSize_, key);
    }
    
#line 237
    mKeys_ = RepackagedComAndroidInternalUtilGrowingArrayUtils_insertWithIntArray_withInt_withInt_withInt_(mKeys_, mSize_, i, key);
    mValues_ = RepackagedComAndroidInternalUtilGrowingArrayUtils_insertWithNSObjectArray_withInt_withInt_withId_(mValues_, mSize_, i, value);
    mSize_++;
  }
}


#line 247
- (jint)size {
  if (mGarbage_) {
    RepackagedAndroidUtilSparseArray_gc(self);
  }
  
#line 252
  return mSize_;
}


#line 265
- (jint)keyAtWithInt:(jint)index {
  if (mGarbage_) {
    RepackagedAndroidUtilSparseArray_gc(self);
  }
  
#line 270
  return IOSIntArray_Get(nil_chk(mKeys_), index);
}


#line 285
- (id)valueAtWithInt:(jint)index {
  if (mGarbage_) {
    RepackagedAndroidUtilSparseArray_gc(self);
  }
  
#line 290
  return (id) IOSObjectArray_Get(nil_chk(mValues_), index);
}


#line 298
- (void)setValueAtWithInt:(jint)index
                   withId:(id)value {
  if (mGarbage_) {
    RepackagedAndroidUtilSparseArray_gc(self);
  }
  
#line 303
  (void) IOSObjectArray_Set(nil_chk(mValues_), index, value);
}


#line 311
- (jint)indexOfKeyWithInt:(jint)key {
  if (mGarbage_) {
    RepackagedAndroidUtilSparseArray_gc(self);
  }
  
#line 316
  return RepackagedAndroidUtilContainerHelpers_binarySearchWithIntArray_withInt_withInt_(mKeys_, mSize_, key);
}


#line 329
- (jint)indexOfValueWithId:(id)value {
  if (mGarbage_) {
    RepackagedAndroidUtilSparseArray_gc(self);
  }
  
#line 334
  for (jint i = 0; i < mSize_; i++)
#line 335
  if (IOSObjectArray_Get(nil_chk(mValues_), i) == value)
#line 336
  return i;
  
#line 338
  return -1;
}


#line 344
- (void)clear {
  jint n = mSize_;
  IOSObjectArray *values = mValues_;
  
#line 348
  for (jint i = 0; i < n; i++) {
    (void) IOSObjectArray_Set(nil_chk(values), i, nil);
  }
  
#line 352
  mSize_ = 0;
  mGarbage_ = NO;
}


#line 360
- (void)appendWithInt:(jint)key
               withId:(id)value {
  if (mSize_ != 0 && key <= IOSIntArray_Get(nil_chk(mKeys_), mSize_ - 1)) {
    [self putWithInt:key withId:value];
    return;
  }
  
#line 366
  if (mGarbage_ && mSize_ >= ((IOSIntArray *) nil_chk(mKeys_))->size_) {
    RepackagedAndroidUtilSparseArray_gc(self);
  }
  
#line 370
  mKeys_ = RepackagedComAndroidInternalUtilGrowingArrayUtils_appendWithIntArray_withInt_withInt_(mKeys_, mSize_, key);
  mValues_ = RepackagedComAndroidInternalUtilGrowingArrayUtils_appendWithNSObjectArray_withInt_withId_(mValues_, mSize_, value);
  mSize_++;
}


#line 383
- (NSString *)description {
  if ([self size] <= 0) {
    return @"{}";
  }
  
#line 388
  JavaLangStringBuilder *buffer = new_JavaLangStringBuilder_initWithInt_(mSize_ * 28);
  (void) [buffer appendWithChar:'{'];
  for (jint i = 0; i < mSize_; i++) {
    if (i > 0) {
      (void) [buffer appendWithNSString:@", "];
    }
    jint key = [self keyAtWithInt:i];
    (void) [buffer appendWithInt:key];
    (void) [buffer appendWithChar:'='];
    id value = [self valueAtWithInt:i];
    if (value != self) {
      (void) [buffer appendWithId:value];
    }
    else {
      
#line 401
      (void) [buffer appendWithNSString:@"(this Map)"];
    }
  }
  (void) [buffer appendWithChar:'}'];
  return [buffer description];
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (void)initialize {
  if (self == [RepackagedAndroidUtilSparseArray class]) {
    RepackagedAndroidUtilSparseArray_DELETED_ = new_NSObject_init();
    J2OBJC_SET_INITIALIZED(RepackagedAndroidUtilSparseArray)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SparseArray", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "SparseArray", NULL, 0x1, NULL, NULL },
    { "clone", NULL, "Lrepackaged.android.util.SparseArray;", 0x1, NULL, NULL },
    { "getWithInt:", "get", "TE;", 0x1, NULL, "(I)TE;" },
    { "getWithInt:withId:", "get", "TE;", 0x1, NULL, "(ITE;)TE;" },
    { "delete__WithInt:", "delete", "V", 0x1, NULL, NULL },
    { "removeReturnOldWithInt:", "removeReturnOld", "TE;", 0x1, NULL, "(I)TE;" },
    { "removeWithInt:", "remove", "V", 0x1, NULL, NULL },
    { "removeAtWithInt:", "removeAt", "V", 0x1, NULL, NULL },
    { "removeAtRangeWithInt:withInt:", "removeAtRange", "V", 0x1, NULL, NULL },
    { "gc", NULL, "V", 0x2, NULL, NULL },
    { "putWithInt:withId:", "put", "V", 0x1, NULL, "(ITE;)V" },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "keyAtWithInt:", "keyAt", "I", 0x1, NULL, NULL },
    { "valueAtWithInt:", "valueAt", "TE;", 0x1, NULL, "(I)TE;" },
    { "setValueAtWithInt:withId:", "setValueAt", "V", 0x1, NULL, "(ITE;)V" },
    { "indexOfKeyWithInt:", "indexOfKey", "I", 0x1, NULL, NULL },
    { "indexOfValueWithId:", "indexOfValue", "I", 0x1, NULL, "(TE;)I" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "appendWithInt:withId:", "append", "V", 0x1, NULL, "(ITE;)V" },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DELETED_", NULL, 0x1a, "Ljava.lang.Object;", &RepackagedAndroidUtilSparseArray_DELETED_, NULL,  },
    { "mGarbage_", NULL, 0x2, "Z", NULL, NULL,  },
    { "mKeys_", NULL, 0x2, "[I", NULL, NULL,  },
    { "mValues_", NULL, 0x2, "[Ljava.lang.Object;", NULL, NULL,  },
    { "mSize_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilSparseArray = { 2, "SparseArray", "repackaged.android.util", NULL, 0x1, 21, methods, 5, fields, 0, NULL, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;Ljava/lang/Cloneable;" };
  return &_RepackagedAndroidUtilSparseArray;
}

@end


#line 62
void RepackagedAndroidUtilSparseArray_init(RepackagedAndroidUtilSparseArray *self) {
  (void) RepackagedAndroidUtilSparseArray_initWithInt_(self, 10);
}


#line 62
RepackagedAndroidUtilSparseArray *new_RepackagedAndroidUtilSparseArray_init() {
  RepackagedAndroidUtilSparseArray *self = [RepackagedAndroidUtilSparseArray alloc];
  RepackagedAndroidUtilSparseArray_init(self);
  return self;
}


#line 73
void RepackagedAndroidUtilSparseArray_initWithInt_(RepackagedAndroidUtilSparseArray *self, jint initialCapacity) {
  (void) NSObject_init(self);
  self->mGarbage_ =
#line 53
  NO;
  
#line 74
  if (initialCapacity == 0) {
    self->mKeys_ = RepackagedLibcoreUtilEmptyArray_get_INT_();
    self->mValues_ = RepackagedLibcoreUtilEmptyArray_get_OBJECT_();
  }
  else {
    
#line 78
    self->mValues_ = RepackagedComAndroidInternalUtilArrayUtils_newUnpaddedObjectArrayWithInt_(initialCapacity);
    self->mKeys_ = [IOSIntArray newArrayWithLength:((IOSObjectArray *) nil_chk(self->mValues_))->size_];
  }
  self->mSize_ = 0;
}


#line 73
RepackagedAndroidUtilSparseArray *new_RepackagedAndroidUtilSparseArray_initWithInt_(jint initialCapacity) {
  RepackagedAndroidUtilSparseArray *self = [RepackagedAndroidUtilSparseArray alloc];
  RepackagedAndroidUtilSparseArray_initWithInt_(self, initialCapacity);
  return self;
}


#line 183
void RepackagedAndroidUtilSparseArray_gc(RepackagedAndroidUtilSparseArray *self) {
  
#line 186
  jint n = self->mSize_;
  jint o = 0;
  IOSIntArray *keys = self->mKeys_;
  IOSObjectArray *values = self->mValues_;
  
#line 191
  for (jint i = 0; i < n; i++) {
    id val = IOSObjectArray_Get(nil_chk(values), i);
    
#line 194
    if (val != RepackagedAndroidUtilSparseArray_DELETED_) {
      if (i != o) {
        *IOSIntArray_GetRef(nil_chk(keys), o) = IOSIntArray_Get(keys, i);
        (void) IOSObjectArray_Set(values, o, val);
        (void) IOSObjectArray_Set(values, i, nil);
      }
      
#line 201
      o++;
    }
  }
  
#line 205
  self->mGarbage_ = NO;
  self->mSize_ = o;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilSparseArray)
