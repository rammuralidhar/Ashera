//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/annotation/RequiresPermission.java
//

#ifndef _RepackagedAndroidAnnotationRequiresPermission_H_
#define _RepackagedAndroidAnnotationRequiresPermission_H_

#include "J2ObjC_header.h"
#include "java/lang/annotation/Annotation.h"

@class IOSObjectArray;

/**
 @brief Denotes that the annotated element requires (or may require) one or more permissions.
 <p/> Example of requiring a single permission: <pre> <code>&#64;RequiresPermission(Manifest.permission.SET_WALLPAPER) public abstract void setWallpaper(Bitmap bitmap) throws IOException; &#64;RequiresPermission(ACCESS_COARSE_LOCATION) public abstract Location getLastKnownLocation(String provider);</code> </pre> Example of requiring at least one permission from a set: <pre> <code></code> &#64;RequiresPermission(anyOf = ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION}) public abstract Location getLastKnownLocation(String provider); }</pre> Example of requiring multiple permissions: <pre> <code></code> &#64;RequiresPermission(allOf = ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION}) public abstract Location getLastKnownLocation(String provider); }</pre> Example of requiring separate read and write permissions for a content provider: <pre> <code>&#64;RequiresPermission.Read(&#64;RequiresPermission(READ_HISTORY_BOOKMARKS)) &#64;RequiresPermission.Write(&#64;RequiresPermission(WRITE_HISTORY_BOOKMARKS)) public static final Uri BOOKMARKS_URI = Uri.parse("content://browser/bookmarks");</code> </pre>
 */
@protocol RepackagedAndroidAnnotationRequiresPermission < JavaLangAnnotationAnnotation >

@end

J2OBJC_EMPTY_STATIC_INIT(RepackagedAndroidAnnotationRequiresPermission)

J2OBJC_TYPE_LITERAL_HEADER(RepackagedAndroidAnnotationRequiresPermission)

/**
 @brief Specifies that the given permission is required for read operations
 */
@protocol RepackagedAndroidAnnotationRequiresPermission_Read < JavaLangAnnotationAnnotation >

@end

J2OBJC_EMPTY_STATIC_INIT(RepackagedAndroidAnnotationRequiresPermission_Read)

J2OBJC_TYPE_LITERAL_HEADER(RepackagedAndroidAnnotationRequiresPermission_Read)

/**
 @brief Specifies that the given permission is required for write operations
 */
@protocol RepackagedAndroidAnnotationRequiresPermission_Write < JavaLangAnnotationAnnotation >

@end

J2OBJC_EMPTY_STATIC_INIT(RepackagedAndroidAnnotationRequiresPermission_Write)

J2OBJC_TYPE_LITERAL_HEADER(RepackagedAndroidAnnotationRequiresPermission_Write)

#endif // _RepackagedAndroidAnnotationRequiresPermission_H_
