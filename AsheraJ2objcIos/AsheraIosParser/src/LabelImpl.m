//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/dummyimpl/ios/LabelImpl.java
//


#include "ContextWrapper.h"
#include "HasWidgets.h"
#include "J2ObjC_source.h"
#include "LabelImpl.h"
#include "View.h"
#include "ViewGroup.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/Map.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/dummyimpl/ios/LabelImpl.java"

@interface IosLabelImpl () {
 @public
  jint width_;
  jint height_;
  jint weight_;
}

- (jint)nativeMeasureWidth;

- (jint)nativeMeasureHeight;

@end

__attribute__((unused)) static jint IosLabelImpl_nativeMeasureWidth(IosLabelImpl *self);

__attribute__((unused)) static jint IosLabelImpl_nativeMeasureHeight(IosLabelImpl *self);


#line 13
@implementation IosLabelImpl


#line 18
- (instancetype)init {
  IosLabelImpl_init(self);
  return self;
}

- (void)setOpacityWithFloat:(jfloat)opacity {
}


#line 29
- (void)setBackgroundColorWithNSString:(NSString *)color {
}


#line 35
- (void)setBackgroundImageWithNSString:(NSString *)backgroundImage {
}


#line 41
- (void)setPaddingTopWithNSString:(NSString *)paddingTop {
}


#line 47
- (void)setPaddingBottomWithNSString:(NSString *)paddingBottom {
}


#line 53
- (void)setPaddingLeftWithNSString:(NSString *)paddingLeft {
}


#line 59
- (void)setPaddingRightWithNSString:(NSString *)paddingRight {
}


#line 65
- (void)setMarginTopWithNSString:(NSString *)marginTop {
}


#line 71
- (void)setMarginBottomWithNSString:(NSString *)marginBottom {
}


#line 77
- (void)setMarginLeftWithNSString:(NSString *)marginLeft {
}


#line 83
- (void)setMarginRightWithNSString:(NSString *)marginRight {
}


#line 89
- (id)asWidget {
  return [self nativeAsWidget];
}

- (id)nativeAsWidget {
  return self.uiLabel;
}


#line 98
- (void)createWithJavaUtilMap:(id<JavaUtilMap>)metadata {
  [self nativeCreate];
}

- (void)nativeCreate {
  self.uiLabel = [UILabel new];
  self.uiLabel.numberOfLines = 3;
}


#line 109
- (void)setParentWithComAsheraAndroidWidgetFactoryHasWidgets:(id<ComAsheraAndroidWidgetFactoryHasWidgets>)widget {
  mParent_ = (RepackagedAndroidViewViewGroup *) check_class_cast(widget, [RepackagedAndroidViewViewGroup class]);
}


#line 114
- (NSString *)getText {
  return [self.uiLabel text];
}


#line 121
- (void)setTextWithNSString:(NSString *)text {
  [self nativeSetTextWithNSString:text];
}


#line 126
- (void)nativeSetTextWithNSString:(NSString *)text {
  [self.uiLabel setText:text];
}


#line 131
- (void)setColorWithNSString:(NSString *)color {
}


#line 137
- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec {
  jint widthMode = RepackagedAndroidViewView_MeasureSpec_getModeWithInt_(widthMeasureSpec);
  jint heightMode = RepackagedAndroidViewView_MeasureSpec_getModeWithInt_(heightMeasureSpec);
  jint widthSize = RepackagedAndroidViewView_MeasureSpec_getSizeWithInt_(widthMeasureSpec);
  jint heightSize = RepackagedAndroidViewView_MeasureSpec_getSizeWithInt_(heightMeasureSpec);
  
#line 143
  jint width;
  jint height;
  if (widthMode == RepackagedAndroidViewView_MeasureSpec_EXACTLY) {
    
#line 147
    width = widthSize;
  }
  else {
    
#line 149
    width = IosLabelImpl_nativeMeasureWidth(self);
  }
  
#line 152
  if (heightMode == RepackagedAndroidViewView_MeasureSpec_EXACTLY) {
    
#line 154
    height = heightSize;
  }
  else {
    
#line 156
    height = IosLabelImpl_nativeMeasureHeight(self);
  }
  
#line 159
  [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) printlnWithNSString:JreStrcat("$ICIC$", @"label :", height, ' ', width, ' ', [self getText])];
  [self setMeasuredDimensionWithInt:width withInt:height];
}


#line 163
- (jint)nativeMeasureWidth {
  return IosLabelImpl_nativeMeasureWidth(self);
}


#line 169
- (jint)nativeMeasureHeight {
  return IosLabelImpl_nativeMeasureHeight(self);
}


#line 176
- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b {
  [super onLayoutWithBoolean:changed withInt:l withInt:t withInt:r withInt:b];
  
#line 179
  [self nativeMakeFrameWithInt:l withInt:t withInt:r withInt:b];
}


#line 182
- (void)nativeMakeFrameWithInt:(jint)l
                       withInt:(jint)t
                       withInt:(jint)r
                       withInt:(jint)b {
  [self.uiLabel setFrame:CGRectMake(l, t, r-l, b-t)];
}


#line 188
- (void)setParamWidthWithInt:(jint)width {
  self->width_ = width;
}


#line 193
- (void)setParamHeightWithInt:(jint)height {
  self->height_ = height;
}


#line 198
- (jint)getParamWidth {
  return width_;
}


#line 203
- (jint)getParamHeight {
  return height_;
}


#line 208
- (jint)getWeigth {
  return weight_;
}


#line 213
- (void)setWeigthWithInt:(jint)weight {
  self->weight_ = weight;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "LabelImpl", NULL, 0x1, NULL, NULL },
    { "setOpacityWithFloat:", "setOpacity", "V", 0x1, NULL, NULL },
    { "setBackgroundColorWithNSString:", "setBackgroundColor", "V", 0x1, NULL, NULL },
    { "setBackgroundImageWithNSString:", "setBackgroundImage", "V", 0x1, NULL, NULL },
    { "setPaddingTopWithNSString:", "setPaddingTop", "V", 0x1, NULL, NULL },
    { "setPaddingBottomWithNSString:", "setPaddingBottom", "V", 0x1, NULL, NULL },
    { "setPaddingLeftWithNSString:", "setPaddingLeft", "V", 0x1, NULL, NULL },
    { "setPaddingRightWithNSString:", "setPaddingRight", "V", 0x1, NULL, NULL },
    { "setMarginTopWithNSString:", "setMarginTop", "V", 0x1, NULL, NULL },
    { "setMarginBottomWithNSString:", "setMarginBottom", "V", 0x1, NULL, NULL },
    { "setMarginLeftWithNSString:", "setMarginLeft", "V", 0x1, NULL, NULL },
    { "setMarginRightWithNSString:", "setMarginRight", "V", 0x1, NULL, NULL },
    { "asWidget", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "nativeAsWidget", NULL, "Ljava.lang.Object;", 0x101, NULL, NULL },
    { "createWithJavaUtilMap:", "create", "V", 0x1, NULL, NULL },
    { "nativeCreate", NULL, "V", 0x101, NULL, NULL },
    { "setParentWithComAsheraAndroidWidgetFactoryHasWidgets:", "setParent", "V", 0x1, NULL, NULL },
    { "getText", NULL, "Ljava.lang.String;", 0x101, NULL, NULL },
    { "setTextWithNSString:", "setText", "V", 0x1, NULL, NULL },
    { "nativeSetTextWithNSString:", "nativeSetText", "V", 0x101, NULL, NULL },
    { "setColorWithNSString:", "setColor", "V", 0x1, NULL, NULL },
    { "onMeasureWithInt:withInt:", "onMeasure", "V", 0x4, NULL, NULL },
    { "nativeMeasureWidth", NULL, "I", 0x102, NULL, NULL },
    { "nativeMeasureHeight", NULL, "I", 0x102, NULL, NULL },
    { "onLayoutWithBoolean:withInt:withInt:withInt:withInt:", "onLayout", "V", 0x4, NULL, NULL },
    { "nativeMakeFrameWithInt:withInt:withInt:withInt:", "nativeMakeFrame", "V", 0x101, NULL, NULL },
    { "setParamWidthWithInt:", "setParamWidth", "V", 0x1, NULL, NULL },
    { "setParamHeightWithInt:", "setParamHeight", "V", 0x1, NULL, NULL },
    { "getParamWidth", NULL, "I", 0x1, NULL, NULL },
    { "getParamHeight", NULL, "I", 0x1, NULL, NULL },
    { "getWeigth", NULL, "I", 0x1, NULL, NULL },
    { "setWeigthWithInt:", "setWeigth", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "width_", NULL, 0x2, "I", NULL, NULL,  },
    { "height_", NULL, 0x2, "I", NULL, NULL,  },
    { "weight_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _IosLabelImpl = { 2, "LabelImpl", "ios", NULL, 0x1, 32, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_IosLabelImpl;
}

@end


#line 18
void IosLabelImpl_init(IosLabelImpl *self) {
  (void) RepackagedAndroidViewView_initWithRepackagedAndroidContentContext_(self, new_RepackagedAndroidContentContextWrapper_init());
}


#line 18
IosLabelImpl *new_IosLabelImpl_init() {
  IosLabelImpl *self = [IosLabelImpl alloc];
  IosLabelImpl_init(self);
  return self;
}


#line 163
jint IosLabelImpl_nativeMeasureWidth(IosLabelImpl *self) {
  CGSize maximumLabelSize = CGSizeMake(CGFLOAT_MAX,CGFLOAT_MAX);
  CGSize requiredSize = [self.uiLabel sizeThatFits:maximumLabelSize];
  return ceil(requiredSize.width);
}

jint IosLabelImpl_nativeMeasureHeight(IosLabelImpl *self) {
  CGSize maximumLabelSize = CGSizeMake(CGFLOAT_MAX,CGFLOAT_MAX);
  CGSize requiredSize = [self.uiLabel sizeThatFits:maximumLabelSize];
  return ceil(requiredSize.height);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IosLabelImpl)
