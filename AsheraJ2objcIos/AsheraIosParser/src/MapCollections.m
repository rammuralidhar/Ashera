//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/MapCollections.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "MapCollections.h"
#include "Objects.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/reflect/Array.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/MapCollections.java"

@interface RepackagedAndroidUtilMapCollections_ArrayIterator () {
 @public
  RepackagedAndroidUtilMapCollections *this$0_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidUtilMapCollections_ArrayIterator, this$0_, RepackagedAndroidUtilMapCollections *)

@interface RepackagedAndroidUtilMapCollections_MapIterator () {
 @public
  RepackagedAndroidUtilMapCollections *this$0_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidUtilMapCollections_MapIterator, this$0_, RepackagedAndroidUtilMapCollections *)

@interface RepackagedAndroidUtilMapCollections_EntrySet () {
 @public
  RepackagedAndroidUtilMapCollections *this$0_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidUtilMapCollections_EntrySet, this$0_, RepackagedAndroidUtilMapCollections *)

@interface RepackagedAndroidUtilMapCollections_KeySet () {
 @public
  RepackagedAndroidUtilMapCollections *this$0_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidUtilMapCollections_KeySet, this$0_, RepackagedAndroidUtilMapCollections *)

@interface RepackagedAndroidUtilMapCollections_ValuesCollection () {
 @public
  RepackagedAndroidUtilMapCollections *this$0_;
}

@end

J2OBJC_FIELD_SETTER(RepackagedAndroidUtilMapCollections_ValuesCollection, this$0_, RepackagedAndroidUtilMapCollections *)


#line 32
@implementation RepackagedAndroidUtilMapCollections


#line 456
+ (jboolean)containsAllHelperWithJavaUtilMap:(id<JavaUtilMap>)map
                      withJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return RepackagedAndroidUtilMapCollections_containsAllHelperWithJavaUtilMap_withJavaUtilCollection_(map, collection);
}


#line 466
+ (jboolean)removeAllHelperWithJavaUtilMap:(id<JavaUtilMap>)map
                    withJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return RepackagedAndroidUtilMapCollections_removeAllHelperWithJavaUtilMap_withJavaUtilCollection_(map, collection);
}


#line 475
+ (jboolean)retainAllHelperWithJavaUtilMap:(id<JavaUtilMap>)map
                    withJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return RepackagedAndroidUtilMapCollections_retainAllHelperWithJavaUtilMap_withJavaUtilCollection_(map, collection);
}


#line 486
- (IOSObjectArray *)toArrayHelperWithInt:(jint)offset {
  jint N = [self colGetSize];
  IOSObjectArray *result = [IOSObjectArray newArrayWithLength:N type:NSObject_class_()];
  for (jint i = 0; i < N; i++) {
    (void) IOSObjectArray_Set(result, i, [self colGetEntryWithInt:i withInt:offset]);
  }
  return result;
}

- (IOSObjectArray *)toArrayHelperWithNSObjectArray:(IOSObjectArray *)array
                                           withInt:(jint)offset {
  jint N = [self colGetSize];
  if (((IOSObjectArray *) nil_chk(array))->size_ < N) {
    IOSObjectArray *newArray =
#line 499
    (IOSObjectArray *) check_class_cast(JavaLangReflectArray_newInstanceWithIOSClass_withInt_([[array getClass] getComponentType], N), [IOSObjectArray class]);
    array = newArray;
  }
  for (jint i = 0; i < N; i++) {
    (void) IOSObjectArray_Set(nil_chk(array), i, (id) [self colGetEntryWithInt:i withInt:offset]);
  }
  if (((IOSObjectArray *) nil_chk(array))->size_ > N) {
    (void) IOSObjectArray_Set(array, N, nil);
  }
  return array;
}


#line 511
+ (jboolean)equalsSetHelperWithJavaUtilSet:(id<JavaUtilSet>)set
                                    withId:(id)object {
  return RepackagedAndroidUtilMapCollections_equalsSetHelperWithJavaUtilSet_withId_(set, object);
}


#line 529
- (id<JavaUtilSet>)getEntrySet {
  if (mEntrySet_ == nil) {
    mEntrySet_ = new_RepackagedAndroidUtilMapCollections_EntrySet_initWithRepackagedAndroidUtilMapCollections_(self);
  }
  return mEntrySet_;
}

- (id<JavaUtilSet>)getKeySet {
  if (mKeySet_ == nil) {
    mKeySet_ = new_RepackagedAndroidUtilMapCollections_KeySet_initWithRepackagedAndroidUtilMapCollections_(self);
  }
  return mKeySet_;
}

- (id<JavaUtilCollection>)getValues {
  if (mValues_ == nil) {
    mValues_ = new_RepackagedAndroidUtilMapCollections_ValuesCollection_initWithRepackagedAndroidUtilMapCollections_(self);
  }
  return mValues_;
}

- (jint)colGetSize {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 551
- (id)colGetEntryWithInt:(jint)index
                 withInt:(jint)offset {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 552
- (jint)colIndexOfKeyWithId:(id)key {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 553
- (jint)colIndexOfValueWithId:(id)key {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 554
- (id<JavaUtilMap>)colGetMap {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 555
- (void)colPutWithId:(id)key
              withId:(id)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 556
- (id)colSetValueWithInt:(jint)index
                  withId:(id)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 557
- (void)colRemoveAtWithInt:(jint)index {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 558
- (void)colClear {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (instancetype)init {
  RepackagedAndroidUtilMapCollections_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "containsAllHelperWithJavaUtilMap:withJavaUtilCollection:", "containsAllHelper", "Z", 0x9, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<TK;TV;>;Ljava/util/Collection<*>;)Z" },
    { "removeAllHelperWithJavaUtilMap:withJavaUtilCollection:", "removeAllHelper", "Z", 0x9, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<TK;TV;>;Ljava/util/Collection<*>;)Z" },
    { "retainAllHelperWithJavaUtilMap:withJavaUtilCollection:", "retainAllHelper", "Z", 0x9, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<TK;TV;>;Ljava/util/Collection<*>;)Z" },
    { "toArrayHelperWithInt:", "toArrayHelper", "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "toArrayHelperWithNSObjectArray:withInt:", "toArrayHelper", "[Ljava.lang.Object;", 0x1, NULL, "<T:Ljava/lang/Object;>([TT;I)[TT;" },
    { "equalsSetHelperWithJavaUtilSet:withId:", "equalsSetHelper", "Z", 0x9, NULL, "<T:Ljava/lang/Object;>(Ljava/util/Set<TT;>;Ljava/lang/Object;)Z" },
    { "getEntrySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "getKeySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "getValues", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "colGetSize", NULL, "I", 0x404, NULL, NULL },
    { "colGetEntryWithInt:withInt:", "colGetEntry", "Ljava.lang.Object;", 0x404, NULL, NULL },
    { "colIndexOfKeyWithId:", "colIndexOfKey", "I", 0x404, NULL, NULL },
    { "colIndexOfValueWithId:", "colIndexOfValue", "I", 0x404, NULL, NULL },
    { "colGetMap", NULL, "Ljava.util.Map;", 0x404, NULL, NULL },
    { "colPutWithId:withId:", "colPut", "V", 0x404, NULL, "(TK;TV;)V" },
    { "colSetValueWithInt:withId:", "colSetValue", "TV;", 0x404, NULL, "(ITV;)TV;" },
    { "colRemoveAtWithInt:", "colRemoveAt", "V", 0x404, NULL, NULL },
    { "colClear", NULL, "V", 0x404, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mEntrySet_", NULL, 0x0, "Lrepackaged.android.util.MapCollections$EntrySet;", NULL, NULL,  },
    { "mKeySet_", NULL, 0x0, "Lrepackaged.android.util.MapCollections$KeySet;", NULL, NULL,  },
    { "mValues_", NULL, 0x0, "Lrepackaged.android.util.MapCollections$ValuesCollection;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lrepackaged.android.util.MapCollections$ArrayIterator;", "Lrepackaged.android.util.MapCollections$MapIterator;", "Lrepackaged.android.util.MapCollections$EntrySet;", "Lrepackaged.android.util.MapCollections$KeySet;", "Lrepackaged.android.util.MapCollections$ValuesCollection;"};
  static const J2ObjcClassInfo _RepackagedAndroidUtilMapCollections = { 2, "MapCollections", "repackaged.android.util", NULL, 0x400, 19, methods, 3, fields, 0, NULL, 5, inner_classes, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_RepackagedAndroidUtilMapCollections;
}

@end


#line 456
jboolean RepackagedAndroidUtilMapCollections_containsAllHelperWithJavaUtilMap_withJavaUtilCollection_(id<JavaUtilMap> map, id<JavaUtilCollection> collection) {
  RepackagedAndroidUtilMapCollections_initialize();
  
#line 457
  id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(collection)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    if (![((id<JavaUtilMap>) nil_chk(map)) containsKeyWithId:[it next]]) {
      return NO;
    }
  }
  return YES;
}


#line 466
jboolean RepackagedAndroidUtilMapCollections_removeAllHelperWithJavaUtilMap_withJavaUtilCollection_(id<JavaUtilMap> map, id<JavaUtilCollection> collection) {
  RepackagedAndroidUtilMapCollections_initialize();
  
#line 467
  jint oldSize = [((id<JavaUtilMap>) nil_chk(map)) size];
  id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(collection)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    (void) [map removeWithId:[it next]];
  }
  return oldSize != [map size];
}


#line 475
jboolean RepackagedAndroidUtilMapCollections_retainAllHelperWithJavaUtilMap_withJavaUtilCollection_(id<JavaUtilMap> map, id<JavaUtilCollection> collection) {
  RepackagedAndroidUtilMapCollections_initialize();
  
#line 476
  jint oldSize = [((id<JavaUtilMap>) nil_chk(map)) size];
  id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([map keySet])) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    if (![((id<JavaUtilCollection>) nil_chk(collection)) containsWithId:[it next]]) {
      [it remove];
    }
  }
  return oldSize != [map size];
}


#line 511
jboolean RepackagedAndroidUtilMapCollections_equalsSetHelperWithJavaUtilSet_withId_(id<JavaUtilSet> set, id object) {
  RepackagedAndroidUtilMapCollections_initialize();
  
#line 512
  if (set == object) {
    return YES;
  }
  if ([JavaUtilSet_class_() isInstance:object]) {
    id<JavaUtilSet> s = (id<JavaUtilSet>) check_protocol_cast(object, @protocol(JavaUtilSet));
    
#line 518
    @try {
      return [((id<JavaUtilSet>) nil_chk(set)) size] == [((id<JavaUtilSet>) nil_chk(s)) size] && [set containsAllWithJavaUtilCollection:s];
    }
    @catch (
#line 520
    JavaLangNullPointerException *ignored) {
      return NO;
    }
    @catch (
#line 522
    JavaLangClassCastException *ignored) {
      return NO;
    }
  }
  return NO;
}

void RepackagedAndroidUtilMapCollections_init(RepackagedAndroidUtilMapCollections *self) {
  (void) NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilMapCollections)


#line 37
@implementation RepackagedAndroidUtilMapCollections_ArrayIterator


#line 43
- (instancetype)initWithRepackagedAndroidUtilMapCollections:(RepackagedAndroidUtilMapCollections *)outer$
                                                    withInt:(jint)offset {
  RepackagedAndroidUtilMapCollections_ArrayIterator_initWithRepackagedAndroidUtilMapCollections_withInt_(self, outer$, offset);
  return self;
}

- (jboolean)hasNext {
  return mIndex_ < mSize_;
}


#line 54
- (id)next {
  id res = [this$0_ colGetEntryWithInt:mIndex_ withInt:mOffset_];
  mIndex_++;
  mCanRemove_ = YES;
  return (id) res;
}


#line 62
- (void)remove {
  if (!mCanRemove_) {
    @throw new_JavaLangIllegalStateException_init();
  }
  mIndex_--;
  mSize_--;
  mCanRemove_ = NO;
  [this$0_ colRemoveAtWithInt:mIndex_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRepackagedAndroidUtilMapCollections:withInt:", "ArrayIterator", NULL, 0x0, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrepackaged.android.util.MapCollections;", NULL, NULL,  },
    { "mOffset_", NULL, 0x10, "I", NULL, NULL,  },
    { "mSize_", NULL, 0x0, "I", NULL, NULL,  },
    { "mIndex_", NULL, 0x0, "I", NULL, NULL,  },
    { "mCanRemove_", NULL, 0x0, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilMapCollections_ArrayIterator = { 2, "ArrayIterator", "repackaged.android.util", "MapCollections", 0x10, 4, methods, 5, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Iterator<TT;>;" };
  return &_RepackagedAndroidUtilMapCollections_ArrayIterator;
}

@end


#line 43
void RepackagedAndroidUtilMapCollections_ArrayIterator_initWithRepackagedAndroidUtilMapCollections_withInt_(RepackagedAndroidUtilMapCollections_ArrayIterator *self, RepackagedAndroidUtilMapCollections *outer$, jint offset) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  self->mCanRemove_ =
#line 41
  NO;
  
#line 44
  self->mOffset_ = offset;
  self->mSize_ = [outer$ colGetSize];
}


#line 43
RepackagedAndroidUtilMapCollections_ArrayIterator *new_RepackagedAndroidUtilMapCollections_ArrayIterator_initWithRepackagedAndroidUtilMapCollections_withInt_(RepackagedAndroidUtilMapCollections *outer$, jint offset) {
  RepackagedAndroidUtilMapCollections_ArrayIterator *self = [RepackagedAndroidUtilMapCollections_ArrayIterator alloc];
  RepackagedAndroidUtilMapCollections_ArrayIterator_initWithRepackagedAndroidUtilMapCollections_withInt_(self, outer$, offset);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilMapCollections_ArrayIterator)


#line 73
@implementation RepackagedAndroidUtilMapCollections_MapIterator


#line 78
- (instancetype)initWithRepackagedAndroidUtilMapCollections:(RepackagedAndroidUtilMapCollections *)outer$ {
  RepackagedAndroidUtilMapCollections_MapIterator_initWithRepackagedAndroidUtilMapCollections_(self, outer$);
  return self;
}


#line 84
- (jboolean)hasNext {
  return mIndex_ < mEnd_;
}


#line 89
- (id<JavaUtilMap_Entry>)next {
  mIndex_++;
  mEntryValid_ = YES;
  return self;
}


#line 96
- (void)remove {
  if (!mEntryValid_) {
    @throw new_JavaLangIllegalStateException_init();
  }
  [this$0_ colRemoveAtWithInt:mIndex_];
  mIndex_--;
  mEnd_--;
  mEntryValid_ = NO;
}


#line 107
- (id)getKey {
  if (!mEntryValid_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(
#line 110
    @"This container does not support retaining Map.Entry objects");
  }
  return (id) [this$0_ colGetEntryWithInt:mIndex_ withInt:0];
}

- (id)getValue {
  if (!mEntryValid_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(
#line 119
    @"This container does not support retaining Map.Entry objects");
  }
  return (id) [this$0_ colGetEntryWithInt:mIndex_ withInt:1];
}

- (id)setValueWithId:(id)object {
  if (!mEntryValid_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(
#line 128
    @"This container does not support retaining Map.Entry objects");
  }
  return [this$0_ colSetValueWithInt:mIndex_ withId:object];
}

- (jboolean)isEqual:(id)o {
  if (!mEntryValid_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(
#line 137
    @"This container does not support retaining Map.Entry objects");
  }
  if (!([JavaUtilMap_Entry_class_() isInstance:o])) {
    return NO;
  }
  id<JavaUtilMap_Entry> e = (id<JavaUtilMap_Entry>) check_protocol_cast(o, @protocol(JavaUtilMap_Entry));
  return RepackagedLibcoreUtilObjects_equalWithId_withId_([((id<JavaUtilMap_Entry>) nil_chk(e)) getKey], [this$0_ colGetEntryWithInt:mIndex_ withInt:0]) && RepackagedLibcoreUtilObjects_equalWithId_withId_(
#line 144
  [e getValue], [this$0_ colGetEntryWithInt:mIndex_ withInt:1]);
}


#line 148
- (NSUInteger)hash {
  if (!mEntryValid_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(
#line 151
    @"This container does not support retaining Map.Entry objects");
  }
  id key = [this$0_ colGetEntryWithInt:mIndex_ withInt:0];
  id value = [this$0_ colGetEntryWithInt:mIndex_ withInt:1];
  return (key == nil ? 0 : ((jint) [key hash])) ^
#line 156
  (value == nil ? 0 : ((jint) [value hash]));
}


#line 160
- (NSString *)description {
  return JreStrcat("@C@", [self getKey], '=', [self getValue]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRepackagedAndroidUtilMapCollections:", "MapIterator", NULL, 0x0, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "Ljava.util.Map$Entry;", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "getKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "getValue", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "setValueWithId:", "setValue", "TV;", 0x1, NULL, "(TV;)TV;" },
    { "isEqual:", "equals", "Z", 0x11, NULL, NULL },
    { "hash", "hashCode", "I", 0x11, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrepackaged.android.util.MapCollections;", NULL, NULL,  },
    { "mEnd_", NULL, 0x0, "I", NULL, NULL,  },
    { "mIndex_", NULL, 0x0, "I", NULL, NULL,  },
    { "mEntryValid_", NULL, 0x0, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilMapCollections_MapIterator = { 2, "MapIterator", "repackaged.android.util", "MapCollections", 0x10, 10, methods, 4, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;Ljava/util/Map$Entry<TK;TV;>;" };
  return &_RepackagedAndroidUtilMapCollections_MapIterator;
}

@end


#line 78
void RepackagedAndroidUtilMapCollections_MapIterator_initWithRepackagedAndroidUtilMapCollections_(RepackagedAndroidUtilMapCollections_MapIterator *self, RepackagedAndroidUtilMapCollections *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  self->mEntryValid_ =
#line 76
  NO;
  
#line 79
  self->mEnd_ = [outer$ colGetSize] - 1;
  self->mIndex_ = -1;
}


#line 78
RepackagedAndroidUtilMapCollections_MapIterator *new_RepackagedAndroidUtilMapCollections_MapIterator_initWithRepackagedAndroidUtilMapCollections_(RepackagedAndroidUtilMapCollections *outer$) {
  RepackagedAndroidUtilMapCollections_MapIterator *self = [RepackagedAndroidUtilMapCollections_MapIterator alloc];
  RepackagedAndroidUtilMapCollections_MapIterator_initWithRepackagedAndroidUtilMapCollections_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilMapCollections_MapIterator)


#line 165
@implementation RepackagedAndroidUtilMapCollections_EntrySet

- (jboolean)addWithId:(id<JavaUtilMap_Entry>)object {
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 172
- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  jint oldSize = [this$0_ colGetSize];
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk(collection)) {
    [this$0_ colPutWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey] withId:[entry_ getValue]];
  }
  return oldSize != [this$0_ colGetSize];
}


#line 181
- (void)clear {
  [this$0_ colClear];
}


#line 186
- (jboolean)containsWithId:(id)o {
  if (!([JavaUtilMap_Entry_class_() isInstance:o]))
#line 188
  return NO;
  id<JavaUtilMap_Entry> e = (id<JavaUtilMap_Entry>) check_protocol_cast(o, @protocol(JavaUtilMap_Entry));
  jint index = [this$0_ colIndexOfKeyWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]];
  if (index < 0) {
    return NO;
  }
  id foundVal = [this$0_ colGetEntryWithInt:index withInt:1];
  return RepackagedLibcoreUtilObjects_equalWithId_withId_(foundVal, [e getValue]);
}

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(collection)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    if (![self containsWithId:[it next]]) {
      return NO;
    }
  }
  return YES;
}


#line 210
- (jboolean)isEmpty {
  return [this$0_ colGetSize] == 0;
}


#line 215
- (id<JavaUtilIterator>)iterator {
  return new_RepackagedAndroidUtilMapCollections_MapIterator_initWithRepackagedAndroidUtilMapCollections_(this$0_);
}


#line 220
- (jboolean)removeWithId:(id)object {
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 225
- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 230
- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 235
- (jint)size {
  return [this$0_ colGetSize];
}


#line 240
- (IOSObjectArray *)toArray {
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 245
- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array {
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 250
- (jboolean)isEqual:(id)object {
  return RepackagedAndroidUtilMapCollections_equalsSetHelperWithJavaUtilSet_withId_(self, object);
}


#line 255
- (NSUInteger)hash {
  jint result = 0;
  for (jint i = [this$0_ colGetSize] - 1; i >= 0; i--) {
    id key = [this$0_ colGetEntryWithInt:i withInt:0];
    id value = [this$0_ colGetEntryWithInt:i withInt:1];
    result += ((key == nil ? 0 : ((jint) [key hash])) ^
#line 261
    (value == nil ? 0 : ((jint) [value hash])));
  }
  return result;
}

- (instancetype)initWithRepackagedAndroidUtilMapCollections:(RepackagedAndroidUtilMapCollections *)outer$ {
  RepackagedAndroidUtilMapCollections_EntrySet_initWithRepackagedAndroidUtilMapCollections_(self, outer$);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithId:", "add", "Z", 0x1, NULL, NULL },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "containsAllWithJavaUtilCollection:", "containsAll", "Z", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "toArrayWithNSObjectArray:", "toArray", "[Ljava.lang.Object;", 0x1, NULL, "<T:Ljava/lang/Object;>([TT;)[TT;" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "initWithRepackagedAndroidUtilMapCollections:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrepackaged.android.util.MapCollections;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilMapCollections_EntrySet = { 2, "EntrySet", "repackaged.android.util", "MapCollections", 0x10, 16, methods, 1, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;" };
  return &_RepackagedAndroidUtilMapCollections_EntrySet;
}

@end

void RepackagedAndroidUtilMapCollections_EntrySet_initWithRepackagedAndroidUtilMapCollections_(RepackagedAndroidUtilMapCollections_EntrySet *self, RepackagedAndroidUtilMapCollections *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

RepackagedAndroidUtilMapCollections_EntrySet *new_RepackagedAndroidUtilMapCollections_EntrySet_initWithRepackagedAndroidUtilMapCollections_(RepackagedAndroidUtilMapCollections *outer$) {
  RepackagedAndroidUtilMapCollections_EntrySet *self = [RepackagedAndroidUtilMapCollections_EntrySet alloc];
  RepackagedAndroidUtilMapCollections_EntrySet_initWithRepackagedAndroidUtilMapCollections_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilMapCollections_EntrySet)


#line 267
@implementation RepackagedAndroidUtilMapCollections_KeySet


#line 270
- (jboolean)addWithId:(id)object {
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 275
- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 280
- (void)clear {
  [this$0_ colClear];
}


#line 285
- (jboolean)containsWithId:(id)object {
  return [this$0_ colIndexOfKeyWithId:object] >= 0;
}


#line 290
- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return RepackagedAndroidUtilMapCollections_containsAllHelperWithJavaUtilMap_withJavaUtilCollection_([this$0_ colGetMap], collection);
}


#line 295
- (jboolean)isEmpty {
  return [this$0_ colGetSize] == 0;
}


#line 300
- (id<JavaUtilIterator>)iterator {
  return new_RepackagedAndroidUtilMapCollections_ArrayIterator_initWithRepackagedAndroidUtilMapCollections_withInt_(this$0_, 0);
}


#line 305
- (jboolean)removeWithId:(id)object {
  jint index = [this$0_ colIndexOfKeyWithId:object];
  if (index >= 0) {
    [this$0_ colRemoveAtWithInt:index];
    return YES;
  }
  return NO;
}


#line 315
- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return RepackagedAndroidUtilMapCollections_removeAllHelperWithJavaUtilMap_withJavaUtilCollection_([this$0_ colGetMap], collection);
}


#line 320
- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return RepackagedAndroidUtilMapCollections_retainAllHelperWithJavaUtilMap_withJavaUtilCollection_([this$0_ colGetMap], collection);
}


#line 325
- (jint)size {
  return [this$0_ colGetSize];
}


#line 330
- (IOSObjectArray *)toArray {
  return [this$0_ toArrayHelperWithInt:0];
}


#line 335
- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array {
  return [this$0_ toArrayHelperWithNSObjectArray:array withInt:0];
}


#line 340
- (jboolean)isEqual:(id)object {
  return RepackagedAndroidUtilMapCollections_equalsSetHelperWithJavaUtilSet_withId_(self, object);
}


#line 345
- (NSUInteger)hash {
  jint result = 0;
  for (jint i = [this$0_ colGetSize] - 1; i >= 0; i--) {
    id obj = [this$0_ colGetEntryWithInt:i withInt:0];
    result += obj == nil ? 0 : ((jint) [obj hash]);
  }
  return result;
}

- (instancetype)initWithRepackagedAndroidUtilMapCollections:(RepackagedAndroidUtilMapCollections *)outer$ {
  RepackagedAndroidUtilMapCollections_KeySet_initWithRepackagedAndroidUtilMapCollections_(self, outer$);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithId:", "add", "Z", 0x1, NULL, "(TK;)Z" },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "containsAllWithJavaUtilCollection:", "containsAll", "Z", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "toArrayWithNSObjectArray:", "toArray", "[Ljava.lang.Object;", 0x1, NULL, "<T:Ljava/lang/Object;>([TT;)[TT;" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "initWithRepackagedAndroidUtilMapCollections:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrepackaged.android.util.MapCollections;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilMapCollections_KeySet = { 2, "KeySet", "repackaged.android.util", "MapCollections", 0x10, 16, methods, 1, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Set<TK;>;" };
  return &_RepackagedAndroidUtilMapCollections_KeySet;
}

@end

void RepackagedAndroidUtilMapCollections_KeySet_initWithRepackagedAndroidUtilMapCollections_(RepackagedAndroidUtilMapCollections_KeySet *self, RepackagedAndroidUtilMapCollections *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

RepackagedAndroidUtilMapCollections_KeySet *new_RepackagedAndroidUtilMapCollections_KeySet_initWithRepackagedAndroidUtilMapCollections_(RepackagedAndroidUtilMapCollections *outer$) {
  RepackagedAndroidUtilMapCollections_KeySet *self = [RepackagedAndroidUtilMapCollections_KeySet alloc];
  RepackagedAndroidUtilMapCollections_KeySet_initWithRepackagedAndroidUtilMapCollections_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilMapCollections_KeySet)


#line 355
@implementation RepackagedAndroidUtilMapCollections_ValuesCollection


#line 358
- (jboolean)addWithId:(id)object {
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 363
- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  @throw new_JavaLangUnsupportedOperationException_init();
}


#line 368
- (void)clear {
  [this$0_ colClear];
}


#line 373
- (jboolean)containsWithId:(id)object {
  return [this$0_ colIndexOfValueWithId:object] >= 0;
}


#line 378
- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(collection)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    if (![self containsWithId:[it next]]) {
      return NO;
    }
  }
  return YES;
}


#line 389
- (jboolean)isEmpty {
  return [this$0_ colGetSize] == 0;
}


#line 394
- (id<JavaUtilIterator>)iterator {
  return new_RepackagedAndroidUtilMapCollections_ArrayIterator_initWithRepackagedAndroidUtilMapCollections_withInt_(this$0_, 1);
}


#line 399
- (jboolean)removeWithId:(id)object {
  jint index = [this$0_ colIndexOfValueWithId:object];
  if (index >= 0) {
    [this$0_ colRemoveAtWithInt:index];
    return YES;
  }
  return NO;
}


#line 409
- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  jint N = [this$0_ colGetSize];
  jboolean changed = NO;
  for (jint i = 0; i < N; i++) {
    id cur = [this$0_ colGetEntryWithInt:i withInt:1];
    if ([((id<JavaUtilCollection>) nil_chk(collection)) containsWithId:cur]) {
      [this$0_ colRemoveAtWithInt:i];
      i--;
      N--;
      changed = YES;
    }
  }
  return changed;
}


#line 425
- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  jint N = [this$0_ colGetSize];
  jboolean changed = NO;
  for (jint i = 0; i < N; i++) {
    id cur = [this$0_ colGetEntryWithInt:i withInt:1];
    if (![((id<JavaUtilCollection>) nil_chk(collection)) containsWithId:cur]) {
      [this$0_ colRemoveAtWithInt:i];
      i--;
      N--;
      changed = YES;
    }
  }
  return changed;
}


#line 441
- (jint)size {
  return [this$0_ colGetSize];
}


#line 446
- (IOSObjectArray *)toArray {
  return [this$0_ toArrayHelperWithInt:1];
}


#line 451
- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array {
  return [this$0_ toArrayHelperWithNSObjectArray:array withInt:1];
}

- (instancetype)initWithRepackagedAndroidUtilMapCollections:(RepackagedAndroidUtilMapCollections *)outer$ {
  RepackagedAndroidUtilMapCollections_ValuesCollection_initWithRepackagedAndroidUtilMapCollections_(self, outer$);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithId:", "add", "Z", 0x1, NULL, "(TV;)Z" },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "containsAllWithJavaUtilCollection:", "containsAll", "Z", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "toArrayWithNSObjectArray:", "toArray", "[Ljava.lang.Object;", 0x1, NULL, "<T:Ljava/lang/Object;>([TT;)[TT;" },
    { "initWithRepackagedAndroidUtilMapCollections:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrepackaged.android.util.MapCollections;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilMapCollections_ValuesCollection = { 2, "ValuesCollection", "repackaged.android.util", "MapCollections", 0x10, 14, methods, 1, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Collection<TV;>;" };
  return &_RepackagedAndroidUtilMapCollections_ValuesCollection;
}

@end

void RepackagedAndroidUtilMapCollections_ValuesCollection_initWithRepackagedAndroidUtilMapCollections_(RepackagedAndroidUtilMapCollections_ValuesCollection *self, RepackagedAndroidUtilMapCollections *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

RepackagedAndroidUtilMapCollections_ValuesCollection *new_RepackagedAndroidUtilMapCollections_ValuesCollection_initWithRepackagedAndroidUtilMapCollections_(RepackagedAndroidUtilMapCollections *outer$) {
  RepackagedAndroidUtilMapCollections_ValuesCollection *self = [RepackagedAndroidUtilMapCollections_ValuesCollection alloc];
  RepackagedAndroidUtilMapCollections_ValuesCollection_initWithRepackagedAndroidUtilMapCollections_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilMapCollections_ValuesCollection)
