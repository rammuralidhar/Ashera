//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/graphics/Color.java
//


#include "Color.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "MathUtils.h"
#include "XmlUtils.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/RuntimeException.h"
#include "java/util/HashMap.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/graphics/Color.java"

@interface RepackagedAndroidGraphicsColor ()

+ (void)nativeRGBToHSVWithInt:(jint)red
                      withInt:(jint)greed
                      withInt:(jint)blue
               withFloatArray:(IOSFloatArray *)hsv;

+ (jint)nativeHSVToColorWithInt:(jint)alpha
                 withFloatArray:(IOSFloatArray *)hsv;

@end

static JavaUtilHashMap *RepackagedAndroidGraphicsColor_sColorNameMap_;
J2OBJC_STATIC_FIELD_GETTER(RepackagedAndroidGraphicsColor, sColorNameMap_, JavaUtilHashMap *)

__attribute__((unused)) static void RepackagedAndroidGraphicsColor_nativeRGBToHSVWithInt_withInt_withInt_withFloatArray_(jint red, jint greed, jint blue, IOSFloatArray *hsv);

__attribute__((unused)) static jint RepackagedAndroidGraphicsColor_nativeHSVToColorWithInt_withFloatArray_(jint alpha, IOSFloatArray *hsv);

J2OBJC_INITIALIZED_DEFN(RepackagedAndroidGraphicsColor)


#line 39
@implementation RepackagedAndroidGraphicsColor


#line 58
+ (jint)alphaWithInt:(jint)color {
  return RepackagedAndroidGraphicsColor_alphaWithInt_(color);
}


#line 67
+ (jint)redWithInt:(jint)color {
  return RepackagedAndroidGraphicsColor_redWithInt_(color);
}


#line 76
+ (jint)greenWithInt:(jint)color {
  return RepackagedAndroidGraphicsColor_greenWithInt_(color);
}


#line 85
+ (jint)blueWithInt:(jint)color {
  return RepackagedAndroidGraphicsColor_blueWithInt_(color);
}


#line 100
+ (jint)rgbWithInt:(jint)red
           withInt:(jint)green
           withInt:(jint)blue {
  return RepackagedAndroidGraphicsColor_rgbWithInt_withInt_withInt_(red, green, blue);
}


#line 115
+ (jint)argbWithInt:(jint)alpha
            withInt:(jint)red
            withInt:(jint)green
            withInt:(jint)blue {
  return RepackagedAndroidGraphicsColor_argbWithInt_withInt_withInt_withInt_(alpha, red, green, blue);
}


#line 126
+ (jfloat)hueWithInt:(jint)color {
  return RepackagedAndroidGraphicsColor_hueWithInt_(color);
}


#line 168
+ (jfloat)saturationWithInt:(jint)color {
  return RepackagedAndroidGraphicsColor_saturationWithInt_(color);
}


#line 195
+ (jfloat)brightnessWithInt:(jint)color {
  return RepackagedAndroidGraphicsColor_brightnessWithInt_(color);
}


#line 218
+ (jint)parseColorWithNSString:(NSString *)colorString {
  return RepackagedAndroidGraphicsColor_parseColorWithNSString_(colorString);
}


#line 250
+ (jint)HSBtoColorWithFloatArray:(IOSFloatArray *)hsb {
  return RepackagedAndroidGraphicsColor_HSBtoColorWithFloatArray_(hsb);
}


#line 268
+ (jint)HSBtoColorWithFloat:(jfloat)h
                  withFloat:(jfloat)s
                  withFloat:(jfloat)b {
  return RepackagedAndroidGraphicsColor_HSBtoColorWithFloat_withFloat_withFloat_(h, s, b);
}


#line 331
+ (void)RGBToHSVWithInt:(jint)red
                withInt:(jint)green
                withInt:(jint)blue
         withFloatArray:(IOSFloatArray *)hsv {
  RepackagedAndroidGraphicsColor_RGBToHSVWithInt_withInt_withInt_withFloatArray_(red, green, blue, hsv);
}


#line 346
+ (void)colorToHSVWithInt:(jint)color
           withFloatArray:(IOSFloatArray *)hsv {
  RepackagedAndroidGraphicsColor_colorToHSVWithInt_withFloatArray_(color, hsv);
}


#line 359
+ (jint)HSVToColorWithFloatArray:(IOSFloatArray *)hsv {
  return RepackagedAndroidGraphicsColor_HSVToColorWithFloatArray_(hsv);
}


#line 374
+ (jint)HSVToColorWithInt:(jint)alpha
           withFloatArray:(IOSFloatArray *)hsv {
  return RepackagedAndroidGraphicsColor_HSVToColorWithInt_withFloatArray_(alpha, hsv);
}


#line 381
+ (void)nativeRGBToHSVWithInt:(jint)red
                      withInt:(jint)greed
                      withInt:(jint)blue
               withFloatArray:(IOSFloatArray *)hsv {
  RepackagedAndroidGraphicsColor_nativeRGBToHSVWithInt_withInt_withInt_withFloatArray_(red, greed, blue, hsv);
}


#line 384
+ (jint)nativeHSVToColorWithInt:(jint)alpha
                 withFloatArray:(IOSFloatArray *)hsv {
  return RepackagedAndroidGraphicsColor_nativeHSVToColorWithInt_withFloatArray_(alpha, hsv);
}


#line 398
+ (jint)getHtmlColorWithNSString:(NSString *)color {
  return RepackagedAndroidGraphicsColor_getHtmlColorWithNSString_(color);
}

- (instancetype)init {
  RepackagedAndroidGraphicsColor_init(self);
  return self;
}

+ (void)initialize {
  if (self == [RepackagedAndroidGraphicsColor class]) {
    {
      
#line 414
      RepackagedAndroidGraphicsColor_sColorNameMap_ = new_JavaUtilHashMap_init();
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"black" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_BLACK)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"darkgray" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_DKGRAY)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"gray" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_GRAY)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"lightgray" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_LTGRAY)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"white" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_WHITE)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"red" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_RED)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"green" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_GREEN)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"blue" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_BLUE)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"yellow" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_YELLOW)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"cyan" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_CYAN)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"magenta" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_MAGENTA)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"aqua" withId:JavaLangInteger_valueOfWithInt_((jint) 0xFF00FFFF)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"fuchsia" withId:JavaLangInteger_valueOfWithInt_((jint) 0xFFFF00FF)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"darkgrey" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_DKGRAY)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"grey" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_GRAY)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"lightgrey" withId:JavaLangInteger_valueOfWithInt_(RepackagedAndroidGraphicsColor_LTGRAY)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"lime" withId:JavaLangInteger_valueOfWithInt_((jint) 0xFF00FF00)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"maroon" withId:JavaLangInteger_valueOfWithInt_((jint) 0xFF800000)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"navy" withId:JavaLangInteger_valueOfWithInt_((jint) 0xFF000080)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"olive" withId:JavaLangInteger_valueOfWithInt_((jint) 0xFF808000)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"purple" withId:JavaLangInteger_valueOfWithInt_((jint) 0xFF800080)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"silver" withId:JavaLangInteger_valueOfWithInt_((jint) 0xFFC0C0C0)];
      (void) [RepackagedAndroidGraphicsColor_sColorNameMap_ putWithId:@"teal" withId:JavaLangInteger_valueOfWithInt_((jint) 0xFF008080)];
    }
    J2OBJC_SET_INITIALIZED(RepackagedAndroidGraphicsColor)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "alphaWithInt:", "alpha", "I", 0x9, NULL, NULL },
    { "redWithInt:", "red", "I", 0x9, NULL, NULL },
    { "greenWithInt:", "green", "I", 0x9, NULL, NULL },
    { "blueWithInt:", "blue", "I", 0x9, NULL, NULL },
    { "rgbWithInt:withInt:withInt:", "rgb", "I", 0x9, NULL, NULL },
    { "argbWithInt:withInt:withInt:withInt:", "argb", "I", 0x9, NULL, NULL },
    { "hueWithInt:", "hue", "F", 0x9, NULL, NULL },
    { "saturationWithInt:", "saturation", "F", 0x9, NULL, NULL },
    { "brightnessWithInt:", "brightness", "F", 0x9, NULL, NULL },
    { "parseColorWithNSString:", "parseColor", "I", 0x9, NULL, NULL },
    { "HSBtoColorWithFloatArray:", "HSBtoColor", "I", 0x9, NULL, NULL },
    { "HSBtoColorWithFloat:withFloat:withFloat:", "HSBtoColor", "I", 0x9, NULL, NULL },
    { "RGBToHSVWithInt:withInt:withInt:withFloatArray:", "RGBToHSV", "V", 0x9, NULL, NULL },
    { "colorToHSVWithInt:withFloatArray:", "colorToHSV", "V", 0x9, NULL, NULL },
    { "HSVToColorWithFloatArray:", "HSVToColor", "I", 0x9, NULL, NULL },
    { "HSVToColorWithInt:withFloatArray:", "HSVToColor", "I", 0x9, NULL, NULL },
    { "nativeRGBToHSVWithInt:withInt:withInt:withFloatArray:", "nativeRGBToHSV", "V", 0xa, NULL, NULL },
    { "nativeHSVToColorWithInt:withFloatArray:", "nativeHSVToColor", "I", 0xa, NULL, NULL },
    { "getHtmlColorWithNSString:", "getHtmlColor", "I", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BLACK_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidGraphicsColor_BLACK },
    { "DKGRAY_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidGraphicsColor_DKGRAY },
    { "GRAY_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidGraphicsColor_GRAY },
    { "LTGRAY_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidGraphicsColor_LTGRAY },
    { "WHITE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidGraphicsColor_WHITE },
    { "RED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidGraphicsColor_RED },
    { "GREEN_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidGraphicsColor_GREEN },
    { "BLUE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidGraphicsColor_BLUE },
    { "YELLOW_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidGraphicsColor_YELLOW },
    { "CYAN_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidGraphicsColor_CYAN },
    { "MAGENTA_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidGraphicsColor_MAGENTA },
    { "TRANSPARENT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = RepackagedAndroidGraphicsColor_TRANSPARENT },
    { "sColorNameMap_", NULL, 0x1a, "Ljava.util.HashMap;", &RepackagedAndroidGraphicsColor_sColorNameMap_, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Integer;>;",  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidGraphicsColor = { 2, "Color", "repackaged.android.graphics", NULL, 0x1, 20, methods, 13, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidGraphicsColor;
}

@end


#line 58
jint RepackagedAndroidGraphicsColor_alphaWithInt_(jint color) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 59
  return URShift32(color, 24);
}


#line 67
jint RepackagedAndroidGraphicsColor_redWithInt_(jint color) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 68
  return (RShift32(color, 16)) & (jint) 0xFF;
}


#line 76
jint RepackagedAndroidGraphicsColor_greenWithInt_(jint color) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 77
  return (RShift32(color, 8)) & (jint) 0xFF;
}


#line 85
jint RepackagedAndroidGraphicsColor_blueWithInt_(jint color) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 86
  return color & (jint) 0xFF;
}


#line 100
jint RepackagedAndroidGraphicsColor_rgbWithInt_withInt_withInt_(jint red, jint green, jint blue) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 101
  return (LShift32((jint) 0xFF, 24)) | (LShift32(red, 16)) | (LShift32(green, 8)) | blue;
}


#line 115
jint RepackagedAndroidGraphicsColor_argbWithInt_withInt_withInt_withInt_(jint alpha, jint red, jint green, jint blue) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 116
  return (LShift32(alpha, 24)) | (LShift32(red, 16)) | (LShift32(green, 8)) | blue;
}


#line 126
jfloat RepackagedAndroidGraphicsColor_hueWithInt_(jint color) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 127
  jint r = (RShift32(color, 16)) & (jint) 0xFF;
  jint g = (RShift32(color, 8)) & (jint) 0xFF;
  jint b = color & (jint) 0xFF;
  
#line 131
  jint V = JavaLangMath_maxWithInt_withInt_(b, JavaLangMath_maxWithInt_withInt_(r, g));
  jint temp = JavaLangMath_minWithInt_withInt_(b, JavaLangMath_minWithInt_withInt_(r, g));
  
#line 134
  jfloat H;
  
#line 136
  if (V == temp) {
    H = 0;
  }
  else {
    
#line 139
    jfloat vtemp = (jfloat) (V - temp);
    jfloat cr = (V - r) / vtemp;
    jfloat cg = (V - g) / vtemp;
    jfloat cb = (V - b) / vtemp;
    
#line 144
    if (r == V) {
      H = cb - cg;
    }
    else
#line 146
    if (g == V) {
      H = 2 + cr - cb;
    }
    else {
      
#line 149
      H = 4 + cg - cr;
    }
    
#line 152
    H /= 6.f;
    if (H < 0) {
      H++;
    }
  }
  
#line 158
  return H;
}


#line 168
jfloat RepackagedAndroidGraphicsColor_saturationWithInt_(jint color) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 169
  jint r = (RShift32(color, 16)) & (jint) 0xFF;
  jint g = (RShift32(color, 8)) & (jint) 0xFF;
  jint b = color & (jint) 0xFF;
  
#line 174
  jint V = JavaLangMath_maxWithInt_withInt_(b, JavaLangMath_maxWithInt_withInt_(r, g));
  jint temp = JavaLangMath_minWithInt_withInt_(b, JavaLangMath_minWithInt_withInt_(r, g));
  
#line 177
  jfloat S;
  
#line 179
  if (V == temp) {
    S = 0;
  }
  else {
    
#line 182
    S = (V - temp) / (jfloat) V;
  }
  
#line 185
  return S;
}


#line 195
jfloat RepackagedAndroidGraphicsColor_brightnessWithInt_(jint color) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 196
  jint r = (RShift32(color, 16)) & (jint) 0xFF;
  jint g = (RShift32(color, 8)) & (jint) 0xFF;
  jint b = color & (jint) 0xFF;
  
#line 200
  jint V = JavaLangMath_maxWithInt_withInt_(b, JavaLangMath_maxWithInt_withInt_(r, g));
  
#line 202
  return (V / 255.f);
}


#line 218
jint RepackagedAndroidGraphicsColor_parseColorWithNSString_(NSString *colorString) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 219
  if ([((NSString *) nil_chk(colorString)) charAtWithInt:0] == '#') {
    
#line 221
    jlong color = JavaLangLong_parseLongWithNSString_withInt_([colorString substring:1], 16);
    if (((jint) [colorString length]) == 7) {
      
#line 224
      color |= (jint) 0x00000000ff000000;
    }
    else
#line 225
    if (((jint) [colorString length]) != 9) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unknown color");
    }
    return (jint) color;
  }
  else {
    
#line 230
    JavaLangInteger *color = [((JavaUtilHashMap *) nil_chk(RepackagedAndroidGraphicsColor_sColorNameMap_)) getWithId:[colorString lowercaseString]];
    if (color != nil) {
      return [color intValue];
    }
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unknown color");
}


#line 250
jint RepackagedAndroidGraphicsColor_HSBtoColorWithFloatArray_(IOSFloatArray *hsb) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 251
  return RepackagedAndroidGraphicsColor_HSBtoColorWithFloat_withFloat_withFloat_(IOSFloatArray_Get(nil_chk(hsb), 0), IOSFloatArray_Get(hsb, 1), IOSFloatArray_Get(hsb, 2));
}


#line 268
jint RepackagedAndroidGraphicsColor_HSBtoColorWithFloat_withFloat_withFloat_(jfloat h, jfloat s, jfloat b) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 269
  h = RepackagedAndroidUtilMathUtils_constrainWithFloat_withFloat_withFloat_(h, 0.0f, 1.0f);
  s = RepackagedAndroidUtilMathUtils_constrainWithFloat_withFloat_withFloat_(s, 0.0f, 1.0f);
  b = RepackagedAndroidUtilMathUtils_constrainWithFloat_withFloat_withFloat_(b, 0.0f, 1.0f);
  
#line 273
  jfloat red = 0.0f;
  jfloat green = 0.0f;
  jfloat blue = 0.0f;
  
#line 277
  jfloat hf = (h - J2ObjCFpToInt(h)) * 6.0f;
  jint ihf = J2ObjCFpToInt(hf);
  jfloat f = hf - ihf;
  jfloat pv = b * (1.0f - s);
  jfloat qv = b * (1.0f - s * f);
  jfloat tv = b * (1.0f - s * (1.0f - f));
  
#line 284
  switch (ihf) {
    case 0:
    red = b;
    green = tv;
    blue = pv;
    break;
    case 1:
    red = qv;
    green = b;
    blue = pv;
    break;
    case 2:
    red = pv;
    green = b;
    blue = tv;
    break;
    case 3:
    red = pv;
    green = qv;
    blue = b;
    break;
    case 4:
    red = tv;
    green = pv;
    blue = b;
    break;
    case 5:
    red = b;
    green = pv;
    blue = qv;
    break;
  }
  
#line 317
  return (jint) 0xFF000000 | (LShift32((J2ObjCFpToInt((red * 255.0f))), 16)) |
#line 318
  (LShift32((J2ObjCFpToInt((green * 255.0f))), 8)) | (J2ObjCFpToInt((blue * 255.0f)));
}


#line 331
void RepackagedAndroidGraphicsColor_RGBToHSVWithInt_withInt_withInt_withFloatArray_(jint red, jint green, jint blue, IOSFloatArray *hsv) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 332
  if (((IOSFloatArray *) nil_chk(hsv))->size_ < 3) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"3 components required for hsv");
  }
  RepackagedAndroidGraphicsColor_nativeRGBToHSVWithInt_withInt_withInt_withFloatArray_(red, green, blue, hsv);
}


#line 346
void RepackagedAndroidGraphicsColor_colorToHSVWithInt_withFloatArray_(jint color, IOSFloatArray *hsv) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 347
  RepackagedAndroidGraphicsColor_RGBToHSVWithInt_withInt_withInt_withFloatArray_((RShift32(color, 16)) & (jint) 0xFF, (RShift32(color, 8)) & (jint) 0xFF, color & (jint) 0xFF, hsv);
}


#line 359
jint RepackagedAndroidGraphicsColor_HSVToColorWithFloatArray_(IOSFloatArray *hsv) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 360
  return RepackagedAndroidGraphicsColor_HSVToColorWithInt_withFloatArray_((jint) 0xFF, hsv);
}


#line 374
jint RepackagedAndroidGraphicsColor_HSVToColorWithInt_withFloatArray_(jint alpha, IOSFloatArray *hsv) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 375
  if (((IOSFloatArray *) nil_chk(hsv))->size_ < 3) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"3 components required for hsv");
  }
  return RepackagedAndroidGraphicsColor_nativeHSVToColorWithInt_withFloatArray_(alpha, hsv);
}


#line 381
void RepackagedAndroidGraphicsColor_nativeRGBToHSVWithInt_withInt_withInt_withFloatArray_(jint red, jint greed, jint blue, IOSFloatArray *hsv) {
  RepackagedAndroidGraphicsColor_initialize();
}


#line 384
jint RepackagedAndroidGraphicsColor_nativeHSVToColorWithInt_withFloatArray_(jint alpha, IOSFloatArray *hsv) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 385
  return 0;
}


#line 398
jint RepackagedAndroidGraphicsColor_getHtmlColorWithNSString_(NSString *color) {
  RepackagedAndroidGraphicsColor_initialize();
  
#line 399
  JavaLangInteger *i = [((JavaUtilHashMap *) nil_chk(RepackagedAndroidGraphicsColor_sColorNameMap_)) getWithId:[((NSString *) nil_chk(color)) lowercaseString]];
  if (i != nil) {
    return [i intValue];
  }
  else {
    
#line 403
    @try {
      return RepackagedComAndroidInternalUtilXmlUtils_convertValueToIntWithNSString_withInt_(color, -1);
    }
    @catch (
#line 405
    JavaLangNumberFormatException *nfe) {
      return -1;
    }
  }
}

void RepackagedAndroidGraphicsColor_init(RepackagedAndroidGraphicsColor *self) {
  (void) NSObject_init(self);
}

RepackagedAndroidGraphicsColor *new_RepackagedAndroidGraphicsColor_init() {
  RepackagedAndroidGraphicsColor *self = [RepackagedAndroidGraphicsColor alloc];
  RepackagedAndroidGraphicsColor_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidGraphicsColor)
