//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/DayOfMonthCursor.java
//


#include "DayOfMonthCursor.h"
#include "J2ObjC_source.h"
#include "MonthDisplayHelper.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroidParser/androidlayouts/repackaged/android/util/DayOfMonthCursor.java"

@interface RepackagedAndroidUtilDayOfMonthCursor () {
 @public
  jint mRow_;
  jint mColumn_;
}

@end


#line 35
@implementation RepackagedAndroidUtilDayOfMonthCursor


#line 48
- (instancetype)initWithInt:(jint)year
                    withInt:(jint)month
                    withInt:(jint)dayOfMonth
                    withInt:(jint)weekStartDay {
  RepackagedAndroidUtilDayOfMonthCursor_initWithInt_withInt_withInt_withInt_(self, year, month, dayOfMonth, weekStartDay);
  return self;
}


#line 55
- (jint)getSelectedRow {
  return mRow_;
}

- (jint)getSelectedColumn {
  return mColumn_;
}

- (void)setSelectedRowColumnWithInt:(jint)row
                            withInt:(jint)col {
  mRow_ = row;
  mColumn_ = col;
}


#line 68
- (jint)getSelectedDayOfMonth {
  return [self getDayAtWithInt:mRow_ withInt:mColumn_];
}


#line 76
- (jint)getSelectedMonthOffset {
  if ([self isWithinCurrentMonthWithInt:mRow_ withInt:mColumn_]) {
    return 0;
  }
  if (mRow_ == 0) {
    return -1;
  }
  return 1;
}

- (void)setSelectedDayOfMonthWithInt:(jint)dayOfMonth {
  mRow_ = [self getRowOfWithInt:dayOfMonth];
  mColumn_ = [self getColumnOfWithInt:dayOfMonth];
}

- (jboolean)isSelectedWithInt:(jint)row
                      withInt:(jint)column {
  return (mRow_ == row) && (mColumn_ == column);
}


#line 100
- (jboolean)up {
  if ([self isWithinCurrentMonthWithInt:mRow_ - 1 withInt:mColumn_]) {
    
#line 103
    mRow_--;
    return NO;
  }
  
#line 107
  [self previousMonth];
  mRow_ = 5;
  while (![self isWithinCurrentMonthWithInt:mRow_ withInt:mColumn_]) {
    mRow_--;
  }
  return YES;
}


#line 120
- (jboolean)down {
  if ([self isWithinCurrentMonthWithInt:mRow_ + 1 withInt:mColumn_]) {
    
#line 123
    mRow_++;
    return NO;
  }
  
#line 127
  [self nextMonth];
  mRow_ = 0;
  while (![self isWithinCurrentMonthWithInt:mRow_ withInt:mColumn_]) {
    mRow_++;
  }
  return YES;
}


#line 140
- (jboolean)left {
  if (mColumn_ == 0) {
    mRow_--;
    mColumn_ = 6;
  }
  else {
    
#line 145
    mColumn_--;
  }
  
#line 148
  if ([self isWithinCurrentMonthWithInt:mRow_ withInt:mColumn_]) {
    return NO;
  }
  
#line 153
  [self previousMonth];
  jint lastDay = [self getNumberOfDaysInMonth];
  mRow_ = [self getRowOfWithInt:lastDay];
  mColumn_ = [self getColumnOfWithInt:lastDay];
  return YES;
}


#line 165
- (jboolean)right {
  if (mColumn_ == 6) {
    mRow_++;
    mColumn_ = 0;
  }
  else {
    
#line 170
    mColumn_++;
  }
  
#line 173
  if ([self isWithinCurrentMonthWithInt:mRow_ withInt:mColumn_]) {
    return NO;
  }
  
#line 178
  [self nextMonth];
  mRow_ = 0;
  mColumn_ = 0;
  while (![self isWithinCurrentMonthWithInt:mRow_ withInt:mColumn_]) {
    mColumn_++;
  }
  return YES;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:withInt:withInt:", "DayOfMonthCursor", NULL, 0x1, NULL, NULL },
    { "getSelectedRow", NULL, "I", 0x1, NULL, NULL },
    { "getSelectedColumn", NULL, "I", 0x1, NULL, NULL },
    { "setSelectedRowColumnWithInt:withInt:", "setSelectedRowColumn", "V", 0x1, NULL, NULL },
    { "getSelectedDayOfMonth", NULL, "I", 0x1, NULL, NULL },
    { "getSelectedMonthOffset", NULL, "I", 0x1, NULL, NULL },
    { "setSelectedDayOfMonthWithInt:", "setSelectedDayOfMonth", "V", 0x1, NULL, NULL },
    { "isSelectedWithInt:withInt:", "isSelected", "Z", 0x1, NULL, NULL },
    { "up", NULL, "Z", 0x1, NULL, NULL },
    { "down", NULL, "Z", 0x1, NULL, NULL },
    { "left", NULL, "Z", 0x1, NULL, NULL },
    { "right", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mRow_", NULL, 0x2, "I", NULL, NULL,  },
    { "mColumn_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _RepackagedAndroidUtilDayOfMonthCursor = { 2, "DayOfMonthCursor", "repackaged.android.util", NULL, 0x1, 12, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RepackagedAndroidUtilDayOfMonthCursor;
}

@end


#line 48
void RepackagedAndroidUtilDayOfMonthCursor_initWithInt_withInt_withInt_withInt_(RepackagedAndroidUtilDayOfMonthCursor *self, jint year, jint month, jint dayOfMonth, jint weekStartDay) {
  (void) RepackagedAndroidUtilMonthDisplayHelper_initWithInt_withInt_withInt_(self, year, month, weekStartDay);
  self->mRow_ = [self getRowOfWithInt:dayOfMonth];
  self->mColumn_ = [self getColumnOfWithInt:dayOfMonth];
}


#line 48
RepackagedAndroidUtilDayOfMonthCursor *new_RepackagedAndroidUtilDayOfMonthCursor_initWithInt_withInt_withInt_withInt_(jint year, jint month, jint dayOfMonth, jint weekStartDay) {
  RepackagedAndroidUtilDayOfMonthCursor *self = [RepackagedAndroidUtilDayOfMonthCursor alloc];
  RepackagedAndroidUtilDayOfMonthCursor_initWithInt_withInt_withInt_withInt_(self, year, month, dayOfMonth, weekStartDay);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RepackagedAndroidUtilDayOfMonthCursor)
