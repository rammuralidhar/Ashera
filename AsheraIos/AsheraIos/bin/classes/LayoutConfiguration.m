//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ramm/git/Ashera/AsheraAndroid/src/org/apmem/tools/layouts/LayoutConfiguration.java
//


#include "FlowLayout.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "LayoutConfiguration.h"
#include "R.h"
#include "android/content/Context.h"
#include "android/content/res/TypedArray.h"
#include "android/util/AttributeSet.h"
#include "android/view/Gravity.h"
#include "java/lang/Math.h"

#line 0 "/Users/ramm/git/Ashera/AsheraAndroid/src/org/apmem/tools/layouts/LayoutConfiguration.java"

@interface W3CLayoutConfiguration () {
 @public
  jint orientation_;
  jboolean debugDraw_;
  jfloat weightDefault_;
  jint gravity_;
  jint layoutDirection_;
}

@end


#line 10
@implementation W3CLayoutConfiguration


#line 17
- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                  withAndroidUtilAttributeSet:(id<AndroidUtilAttributeSet>)attributeSet {
  W3CLayoutConfiguration_initWithAndroidContentContext_withAndroidUtilAttributeSet_(self, context, attributeSet);
  return self;
}


#line 30
- (jint)getOrientation {
  return self->orientation_;
}

- (void)setOrientationWithInt:(jint)orientation {
  if (orientation == W3CFlowLayout_VERTICAL) {
    self->orientation_ = orientation;
  }
  else {
    
#line 38
    self->orientation_ = W3CFlowLayout_HORIZONTAL;
  }
}


#line 42
- (jboolean)isDebugDraw {
  return self->debugDraw_;
}

- (void)setDebugDrawWithBoolean:(jboolean)debugDraw {
  self->debugDraw_ = debugDraw;
}

- (jfloat)getWeightDefault {
  return self->weightDefault_;
}

- (void)setWeightDefaultWithFloat:(jfloat)weightDefault {
  self->weightDefault_ = JavaLangMath_maxWithFloat_withFloat_(0, weightDefault);
}

- (jint)getGravity {
  return self->gravity_;
}

- (void)setGravityWithInt:(jint)gravity {
  if ((gravity & AndroidViewGravity_HORIZONTAL_GRAVITY_MASK) == 0) {
    gravity |= AndroidViewGravity_LEFT;
  }
  
#line 67
  if ((gravity & AndroidViewGravity_VERTICAL_GRAVITY_MASK) == 0) {
    gravity |= AndroidViewGravity_TOP;
  }
  
#line 71
  self->gravity_ = gravity;
}


#line 74
- (jint)getLayoutDirection {
  return layoutDirection_;
}

- (void)setLayoutDirectionWithInt:(jint)layoutDirection {
  if (layoutDirection == W3CFlowLayout_LAYOUT_DIRECTION_RTL) {
    self->layoutDirection_ = layoutDirection;
  }
  else {
    
#line 82
    self->layoutDirection_ = W3CFlowLayout_LAYOUT_DIRECTION_LTR;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithAndroidContentContext:withAndroidUtilAttributeSet:", "LayoutConfiguration", NULL, 0x1, NULL, NULL },
    { "getOrientation", NULL, "I", 0x1, NULL, NULL },
    { "setOrientationWithInt:", "setOrientation", "V", 0x1, NULL, NULL },
    { "isDebugDraw", NULL, "Z", 0x1, NULL, NULL },
    { "setDebugDrawWithBoolean:", "setDebugDraw", "V", 0x1, NULL, NULL },
    { "getWeightDefault", NULL, "F", 0x1, NULL, NULL },
    { "setWeightDefaultWithFloat:", "setWeightDefault", "V", 0x1, NULL, NULL },
    { "getGravity", NULL, "I", 0x1, NULL, NULL },
    { "setGravityWithInt:", "setGravity", "V", 0x1, NULL, NULL },
    { "getLayoutDirection", NULL, "I", 0x1, NULL, NULL },
    { "setLayoutDirectionWithInt:", "setLayoutDirection", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "orientation_", NULL, 0x2, "I", NULL, NULL,  },
    { "debugDraw_", NULL, 0x2, "Z", NULL, NULL,  },
    { "weightDefault_", NULL, 0x2, "F", NULL, NULL,  },
    { "gravity_", NULL, 0x2, "I", NULL, NULL,  },
    { "layoutDirection_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _W3CLayoutConfiguration = { 2, "LayoutConfiguration", "org.apmem.tools.layouts", NULL, 0x0, 11, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_W3CLayoutConfiguration;
}

@end


#line 17
void W3CLayoutConfiguration_initWithAndroidContentContext_withAndroidUtilAttributeSet_(W3CLayoutConfiguration *self, AndroidContentContext *context, id<AndroidUtilAttributeSet> attributeSet) {
  (void) NSObject_init(self);
  self->orientation_ =
#line 11
  W3CFlowLayout_HORIZONTAL;
  self->debugDraw_ = NO;
  self->weightDefault_ = 0;
  self->gravity_ = AndroidViewGravity_LEFT | AndroidViewGravity_TOP;
  self->layoutDirection_ = W3CFlowLayout_LAYOUT_DIRECTION_LTR;
  
#line 18
  AndroidContentResTypedArray *a = [((AndroidContentContext *) nil_chk(context)) obtainStyledAttributesWithAndroidUtilAttributeSet:attributeSet withIntArray:ASR_styleable_get_FlowLayout_()];
  @try {
    [self setOrientationWithInt:[((AndroidContentResTypedArray *) nil_chk(a)) getIntegerWithInt:ASR_styleable_FlowLayout_android_orientation withInt:W3CFlowLayout_HORIZONTAL]];
    [self setDebugDrawWithBoolean:[a getBooleanWithInt:ASR_styleable_FlowLayout_debugDraw withBoolean:NO]];
    [self setWeightDefaultWithFloat:[a getFloatWithInt:ASR_styleable_FlowLayout_weightDefault withFloat:0.0f]];
    [self setGravityWithInt:[a getIntegerWithInt:ASR_styleable_FlowLayout_android_gravity withInt:AndroidViewGravity_NO_GRAVITY]];
    [self setLayoutDirectionWithInt:[a getIntegerWithInt:ASR_styleable_FlowLayout_layoutDirection withInt:W3CFlowLayout_LAYOUT_DIRECTION_LTR]];
  }
  @finally {
    
#line 26
    [((AndroidContentResTypedArray *) nil_chk(a)) recycle];
  }
}


#line 17
W3CLayoutConfiguration *new_W3CLayoutConfiguration_initWithAndroidContentContext_withAndroidUtilAttributeSet_(AndroidContentContext *context, id<AndroidUtilAttributeSet> attributeSet) {
  W3CLayoutConfiguration *self = [W3CLayoutConfiguration alloc];
  W3CLayoutConfiguration_initWithAndroidContentContext_withAndroidUtilAttributeSet_(self, context, attributeSet);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(W3CLayoutConfiguration)
